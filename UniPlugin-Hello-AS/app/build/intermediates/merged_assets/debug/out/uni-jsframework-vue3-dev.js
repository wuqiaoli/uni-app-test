//{"version":"3.5.3","encode":"base64"}
var __UniServiceStartTime__ = Date.now();var global=this; var process={env:{}}; var setTimeout=global.setTimeout;
(()=>{var uP=Object.defineProperty;var fP=(v,c)=>{for(var b in c)uP(v,b,{get:c[b],enumerable:!0})};var ns=Object.freeze;function pu({getCurrentPages:v,uni:c,UniShared:b,Vue:T,VueShared:B}){var S=function(k,u,P,ze){"use strict";function At(){let Be=v(),at=Be.length;if(at)return Be[at-1]}function rn(){let Be=At();if(Be)return Be.$vm}function A(Be,at,_t){if(u.isString(Be))_t=at,at=Be,Be=rn();else if(typeof Be=="number"){let un=v().find(dn=>dn.$page.id===Be);un?Be=un.$vm:Be=rn()}if(!Be)return;if(Be.__call_hook)return Be.__call_hook(at,_t);let Xt=Be.$[at];return Xt&&P.invokeArrayFns(Xt,_t)}function le(Be,at,_t,Xt){u.isFunction(at)&&ze.injectHook(Be,at.bind(_t),Xt)}function Sn(Be,at,_t){let Xt=Be.mpType||_t.$mpType;if(!!Xt&&(Object.keys(Be).forEach(un=>{if(un.indexOf("on")===0){let dn=Be[un];u.isArray(dn)?dn.forEach(_r=>le(un,_r,_t,at)):le(un,dn,_t,at)}}),Xt==="page")){at.__isVisible=!0;try{A(_t,P.ON_LOAD,at.attrs.__pageQuery),delete at.attrs.__pageQuery,A(_t,P.ON_SHOW)}catch(un){console.error(un.message+P.LINEFEED+un.stack)}}}function Ln(Be,at){bt(at,Be.$renderjs,Be["$"+P.RENDERJS_MODULES])}function bt(Be,at,_t={}){if(!u.isArray(at))return;let Xt=Be.uid,un=Be.$wxsModules||(Be.$wxsModules=[]),dn=Be.ctx;at.forEach(_r=>{_t[_r]&&(dn[_r]=ee(Xt,_t[_r],_r),un.push(_r))})}function ee(Be,at,_t){let Xt={};return new Proxy(Xt,{get(un,dn){return Xt[dn]||(Xt[dn]=se(Be,at,_t,dn))}})}function se(Be,at,_t,Xt){let un=()=>{},dn=()=>P.WXS_PROTOCOL+JSON.stringify([Be,at,_t+"."+Xt]);return new Proxy(un,{get(_r,Or){return Or==="toJSON"?dn:un[Or]||(un[Or]=se(Be,at,_t+"."+Xt,Or))},apply(_r,Or,xi){return P.WXS_PROTOCOL+JSON.stringify([Be,at,_t+"."+Xt,[...xi]])}})}function gn(Be,at){bt(at,Be.$wxs,Be["$"+P.WXS_MODULES])}function Dt(Be,at,_t){gn(Be,at),Ln(Be,at),Sn(Be,at,_t)}function Vt(Be,at,_t){return Be[at]=_t}function Kr(Be){return function(_t,Xt,un){if(!Xt)throw _t;let dn=Be._instance;if(!dn||!dn.proxy)throw _t;A(dn.proxy,P.ON_ERROR,_t)}}function ii(Be,at){return Be?[...new Set([].concat(Be,at))]:at}function Rr(Be){P.UniLifecycleHooks.forEach(at=>{Be[at]=ii})}let yn,Wt="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",cn=/^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;typeof atob!="function"?yn=function(Be){if(Be=String(Be).replace(/[\t\n\f\r ]+/g,""),!cn.test(Be))throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");Be+="==".slice(2-(Be.length&3));for(var at,_t="",Xt,un,dn=0;dn<Be.length;)at=Wt.indexOf(Be.charAt(dn++))<<18|Wt.indexOf(Be.charAt(dn++))<<12|(Xt=Wt.indexOf(Be.charAt(dn++)))<<6|(un=Wt.indexOf(Be.charAt(dn++))),_t+=Xt===64?String.fromCharCode(at>>16&255):un===64?String.fromCharCode(at>>16&255,at>>8&255):String.fromCharCode(at>>16&255,at>>8&255,at&255);return _t}:yn=atob;function In(Be){return decodeURIComponent(yn(Be).split("").map(function(at){return"%"+("00"+at.charCodeAt(0).toString(16)).slice(-2)}).join(""))}function Wn(){let Be=c.getStorageSync("uni_id_token")||"",at=Be.split(".");if(!Be||at.length!==3)return{uid:null,role:[],permission:[],tokenExpired:0};let _t;try{_t=JSON.parse(In(at[1]))}catch(Xt){throw new Error("\u83B7\u53D6\u5F53\u524D\u7528\u6237\u4FE1\u606F\u51FA\u9519\uFF0C\u8BE6\u7EC6\u9519\u8BEF\u4FE1\u606F\u4E3A\uFF1A"+Xt.message)}return _t.tokenExpired=_t.exp*1e3,delete _t.exp,delete _t.iat,_t}function lr(Be){Be.uniIDHasRole=function(at){let{role:_t}=Wn();return _t.indexOf(at)>-1},Be.uniIDHasPermission=function(at){let{permission:_t}=Wn();return this.uniIDHasRole("admin")||_t.indexOf(at)>-1},Be.uniIDTokenValid=function(){let{tokenExpired:at}=Wn();return at>Date.now()}}function Vn(Be){let at=Be._context.config;u.isFunction(Be._component.onError)&&(at.errorHandler=Kr(Be)),Rr(at.optionMergeStrategies);let _t=at.globalProperties;lr(_t),_t.$set=Vt,_t.$applyOptions=Dt,P.invokeCreateVueAppHook(Be)}return k.initApp=Vn,Object.defineProperty(k,"__esModule",{value:!0}),k}({},B,b,T);return S}function Ju(v,{nvue:c,UniShared:b,VueShared:T,VueReactivity:B}){let S={platform:c.config.env.platform,UniShared:b,VueShared:T,VueReactivity:B};return v(S,c.document)}function dP({setTimeout:v,clearTimeout:c,uni:b,getCurrentPages:T,Vue:B,weex:S,plus:k,BroadcastChannel:u,UniViewJSBridge:P,VueShared:ze,UniShared:At}){var rn=function(A,le,Sn){"use strict";let Ln=["navigate","redirect","switchTab","reLaunch","navigateBack"],bt=["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"],ee=["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"],se={hoverClass:{type:String,default:"navigator-hover"},url:{type:String,default:""},openType:{type:String,default:"navigate",validator(_){return Boolean(~Ln.indexOf(_))}},delta:{type:Number,default:1},hoverStartTime:{type:[Number,String],default:50},hoverStayTime:{type:[Number,String],default:600},exists:{type:String,default:""},hoverStopPropagation:{type:Boolean,default:!1},animationType:{type:String,default:"",validator(_){return!_||bt.concat(ee).includes(_)}},animationDuration:{type:[String,Number],default:300}};function gn(_){return()=>{if(_.openType!=="navigateBack"&&!_.url){console.error("<navigator/> should have url attribute when using navigateTo, redirectTo, reLaunch or switchTab");return}let L=parseInt(_.animationDuration);switch(_.openType){case"navigate":b.navigateTo({url:_.url,animationType:_.animationType||"pop-in",animationDuration:L});break;case"redirect":b.redirectTo({url:_.url,exists:_.exists});break;case"switchTab":b.switchTab({url:_.url});break;case"reLaunch":b.reLaunch({url:_.url});break;case"navigateBack":b.navigateBack({delta:_.delta,animationType:_.animationType||"pop-out",animationDuration:L});break}}}function Dt(_){if(_.hoverClass&&_.hoverClass!=="none"){let L={hoverClass:_.hoverClass};return le.hasOwn(_,"hoverStartTime")&&(L.hoverStartTime=_.hoverStartTime),le.hasOwn(_,"hoverStayTime")&&(L.hoverStayTime=_.hoverStayTime),le.hasOwn(_,"hoverStopPropagation")&&(L.hoverStopPropagation=_.hoverStopPropagation),L}return{}}function Vt(_,L){return A.createElementVNode("u-text",le.extend({appendAsTree:!0},L),_)}let Kr=[{"navigator-hover":{"":{backgroundColor:"rgba(0,0,0,0.1)",opacity:.7}}}];var ii=A.defineComponent({name:"Navigator",props:se,styles:Kr,setup(_,{slots:L}){let q=gn(_);return()=>A.createVNode("view",A.mergeProps(Dt(_),{onClick:q}),[L.default&&L.default()])}});function Rr(_){return Symbol(_)}function yn(){return A.getCurrentInstance().root.proxy.$page.id}let Wt,cn,In;function Wn(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function lr(){return Wt.webview.currentWebview().id}let Vn,Be,at={};function _t(_){let L=_.data&&_.data.__message;if(!L||!L.__page)return;let q=L.__page,z=at[q];z&&z(L),L.keep||delete at[q]}function Xt(_,L){Wn()==="v8"?In?(Vn&&Vn.close(),Vn=new In(lr()),Vn.onmessage=_t):Be||(Be=cn.requireModule("globalEvent"),Be.addEventListener("plusMessage",_t)):window.__plusMessage=_t,at[_]=L}class un{constructor(L){this.webview=L}sendMessage(L){let q=JSON.parse(JSON.stringify({__message:{data:L}})),z=this.webview.id;In?new In(z).postMessage(q):Wt.webview.postMessageToUniNView&&Wt.webview.postMessageToUniNView(q,z)}close(){this.webview.close()}}function dn({context:_={},url:L,data:q={},style:z={},onMessage:Q,onClose:re}){Wt=_.plus||k,cn=_.weex||(typeof S=="object"?S:null),In=_.BroadcastChannel||(typeof u=="object"?u:null);let he={autoBackButton:!0,titleSize:"17px"},Se=`page${Date.now()}`;z=le.extend({},z),z.titleNView!==!1&&z.titleNView!=="none"&&(z.titleNView=le.extend(he,z.titleNView));let Me={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${L}.js`,defaultFontSize:16,viewport:Wt.screen.resolutionWidth}};z=le.extend(Me,z);let Ue=Wt.webview.create("",Se,z,{extras:{from:lr(),runtime:Wn(),data:q,useGlobalEvent:!In}});return Ue.addEventListener("close",re),Xt(Se,Ae=>{le.isFunction(Q)&&Q(Ae.data),Ae.keep||Ue.close("auto")}),Ue.show(z.animationType,z.animationDuration),new un(Ue)}let _r={for:{type:String,default:""}},Or=Rr("ul");function xi(){let _=[];return A.provide(Or,{addHandler(L){_.push(L)},removeHandler(L){_.splice(_.indexOf(L),1)}}),_}var Bi=A.defineComponent({name:"Label",props:_r,styles:[],setup(_,{slots:L}){let q=yn(),z=xi(),Q=re=>{_.for?P.emit(`uni-label-click-${q}-${_.for}`,re,!0):z.length&&z[0](re,!0)};return()=>A.createVNode("view",{onClick:Q},[L.default&&L.default()])}});function cr(_,L){Ki(_.id,L),A.watch(()=>_.id,(q,z)=>{Ho(z,L,!0),Ki(q,L,!0)}),A.onUnmounted(()=>{Ho(_.id,L)})}function Ki(_,L,q){let z=yn();q&&!_||!le.isPlainObject(L)||Object.keys(L).forEach(Q=>{q?Q.indexOf("@")!==0&&Q.indexOf("uni-")!==0&&P.on(`uni-${Q}-${z}-${_}`,L[Q]):Q.indexOf("uni-")===0?P.on(Q,L[Q]):_&&P.on(`uni-${Q}-${z}-${_}`,L[Q])})}function Ho(_,L,q){let z=yn();q&&!_||!le.isPlainObject(L)||Object.keys(L).forEach(Q=>{q?Q.indexOf("@")!==0&&Q.indexOf("uni-")!==0&&P.off(`uni-${Q}-${z}-${_}`,L[Q]):Q.indexOf("uni-")===0?P.off(Q,L[Q]):_&&P.off(`uni-${Q}-${z}-${_}`,L[Q])})}function Mi(_){return Object.keys(_).map(L=>[L,_[L]])}let Ji=["class","style"],Zi=/^on[A-Z]+/,gi=(_={})=>{let{excludeListeners:L=!1,excludeKeys:q=[]}=_,z=A.getCurrentInstance(),Q=A.shallowRef({}),re=A.shallowRef({}),he=A.shallowRef({}),Se=q.concat(Ji);return z.attrs=A.reactive(z.attrs),A.watchEffect(()=>{let Me=Mi(z.attrs).reduce((Ue,[Ae,Ie])=>(Se.includes(Ae)?Ue.exclude[Ae]=Ie:Zi.test(Ae)?(L||(Ue.attrs[Ae]=Ie),Ue.listeners[Ae]=Ie):Ue.attrs[Ae]=Ie,Ue),{exclude:{},attrs:{},listeners:{}});Q.value=Me.attrs,re.value=Me.listeners,he.value=Me.exclude}),{$attrs:Q,$listeners:re,$excludeAttrs:he}},Xi={id:{type:String,default:""},hoverClass:{type:String,default:"button-hover"},hoverStartTime:{type:[Number,String],default:20},hoverStayTime:{type:[Number,String],default:70},hoverStopPropagation:{type:Boolean,default:!1},disabled:{type:[Boolean,String],default:!1},formType:{type:String,default:""},openType:{type:String,default:""},loading:{type:[Boolean,String],default:!1},plain:{type:[Boolean,String],default:!1}},jr=Rr("uf"),zr=[{ub:{"":{flexDirection:"row",alignItems:"center",justifyContent:"center",position:"relative",paddingLeft:"5",paddingRight:"5",overflow:"hidden",color:"#000000",backgroundColor:"#f8f8f8",borderRadius:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#dbdbdb"}},"ub-t":{"":{color:"#000000",fontSize:"18",textDecoration:"none",lineHeight:"46"}},"ub-d":{"":{backgroundColor:"#f8f8f8"}},"ub-p":{"":{backgroundColor:"#007aff",borderColor:"#0062cc"}},"ub-w":{"":{backgroundColor:"#e64340",borderColor:"#b83633"}},"ub-d-t":{"":{color:"#000000"}},"ub-p-t":{"":{color:"#ffffff"}},"ub-w-t":{"":{color:"#ffffff"}},"ub-d-d":{"":{backgroundColor:"#f7f7f7"}},"ub-p-d":{"":{backgroundColor:"#63acfc",borderColor:"#4f8aca"}},"ub-w-d":{"":{backgroundColor:"#ec8b89",borderColor:"#bd6f6e"}},"ub-d-t-d":{"":{color:"#cccccc"}},"ub-p-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-plain":{"":{borderColor:"#353535",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-plain":{"":{borderColor:"#007aff",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-plain":{"":{borderColor:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-plain":{"":{color:"#353535"}},"ub-p-t-plain":{"":{color:"#007aff"}},"ub-w-t-plain":{"":{color:"#e64340"}},"ub-d-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-p-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-w-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-mini":{"":{lineHeight:"30",fontSize:"13",paddingTop:0,paddingRight:"17.5",paddingBottom:0,paddingLeft:"17.5"}},"ub-loading":{"":{width:"18",height:"18",marginRight:"10"}},"ub-d-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-loading-plain":{"":{color:"#353535"}},"ub-p-loading-plain":{"":{color:"#007aff",backgroundColor:"#0062cc"}},"ub-w-loading-plain":{"":{color:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-hover":{"":{opacity:.8,backgroundColor:"#dedede"}},"ub-p-hover":{"":{opacity:.8,backgroundColor:"#0062cc"}},"ub-w-hover":{"":{opacity:.8,backgroundColor:"#ce3c39"}},"ub-d-t-hover":{"":{color:"rgba(0,0,0,0.6)"}},"ub-p-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-hover-plain":{"":{color:"rgba(53,53,53,0.6)",borderColor:"rgba(53,53,53,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-hover-plain":{"":{color:"rgba(26,173,25,0.6)",borderColor:"rgba(0,122,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-hover-plain":{"":{color:"rgba(230,67,64,0.6)",borderColor:"rgba(230,67,64,0.6)",backgroundColor:"rgba(0,0,0,0)"}}}],ur={default:"d",primary:"p",warn:"w"};var xr=A.defineComponent({inheritAttrs:!1,name:"Button",props:le.extend(Xi,{type:{type:String,default:"default"},size:{type:String,default:"default"}}),styles:zr,setup(_,{slots:L,attrs:q}){let{$attrs:z,$excludeAttrs:Q,$listeners:re}=gi({excludeListeners:!0}),he=_.type,Se=A.ref(null),Me=A.inject(jr,!1),Ue=(pt,lt)=>{let It=re.value.onClick||(()=>{});if(_.disabled)return;It(pt);let vn=_.formType;if(vn){if(!Me)return;vn==="submit"?Me.submit(pt):vn==="reset"&&Me.reset(pt)}},Ae=pt=>{let lt="ub-"+ur[he]+pt;return _.disabled&&(lt+="-d"),_.plain&&(lt+="-plain"),_.size==="mini"&&pt==="-t"&&(lt+=" ub-mini"),lt},Ie=pt=>{if(_.disabled)return"";let lt="ub-"+ur[he]+pt+"-hover";return _.plain&&(lt+="-plain"),lt},qe=A.inject(Or,!1);qe&&(qe.addHandler(Ue),A.onBeforeUnmount(()=>{qe.removeHandler(Ue)})),cr(_,{"label-click":Ue});let gt=A.computed(()=>{let pt={};for(let lt in re.value){let It=re.value[lt];lt!=="onClick"&&(pt[lt]=It)}return pt}),Kt=()=>{if(!L.default)return[];let pt=L.default();return pt.length===1&&pt[0].type===A.Text?[Vt(pt[0].children,{class:"ub-t "+Ae("-t")})]:pt};return()=>{let pt=le.extend({},Dt(_),{hoverClass:Ie("")},z.value,Q.value,gt.value);return A.createVNode("view",A.mergeProps({ref:Se,class:["ub",Ae("")],onClick:Ue},pt),[_.loading?A.createVNode("loading-indicator",A.mergeProps({class:["ub-loading",`ub-${ur[he]}-loading`]},{arrow:"false",animating:"true"}),null):null,...Kt()])}}});let Qi={scaleArea:{type:Boolean,default:!1}};function To(_){let L=[];return le.isArray(_)&&_.forEach(q=>{A.isVNode(q)?q.type===A.Fragment?L.push(...To(q.children)):L.push(q):le.isArray(q)&&L.push(...To(q))}),L}function Po(_){let L=Object.create(null);return function(z){return L[z]||(L[z]=_(z))}}let oi=Po(function(_){let L={},q=/;(?![^(]*\))/g,z=/:(.+)/;return _.split(q).forEach(function(Q){if(Q){let re=Q.split(z);re.length>1&&(L[re[0].trim()]=re[1].trim())}}),L}),Qn=_=>new Promise((L,q)=>{if(!_)return L({width:0,height:0,top:0,left:0});S.requireModule("dom").getComponentRect(_,({size:Q})=>{L(Q)})});var vi=A.defineComponent({name:"MovableArea",props:Qi,styles:[{"uni-movable-area":{"":{overflow:"hidden",width:"10px",height:"10px"}}}],setup(_,{slots:L}){let q=A.ref(0),z=A.ref(0),Q=A.ref(0),re=A.ref(0),he=A.ref(!1),Se=A.ref(null),Me=[],Ue=null,Ae=lt=>{Ue=lt},Ie=()=>Qn(Se.value).then(({width:lt,height:It,top:vn,left:wt})=>{q.value=lt,z.value=It,Q.value=vn,re.value=wt}),qe=()=>{Ie().then(()=>{Me.forEach(function(lt){lt.setParent()})})};A.onMounted(()=>{v(()=>{he.value=!0,qe()},200)});let gt={onPanstart(lt){Ue&&Ue.touchstart(lt)},onPanmove(lt){lt.stopPropagation(),Ue&&Ue.touchmove(lt)},onPanend(lt){Ue&&Ue.touchend(lt),Ue=null}},Kt=lt=>{Me.push(lt)},pt=lt=>{let It=Me.indexOf(lt);It>=0&&Me.splice(It,1)};return A.provide("_isMounted",he),A.provide("parentSize",{width:q,height:z,top:Q,left:re}),A.provide("addMovableViewContext",Kt),A.provide("removeMovableViewContext",pt),A.provide("setTouchMovableViewContext",Ae),()=>{let lt=L.default&&L.default(),It=To(lt);return A.createVNode("view",A.mergeProps({ref:Se,class:"uni-movable-area"},gt),[It])}}});function ai(_){let L={};function q(Ae,Ie){L[Ae]&&L[Ae](Ie)}function z(Ae,Ie){L[Ae]=function(qe){le.isFunction(Ie)&&(qe.touches=qe.changedTouches,Ie(qe)===!1&&qe.stopPropagation())}}let Q=0,re=0,he=0,Se=0,Me=function(Ae,Ie,qe,gt){if(_({target:Ae.target,currentTarget:Ae.currentTarget,stopPropagation:Ae.stopPropagation.bind(Ae),touches:Ae.touches,changedTouches:Ae.changedTouches,detail:{state:Ie,x:qe,y:gt,dx:qe-Q,dy:gt-re,ddx:qe-he,ddy:gt-Se,timeStamp:Ae.timeStamp||Date.now()}})===!1)return!1},Ue=null;return z("touchstart",function(Ae){if(!Ue)return Ue=Ae,Q=he=Ae.touches[0].pageX,re=Se=Ae.touches[0].pageY,Me(Ae,"start",Q,re)}),z("touchmove",function(Ae){if(Ue){let Ie=Me(Ae,"move",Ae.touches[0].pageX,Ae.touches[0].pageY);return he=Ae.touches[0].pageX,Se=Ae.touches[0].pageY,Ie}}),z("touchend",function(Ae){if(Ue)return Ue=null,Me(Ae,"end",Ae.changedTouches[0].pageX,Ae.changedTouches[0].pageY)}),{touchstart:function(Ae){q("touchstart",Ae)},touchmove:function(Ae){q("touchmove",Ae)},touchend:function(Ae){q("touchend",Ae)}}}function fr(_,L){return(q,z)=>{_.value&&L(q,mi(q,_.value,z||{}))}}function mi(_,L,q={}){return L=bi(L),{type:_,timeStamp:Date.now(),target:L,currentTarget:L,detail:q}}let _i=Sn.cacheStringFunction(_=>_.charAt(0).toLowerCase()+_.slice(1));function bi(_){let{offsetLeft:L,offsetTop:q}=_,z=_.attr,Q={};return Object.keys(z||{}).forEach(re=>{re.indexOf("data")===0&&(Q[_i(re.replace("data",""))]=z[re])}),{id:z&&z.id||"",dataset:Q,offsetLeft:L||0,offsetTop:q||0}}function Tr(_,L,q){return _>L-q&&_<L+q}function Br(_,L){return Tr(_,0,L)}function Jr(){}Jr.prototype.x=function(_){return Math.sqrt(_)};function Zr(_,L){this._m=_,this._f=1e3*L,this._startTime=0,this._v=0}Zr.prototype.setV=function(_,L){let q=Math.pow(Math.pow(_,2)+Math.pow(L,2),.5);this._x_v=_,this._y_v=L,this._x_a=-this._f*this._x_v/q,this._y_a=-this._f*this._y_v/q,this._t=Math.abs(_/this._x_a)||Math.abs(L/this._y_a),this._lastDt=null,this._startTime=new Date().getTime()},Zr.prototype.setS=function(_,L){this._x_s=_,this._y_s=L},Zr.prototype.s=function(_){_===void 0&&(_=(new Date().getTime()-this._startTime)/1e3),_>this._t&&(_=this._t,this._lastDt=_);let L=this._x_v*_+.5*this._x_a*Math.pow(_,2)+this._x_s,q=this._y_v*_+.5*this._y_a*Math.pow(_,2)+this._y_s;return(this._x_a>0&&L<this._endPositionX||this._x_a<0&&L>this._endPositionX)&&(L=this._endPositionX),(this._y_a>0&&q<this._endPositionY||this._y_a<0&&q>this._endPositionY)&&(q=this._endPositionY),{x:L,y:q}},Zr.prototype.ds=function(_){return _===void 0&&(_=(new Date().getTime()-this._startTime)/1e3),_>this._t&&(_=this._t),{dx:this._x_v+this._x_a*_,dy:this._y_v+this._y_a*_}},Zr.prototype.delta=function(){return{x:-1.5*Math.pow(this._x_v,2)/this._x_a||0,y:-1.5*Math.pow(this._y_v,2)/this._y_a||0}},Zr.prototype.dt=function(){return-this._x_v/this._x_a},Zr.prototype.done=function(){let _=Tr(this.s().x,this._endPositionX)||Tr(this.s().y,this._endPositionY)||this._lastDt===this._t;return this._lastDt=null,_},Zr.prototype.setEnd=function(_,L){this._endPositionX=_,this._endPositionY=L},Zr.prototype.reconfigure=function(_,L){this._m=_,this._f=1e3*L};function er(_,L,q){this._m=_,this._k=L,this._c=q,this._solution=null,this._endPosition=0,this._startTime=0}er.prototype._solve=function(_,L){let q=this._c,z=this._m,Q=this._k,re=q*q-4*z*Q;if(re===0){let Ae=-q/(2*z),Ie=_,qe=L/(Ae*_);return{x:function(gt){return(Ie+qe*gt)*Math.pow(Math.E,Ae*gt)},dx:function(gt){let Kt=Math.pow(Math.E,Ae*gt);return Ae*(Ie+qe*gt)*Kt+qe*Kt}}}if(re>0){let Ae=(-q-Math.sqrt(re))/(2*z),Ie=(-q+Math.sqrt(re))/(2*z),qe=(L-Ae*_)/(Ie-Ae),gt=_-qe;return{x:function(Kt){let pt,lt;return Kt===this._t&&(pt=this._powER1T,lt=this._powER2T),this._t=Kt,pt||(pt=this._powER1T=Math.pow(Math.E,Ae*Kt)),lt||(lt=this._powER2T=Math.pow(Math.E,Ie*Kt)),gt*pt+qe*lt},dx:function(Kt){let pt,lt;return Kt===this._t&&(pt=this._powER1T,lt=this._powER2T),this._t=Kt,pt||(pt=this._powER1T=Math.pow(Math.E,Ae*Kt)),lt||(lt=this._powER2T=Math.pow(Math.E,Ie*Kt)),gt*Ae*pt+qe*Ie*lt}}}let he=Math.sqrt(4*z*Q-q*q)/(2*z),Se=-q/2*z,Me=_,Ue=(L-Se*_)/he;return{x:function(Ae){return Math.pow(Math.E,Se*Ae)*(Me*Math.cos(he*Ae)+Ue*Math.sin(he*Ae))},dx:function(Ae){let Ie=Math.pow(Math.E,Se*Ae),qe=Math.cos(he*Ae),gt=Math.sin(he*Ae);return Ie*(Ue*he*qe-Me*he*gt)+Se*Ie*(Ue*gt+Me*qe)}}},er.prototype.x=function(_){return _===void 0&&(_=(new Date().getTime()-this._startTime)/1e3),this._solution?this._endPosition+this._solution.x(_):0},er.prototype.dx=function(_){return _===void 0&&(_=(new Date().getTime()-this._startTime)/1e3),this._solution?this._solution.dx(_):0},er.prototype.setEnd=function(_,L,q){if(q||(q=new Date().getTime()),_!==this._endPosition||!Br(L,.1)){L=L||0;let z=this._endPosition;this._solution&&(Br(L,.1)&&(L=this._solution.dx((q-this._startTime)/1e3)),z=this._solution.x((q-this._startTime)/1e3),Br(L,.1)&&(L=0),Br(z,.1)&&(z=0),z+=this._endPosition),this._solution&&Br(z-_,.1)&&Br(L,.1)||(this._endPosition=_,this._solution=this._solve(z-this._endPosition,L),this._startTime=q)}},er.prototype.snap=function(_){this._startTime=new Date().getTime(),this._endPosition=_,this._solution={x:function(){return 0},dx:function(){return 0}}},er.prototype.done=function(_){return _||(_=new Date().getTime()),Tr(this.x(),this._endPosition,.1)&&Br(this.dx(),.1)},er.prototype.reconfigure=function(_,L,q){this._m=_,this._k=L,this._c=q,this.done()||(this._solution=this._solve(this.x()-this._endPosition,this.dx()),this._startTime=new Date().getTime())},er.prototype.springConstant=function(){return this._k},er.prototype.damping=function(){return this._c},er.prototype.configuration=function(){function _(q,z){q.reconfigure(1,z,q.damping())}function L(q,z){q.reconfigure(1,q.springConstant(),z)}return[{label:"Spring Constant",read:this.springConstant.bind(this),write:_.bind(this,this),min:100,max:1e3},{label:"Damping",read:this.damping.bind(this),write:L.bind(this,this),min:1,max:500}]};function eo(_,L,q){this._springX=new er(_,L,q),this._springY=new er(_,L,q),this._springScale=new er(_,L,q),this._startTime=0}eo.prototype.setEnd=function(_,L,q,z){let Q=new Date().getTime();this._springX.setEnd(_,z,Q),this._springY.setEnd(L,z,Q),this._springScale.setEnd(q,z,Q),this._startTime=Q},eo.prototype.x=function(){let _=(new Date().getTime()-this._startTime)/1e3;return{x:this._springX.x(_),y:this._springY.x(_),scale:this._springScale.x(_)}},eo.prototype.done=function(){let _=new Date().getTime();return this._springX.done(_)&&this._springY.done(_)&&this._springScale.done(_)},eo.prototype.reconfigure=function(_,L,q){this._springX.reconfigure(_,L,q),this._springY.reconfigure(_,L,q),this._springScale.reconfigure(_,L,q)};let to={direction:{type:String,default:"none"},inertia:{type:[Boolean,String],default:!1},outOfBounds:{type:[Boolean,String],default:!1},x:{type:[Number,String],default:0},y:{type:[Number,String],default:0},damping:{type:[Number,String],default:20},friction:{type:[Number,String],default:2},disabled:{type:[Boolean,String],default:!1},scale:{type:[Boolean,String],default:!1},scaleMin:{type:[Number,String],default:.5},scaleMax:{type:[Number,String],default:10},scaleValue:{type:[Number,String],default:1},animation:{type:[Boolean,String],default:!0}};function go(_,L){return+((1e3*_-1e3*L)/1e3).toFixed(1)}function yi(_,L,q){let z={id:0,cancelled:!1},Q=function(he){he&&he.id&&zo(he.id),he&&(he.cancelled=!0)};function re(he,Se,Me,Ue){if(!he||!he.cancelled){Me(Se);let Ae=Se.done();Ae||he.cancelled||(he.id=ba(re.bind(null,he,Se,Me,Ue))),Ae&&Ue&&Ue(Se)}}return re(z,_,L,q),{cancel:Q.bind(null,z),model:_}}let Io=!1;function jo(_){Io||(Io=!0,ba(function(){_(),Io=!1}))}function ba(_){return v(_,16)}function zo(_){c(_)}let no=S.requireModule("animation");var Cn=A.defineComponent({name:"MovableView",props:to,emits:["change","scale"],styles:[{"uni-movable-view":{"":{position:"absolute",top:"0px",left:"0px",width:"10px",height:"10px"}}}],setup(_,{emit:L,slots:q}){let z=A.ref(null),Q=fr(z,L),re=A.inject("setTouchMovableViewContext",()=>{}),he=An(_,Q,z,re);return()=>{let Se={preventGesture:!0};return A.createVNode("view",A.mergeProps({ref:z,onTouchstart:he,class:"uni-movable-view",style:"transform-origin: center;"},Se),[q.default&&q.default()])}}});function An(_,L,q,z){let Q=A.inject("_isMounted",A.ref(!1)),re=A.inject("parentSize",{width:A.ref(0),height:A.ref(0),top:A.ref(0),left:A.ref(0)}),he=A.inject("addMovableViewContext",()=>{}),Se=A.inject("removeMovableViewContext",()=>{}),Me={touchstart:()=>{},touchmove:()=>{},touchend:()=>{}};function Ue(xe){return Number(xe)||0}function Ae(xe){return xe=Number(xe),isNaN(xe)?1:xe}let Ie=A.ref(Ue(_.x)),qe=A.ref(Ue(_.y)),gt=A.ref(Ae(Number(_.scaleValue))),Kt=A.ref(0),pt=A.ref(0),lt=A.ref(0),It=A.ref(0),vn=A.ref(0),wt=A.ref(0),ft=null,Lt=null,Bn={x:0,y:0},Mn={x:0,y:0},Dn=1,$n=0,Gt=0,Jn=!1,Wa,Ga,Fo=null,Ya=null,Ko={top:0,left:0,width:0,height:0},Ci=new Jr,Ps=new Jr,Er={historyX:[0,0],historyY:[0,0],historyT:[0,0]},Oa=A.computed(()=>{let xe=Number(_.damping);return isNaN(xe)?20:xe}),sl=A.computed(()=>{let xe=Number(_.friction);return isNaN(xe)||xe<=0?2:xe}),Is=A.computed(()=>{let xe=Number(_.scaleMin);return isNaN(xe)?.5:xe}),rs=A.computed(()=>{let xe=Number(_.scaleMax);return isNaN(xe)?10:xe}),qa=A.computed(()=>_.direction==="all"||_.direction==="horizontal"),Jo=A.computed(()=>_.direction==="all"||_.direction==="vertical"),Yn=new eo(1,9*Math.pow(Oa.value,2)/40,Oa.value),Ir=new Zr(1,sl.value);A.watch(()=>_.x,xe=>{Ie.value=Ue(xe)}),A.watch(()=>_.y,xe=>{qe.value=Ue(xe)}),A.watch(()=>_.scaleValue,xe=>{gt.value=Ae(Number(xe))}),A.watch(Ie,ni),A.watch(qe,Ta),A.watch(gt,Vr),A.watch(Is,Ai),A.watch(rs,Ai);function Ui(){Lt&&Lt.cancel(),ft&&ft.cancel()}function ni(xe){if(qa.value){if(xe+Mn.x===$n)return $n;ft&&ft.cancel(),Zo(xe+Mn.x,qe.value+Mn.y,Dn)}return xe}function Ta(xe){if(Jo.value){if(xe+Mn.y===Gt)return Gt;ft&&ft.cancel(),Zo(Ie.value+Mn.x,xe+Mn.y,Dn)}return xe}function Ai(){if(!_.scale)return!1;yo(Dn,!0)}function Vr(xe){return _.scale?(xe=fi(xe),yo(xe,!0),xe):!1}function rr(){_.disabled||(Ui(),Er.historyX=[0,0],Er.historyY=[0,0],Er.historyT=[0,0],qa.value&&(Wa=$n),Jo.value&&(Ga=Gt),Fo=null,Ya=null,Jn=!0)}function ui(xe){if(!_.disabled&&Jn){let Pt=$n,xt=Gt;if(Ya===null&&(Ya=Math.abs(xe.detail.dx/xe.detail.dy)>1?"htouchmove":"vtouchmove"),qa.value&&(Pt=xe.detail.dx+Wa,Er.historyX.shift(),Er.historyX.push(Pt),!Jo.value&&Fo===null&&(Fo=Math.abs(xe.detail.dx/xe.detail.dy)<1)),Jo.value&&(xt=xe.detail.dy+Ga,Er.historyY.shift(),Er.historyY.push(xt),!qa.value&&Fo===null&&(Fo=Math.abs(xe.detail.dy/xe.detail.dx)<1)),Er.historyT.shift(),Er.historyT.push(xe.detail.timeStamp),!Fo){let Ut="touch";Pt<lt.value?_.outOfBounds?(Ut="touch-out-of-bounds",Pt=lt.value-Ci.x(lt.value-Pt)):Pt=lt.value:Pt>vn.value&&(_.outOfBounds?(Ut="touch-out-of-bounds",Pt=vn.value+Ci.x(Pt-vn.value)):Pt=vn.value),xt<It.value?_.outOfBounds?(Ut="touch-out-of-bounds",xt=It.value-Ps.x(It.value-xt)):xt=It.value:xt>wt.value&&(_.outOfBounds?(Ut="touch-out-of-bounds",xt=wt.value+Ps.x(xt-wt.value)):xt=wt.value),jo(function(){lo(Pt,xt,Dn,Ut)})}}}function la(){if(!_.disabled&&Jn&&(Jn=!1,!Fo&&!Ft("out-of-bounds")&&_.inertia)){let xe=1e3*(Er.historyX[1]-Er.historyX[0])/(Er.historyT[1]-Er.historyT[0]),Pt=1e3*(Er.historyY[1]-Er.historyY[0])/(Er.historyT[1]-Er.historyT[0]);Ir.setV(xe,Pt),Ir.setS($n,Gt);let xt=Ir.delta().x,Ut=Ir.delta().y,Ht=xt+$n,Jt=Ut+Gt;Ht<lt.value?(Ht=lt.value,Jt=Gt+(lt.value-$n)*Ut/xt):Ht>vn.value&&(Ht=vn.value,Jt=Gt+(vn.value-$n)*Ut/xt),Jt<It.value?(Jt=It.value,Ht=$n+(It.value-Gt)*xt/Ut):Jt>wt.value&&(Jt=wt.value,Ht=$n+(wt.value-Gt)*xt/Ut),Ir.setEnd(Ht,Jt),Lt=yi(Ir,function(){let on=Ir.s(),gr=on.x,Un=on.y;lo(gr,Un,Dn,"friction")},function(){Lt.cancel()})}}function pr(xe,Pt){let xt=!1;return xe>vn.value?(xe=vn.value,xt=!0):xe<lt.value&&(xe=lt.value,xt=!0),Pt>wt.value?(Pt=wt.value,xt=!0):Pt<It.value&&(Pt=It.value,xt=!0),{x:xe,y:Pt,outOfBounds:xt}}function wr(){Bn.x=Ko.left-re.left.value,Bn.y=Ko.top-re.top.value}function Ns(xe){xe=xe||Dn,xe=fi(xe),pt.value=Ko.height/Dn,Kt.value=Ko.width/Dn;let Pt=pt.value*xe,xt=Kt.value*xe;Mn.x=(xt-Kt.value)/2,Mn.y=(Pt-pt.value)/2}function ks(){let xe=0-Bn.x+Mn.x,Pt=re.width.value-Kt.value-Bn.x-Mn.x;lt.value=Math.min(xe,Pt),vn.value=Math.max(xe,Pt);let xt=0-Bn.y+Mn.y,Ut=re.height.value-pt.value-Bn.y-Mn.y;It.value=Math.min(xt,Ut),wt.value=Math.max(xt,Ut)}function yo(xe,Pt){if(_.scale){xe=fi(xe),Ns(xe),ks();let xt=pr($n,Gt),Ut=xt.x,Ht=xt.y;Pt?Zo(Ut,Ht,xe,"",!0,!0):jo(function(){lo(Ut,Ht,xe,"",!0,!0)})}}function fi(xe){return xe=Math.max(.5,Is.value,xe),xe=Math.min(10,rs.value,xe),xe}function Zo(xe,Pt,xt,Ut,Ht,Jt){Ui(),qa.value||(xe=$n),Jo.value||(Pt=Gt),_.scale||(xt=Dn);let on=pr(xe,Pt);if(xe=on.x,Pt=on.y,!_.animation){lo(xe,Pt,xt,Ut,Ht,Jt);return}Yn._springX._solution=null,Yn._springY._solution=null,Yn._springScale._solution=null,Yn._springX._endPosition=$n,Yn._springY._endPosition=Gt,Yn._springScale._endPosition=Dn,Yn.setEnd(xe,Pt,xt,1),ft=yi(Yn,function(){let gr=Yn.x(),Un=gr.x,Zn=gr.y,ca=gr.scale;lo(Un,Zn,ca,Ut,Ht,Jt)},function(){ft.cancel()})}function Ft(xe){let Pt=pr($n,Gt),xt=Pt.x,Ut=Pt.y,Ht=Pt.outOfBounds;return Ht&&Zo(xt,Ut,Dn,xe),Ht}function lo(xe,Pt,xt,Ut="",Ht,Jt){xe!==null&&xe.toString()!=="NaN"&&typeof xe=="number"||(xe=$n||0),Pt!==null&&Pt.toString()!=="NaN"&&typeof Pt=="number"||(Pt=Gt||0),xe=Number(xe.toFixed(1)),Pt=Number(Pt.toFixed(1)),xt=Number(xt.toFixed(1)),$n===xe&&Gt===Pt||Ht||L("change",{x:go(xe,Mn.x),y:go(Pt,Mn.y),source:Ut}),_.scale||(xt=Dn),xt=fi(xt),xt=+xt.toFixed(3),Jt&&xt!==Dn&&L("scale",{x:xe,y:Pt,scale:xt});let on=`translate(${xe}px, ${Pt}px) scale(${xt})`;no.transition(q.value,{styles:{transform:on},duration:0,delay:0}),$n=xe,Gt=Pt,Dn=xt}function Xo(){return Qn(q.value).then(xe=>{Ko=xe})}function Pa(){if(!Q.value)return;Ui();let xe=_.scale?gt.value:1;wr(),Ns(xe),ks(),$n=Ie.value+Mn.x,Gt=qe.value+Mn.y;let Pt=pr($n,Gt),xt=Pt.x,Ut=Pt.y;lo(xt,Ut,xe,"",!0)}return A.onMounted(()=>{Me=ai(Pt=>{switch(Pt.detail.state){case"start":rr();break;case"move":ui(Pt);break;case"end":la()}}),v(()=>{Xo().then(()=>{Pa()})},100),Ir.reconfigure(1,sl.value),Yn.reconfigure(1,9*Math.pow(Oa.value,2)/40,Oa.value);let xe={setParent:Pa};he(xe),A.onUnmounted(()=>{Se(xe)})}),A.onUnmounted(()=>{Ui()}),()=>{z(Me)}}let Nn=16,dr={activeColor:Sn.PRIMARY_COLOR,backgroundColor:"#EBEBEB",activeMode:"backwards"},No={percent:{type:[Number,String],default:0,validator(_){return!isNaN(parseFloat(_))}},fontSize:{type:[String,Number],default:Nn},showInfo:{type:[Boolean,String],default:!1},strokeWidth:{type:[Number,String],default:6,validator(_){return!isNaN(parseFloat(_))}},color:{type:String,default:dr.activeColor},activeColor:{type:String,default:dr.activeColor},backgroundColor:{type:String,default:dr.backgroundColor},active:{type:[Boolean,String],default:!1},activeMode:{type:String,default:dr.activeMode},duration:{type:[Number,String],default:30,validator(_){return!isNaN(parseFloat(_))}},borderRadius:{type:[Number,String],default:0}},Mt=[{"uni-progress":{"":{flex:1,flexDirection:"row",alignItems:"center"}},"uni-progress-bar":{"":{flex:1}},"uni-progress-inner-bar":{"":{position:"absolute"}},"uni-progress-info":{"":{marginLeft:"15px"}}}];var ke=A.defineComponent({name:"Progress",props:No,styles:Mt,emits:["activeend"],setup(_,{emit:L}){let q=A.ref(null),z=A.ref(null),Q=fr(q,L),re=ro(_);return A.watch(()=>re.realPercent,(he,Se)=>{re.lastPercent=Se||0,si(re,_,Q)}),A.onMounted(()=>{v(()=>{Qn(z.value).then(({width:he})=>{re.progressWidth=he||0,si(re,_,Q)})},50)}),()=>{let{showInfo:he,fontSize:Se}=_,{outerBarStyle:Me,innerBarStyle:Ue,currentPercent:Ae}=re;return A.createVNode("div",{ref:q,class:"uni-progress"},[A.createVNode("div",{ref:z,style:Me,class:"uni-progress-bar"},[A.createVNode("div",{style:Ue,class:"uni-progress-inner-bar"},null)]),he?Vt(Ae+"%",{class:"uni-progress-info",style:{fontSize:Se}}):null])}}});function ro(_){let L=A.ref(0),q=A.ref(0),z=A.computed(()=>({backgroundColor:_.backgroundColor,borderRadius:_.borderRadius,height:_.strokeWidth})),Q=A.computed(()=>{let Se=_.color!==dr.activeColor&&_.activeColor===dr.activeColor?_.color:_.activeColor;return{width:L.value*q.value/100,height:_.strokeWidth,backgroundColor:Se,borderRadius:_.borderRadius}}),re=A.computed(()=>{let Se=parseFloat(_.percent);return Se<0&&(Se=0),Se>100&&(Se=100),Se});return A.reactive({outerBarStyle:z,innerBarStyle:Q,realPercent:re,currentPercent:L,strokeTimer:0,lastPercent:0,progressWidth:q})}function si(_,L,q){_.strokeTimer&&clearInterval(_.strokeTimer),L.active?(_.currentPercent=L.activeMode===dr.activeMode?0:_.lastPercent,_.strokeTimer=setInterval(()=>{_.currentPercent+1>_.realPercent?(_.currentPercent=_.realPercent,_.strokeTimer&&clearInterval(_.strokeTimer),q("activeend",{})):_.currentPercent+=1},parseFloat(L.duration))):_.currentPercent=_.realPercent}let Di={value:{type:Array,default(){return[]},validator:function(_){return le.isArray(_)&&_.filter(L=>typeof L=="number").length===_.length}},indicatorStyle:{type:String,default:""},indicatorClass:{type:String,default:""},maskStyle:{type:String,default:""},maskClass:{type:String,default:""}},io=le.extend({},Di,{height:{type:[Number,String],default:0}});var Fi=A.defineComponent({name:"PickerView",props:io,emits:["change","update:value"],setup(_,{slots:L,emit:q}){let z=A.ref(null),Q=Xr(_),re=fr(z,q),he=[],Se=Ue=>Array.prototype.indexOf.call(he,Ue),Me=Ue=>A.computed({get(){let Ae=Se(Ue.vnode);return Q.value[Ae]||0},set(Ae){if(!Ue.data._isMounted)return;let Ie=Se(Ue.vnode);if(Ie<0)return;if(Q.value[Ie]!==Ae){Q.value[Ie]=Ae;let gt=Q.value.map(Kt=>Kt);q("update:value",gt),re("change",{value:gt})}}});return A.provide("getPickerViewColumn",Me),A.provide("pickerViewProps",_),()=>{let Ue=L.default&&L.default();he=To(Ue);let Ae=_.height?{height:`${parseFloat(_.height)}px`}:{};return A.createVNode("view",A.mergeProps({ref:z,class:"uni-picker-view",style:Ae},{preventGesture:!0}),[A.createVNode("view",{class:"uni-picker-view-wrapper"},[Ue])])}},styles:[{"uni-picker-view":{"":{position:"relative"}},"uni-picker-view-wrapper":{"":{display:"flex",flexDirection:"row",position:"absolute",top:0,left:0,right:0,bottom:0,overflow:"hidden"}}}]});function Xr(_){let L=A.reactive([..._.value]),q=A.reactive({value:L});return A.watch(()=>_.value,z=>{q.value.length=z.length,z.forEach((Q,re)=>{Q!==q.value[re]&&q.value.splice(re,1,Q)})}),q}let ta=S.requireModule("dom"),ko=S.config.env.platform.toLowerCase()==="android";function Qt(_){return le.extend({},le.isString(_)?oi(_):_)}var ya=A.defineComponent({name:"PickerViewColumn",props:{length:{type:[Number,String],default:0}},data:()=>({_isMounted:!1}),setup(_,{slots:L}){let q=A.getCurrentInstance(),z=A.ref(null),Q=A.ref(null),re=A.ref(null),he=A.ref(null),Se=A.inject("pickerViewProps"),Ue=A.inject("getPickerViewColumn")(q),Ae=A.computed(()=>Qt(Se.indicatorStyle)),Ie=A.computed(()=>Qt(Se.maskStyle)),qe=A.ref(0);qe.value=Li(Ae.value);let gt=A.ref(0);gt.value=parseFloat(Se.height),A.watch(()=>_.length,()=>{v(()=>{pt(Ue.value,!0,!0)},150)});let Kt,pt=(wt,ft=!0,Lt)=>{Ue.value===wt&&!Lt||(ta.scrollToElement(Q.value,{offset:wt*qe.value,animated:ft}),Ue.value=wt,ft&&(Kt=Date.now()))},lt=wt=>{if(Date.now()-Kt<340)return;let ft=wt.detail.contentOffset.y,Lt=Math.round(ft/qe.value);ft%qe.value?pt(Lt,!0,!0):Ue.value=Lt},It=()=>{let wt,ft;v(()=>{Promise.all([Qn(z.value).then(({height:Lt})=>{wt=gt.value=Lt}),ko&&_.length?Qn(re.value).then(({height:Lt})=>{ft=qe.value=Lt/parseFloat(_.length)}):Qn(he.value).then(({height:Lt})=>{ft=qe.value=Lt})]).then(()=>{wt&&ft?v(()=>{q.data._isMounted=!0,pt(Ue.value,!1,!0)},50):It()})},50)};A.onMounted(It);let vn=wt=>wt?ko?A.createVNode("div",{ref:re,style:"flex-direction:column;"},[wt]):wt:null;return()=>{let wt=L.default&&L.default(),ft=(gt.value-qe.value)/2,Lt=`${gt.value-ft}px`,Bn={showScrollbar:!1,scrollToBegin:!1,decelerationRate:.3,scrollY:!0};return ko||(Bn.scrollTop=Ue.value*qe.value),A.createVNode("view",{ref:z,class:"uni-picker-view-column"},[A.createVNode("scroll-view",A.mergeProps({class:"uni-picker-view-group",style:"flex-direction:column;",onScrollend:lt},Bn),[A.createVNode("view",{ref:Q,class:"uni-picker-view-content",style:{paddingTop:`${ft}px`,paddingBottom:`${ft}px`}},[vn(wt)])]),A.createVNode("u-scalable",{class:"uni-picker-view-mask",style:Ie.value},[A.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-top",style:{bottom:Lt}},null),A.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-bottom",style:{top:Lt}},null)]),A.createVNode("u-scalable",{ref:he,class:"uni-picker-view-indicator",style:le.extend({},Ae.value,{top:`${ft}px`})},null)])}},styles:[{"uni-picker-view-column":{"":{flex:1,position:"relative",alignItems:"stretch",overflow:"hidden"}},"uni-picker-view-mask":{"":{position:"absolute",top:0,left:0,right:0,bottom:0,pointerEvents:"none"}},"uni-picker-view-mask-top":{"":{bottom:0,backgroundImage:"linear-gradient(to bottom,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-mask-bottom":{"":{top:0,backgroundImage:"linear-gradient(to top,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-group":{"":{position:"absolute",top:0,left:0,right:0,bottom:0}},"uni-picker-view-content":{"":{flexDirection:"column",paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0}},"uni-picker-view-indicator":{"":{position:"absolute",left:0,right:0,top:0,height:"34px",pointerEvents:"none",borderColor:"#e5e5e5",borderTopWidth:"1px",borderBottomWidth:"1px"}}}]});function Li(_){let q=(_.height||_.lineHeight||"").match(/(-?[\d\.]+)px/),z=0;return q&&(z=parseFloat(q[1])),z}let hn={SELECTOR:"selector",MULTISELECTOR:"multiSelector",TIME:"time",DATE:"date"},Qr={YEAR:"year",MONTH:"month",DAY:"day"};function Vi(_){return _>9?_:`0${_}`}function qn(_,L){_=String(_||"");let q=new Date;if(L===hn.TIME){let z=_.split(":");z.length===2&&q.setHours(parseInt(z[0]),parseInt(z[1]))}else{let z=_.split("-");z.length===3&&q.setFullYear(parseInt(z[0]),parseInt(String(parseFloat(z[1])-1)),parseInt(z[2]))}return q}function Ro(_){if(_.mode===hn.TIME)return"00:00";if(_.mode===hn.DATE){let L=new Date().getFullYear()-100;switch(_.fields){case Qr.YEAR:return L;case Qr.MONTH:return L+"-01";default:return L+"-01-01"}}return""}function La(_){if(_.mode===hn.TIME)return"23:59";if(_.mode===hn.DATE){let L=new Date().getFullYear()+100;switch(_.fields){case Qr.YEAR:return L;case Qr.MONTH:return L+"-12";default:return L+"-12-31"}}return""}let na={name:{type:String,default:""},range:{type:Array,default(){return[]}},rangeKey:{type:String,default:""},value:{type:[Number,String,Array],default:0},mode:{type:String,default:hn.SELECTOR,validator(_){return Object.values(hn).indexOf(_)>=0}},fields:{type:String,default:""},start:{type:String,default:Ro},end:{type:String,default:La},disabled:{type:[Boolean,String],default:!1}};var Wo=A.defineComponent({name:"Picker",props:na,emits:["change","cancel","columnchange"],setup(_,{slots:L,emit:q}){let z=A.ref(null),Q=fr(z,q),re=A.ref(null),he=A.ref(null),Se=()=>{let pt=_.value;switch(_.mode){case hn.MULTISELECTOR:{le.isArray(pt)||(pt=[]),le.isArray(re.value)||(re.value=[]);let lt=re.value.length=Math.max(pt.length,_.range.length);for(let It=0;It<lt;It++){let vn=Number(pt[It]),wt=Number(re.value[It]),ft=isNaN(vn)?isNaN(wt)?0:wt:vn;re.value.splice(It,1,ft<0?0:ft)}}break;case hn.TIME:case hn.DATE:re.value=String(pt);break;default:{let lt=Number(pt);re.value=lt<0?0:lt;break}}},Me=pt=>{he.value&&he.value.sendMessage(pt)},Ue=pt=>{let lt={event:"cancel"};he.value=dn({url:"__uniapppicker",data:pt,style:{titleNView:!1,animationType:"none",animationDuration:0,background:"rgba(0,0,0,0)",popGesture:"none"},onMessage:It=>{let vn=It.event;if(vn==="created"){Me(pt);return}if(vn==="columnchange"){delete It.event,Q(vn,It);return}lt=It},onClose:()=>{he.value=null;let It=lt.event;delete lt.event,It&&Q(It,lt)}})},Ae=pt=>{k.nativeUI[_.mode===hn.TIME?"pickTime":"pickDate"](lt=>{let It=lt.date;Q("change",{value:_.mode===hn.TIME?`${Vi(It.getHours())}:${Vi(It.getMinutes())}`:`${It.getFullYear()}-${Vi(It.getMonth()+1)}-${Vi(It.getDate())}`})},()=>{Q("cancel",{})},_.mode===hn.TIME?{time:qn(_.value,hn.TIME)}:{date:qn(_.value,hn.DATE),minDate:qn(_.start,hn.DATE),maxDate:qn(_.end,hn.DATE)})},Ie=pt=>{(pt.mode===hn.TIME||pt.mode===hn.DATE)&&!pt.fields?Ae():(pt.fields=Object.values(Qr).includes(pt.fields)?pt.fields:Qr.DAY,Ue(pt))},qe=pt=>{_.disabled||Ie(le.extend({},_,{value:re.value,locale:b.getLocale()}))},gt=A.inject(jr,!1),Kt={submit:()=>[_.name,re.value],reset:()=>{switch(_.mode){case hn.SELECTOR:re.value=0;break;case hn.MULTISELECTOR:le.isArray(_.value)&&(re.value=_.value.map(pt=>0));break;case hn.DATE:case hn.TIME:re.value="";break}}};return gt&&(gt.addField(Kt),A.onBeforeUnmount(()=>gt.removeField(Kt))),Object.keys(_).forEach(pt=>{A.watch(()=>_[pt],lt=>{let It={};It[pt]=lt,Me(It)},{deep:!0})}),A.watch(()=>_.value,Se,{deep:!0}),Se(),()=>A.createVNode("view",{ref:z,onClick:qe},[L.default&&L.default()])}});let ra={name:{type:String,default:""},min:{type:[Number,String],default:0},max:{type:[Number,String],default:100},value:{type:[Number,String],default:0},step:{type:[Number,String],default:1},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#e9e9e9"},backgroundColor:{type:String,default:"#e9e9e9"},activeColor:{type:String,default:"#007aff"},selectedColor:{type:String,default:"#007aff"},blockColor:{type:String,default:"#ffffff"},blockSize:{type:[Number,String],default:28},showValue:{type:[Boolean,String],default:!1}},Ea=[{"uni-slider":{"":{flex:1,flexDirection:"column",marginTop:"12",marginRight:0,marginBottom:"12",marginLeft:0,paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0}},"uni-slider-wrapper":{"":{flexDirection:"row",alignItems:"center",minHeight:"30"}},"uni-slider-tap-area":{"":{position:"relative",flex:1,flexDirection:"column",paddingTop:"15",paddingRight:0,paddingBottom:"15",paddingLeft:0}},"uni-slider-handle-wrapper":{"":{position:"relative",marginTop:0,marginRight:"18",marginBottom:0,marginLeft:"18",height:"2",borderRadius:"5",backgroundColor:"#e9e9e9",transitionProperty:"backgroundColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-track":{"":{height:"2",borderRadius:"6",backgroundColor:"#007aff",transitionProperty:"backgroundColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-thumb":{"":{position:"absolute",width:"28",height:"28",borderRadius:50,boxShadow:"0 0 4px #ebebeb",transitionProperty:"borderColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-step":{"":{position:"absolute",width:100,height:"2",background:"transparent"}},"uni-slider-value":{"":{color:"#888888",fontSize:"14",marginLeft:"14"}}}];var Mr=A.defineComponent({name:"USlider",props:ra,styles:Ea,setup(_,{emit:L}){let q=A.ref(null),z=A.ref(null),Q=fr(q,L),re=Dr(_),he=xn(_,re,Q);return hr(_,re),A.watch(()=>_.value,Se=>{re.sliderValue=Number(Se)}),A.onMounted(()=>{v(()=>{Qn(q.value).then(({width:Se})=>{re.sliderWidth=Se||0,re.sliderValue=Number(_.value)})},100)}),()=>{let{showValue:Se}=_,{trackStyle:Me,trackActiveStyle:Ue,thumbStyle:Ae,sliderValue:Ie}=re;return A.createVNode("div",{class:"uni-slider",ref:q},[A.createVNode("div",{class:"uni-slider-wrapper"},[A.createVNode("div",A.mergeProps({class:"uni-slider-tap-area"},he),[A.createVNode("div",{class:"uni-slider-handle-wrapper",ref:z,style:Me},[A.createVNode("div",{class:"uni-slider-track",style:Ue},null)]),A.createVNode("div",{class:"uni-slider-thumb",style:Ae},null)]),Se?Vt(Ie+"",{class:"uni-slider-value"}):null])])}}});function Dr(_){let L=A.ref(0),q=A.ref(0),z=()=>_.backgroundColor!=="#e9e9e9"?_.backgroundColor:_.color!=="#007aff"?_.color:"#007aff",Q=()=>_.activeColor!=="#007aff"?_.activeColor:_.selectedColor!=="#e9e9e9"?_.selectedColor:"#e9e9e9",re=()=>{let Se=Number(_.max),Me=Number(_.min);return(q.value-Me)/(Se-Me)*L.value};return A.reactive({sliderWidth:L,sliderValue:q,trackStyle:A.computed(()=>({backgroundColor:z()})),trackActiveStyle:A.computed(()=>({backgroundColor:Q(),width:re()})),thumbStyle:A.computed(()=>({width:_.blockSize,height:_.blockSize,marginTop:-_.blockSize/2,left:re(),backgroundColor:_.blockColor}))})}function xn(_,L,q){let z=null;function Q(Se,Me){_.disabled||(Se==="move"?(re(Me),q("changing",{value:L.sliderValue})):Se==="end"&&(re(Me),q("change",{value:L.sliderValue})))}function re(Se){Se<0&&(Se=0),Se>L.sliderWidth&&(Se=L.sliderWidth);let Me=Number(_.max),Ue=Number(_.min),Ae=Number(_.step),Ie=Se/L.sliderWidth*Me-Ue;Ae>0&&Ie>Ae&&Ie%Ae/Ae!==0&&(Ie-=Ie%Ae),L.sliderValue=Ie+Ue}return{onTouchstart(Se){Se.changedTouches.length===1&&!z&&(z=Se,Q("start",Se.changedTouches[0].pageX))},onTouchmove(Se){Se.changedTouches.length===1&&z&&Q("move",Se.changedTouches[0].pageX)},onTouchend(Se){Se.changedTouches.length===1&&z&&(z=null,Q("end",Se.changedTouches[0].pageX))}}}function hr(_,L){let q=A.inject(jr,!1),z={submit:()=>{let Q=["",null];return _.name&&(Q[0]=_.name,Q[1]=L.sliderValue),Q},reset:()=>{L.sliderValue=Number(_.value)}};q&&(q.addField(z),A.onUnmounted(()=>{q.removeField(z)}))}let br={name:{type:String,default:""},checked:{type:[Boolean,String],default:!1},type:{type:String,default:"switch"},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"}},oo={switch:"switch",checkbox:"checkbox"},Go={width:52,height:32};var Va=A.defineComponent({name:"Switch",props:br,emits:["change"],setup(_,{emit:L}){let q=A.ref(null),z=A.ref(_.checked),Q=wa(_,z),re=fr(q,L);A.watch(()=>_.checked,Me=>{z.value=Me});let he={onChange(Me){z.value=Me.detail.value,re("change",{value:z.value})}},Se=(Me,Ue)=>{_.disabled||(z.value=!z.value,re("change",{value:z.value}))};return Q&&(Q.addHandler(Se),A.onBeforeUnmount(()=>{Q.removeHandler(Se)})),cr(_,{"label-click":Se}),()=>{let{color:Me,type:Ue}=_;return A.createVNode("div",{ref:q},[Ue===oo.switch?A.createVNode("dc-switch",A.mergeProps({dataUncType:"uni-switch"},he,{checked:z.value,color:Me},{style:Go}),null):null,Ue===oo.checkbox?A.createVNode(A.resolveComponent("checkbox"),A.mergeProps({style:{color:Me}},{checked:z.value},he),null):null])}}});function wa(_,L){let q=A.inject(jr,!1),z=A.inject(Or,!1),Q={submit:()=>{let re=["",null];return _.name&&(re[0]=_.name,re[1]=L.value),re},reset:()=>{L.value=!1}};return q&&(q.addField(Q),A.onUnmounted(()=>{q.removeField(Q)})),z}let ao={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},ei=Rr("ucg"),$i={name:{type:String,default:""}},Yo=[{"uni-checkbox":{"":{flexDirection:"row",alignItems:"center"}},"uni-checkbox-input":{"":{justifyContent:"center",alignItems:"center",position:"relative",borderWidth:"1",borderColor:"#d1d1d1",borderStyle:"solid",backgroundColor:"#ffffff",borderRadius:"3",width:"22",height:"22"}},"uni-icon":{"":{fontFamily:"unincomponents",fontSize:"16",marginLeft:"2",marginTop:"2",color:"#007aff"}},"uni-checkbox-input-disabled":{"":{backgroundColor:"#e1e1e1"}},"uni-checkbox-input-disabled-before":{"":{color:"#adadad"}},"uni-checkbox-slot":{"":{fontSize:"16",marginLeft:"5"}}}];var li=A.defineComponent({name:"Checkbox",props:ao,styles:Yo,setup(_,{slots:L}){let q=A.ref(null),z=A.ref(_.checked),Q=A.ref(_.value),re=A.computed(()=>_.disabled?"#adadad":_.color),he=()=>{z.value=!1},Se=(Ie,qe)=>{_.disabled||(z.value=!z.value,Me&&Me.checkboxChange(Ie))},{uniCheckGroup:Me,uniLabel:Ue}=Ei(z,Q,he);Ue&&(Ue.addHandler(Se),A.onBeforeUnmount(()=>{Ue.removeHandler(Se)})),cr(_,{"label-click":Se}),A.watch([()=>_.checked,()=>_.value],([Ie,qe])=>{z.value=Ie,Q.value=qe});let Ae=()=>{if(!L.default)return[];let Ie=L.default();return Ie.length===1&&Ie[0].type===Text?[Vt(Ie[0].children,{class:"uni-checkbox-slot"})]:Ie};return()=>A.createVNode("div",A.mergeProps({ref:q},{dataUncType:"uni-checkbox"},{onClick:Se,class:"uni-checkbox"}),[A.createVNode("div",{class:["uni-checkbox-input",{"uni-checkbox-input-disabled":_.disabled}]},[z.value?Vt("\uEA08",{class:"uni-icon",style:{color:re.value}}):null]),...Ae()])}});function Ei(_,L,q){let z=A.computed(()=>({checkboxChecked:Boolean(_.value),value:L.value})),Q={reset:q},re=A.inject(ei,!1);re&&re.addField(z);let he=A.inject(jr,!1);he&&he.addField(Q);let Se=A.inject(Or,!1);return A.onBeforeUnmount(()=>{re&&re.removeField(z),he&&he.removeField(Q)}),{uniCheckGroup:re,uniForm:he,uniLabel:Se}}var tr=A.defineComponent({name:"CheckboxGroup",props:$i,emits:["change"],setup(_,{slots:L,emit:q}){let z=A.ref(null),Q=fr(z,q);return Pr(_,Q),()=>A.createVNode("div",{ref:z,class:"uni-checkbox-group"},[L.default&&L.default()])}});function Pr(_,L){let q=[],z=()=>q.reduce((re,he)=>(he.value.checkboxChecked&&re.push(he.value.value),re),new Array);A.provide(ei,{addField(re){q.push(re)},removeField(re){q.splice(q.indexOf(re),1)},checkboxChange(re){L("change",{value:z()})}});let Q=A.inject(jr,!1);return Q&&Q.addField({submit:()=>{let re=["",null];return _.name!==""&&(re[0]=_.name,re[1]=z()),re}}),z}let F={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},ie=Rr("ucg"),ye={name:{type:String,default:""}},G=[{"uni-radio":{"":{alignItems:"center",flexDirection:"row"}},"uni-radio-input":{"":{position:"relative",alignItems:"center",justifyContent:"center",marginRight:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#d1d1d1",borderRadius:50,width:"22",height:"22",outline:0}},"uni-radio-input-icon":{"":{fontFamily:"unincomponents",fontSize:"14",color:"#ffffff"}},"uni-radio-input-disabled":{"":{backgroundColor:"#e1e1e1",borderColor:"#d1d1d1",color:"#adadad"}},"uni-radio-slot":{"":{fontSize:"16",marginLeft:"5"}}}];var V=A.defineComponent({name:"Radio",props:F,styles:G,emits:["change"],setup(_,{slots:L}){let q=A.ref(null),z=A.ref(_.checked),Q=A.ref(_.value),re=A.computed(()=>{let qe=_.disabled?"#adadad":_.color;return z.value?{backgroundColor:qe,borderColor:qe}:{borderColor:"#d1d1d1"}}),he=()=>{z.value=!1},{uniCheckGroup:Se,uniLabel:Me,field:Ue}=J(z,Q,he),Ae=(qe,gt)=>{_.disabled||(z.value=!z.value,Se&&Se.radioChange(qe,Ue))};Me&&(Me.addHandler(Ae),A.onBeforeUnmount(()=>{Me.removeHandler(Ae)})),cr(_,{"label-click":Ae}),A.watch([()=>_.checked,()=>_.value],([qe,gt])=>{z.value=qe,Q.value=gt});let Ie=()=>{if(!L.default)return[];let qe=L.default();return qe.length===1&&qe[0].type===Text?[Vt(qe[0].children,{class:"uni-radio-slot"})]:qe};return()=>{let{disabled:qe}=_;return A.createVNode("div",A.mergeProps({ref:q},{dataUncType:"uni-radio"},{onClick:Ae,class:"uni-radio"}),[A.createVNode("div",{style:re.value,class:["uni-radio-input",{"uni-radio-input-disabled":qe}]},[z.value?Vt("\uEA08",{class:"uni-radio-input-icon"}):null]),...Ie()])}}});function J(_,L,q){let z=A.computed({get:()=>({radioChecked:Boolean(_.value),value:L.value}),set:({radioChecked:Me})=>{_.value=Me}}),Q={reset:q},re=A.inject(ie,!1);re&&re.addField(z);let he=A.inject(jr,!1);he&&he.addField(Q);let Se=A.inject(Or,!1);return A.onBeforeUnmount(()=>{re&&re.removeField(z),he&&he.removeField(Q)}),{uniCheckGroup:re,uniForm:he,uniLabel:Se,field:z}}var Z=A.defineComponent({name:"RadioGroup",props:ye,emits:["change"],setup(_,{slots:L,emit:q}){let z=A.ref(null),Q=fr(z,q);return ge(_,Q),()=>A.createVNode("div",{ref:z},[L.default&&L.default()])}});function ge(_,L){let q=[];A.onMounted(()=>{Se(q.length-1)});let z=()=>{var Me;return(Me=q.find(Ue=>Ue.value.radioChecked))==null?void 0:Me.value.value};A.provide(ie,{addField(Me){q.push(Me)},removeField(Me){q.splice(q.indexOf(Me),1)},radioChange(Me,Ue){let Ae=q.indexOf(Ue);Se(Ae,!0),L("change",{value:z()})}});let Q=A.inject(jr,!1),re={submit:()=>{let Me=["",null];return _.name!==""&&(Me[0]=_.name,Me[1]=z()),Me}};Q&&(Q.addField(re),A.onBeforeUnmount(()=>{Q.removeField(re)}));function he(Me,Ue){Me.value={radioChecked:Ue,value:Me.value.value}}function Se(Me,Ue){q.forEach((Ae,Ie)=>{Ie!==Me&&Ue&&he(q[Ie],!1)})}return q}let zt=["u-input","u-textarea"];var On=A.defineComponent({name:"Form",emits:["submit","reset"],setup({},{slots:_,emit:L}){let q=A.ref(null),z=fr(q,L),Q=[],re;return A.provide(jr,{addField(he){Q.push(he)},removeField(he){Q.splice(Q.indexOf(he),1)},submit(he){let Se={};re&&re(Se);let Me=Q.reduce((Ue,Ae)=>{if(Ae.submit){let[Ie,qe]=Ae.submit();Ie&&(Ue[Ie]=qe)}return Ue},Object.create(null));Object.assign(Se,Me),z("submit",{value:Se})},reset(he){re&&re(),Q.forEach(Se=>Se.reset&&Se.reset()),z("reset",he)}}),()=>{let he=_.default&&_.default();return re=En(he),A.createVNode("view",{ref:q},[he])}}});function En(_){let L=S.requireModule("plus"),q=(z,Q)=>{(Q||_||[]).forEach(function(re){zt.indexOf(String(re.type))>=0&&re.el&&re.el.attr&&re.el.attr.name&&(z?z[re.el.attr.name]=L.getValue(re.el.nodeId):re.el.setValue("")),le.isArray(re.children)&&re.children&&re.children.length&&q(z,re.children)})};return q}let yr={type:{type:String,default:""},size:{type:[String,Number],default:23},color:{type:String,default:""}},Kn={success:"#09bb07",info:"#10aeff",warn:"#f76260",waiting:"#10aeff",safe_success:"#09bb07",safe_warn:"#ffbe00",success_circle:"#09bb07",success_no_circle:"#09bb07",waiting_circle:"#10aeff",circle:"#c9c9c9",download:"#09bb07",info_circle:"#09bb07",cancel:"#f43530",search:"#b2b2b2",clear:"#b2b2b2"},$a={success:"\uEA06",info:"\uEA03",warn:"\uEA0B",waiting:"\uEA09",safe_success:"\uEA04",safe_warn:"\uEA05",success_circle:"\uEA07",success_no_circle:"\uEA08",waiting_circle:"\uEA0A",circle:"\uEA01",download:"\uEA02",info_circle:"\uEA0C",cancel:"\uEA0D",search:"\uEA0E",clear:"\uEA0F"},xo=[{"uni-icon":{"":{fontFamily:"unincomponents"}}}];var Bo=A.defineComponent({name:"Icon",props:yr,styles:xo,setup(_,{}){return()=>Vt($a[_.type],{class:"uni-icon",style:{color:_.color||Kn[_.type],fontSize:_.size}})}});let ia={indicatorDots:{type:[Boolean,String],default:!1},vertical:{type:[Boolean,String],default:!1},autoplay:{type:[Boolean,String],default:!1},circular:{type:[Boolean,String],default:!1},interval:{type:[Number,String],default:5e3},duration:{type:[Number,String],default:500},current:{type:[Number,String],default:0},indicatorColor:{type:String,default:"rgba(0,0,0,.3)"},indicatorActiveColor:{type:String,default:"#000000"},previousMargin:{type:String,default:""},nextMargin:{type:String,default:""},currentItemId:{type:String,default:""},skipHiddenItemLayout:{type:[Boolean,String],default:!1},displayMultipleItems:{type:[Number,String],default:1},disableTouch:{type:[Boolean,String],default:!1}},Ua=S.config.env.platform.toLowerCase()==="android",Ha=[{"uni-swiper":{"":{position:"relative",height:"150px"}},"uni-swiper-slider":{"":{position:"absolute",left:0,top:0,right:0,bottom:0}},"uni-swiper-dots":{"":{position:"absolute",left:0,right:0,bottom:"10",height:"10"}}}];var _s=A.defineComponent({name:"Swiper",props:ia,styles:Ha,emits:["change","transition","animationfinish"],setup(_,{slots:L,emit:q}){let z=A.ref(null),Q=[],re=fr(z,q),he=oa(_),Se=qo(he,_,Q,re);return A.watch([()=>_.current,()=>_.currentItemId],([Me,Ue])=>{ci(he,_,Q)}),A.onMounted(()=>{v(()=>{Qn(z.value).then(({width:Me,height:Ue})=>{he.swiperWidth=Me,he.swiperHeight=Ue})},50)}),()=>{let Me=L.default&&L.default(),{indicatorStyle:Ue,currentSync:Ae}=he;return Q=To(Me),A.createVNode("div",{ref:z,class:"uni-swiper"},[A.createVNode("slider",A.mergeProps({class:"uni-swiper-slider"},{autoPlay:_.autoplay,interval:_.interval,index:Ae,keepIndex:!0,showIndicators:_.indicatorDots,infinite:_.circular,vertical:_.vertical,scrollable:!_.disableTouch},Se),[Q,A.createVNode("indicator",{class:"uni-swiper-dots",style:Ue},null)])])}}});function oa(_){let L=A.ref(0),q=A.ref(0),z=A.ref(_.current),Q=A.ref("autoplay"),re=A.computed(()=>({itemColor:_.indicatorColor,itemSelectedColor:_.indicatorActiveColor,itemSize:8,opacity:_.indicatorDots?1:0}));return A.reactive({swiperWidth:L,swiperHeight:q,indicatorStyle:re,currentSync:z,currentChangeSource:Q})}function qo(_,L,q,z){let Q=0,re=Ae=>{let Ie=Ae.detail,qe=L.vertical,gt=(qe?Ie.offsetYRatio:Ie.offsetXRatio)||0;if((Ae.drag||Ae.drag)&&(_.currentChangeSource="touch"),gt===0){let Kt=Math.abs(Q);if(Kt===1)return;Kt>.5&&(gt=1)}Q=gt,z("transition",{dx:qe?0:-_.swiperWidth*gt,dy:qe?-_.swiperHeight*gt:0})},he=Ae=>{let Ie=()=>{z("animationfinish",Me()),_.currentChangeSource="autoplay"};Ua?Ie():v(Ie,50)},Se=Ae=>{le.isString(Ae.detail.source)&&(_.currentChangeSource=Ae.detail.source),_.currentSync=Ae.detail.index,Q=0};function Me(){let Ae=Number(_.currentSync),Ie=q[Ae]||{},qe=Ie.componentInstance&&Ie.componentInstance.itemId||"";return{current:Ae,currentItemId:qe,source:_.currentChangeSource}}return A.watch(()=>_.currentSync,Ae=>{z("change",Me())}),{onScroll:re,onScrollend:he,onChange:Se}}function ci(_,L,q){let z=-1;if(L.currentItemId)for(let Q=0,re=q;Q<re.length;Q++){let he=re[Q].componentInstance;if(he&&he.itemId===L.currentItemId){z=Q;break}}z<0&&(z=Math.round(Number(L.current))||0),z=z<0?0:z,_.currentSync!==z&&(_.currentChangeSource="",_.currentSync=z)}let wi={itemId:{type:String,default:""}};var Sa=A.defineComponent({name:"SwiperItem",props:wi,setup(_,{slots:L}){return()=>A.createVNode("div",{class:"uni-swiper-item",style:{position:"absolute",left:0,top:0,right:0,bottom:0,overflow:"hidden"}},[L.default&&L.default()])}}),nr=/^<([-A-Za-z0-9_]+)((?:\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,Fr=/^<\/([-A-Za-z0-9_]+)[^>]*>/,Mo=/([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g,aa=ti("area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr"),Lr=ti("a,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video"),bs=ti("abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var"),ys=ti("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr"),Es=ti("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected"),ws=ti("script,style");function il(_,L){var q,z,Q,re=[],he=_;for(re.last=function(){return this[this.length-1]};_;){if(z=!0,!re.last()||!ws[re.last()]){if(_.indexOf("<!--")==0?(q=_.indexOf("-->"),q>=0&&(L.comment&&L.comment(_.substring(4,q)),_=_.substring(q+3),z=!1)):_.indexOf("</")==0?(Q=_.match(Fr),Q&&(_=_.substring(Q[0].length),Q[0].replace(Fr,Ue),z=!1)):_.indexOf("<")==0&&(Q=_.match(nr),Q&&(_=_.substring(Q[0].length),Q[0].replace(nr,Me),z=!1)),z){q=_.indexOf("<");var Se=q<0?_:_.substring(0,q);_=q<0?"":_.substring(q),L.chars&&L.chars(Se)}}else _=_.replace(new RegExp("([\\s\\S]*?)</"+re.last()+"[^>]*>"),function(Ae,Ie){return Ie=Ie.replace(/<!--([\s\S]*?)-->|<!\[CDATA\[([\s\S]*?)]]>/g,"$1$2"),L.chars&&L.chars(Ie),""}),Ue("",re.last());if(_==he)throw"Parse Error: "+_;he=_}Ue();function Me(Ae,Ie,qe,gt){if(Ie=Ie.toLowerCase(),Lr[Ie])for(;re.last()&&bs[re.last()];)Ue("",re.last());if(ys[Ie]&&re.last()==Ie&&Ue("",Ie),gt=aa[Ie]||!!gt,gt||re.push(Ie),L.start){var Kt=[];qe.replace(Mo,function(pt,lt){var It=arguments[2]?arguments[2]:arguments[3]?arguments[3]:arguments[4]?arguments[4]:Es[lt]?lt:"";Kt.push({name:lt,value:It,escaped:It.replace(/(^|[^\\])"/g,'$1\\"')})}),L.start&&L.start(Ie,Kt,gt)}}function Ue(Ae,Ie){if(Ie)for(var qe=re.length-1;qe>=0&&re[qe]!=Ie;qe--);else var qe=0;if(qe>=0){for(var gt=re.length-1;gt>=qe;gt--)L.end&&L.end(re[gt]);re.length=qe}}}function ti(_){for(var L={},q=_.split(","),z=0;z<q.length;z++)L[q[z]]=!0;return L}function Si(_){return _.replace(/<\?xml.*\?>\n/,"").replace(/<!doctype.*>\n/,"").replace(/<!DOCTYPE.*>\n/,"")}function Gn(_){return _.reduce(function(L,q){let z=q.value,Q=q.name;return z.match(/ /)&&["style","src"].indexOf(Q)===-1&&(z=z.split(" ")),L[Q]?Array.isArray(L[Q])?L[Q].push(z):L[Q]=[L[Q],z]:L[Q]=z,L},{})}function Tl(_){_=Si(_);let L=[],q={node:"root",children:[]};return il(_,{start:function(z,Q,re){let he={name:z};if(Q.length!==0&&(he.attrs=Gn(Q)),re){let Se=L[0]||q;Se.children||(Se.children=[]),Se.children.push(he)}else L.unshift(he)},end:function(z){let Q=L.shift();if(Q.name!==z&&console.error("invalid state: mismatch end tag"),L.length===0)q.children.push(Q);else{let re=L[0];re.children||(re.children=[]),re.children.push(Q)}},chars:function(z){let Q={type:"text",text:z};if(L.length===0)q.children.push(Q);else{let re=L[0];re.children||(re.children=[]),re.children.push(Q)}},comment:function(z){let Q={node:"comment",text:z},re=L[0];re.children||(re.children=[]),re.children.push(Q)}}),q.children}let ja={nodes:{type:[Array,String],default:function(){return[]}}},vo=16;var ol=A.defineComponent({name:"RichText",props:ja,setup(_){let L=A.getCurrentInstance();return()=>{let q=_.nodes;return le.isString(q)&&(q=Tl(q)),A.createVNode("u-rich-text",{value:Ss(q||[],L.root,{defaultFontSize:vo})},null)}}});function Ss(_,L,q){let z=["span","a","image","img"],Q={blockquote:Ie,br:pt,div:Ie,dl:Ie,h1:gt(2),h2:gt(1.5),h3:gt(1.17),h4:gt(1),h5:gt(.83),h6:gt(.67),hr:Ie,ol:Ie,p:Ie,strong:Kt,table:Ie,tbody:Ie,tfoot:Ie,thead:Ie,ul:Ie},re=/&(amp|gt|lt|nbsp|quot|apos);/g,he={amp:"&",gt:">",lt:"<",nbsp:" ",quot:'"',apos:"'"},Se={type:"span",__type:"break",attr:{value:`
`}},Me={__block:!0,__break:!0,children:[]},Ue=null;function Ae(ft){let Lt=Object.create(null);if(ft.attrs){let Bn=(ft.attrs.class||"").split(" ");Object.assign(Lt,A.parseClassList(Bn,L),oi(ft.attrs.style||""))}if(ft.name==="img"||ft.name==="image"){let Bn=ft.attrs;Lt.width=Lt.width||Bn.width,Lt.height=Lt.height||Bn.height}return Lt}function Ie(ft){return ft.__block=!0,ft}function qe(ft,Lt){return ft.style&&!ft.style.fontSize&&(ft.style.fontSize=q.defaultFontSize*Lt),Ie(Kt(ft))}function gt(ft){return function(Lt){return qe(Lt,ft)}}function Kt(ft){return ft.style&&!ft.style.fontWeight&&(ft.style.fontWeight="bold"),ft}function pt(ft){return ft.__value=" ",Ie(ft)}function lt(ft){return ft.replace(re,function(Lt,Bn){return he[Bn]})}function It(ft){let Lt=(ft.name||"").toLowerCase(),Bn=Lt,Mn=Q[Lt];z.indexOf(Lt)===-1&&(Lt="span"),Lt==="img"&&(Lt="image");let Dn={type:Lt,__type:Bn,attr:Object.create(null)};return(ft.type==="text"||ft.text)&&(Dn.__value=Dn.attr.value=lt((ft.text||"").trim())),ft.attrs&&Object.keys(ft.attrs).forEach($n=>{$n!=="class"&&$n!=="style"&&(Dn.attr[$n]=ft.attrs[$n])}),Dn.style=Ae(ft),Mn&&Mn(Dn),(Me.__block||Dn.__block)&&(Ue||(Me.children.push(Se),Ue=[Me,Se])),Me=Dn,(Me.__value||Me.type==="image"&&Me.attr.src)&&(Ue=null),Dn.children=vn(ft.children),Me=Dn,Me.__block&&Me.style.height&&!/^0(px)?$/.test(Me.style.height)&&(Ue=null),Dn}function vn(ft){return le.isArray(ft)?ft.map(Lt=>It(Lt)):[]}let wt=vn(_);if(Ue){let[ft,Lt]=Ue,Bn=ft.children,Mn=Bn.indexOf(Lt);Bn.splice(Mn,1)}return wt}let mo={};function Cs(_,L,q){let{adpid:z,width:Q}=_,re=z+"-"+Q,he=mo[re];if(he&&he.length>0){L(he.splice(0,1)[0]);return}k.ad.getAds(_,Se=>{let Me=Se.ads;L(Me.splice(0,1)[0]),mo[re]=he?he.concat(Me):Me},Se=>{q({errCode:Se.code,errMsg:Se.message})})}let Ca={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""},channel:{type:String,default:""}},Do={load:"load",close:"close",error:"error",downloadchange:"downloadchange"};var As=A.defineComponent({name:"Ad",props:Ca,emits:[Do.load,Do.close,Do.error,Do.downloadchange],setup(_,{emit:L}){let q=A.ref(null),z=fr(q,L),Q=za();A.watch(()=>_.adpid,he=>{Aa(Q,_,z)}),A.watch(()=>_.data,he=>{Q.data=he}),A.onMounted(()=>{v(()=>{Qn(q.value).then(({width:he})=>{Q.width=he===0?-1:he,Aa(Q,_,z)})},50)});let re={onDownloadchange(he){z(Do.downloadchange,he)},onDislike(he){z(Do.close,he)}};return()=>A.createVNode("u-ad",A.mergeProps({ref:q},{data:Q.data,rendering:!0},re),null)}});function za(_){let L=A.ref("");return A.reactive({width:0,data:L})}function Aa(_,L,q){Cs({adpid:L.adpid,width:_.width},z=>{_.data=z,q(Do.load,{})},z=>{q(Do.error,z)})}let so={};function _o(_,L,q,z,Q){let re=_+"-"+L,he=so[re];if(he&&he.length>0){z(he.splice(0,1)[0]);return}k.ad.getDrawAds({adpid:String(_),count:3,width:L},Se=>{let Me=Se.ads;z(Me.splice(0,1)[0]),so[re]=he?he.concat(Me):Me},Se=>{Q({errCode:Se.code,errMsg:Se.message})})}let sa={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""}},bo={load:"load",close:"close",error:"error"};var Os=A.defineComponent({name:"AdDraw",props:sa,emits:[bo.load,bo.close,bo.error],setup(_,{emit:L}){let q=A.ref(null),z=fr(q,L),Q=Pl();A.watch(()=>_.adpid,he=>{Ts(Q,_,z)}),A.watch(()=>_.data,he=>{Q.data=he});let re={onDislike(he){z(bo.close,he)}};return A.onMounted(()=>{v(()=>{Qn(q.value).then(({width:he,height:Se})=>{Q.width=he===0?-1:he,Q.height=Se===0?-1:Se,Ts(Q,_,z)})},50)}),()=>{let{data:he}=Q;return A.createVNode("u-ad-draw",A.mergeProps({ref:q},{data:he,rendering:!0},re),null)}}});function Pl(_){let L=A.ref("");return A.reactive({width:0,height:0,data:L})}function Ts(_,L,q){_o(L.adpid,_.width,_.height,z=>{_.data=z,q(bo.load,{})},z=>{q(bo.error,z)})}var al={Navigator:ii,Label:Bi,Button:xr,MovableArea:vi,MovableView:Cn,Progress:ke,PickerView:Fi,PickerViewColumn:ya,Picker:Wo,USlider:Mr,Switch:Va,Checkbox:li,CheckboxGroup:tr,Radio:V,RadioGroup:Z,Form:On,Icon:Bo,Swiper:_s,SwiperItem:Sa,RichText:ol,Ad:As,AdDraw:Os};return al}(B,ze,At);return rn}function hP(v,c){let{UniShared:b,Vue:T}=c;function B(k,u,P){let ze=k.$[u];return ze&&b.invokeArrayFns(ze,P)}let S=v.setup;return v.inheritAttrs=!1,v.setup=(k,u)=>{let{attrs:{__pageId:P,__pagePath:ze,__pageQuery:At}}=u,rn=c.__uniRoutes.find(Sn=>Sn.meta.route===ze),A=T.getCurrentInstance(),le=A.proxy;if(rn&&(rn.meta.isSubNVue||pP(le,c,{__pageId:P,__pagePath:ze})),T.onMounted(()=>{T.nextTick(()=>{B(le,b.ON_READY)}),A.onPageScroll&&le.$el.addEvent("scroll",Sn=>{Sn.scrollTop=Sn.detail.scrollTop,B(le,b.ON_PAGE_SCROLL,Sn)}),A.onReachBottom&&le.$el.addEvent("scrolltolower",Sn=>{B(le,b.ON_REACH_BOTTOM,Sn)})}),T.onBeforeUnmount(()=>{B(le,b.ON_UNLOAD)}),S)return S(At,u)},v}function pP(v,c,{__pageId:b,__pagePath:T}){let B=c.getCurrentPages(),S=B[B.length-1];if(S&&S.__setup)S.__setup(v,S);else{let k="/"+T;return c.__registerPage({url:k,path:k,query:{},openType:"launch",webview:{id:b+""},nvuePageVm:v})}}var Nc={},Sg;function Cg(v){Sg=v}var Zu;function gP(v){if(Zu)return Zu;let c=new v.Emitter;return Zu={on(b,T){return c.on(b,T)},once(b,T){return c.once(b,T)},off(b,T){return c.off(b,T)},emit(b,...T){return c.emit(b,...T)}},Zu}function vP(v){return(c,b,T)=>{let{nvue:B}=b,S=Ju(v,b);b.Vue=S,Nc[c]={instanceId:c,config:B.config,document:B.document,data:T};let{createApp:k}=S;S.createVueApp=S.createApp=(u,P)=>(b.__uniConfig.styles=u.styles||[],k(u,P).use(mP,c,b)),S.createPageApp=(u,P)=>{hP(u,b);let ze=P.$store;delete P.$store;let At=k(u,P);return ze&&At.use(ze),At.use(bP,S,c,b)}}}var mP={install(v,c,b){pu(b).initApp(v),_P(v,c,b)}};function _P(v,c,b){let{mount:T}=v,B=Nc[c];return v.mount=S=>{let k=S==="#app",u=B.app=T(Ag(B.document,{isRoot:k}));return k&&b.__registerApp(u),u},v}var bP={install(v,c,b,T){let{weex:B,plus:S,BroadcastChannel:k,VueShared:u,UniShared:P,getCurrentPages:ze,setTimeout:At,clearTimeout:rn}=T;v.config.globalProperties.$requireNativePlugin=B.requireModule;let A=dP({uni:Sg,Vue:c,weex:B,plus:S,BroadcastChannel:k,UniViewJSBridge:gP(P),VueShared:u,UniShared:P,getCurrentPages:ze,setTimeout:At,clearTimeout:rn});Object.keys(A).forEach(le=>{v.component(c.hyphenate(le),A[le])}),pu(T).initApp(v),yP(v,b,T)}};function yP(v,c,{nvue:b}){let{config:{compilerOptions:T},mount:B}=v;T.isCustomElement=k=>!!b.supports(`@component/${k}`);let S=Nc[c];return v.mount=k=>{let u=k==="#root",P=S.app=B(Ag(S.document,{isRoot:u}));if(u)try{b.document.taskCenter.send("dom",{action:"createFinish"},[])}catch(ze){}return P},v}function Ag(v,{isRoot:c}){if(c)return v.documentElement;let b=v.createComment("root");return v.documentElement.appendChild(b),b}function Og(v){let c=Nc[v];if(c&&c.app&&c.document){try{c.app.$.appContext.app.unmount(),c.document.destroy()}catch(b){}delete c.document,delete c.app}delete Nc[v]}function Tg(v){let c=Nc[v];if(!c||!c.app)return new Error(`refreshInstance: instance ${v} not found!`);c.document.taskCenter.send("dom",{action:"refreshFinish"},[])}function EP(v,c){let{UniShared:b,VueShared:T,VueReactivity:B}=v;var S=function(k,u,P,ze){"use strict";var At=[];function rn(o){At.push(o)}function A(){At.pop()}function le(o){P.pauseTracking();for(var l=At.length?At[At.length-1].component:null,h=l&&l.appContext.config.warnHandler,m=Sn(),C=arguments.length,O=new Array(C>1?C-1:0),M=1;M<C;M++)O[M-1]=arguments[M];if(h)Dt(h,l,11,[o+O.join(""),l&&l.proxy,m.map(H=>{var{vnode:te}=H;return"at <".concat(Ra(l,te.type),">")}).join(`
`),m]);else{var Y=["[Vue warn]: ".concat(o),...O];m.length&&Y.push(`
`,...Ln(m)),console.warn(...Y)}P.resetTracking()}function Sn(){var o=At[At.length-1];if(!o)return[];for(var l=[];o;){var h=l[0];h&&h.vnode===o?h.recurseCount++:l.push({vnode:o,recurseCount:0});var m=o.component&&o.component.parent;o=m&&m.vnode}return l}function Ln(o){var l=[];return o.forEach((h,m)=>{l.push(...m===0?[]:[`
`],...bt(h))}),l}function bt(o){var{vnode:l,recurseCount:h}=o,m=h>0?"... (".concat(h," recursive calls)"):"",C=l.component?l.component.parent==null:!1,O=" at <".concat(Ra(l.component,l.type,C)),M=">"+m;return l.props?[O,...ee(l.props),M]:[O+M]}function ee(o){var l=[],h=Object.keys(o);return h.slice(0,3).forEach(m=>{l.push(...se(m,o[m]))}),h.length>3&&l.push(" ..."),l}function se(o,l,h){return u.isString(l)?(l=JSON.stringify(l),h?l:["".concat(o,"=").concat(l)]):typeof l=="number"||typeof l=="boolean"||l==null?h?l:["".concat(o,"=").concat(l)]:P.isRef(l)?(l=se(o,P.toRaw(l.value),!0),h?l:["".concat(o,"=Ref<"),l,">"]):u.isFunction(l)?["".concat(o,"=fn").concat(l.name?"<".concat(l.name,">"):"")]:(l=P.toRaw(l),h?l:["".concat(o,"="),l])}var gn={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",[0]:"setup function",[1]:"render function",[2]:"watcher getter",[3]:"watcher callback",[4]:"watcher cleanup function",[5]:"native event handler",[6]:"component event handler",[7]:"vnode hook",[8]:"directive hook",[9]:"transition hook",[10]:"app errorHandler",[11]:"app warnHandler",[12]:"ref function",[13]:"async component loader",[14]:"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core"};function Dt(o,l,h,m){var C;try{C=m?o(...m):o()}catch(O){Kr(O,l,h)}return C}function Vt(o,l,h,m){if(u.isFunction(o)){var C=Dt(o,l,h,m);return C&&u.isPromise(C)&&C.catch(Y=>{Kr(Y,l,h)}),C}for(var O=[],M=0;M<o.length;M++)O.push(Vt(o[M],l,h,m));return O}function Kr(o,l,h){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0,C=l?l.vnode:null;if(l){for(var O=l.parent,M=l.proxy,Y=gn[h]||h;O;){var H=O.ec;if(H){for(var te=0;te<H.length;te++)if(H[te](o,M,Y)===!1)return}O=O.parent}var Ne=l.appContext.config.errorHandler;if(Ne){Dt(Ne,null,10,[o,M,Y]);return}}ii(o,h,C,m)}function ii(o,l,h){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0;{var C=gn[l]||l;if(h&&rn(h),le("Unhandled error".concat(C?" during execution of ".concat(C):"")),h&&A(),m)throw o;console.error(o)}}var Rr=!1,yn=!1,Wt=[],cn=0,In=[],Wn=null,lr=0,Vn=[],Be=null,at=0,_t=Promise.resolve(),Xt=null,un=null,dn=100;function _r(o){var l=Xt||_t;return o?l.then(this?o.bind(this):o):l}function Or(o){for(var l=cn+1,h=Wt.length;l<h;){var m=l+h>>>1,C=gi(Wt[m]);C<o?l=m+1:h=m}return l}function xi(o){(!Wt.length||!Wt.includes(o,Rr&&o.allowRecurse?cn+1:cn))&&o!==un&&(o.id==null?Wt.push(o):Wt.splice(Or(o.id),0,o),Bi())}function Bi(){!Rr&&!yn&&(yn=!0,Xt=_t.then(Xi))}function cr(o){var l=Wt.indexOf(o);l>cn&&Wt.splice(l,1)}function Ki(o,l,h,m){u.isArray(o)?h.push(...o):(!l||!l.includes(o,o.allowRecurse?m+1:m))&&h.push(o),Bi()}function Ho(o){Ki(o,Wn,In,lr)}function Mi(o){Ki(o,Be,Vn,at)}function Ji(o){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(In.length){for(un=l,Wn=[...new Set(In)],In.length=0,o=o||new Map,lr=0;lr<Wn.length;lr++)jr(o,Wn[lr])||Wn[lr]();Wn=null,lr=0,un=null,Ji(o,l)}}function Zi(o){if(Ji(),Vn.length){var l=[...new Set(Vn)];if(Vn.length=0,Be){Be.push(...l);return}for(Be=l,o=o||new Map,Be.sort((h,m)=>gi(h)-gi(m)),at=0;at<Be.length;at++)jr(o,Be[at])||Be[at]();Be=null,at=0}}var gi=o=>o.id==null?1/0:o.id;function Xi(o){yn=!1,Rr=!0,o=o||new Map,Ji(o),Wt.sort((m,C)=>gi(m)-gi(C));var l=m=>jr(o,m);try{for(cn=0;cn<Wt.length;cn++){var h=Wt[cn];if(h&&h.active!==!1){if(l(h))continue;Dt(h,null,14)}}}finally{cn=0,Wt.length=0,Zi(o),Rr=!1,Xt=null,(Wt.length||In.length||Vn.length)&&Xi(o)}}function jr(o,l){if(!o.has(l))o.set(l,1);else{var h=o.get(l);if(h>dn){var m=l.ownerInstance,C=m&&Fs(m.type);return le("Maximum recursive updates exceeded".concat(C?" in component <".concat(C,">"):"",". ")+"This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function."),!0}else o.set(l,h+1)}}var zr=!1,ur=new Set;u.getGlobalThis().__VUE_HMR_RUNTIME__={createRecord:fr(Po),rerender:fr(Qn),reload:fr(vi)};var xr=new Map;function Qi(o){var l=o.type.__hmrId,h=xr.get(l);h||(Po(l,o.type),h=xr.get(l)),h.instances.add(o)}function To(o){xr.get(o.type.__hmrId).instances.delete(o)}function Po(o,l){return xr.has(o)?!1:(xr.set(o,{initialDef:oi(l),instances:new Set}),!0)}function oi(o){return Ls(o)?o.__vccOpts:o}function Qn(o,l){var h=xr.get(o);!h||(h.initialDef.render=l,[...h.instances].forEach(m=>{l&&(m.render=l,oi(m.type).render=l),m.renderCache=[],zr=!0,m.update(),zr=!1}))}function vi(o,l){var h=xr.get(o);if(!!h){l=oi(l),ai(h.initialDef,l);var m=[...h.instances];for(var C of m){var O=oi(C.type);ur.has(O)||(O!==h.initialDef&&ai(O,l),ur.add(O)),C.appContext.optionsCache.delete(C.type),C.ceReload?(ur.add(O),C.ceReload(l.styles),ur.delete(O)):C.parent?(xi(C.parent.update),C.parent.type.__asyncLoader&&C.parent.ceReload&&C.parent.ceReload(l.styles)):C.appContext.reload?C.appContext.reload():typeof window!="undefined"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required.")}Mi(()=>{for(var M of m)ur.delete(oi(M.type))})}}function ai(o,l){u.extend(o,l);for(var h in o)h!=="__file"&&!(h in l)&&delete o[h]}function fr(o){return(l,h)=>{try{return o(l,h)}catch(m){console.error(m),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}k.devtools=void 0;var mi=[],_i=!1;function bi(o){for(var l=arguments.length,h=new Array(l>1?l-1:0),m=1;m<l;m++)h[m-1]=arguments[m];k.devtools?k.devtools.emit(o,...h):_i||mi.push({event:o,args:h})}function Tr(o,l){var h,m;if(k.devtools=o,k.devtools)k.devtools.enabled=!0,mi.forEach(O=>{var{event:M,args:Y}=O;return k.devtools.emit(M,...Y)}),mi=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((m=(h=window.navigator)===null||h===void 0?void 0:h.userAgent)===null||m===void 0?void 0:m.includes("jsdom"))){var C=l.__VUE_DEVTOOLS_HOOK_REPLAY__=l.__VUE_DEVTOOLS_HOOK_REPLAY__||[];C.push(O=>{Tr(O,l)}),setTimeout(()=>{k.devtools||(l.__VUE_DEVTOOLS_HOOK_REPLAY__=null,_i=!0,mi=[])},3e3)}else _i=!0,mi=[]}function Br(o,l){bi("app:init",o,l,{Fragment:Ut,Text:Ht,Comment:Jt,Static:on})}function Jr(o){bi("app:unmount",o)}var Zr=to("component:added"),er=to("component:updated"),eo=to("component:removed");function to(o){return l=>{bi(o,l.appContext.app,l.uid,l.parent?l.parent.uid:void 0,l)}}var go=Io("perf:start"),yi=Io("perf:end");function Io(o){return(l,h,m)=>{bi(o,l.appContext.app,l.uid,l,h,m)}}function jo(o,l,h){bi("component:emit",o.appContext.app,o,l,h)}function ba(o,l){if(!o.isUnmounted){for(var h=o.vnode.props||u.EMPTY_OBJ,m=arguments.length,C=new Array(m>2?m-2:0),O=2;O<m;O++)C[O-2]=arguments[O];{var{emitsOptions:M,propsOptions:[Y]}=o;if(M)if(!(l in M))(!Y||!(u.toHandlerKey(l)in Y))&&le('Component emitted event "'.concat(l,'" but it is neither declared in ')+'the emits option nor as an "'.concat(u.toHandlerKey(l),'" prop.'));else{var H=M[l];if(u.isFunction(H)){var te=H(...C);te||le('Invalid event arguments: event validation failed for event "'.concat(l,'".'))}}}var Ne=C,pe=l.startsWith("update:"),ce=pe&&l.slice(7);if(ce&&ce in h){var Fe="".concat(ce==="modelValue"?"model":ce,"Modifiers"),{number:Ye,trim:ut}=h[Fe]||u.EMPTY_OBJ;ut&&(Ne=C.map(nt=>nt.trim())),Ye&&(Ne=C.map(u.toNumber))}jo(o,l,Ne);{var vt=l.toLowerCase();vt!==l&&h[u.toHandlerKey(vt)]&&le('Event "'.concat(vt,'" is emitted in component ')+"".concat(Ra(o,o.type),' but the handler is registered for "').concat(l,'". ')+"Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. "+'You should probably use "'.concat(u.hyphenate(l),'" instead of "').concat(l,'".'))}var we,fe=h[we=u.toHandlerKey(l)]||h[we=u.toHandlerKey(u.camelize(l))];!fe&&pe&&(fe=h[we=u.toHandlerKey(u.hyphenate(l))]),fe&&Vt(fe,o,6,Ne);var Ce=h[we+"Once"];if(Ce){if(!o.emitted)o.emitted={};else if(o.emitted[we])return;o.emitted[we]=!0,Vt(Ce,o,6,Ne)}}}function zo(o,l){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=l.emitsCache,C=m.get(o);if(C!==void 0)return C;var O=o.emits,M={},Y=!1;if(!u.isFunction(o)){var H=te=>{var Ne=zo(te,l,!0);Ne&&(Y=!0,u.extend(M,Ne))};!h&&l.mixins.length&&l.mixins.forEach(H),o.extends&&H(o.extends),o.mixins&&o.mixins.forEach(H)}return!O&&!Y?(m.set(o,null),null):(u.isArray(O)?O.forEach(te=>M[te]=null):u.extend(M,O),m.set(o,M),M)}function no(o,l){return!o||!u.isOn(l)?!1:(l=l.slice(2).replace(/Once$/,""),u.hasOwn(o,l[0].toLowerCase()+l.slice(1))||u.hasOwn(o,u.hyphenate(l))||u.hasOwn(o,l))}var Cn=null,An=null;function Nn(o){var l=Cn;return Cn=o,An=o&&o.type.__scopeId||null,l}function dr(o){An=o}function No(){An=null}var Mt=o=>ke;function ke(o){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Cn;if(!l||o._n)return o;var h=function(){h._d&&Oi(-1);var m=Nn(l),C=o(...arguments);return Nn(m),h._d&&Oi(1),er(l),C};return h._n=!0,h._c=!0,h._d=!0,h}var ro=!1;function si(){ro=!0}function Di(o){var{type:l,vnode:h,proxy:m,withProxy:C,props:O,propsOptions:[M],slots:Y,attrs:H,emit:te,render:Ne,renderCache:pe,data:ce,setupState:Fe,ctx:Ye,inheritAttrs:ut}=o,vt,we,fe=Nn(o);ro=!1;try{if(h.shapeFlag&4){var Ce=C||m;vt=ji(Ne.call(Ce,Ce,pe,O,Fe,ce,Ye)),we=H}else{var nt=l;H===O&&si(),vt=ji(nt.length>1?nt(O,{get attrs(){return si(),H},slots:Y,emit:te}):nt(O,null)),we=l.props?H:Xr(H)}}catch(K){gr.length=0,Kr(K,o,1),vt=Tn(Jt)}var We=vt,i=void 0;if(vt.patchFlag>0&&vt.patchFlag&2048&&([We,i]=io(vt)),we&&ut!==!1){var a=Object.keys(we),{shapeFlag:f}=We;if(a.length){if(f&(1|6))M&&a.some(u.isModelListener)&&(we=ta(we,M)),We=Ti(We,we);else if(!ro&&We.type!==Jt){for(var p=Object.keys(H),w=[],E=[],I=0,D=p.length;I<D;I++){var x=p[I];u.isOn(x)?u.isModelListener(x)||w.push(x[2].toLowerCase()+x.slice(3)):E.push(x)}E.length&&le("Extraneous non-props attributes ("+"".concat(E.join(", "),") ")+"were passed to component but could not be automatically inherited because component renders fragment or text root nodes."),w.length&&le("Extraneous non-emits event listeners ("+"".concat(w.join(", "),") ")+'were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the "emits" option.')}}}return h.dirs&&(ko(We)||le("Runtime directive used on component with non-element root node. The directives will not function as intended."),We=Ti(We),We.dirs=We.dirs?We.dirs.concat(h.dirs):h.dirs),h.transition&&(ko(We)||le("Component inside <Transition> renders non-element root node that cannot be animated."),We.transition=h.transition),i?i(We):vt=We,Nn(fe),vt}var io=o=>{var l=o.children,h=o.dynamicChildren,m=Fi(l);if(!m)return[o,void 0];var C=l.indexOf(m),O=h?h.indexOf(m):-1,M=Y=>{l[C]=Y,h&&(O>-1?h[O]=Y:Y.patchFlag>0&&(o.dynamicChildren=[...h,Y]))};return[ji(m),M]};function Fi(o){for(var l,h=0;h<o.length;h++){var m=o[h];if(Lo(m)){if(m.type!==Jt||m.children==="v-if"){if(l)return;l=m}}else return}return l}var Xr=o=>{var l;for(var h in o)(h==="class"||h==="style"||u.isOn(h))&&((l||(l={}))[h]=o[h]);return l},ta=(o,l)=>{var h={};for(var m in o)(!u.isModelListener(m)||!(m.slice(9)in l))&&(h[m]=o[m]);return h},ko=o=>o.shapeFlag&(6|1)||o.type===Jt;function Qt(o,l,h){var{props:m,children:C,component:O}=o,{props:M,children:Y,patchFlag:H}=l,te=O.emitsOptions;if((C||Y)&&zr||l.dirs||l.transition)return!0;if(h&&H>=0){if(H&1024)return!0;if(H&16)return m?ya(m,M,te):!!M;if(H&8)for(var Ne=l.dynamicProps,pe=0;pe<Ne.length;pe++){var ce=Ne[pe];if(M[ce]!==m[ce]&&!no(te,ce))return!0}}else return(C||Y)&&(!Y||!Y.$stable)?!0:m===M?!1:m?M?ya(m,M,te):!0:!!M;return!1}function ya(o,l,h){var m=Object.keys(l);if(m.length!==Object.keys(o).length)return!0;for(var C=0;C<m.length;C++){var O=m[C];if(l[O]!==o[O]&&!no(h,O))return!0}return!1}function Li(o,l){for(var{vnode:h,parent:m}=o;m&&m.subTree===h;)(h=m.vnode).el=l,m=m.parent}var hn=o=>o.__isSuspense,Qr={name:"Suspense",__isSuspense:!0,process(o,l,h,m,C,O,M,Y,H,te){o==null?Ro(l,h,m,C,O,M,Y,H,te):La(o,l,h,m,C,M,Y,H,te)},hydrate:ra,create:Wo,normalize:Ea},Vi=Qr;function qn(o,l){var h=o.props&&o.props[l];u.isFunction(h)&&h()}function Ro(o,l,h,m,C,O,M,Y,H){var{p:te,o:{createElement:Ne}}=H,pe=Ne("div"),ce=o.suspense=Wo(o,C,m,l,pe,h,O,M,Y,H);te(null,ce.pendingBranch=o.ssContent,pe,null,m,ce,O,M),ce.deps>0?(qn(o,"onPending"),qn(o,"onFallback"),te(null,o.ssFallback,l,h,m,null,O,M),xn(ce,o.ssFallback)):ce.resolve()}function La(o,l,h,m,C,O,M,Y,H){var{p:te,um:Ne,o:{createElement:pe}}=H,ce=l.suspense=o.suspense;ce.vnode=l,l.el=o.el;var Fe=l.ssContent,Ye=l.ssFallback,{activeBranch:ut,pendingBranch:vt,isInFallback:we,isHydrating:fe}=ce;if(vt)ce.pendingBranch=Fe,$r(Fe,vt)?(te(vt,Fe,ce.hiddenContainer,null,C,ce,O,M,Y),ce.deps<=0?ce.resolve():we&&(te(ut,Ye,h,m,C,null,O,M,Y),xn(ce,Ye))):(ce.pendingId++,fe?(ce.isHydrating=!1,ce.activeBranch=vt):Ne(vt,C,ce),ce.deps=0,ce.effects.length=0,ce.hiddenContainer=pe("div"),we?(te(null,Fe,ce.hiddenContainer,null,C,ce,O,M,Y),ce.deps<=0?ce.resolve():(te(ut,Ye,h,m,C,null,O,M,Y),xn(ce,Ye))):ut&&$r(Fe,ut)?(te(ut,Fe,h,m,C,ce,O,M,Y),ce.resolve(!0)):(te(null,Fe,ce.hiddenContainer,null,C,ce,O,M,Y),ce.deps<=0&&ce.resolve()));else if(ut&&$r(Fe,ut))te(ut,Fe,h,m,C,ce,O,M,Y),xn(ce,Fe);else if(qn(l,"onPending"),ce.pendingBranch=Fe,ce.pendingId++,te(null,Fe,ce.hiddenContainer,null,C,ce,O,M,Y),ce.deps<=0)ce.resolve();else{var{timeout:Ce,pendingId:nt}=ce;Ce>0?setTimeout(()=>{ce.pendingId===nt&&ce.fallback(Ye)},Ce):Ce===0&&ce.fallback(Ye)}}var na=!1;function Wo(o,l,h,m,C,O,M,Y,H,te){var Ne=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1;na||(na=!0,console[console.info?"info":"log"]("<Suspense> is an experimental feature and its API will likely change."));var{p:pe,m:ce,um:Fe,n:Ye,o:{parentNode:ut,remove:vt}}=te,we=u.toNumber(o.props&&o.props.timeout),fe={vnode:o,parent:l,parentComponent:h,isSVG:M,container:m,hiddenContainer:C,anchor:O,deps:0,pendingId:0,timeout:typeof we=="number"?we:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:Ne,isUnmounted:!1,effects:[],resolve(){var Ce=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;{if(!Ce&&!fe.pendingBranch)throw new Error("suspense.resolve() is called without a pending branch.");if(fe.isUnmounted)throw new Error("suspense.resolve() is called on an already unmounted suspense boundary.")}var{vnode:nt,activeBranch:We,pendingBranch:i,pendingId:a,effects:f,parentComponent:p,container:w}=fe;if(fe.isHydrating)fe.isHydrating=!1;else if(!Ce){var E=We&&i.transition&&i.transition.mode==="out-in";E&&(We.transition.afterLeave=()=>{a===fe.pendingId&&ce(i,w,I,0)});var{anchor:I}=fe;We&&(I=Ye(We),Fe(We,p,fe,!0)),E||ce(i,w,I,0)}xn(fe,i),fe.pendingBranch=null,fe.isInFallback=!1;for(var D=fe.parent,x=!1;D;){if(D.pendingBranch){D.effects.push(...f),x=!0;break}D=D.parent}x||Mi(f),fe.effects=[],qn(nt,"onResolve")},fallback(Ce){if(!!fe.pendingBranch){var{vnode:nt,activeBranch:We,parentComponent:i,container:a,isSVG:f}=fe;qn(nt,"onFallback");var p=Ye(We),w=()=>{!fe.isInFallback||(pe(null,Ce,a,p,i,null,f,Y,H),xn(fe,Ce))},E=Ce.transition&&Ce.transition.mode==="out-in";E&&(We.transition.afterLeave=w),fe.isInFallback=!0,Fe(We,i,null,!0),E||w()}},move(Ce,nt,We){fe.activeBranch&&ce(fe.activeBranch,Ce,nt,We),fe.container=Ce},next(){return fe.activeBranch&&Ye(fe.activeBranch)},registerDep(Ce,nt){var We=!!fe.pendingBranch;We&&fe.deps++;var i=Ce.vnode.el;Ce.asyncDep.catch(a=>{Kr(a,Ce,0)}).then(a=>{if(!(Ce.isUnmounted||fe.isUnmounted||fe.pendingId!==Ce.suspenseId)){Ce.asyncResolved=!0;var{vnode:f}=Ce;rn(f),Ds(Ce,a,!1),i&&(f.el=i);var p=!i&&Ce.subTree.el;nt(Ce,f,ut(i||Ce.subTree.el),i?null:Ye(Ce.subTree),fe,M,H),p&&vt(p),Li(Ce,f.el),A(),We&&--fe.deps===0&&fe.resolve()}})},unmount(Ce,nt){fe.isUnmounted=!0,fe.activeBranch&&Fe(fe.activeBranch,h,Ce,nt),fe.pendingBranch&&Fe(fe.pendingBranch,h,Ce,nt)}};return fe}function ra(o,l,h,m,C,O,M,Y,H){var te=l.suspense=Wo(l,m,h,o.parentNode,c.createElement("div"),null,C,O,M,Y,!0),Ne=H(o,te.pendingBranch=l.ssContent,h,te,O,M);return te.deps===0&&te.resolve(),Ne}function Ea(o){var{shapeFlag:l,children:h}=o,m=l&32;o.ssContent=Mr(m?h.default:h),o.ssFallback=m?Mr(h.fallback):Tn(Jt)}function Mr(o){var l;if(u.isFunction(o)){var h=ua&&o._c;h&&(o._d=!1,Zn()),o=o(),h&&(o._d=!0,l=Un,ca())}if(u.isArray(o)){var m=Fi(o);m||le("<Suspense> slots expect a single root node."),o=m}return o=ji(o),l&&!o.dynamicChildren&&(o.dynamicChildren=l.filter(C=>C!==o)),o}function Dr(o,l){l&&l.pendingBranch?u.isArray(o)?l.effects.push(...o):l.effects.push(o):Mi(o)}function xn(o,l){o.activeBranch=l;var{vnode:h,parentComponent:m}=o,C=h.el=l.el;m&&m.subTree===h&&(m.vnode.el=C,Li(m,C))}function hr(o,l){if(!ar)le("provide() can only be used inside setup().");else{var h=ar.provides,m=ar.parent&&ar.parent.provides;m===h&&(h=ar.provides=Object.create(m)),h[o]=l,ar.type.mpType==="app"&&ar.appContext.app.provide(o,l)}}function br(o,l){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=ar||Cn;if(m){var C=m.parent==null?m.vnode.appContext&&m.vnode.appContext.provides:m.parent.provides;if(C&&o in C)return C[o];if(arguments.length>1)return h&&u.isFunction(l)?l.call(m.proxy):l;le('injection "'.concat(String(o),'" not found.'))}else le("inject() can only be used inside setup() or functional components.")}function oo(o,l){return ei(o,null,l)}function Go(o,l){return ei(o,null,Object.assign(Object.assign({},l),{flush:"post"}))}function Va(o,l){return ei(o,null,Object.assign(Object.assign({},l),{flush:"sync"}))}var wa={};function ao(o,l,h){return u.isFunction(l)||le("`watch(fn, options?)` signature has been moved to a separate API. Use `watchEffect(fn, options?)` instead. `watch` now only supports `watch(source, cb, options?) signature."),ei(o,l,h)}function ei(o,l){var{immediate:h,deep:m,flush:C,onTrack:O,onTrigger:M}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:u.EMPTY_OBJ;l||(h!==void 0&&le('watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.'),m!==void 0&&le('watch() "deep" option is only respected when using the watch(source, callback, options?) signature.'));var Y=Ce=>{le("Invalid watch source: ",Ce,"A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.")},H=ar,te,Ne=!1,pe=!1;if(P.isRef(o)?(te=()=>o.value,Ne=P.isShallow(o)):P.isReactive(o)?(te=()=>o,m=!0):u.isArray(o)?(pe=!0,Ne=o.some(Ce=>P.isReactive(Ce)||P.isShallow(Ce)),te=()=>o.map(Ce=>{if(P.isRef(Ce))return Ce.value;if(P.isReactive(Ce))return li(Ce);if(u.isFunction(Ce))return Dt(Ce,H,2);Y(Ce)})):u.isFunction(o)?l?te=()=>Dt(o,H,2):te=()=>{if(!(H&&H.isUnmounted))return Fe&&Fe(),Vt(o,H,3,[Ye])}:(te=u.NOOP,Y(o)),l&&m){var ce=te;te=()=>li(ce())}var Fe,Ye=Ce=>{Fe=fe.onStop=()=>{Dt(Ce,H,4)}};if(k.isInSSRComponentSetup)return Ye=u.NOOP,l?h&&Vt(l,H,3,[te(),pe?[]:void 0,Ye]):te(),u.NOOP;var ut=pe?[]:wa,vt=()=>{if(!!fe.active)if(l){var Ce=fe.run();(m||Ne||(pe?Ce.some((nt,We)=>u.hasChanged(nt,ut[We])):u.hasChanged(Ce,ut)))&&(Fe&&Fe(),Vt(l,H,3,[Ce,ut===wa?void 0:ut,Ye]),ut=Ce)}else fe.run()};vt.allowRecurse=!!l;var we;C==="sync"?we=vt:C==="post"?we=()=>pr(vt,H&&H.suspense):we=()=>Ho(vt);var fe=new P.ReactiveEffect(te,we);return fe.onTrack=O,fe.onTrigger=M,l?h?vt():ut=fe.run():C==="post"?pr(fe.run.bind(fe),H&&H.suspense):fe.run(),()=>{fe.stop(),H&&H.scope&&u.remove(H.scope.effects,fe)}}function $i(o,l,h){var m=this.proxy,C=u.isString(o)?o.includes(".")?Yo(m,o):()=>m[o]:o.bind(m,m),O;u.isFunction(l)?O=l:(O=l.handler,h=l);var M=ar;Pi(this);var Y=ei(C,O.bind(m),h);return M?Pi(M):hi(),Y}function Yo(o,l){var h=l.split(".");return()=>{for(var m=o,C=0;C<h.length&&m;C++)m=m[h[C]];return m}}function li(o,l){if(!u.isObject(o)||o.__v_skip||(l=l||new Set,l.has(o)))return o;if(l.add(o),P.isRef(o))li(o.value,l);else if(u.isArray(o))for(var h=0;h<o.length;h++)li(o[h],l);else if(u.isSet(o)||u.isMap(o))o.forEach(C=>{li(C,l)});else if(u.isPlainObject(o))for(var m in o)li(o[m],l);return o}function Ei(){var o={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Sa(()=>{o.isMounted=!0}),Mo(()=>{o.isUnmounting=!0}),o}var tr=[Function,Array],Pr={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:tr,onEnter:tr,onAfterEnter:tr,onEnterCancelled:tr,onBeforeLeave:tr,onLeave:tr,onAfterLeave:tr,onLeaveCancelled:tr,onBeforeAppear:tr,onAppear:tr,onAfterAppear:tr,onAppearCancelled:tr},setup(o,l){var{slots:h}=l,m=Pn(),C=Ei(),O;return()=>{var M=h.default&&Z(h.default(),!0);if(!(!M||!M.length)){var Y=M[0];if(M.length>1){var H=!1;for(var te of M)if(te.type!==Jt){if(H){le("<transition> can only be used on a single element or component. Use <transition-group> for lists.");break}Y=te,H=!0}}var Ne=P.toRaw(o),{mode:pe}=Ne;if(pe&&pe!=="in-out"&&pe!=="out-in"&&pe!=="default"&&le("invalid <transition> mode: ".concat(pe)),C.isLeaving)return G(Y);var ce=V(Y);if(!ce)return G(Y);var Fe=ye(ce,Ne,C,m);J(ce,Fe);var Ye=m.subTree,ut=Ye&&V(Ye),vt=!1,{getTransitionKey:we}=ce.type;if(we){var fe=we();O===void 0?O=fe:fe!==O&&(O=fe,vt=!0)}if(ut&&ut.type!==Jt&&(!$r(ce,ut)||vt)){var Ce=ye(ut,Ne,C,m);if(J(ut,Ce),pe==="out-in")return C.isLeaving=!0,Ce.afterLeave=()=>{C.isLeaving=!1,m.update()},G(Y);pe==="in-out"&&ce.type!==Jt&&(Ce.delayLeave=(nt,We,i)=>{var a=ie(C,ut);a[String(ut.key)]=ut,nt._leaveCb=()=>{We(),nt._leaveCb=void 0,delete Fe.delayedLeave},Fe.delayedLeave=i})}return Y}}}},F=Pr;function ie(o,l){var{leavingVNodes:h}=o,m=h.get(l.type);return m||(m=Object.create(null),h.set(l.type,m)),m}function ye(o,l,h,m){var{appear:C,mode:O,persisted:M=!1,onBeforeEnter:Y,onEnter:H,onAfterEnter:te,onEnterCancelled:Ne,onBeforeLeave:pe,onLeave:ce,onAfterLeave:Fe,onLeaveCancelled:Ye,onBeforeAppear:ut,onAppear:vt,onAfterAppear:we,onAppearCancelled:fe}=l,Ce=String(o.key),nt=ie(h,o),We=(f,p)=>{f&&Vt(f,m,9,p)},i=(f,p)=>{var w=p[1];We(f,p),u.isArray(f)?f.every(E=>E.length<=1)&&w():f.length<=1&&w()},a={mode:O,persisted:M,beforeEnter(f){var p=Y;if(!h.isMounted)if(C)p=ut||Y;else return;f._leaveCb&&f._leaveCb(!0);var w=nt[Ce];w&&$r(o,w)&&w.el._leaveCb&&w.el._leaveCb(),We(p,[f])},enter(f){var p=H,w=te,E=Ne;if(!h.isMounted)if(C)p=vt||H,w=we||te,E=fe||Ne;else return;var I=!1,D=f._enterCb=x=>{I||(I=!0,x?We(E,[f]):We(w,[f]),a.delayedLeave&&a.delayedLeave(),f._enterCb=void 0)};p?i(p,[f,D]):D()},leave(f,p){var w=String(o.key);if(f._enterCb&&f._enterCb(!0),h.isUnmounting)return p();We(pe,[f]);var E=!1,I=f._leaveCb=D=>{E||(E=!0,p(),D?We(Ye,[f]):We(Fe,[f]),f._leaveCb=void 0,nt[w]===o&&delete nt[w])};nt[w]=o,ce?i(ce,[f,I]):I()},clone(f){return ye(f,l,h,m)}};return a}function G(o){if(yr(o))return o=Ti(o),o.children=null,o}function V(o){return yr(o)?o.children?o.children[0]:void 0:o}function J(o,l){o.shapeFlag&6&&o.component?J(o.component.subTree,l):o.shapeFlag&128?(o.ssContent.transition=l.clone(o.ssContent),o.ssFallback.transition=l.clone(o.ssFallback)):o.transition=l}function Z(o){for(var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,h=arguments.length>2?arguments[2]:void 0,m=[],C=0,O=0;O<o.length;O++){var M=o[O],Y=h==null?M.key:String(h)+String(M.key!=null?M.key:O);M.type===Ut?(M.patchFlag&128&&C++,m=m.concat(Z(M.children,l,Y))):(l||M.type!==Jt)&&m.push(Y!=null?Ti(M,{key:Y}):M)}if(C>1)for(var H=0;H<m.length;H++)m[H].patchFlag=-2;return m}function ge(o){return u.isFunction(o)?{setup:o,name:o.name}:o}var zt=o=>!!o.type.__asyncLoader;function On(o){u.isFunction(o)&&(o={loader:o});var{loader:l,loadingComponent:h,errorComponent:m,delay:C=200,timeout:O,suspensible:M=!0,onError:Y}=o,H=null,te,Ne=0,pe=()=>(Ne++,H=null,ce()),ce=()=>{var Fe;return H||(Fe=H=l().catch(Ye=>{if(Ye=Ye instanceof Error?Ye:new Error(String(Ye)),Y)return new Promise((ut,vt)=>{var we=()=>ut(pe()),fe=()=>vt(Ye);Y(Ye,we,fe,Ne+1)});throw Ye}).then(Ye=>{if(Fe!==H&&H)return H;if(Ye||le("Async component loader resolved to undefined. If you are using retry(), make sure to return its return value."),Ye&&(Ye.__esModule||Ye[Symbol.toStringTag]==="Module")&&(Ye=Ye.default),Ye&&!u.isObject(Ye)&&!u.isFunction(Ye))throw new Error("Invalid async component load result: ".concat(Ye));return te=Ye,Ye}))};return ge({name:"AsyncComponentWrapper",__asyncLoader:ce,get __asyncResolved(){return te},setup(){var Fe=ar;if(te)return()=>En(te,Fe);var Ye=fe=>{H=null,Kr(fe,Fe,13,!m)};if(M&&Fe.suspense||k.isInSSRComponentSetup)return ce().then(fe=>()=>En(fe,Fe)).catch(fe=>(Ye(fe),()=>m?Tn(m,{error:fe}):null));var ut=P.ref(!1),vt=P.ref(),we=P.ref(!!C);return C&&setTimeout(()=>{we.value=!1},C),O!=null&&setTimeout(()=>{if(!ut.value&&!vt.value){var fe=new Error("Async component timed out after ".concat(O,"ms."));Ye(fe),vt.value=fe}},O),ce().then(()=>{ut.value=!0,Fe.parent&&yr(Fe.parent.vnode)&&xi(Fe.parent.update)}).catch(fe=>{Ye(fe),vt.value=fe}),()=>{if(ut.value&&te)return En(te,Fe);if(vt.value&&m)return Tn(m,{error:vt.value});if(h&&!we.value)return Tn(h)}}})}function En(o,l){var{vnode:{ref:h,props:m,children:C,shapeFlag:O},parent:M}=l,Y=Tn(o,m,C);return Y.ref=h,Y}var yr=o=>o.type.__isKeepAlive,Kn={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(o,l){var{slots:h}=l,m=Pn(),C=m.ctx;if(!C.renderer)return()=>{var Ce=h.default&&h.default();return Ce&&Ce.length===1?Ce[0]:Ce};var O=new Map,M=new Set,Y=null;m.__v_cache=O;var H=m.suspense,{renderer:{p:te,m:Ne,um:pe,o:{createElement:ce}}}=C,Fe=ce("div");C.activate=(Ce,nt,We,i,a)=>{var f=Ce.component;Ne(Ce,nt,We,0,H),te(f.vnode,Ce,nt,We,f,H,i,Ce.slotScopeIds,a),pr(()=>{f.isDeactivated=!1,f.a&&u.invokeArrayFns(f.a);var p=Ce.props&&Ce.props.onVnodeMounted;p&&Rn(p,f.parent,Ce)},H),Zr(f)},C.deactivate=Ce=>{var nt=Ce.component;Ne(Ce,Fe,null,1,H),pr(()=>{nt.da&&u.invokeArrayFns(nt.da);var We=Ce.props&&Ce.props.onVnodeUnmounted;We&&Rn(We,nt.parent,Ce),nt.isDeactivated=!0},H),Zr(nt)};function Ye(Ce){_s(Ce),pe(Ce,m,H,!0)}function ut(Ce){O.forEach((nt,We)=>{var i=Fs(nt.type);i&&(!Ce||!Ce(i))&&vt(We)})}function vt(Ce){var nt=O.get(Ce);!Y||nt.type!==Y.type?Ye(nt):Y&&_s(Y),O.delete(Ce),M.delete(Ce)}ao(()=>[o.include,o.exclude],Ce=>{var[nt,We]=Ce;nt&&ut(i=>xo(nt,i)),We&&ut(i=>!xo(We,i))},{flush:"post",deep:!0});var we=null,fe=()=>{we!=null&&O.set(we,oa(m.subTree))};return Sa(fe),Fr(fe),Mo(()=>{O.forEach(Ce=>{var{subTree:nt,suspense:We}=m,i=oa(nt);if(Ce.type===i.type){_s(i);var a=i.component.da;a&&pr(a,We);return}Ye(Ce)})}),()=>{if(we=null,!h.default)return null;var Ce=h.default(),nt=Ce[0];if(Ce.length>1)return le("KeepAlive should contain exactly one component child."),Y=null,Ce;if(!Lo(nt)||!(nt.shapeFlag&4)&&!(nt.shapeFlag&128))return Y=null,nt;var We=oa(nt),i=We.type,a=Fs(zt(We)?We.type.__asyncResolved||{}:i),{include:f,exclude:p,max:w}=o;if(f&&(!a||!xo(f,a))||p&&a&&xo(p,a))return Y=We,nt;var E=We.key==null?i:We.key,I=O.get(E);return We.el&&(We=Ti(We),nt.shapeFlag&128&&(nt.ssContent=We)),we=E,I?(We.el=I.el,We.component=I.component,We.transition&&J(We,We.transition),We.shapeFlag|=512,M.delete(E),M.add(E)):(M.add(E),w&&M.size>parseInt(w,10)&&vt(M.values().next().value)),We.shapeFlag|=256,Y=We,hn(nt.type)?nt:We}}},$a=Kn;function xo(o,l){return u.isArray(o)?o.some(h=>xo(h,l)):u.isString(o)?o.split(",").includes(l):o.test?o.test(l):!1}function Bo(o,l){Ua(o,"a",l)}function ia(o,l){Ua(o,"da",l)}function Ua(o,l){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:ar,m=o.__wdc||(o.__wdc=()=>{for(var O=h;O;){if(O.isDeactivated)return;O=O.parent}return o()});if(qo(l,m,h),h)for(var C=h.parent;C&&C.parent;)yr(C.parent.vnode)&&Ha(m,l,h,C),C=C.parent}function Ha(o,l,h,m){var C=qo(l,o,m,!0);aa(()=>{u.remove(m[l],C)},h)}function _s(o){var l=o.shapeFlag;l&256&&(l-=256),l&512&&(l-=512),o.shapeFlag=l}function oa(o){return o.shapeFlag&128?o.ssContent:o}function qo(o,l){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:ar,m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(h){if(ze.isRootHook(o)&&h!==h.root&&(h=h.root,ze.isRootImmediateHook(o))){var C=h.proxy;Vt(l.bind(C),h,o,ze.ON_LOAD===o?[C.$page.options]:[])}var O=h[o]||(h[o]=[]),M=l.__weh||(l.__weh=function(){if(!h.isUnmounted){P.pauseTracking(),Pi(h);for(var H=arguments.length,te=new Array(H),Ne=0;Ne<H;Ne++)te[Ne]=arguments[Ne];var pe=Vt(l,h,o,te);return hi(),P.resetTracking(),pe}});return m?O.unshift(M):O.push(M),M}else{var Y=u.toHandlerKey((gn[o]||o.replace(/^on/,"")).replace(/ hook$/,""));le("".concat(Y," is called when there is no active component instance to be ")+"associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.")}}var ci=o=>function(l){var h=arguments.length>1&&arguments[1]!==void 0?arguments[1]:ar;return(!k.isInSSRComponentSetup||o==="sp")&&qo(o,l,h)},wi=ci("bm"),Sa=ci("m"),nr=ci("bu"),Fr=ci("u"),Mo=ci("bum"),aa=ci("um"),Lr=ci("sp"),bs=ci("rtg"),ys=ci("rtc");function Es(o){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:ar;qo("ec",o,l)}function ws(o){u.isBuiltInDirective(o)&&le("Do not use built-in directive ids as custom directive id: "+o)}function il(o,l){var h=Cn;if(h===null)return le("withDirectives can only be used inside render functions."),o;for(var m=ls(h)||h.proxy,C=o.dirs||(o.dirs=[]),O=0;O<l.length;O++){var[M,Y,H,te=u.EMPTY_OBJ]=l[O];u.isFunction(M)&&(M={mounted:M,updated:M}),M.deep&&li(Y),C.push({dir:M,instance:m,value:Y,oldValue:void 0,arg:H,modifiers:te})}return o}function ti(o,l,h,m){for(var C=o.dirs,O=l&&l.dirs,M=0;M<C.length;M++){var Y=C[M];O&&(Y.oldValue=O[M].value);var H=Y.dir[m];H&&(P.pauseTracking(),Vt(H,h,8,[o.el,Y,o,l]),P.resetTracking())}}var Si="components",Gn="directives";function Tl(o,l){return Ss(Si,o,!0,l)||o}var ja=Symbol();function vo(o){return u.isString(o)?Ss(Si,o,!1)||o:o||ja}function ol(o){return Ss(Gn,o)}function Ss(o,l){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,C=Cn||ar;if(C){var O=C.type;if(o===Si){var M=Fs(O,!1);if(M&&(M===l||M===u.camelize(l)||M===u.capitalize(u.camelize(l))))return O}var Y=mo(C[o]||O[o],l)||mo(C.appContext[o],l);if(!Y&&m)return O;if(h&&!Y){var H=o===Si?`
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.`:"";le("Failed to resolve ".concat(o.slice(0,-1),": ").concat(l).concat(H))}return Y}else le("resolve".concat(u.capitalize(o.slice(0,-1))," ")+"can only be used in render() or setup().")}function mo(o,l){return o&&(o[l]||o[u.camelize(l)]||o[u.capitalize(u.camelize(l))])}function Cs(o,l,h,m){var C,O=h&&h[m];if(u.isArray(o)||u.isString(o)){C=new Array(o.length);for(var M=0,Y=o.length;M<Y;M++)C[M]=l(o[M],M,void 0,O&&O[M])}else if(typeof o=="number"){Number.isInteger(o)||le("The v-for range expect an integer value but got ".concat(o,".")),C=new Array(o);for(var H=0;H<o;H++)C[H]=l(H+1,H,void 0,O&&O[H])}else if(u.isObject(o))if(o[Symbol.iterator])C=Array.from(o,(Fe,Ye)=>l(Fe,Ye,void 0,O&&O[Ye]));else{var te=Object.keys(o);C=new Array(te.length);for(var Ne=0,pe=te.length;Ne<pe;Ne++){var ce=te[Ne];C[Ne]=l(o[ce],ce,Ne,O&&O[Ne])}}else C=[];return h&&(h[m]=C),C}function Ca(o,l){for(var h=0;h<l.length;h++){var m=l[h];if(u.isArray(m))for(var C=0;C<m.length;C++)o[m[C].name]=m[C].fn;else m&&(o[m.name]=m.fn)}return o}function Do(o,l){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},m=arguments.length>3?arguments[3]:void 0,C=arguments.length>4?arguments[4]:void 0;if(Cn.isCE||Cn.parent&&zt(Cn.parent)&&Cn.parent.isCE)return Tn("slot",l==="default"?null:{name:l},m&&m());var O=o[l];O&&O.length>1&&(le("SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template."),O=()=>[]),O&&O._c&&(O._d=!1),Zn();var M=O&&As(O(h)),Y=Rs(Ut,{key:h.key||"_".concat(l)},M||(m?m():[]),M&&o._===1?64:-2);return!C&&Y.scopeId&&(Y.slotScopeIds=[Y.scopeId+"-s"]),O&&O._c&&(O._d=!0),Y}function As(o){return o.some(l=>Lo(l)?!(l.type===Jt||l.type===Ut&&!As(l.children)):!0)?o:null}function za(o){var l={};if(!u.isObject(o))return le("v-on with no argument expects an object value."),l;for(var h in o)l[u.toHandlerKey(h)]=o[h];return l}var Aa=o=>o?Ms(o)?ls(o)||o.proxy:Aa(o.parent):null,so=u.extend(Object.create(null),{$:o=>o,$el:o=>o.vnode.el,$data:o=>o.data,$props:o=>P.shallowReadonly(o.props),$attrs:o=>P.shallowReadonly(o.attrs),$slots:o=>P.shallowReadonly(o.slots),$refs:o=>P.shallowReadonly(o.refs),$parent:o=>Aa(o.parent),$root:o=>Aa(o.root),$emit:o=>o.emit,$options:o=>re(o),$forceUpdate:o=>o.f||(o.f=()=>xi(o.update)),$nextTick:o=>o.n||(o.n=_r.bind(o.proxy)),$watch:o=>$i.bind(o)}),_o=o=>o==="_"||o==="$",sa={get(o,l){var{_:h}=o,{ctx:m,setupState:C,data:O,props:M,accessCache:Y,type:H,appContext:te}=h;if(l==="__isVue")return!0;if(C!==u.EMPTY_OBJ&&C.__isScriptSetup&&u.hasOwn(C,l))return C[l];var Ne;if(l[0]!=="$"){var pe=Y[l];if(pe!==void 0)switch(pe){case 1:return C[l];case 2:return O[l];case 4:return m[l];case 3:return M[l]}else{if(C!==u.EMPTY_OBJ&&u.hasOwn(C,l))return Y[l]=1,C[l];if(O!==u.EMPTY_OBJ&&u.hasOwn(O,l))return Y[l]=2,O[l];if((Ne=h.propsOptions[0])&&u.hasOwn(Ne,l))return Y[l]=3,M[l];if(m!==u.EMPTY_OBJ&&u.hasOwn(m,l))return Y[l]=4,m[l];_&&(Y[l]=0)}}var ce=so[l],Fe,Ye;if(ce)return l==="$attrs"&&(P.track(h,"get",l),si()),ce(h);if((Fe=H.__cssModules)&&(Fe=Fe[l]))return Fe;if(m!==u.EMPTY_OBJ&&u.hasOwn(m,l))return Y[l]=4,m[l];if(Ye=te.config.globalProperties,u.hasOwn(Ye,l))return Ye[l];Cn&&(!u.isString(l)||l.indexOf("__v")!==0)&&(O!==u.EMPTY_OBJ&&_o(l[0])&&u.hasOwn(O,l)?le("Property ".concat(JSON.stringify(l)," must be accessed via $data because it starts with a reserved ")+'character ("$" or "_") and is not proxied on the render context.'):h===Cn&&le("Property ".concat(JSON.stringify(l)," was accessed during render ")+"but is not defined on instance."))},set(o,l,h){var{_:m}=o,{data:C,setupState:O,ctx:M}=m;return O!==u.EMPTY_OBJ&&u.hasOwn(O,l)?(O[l]=h,!0):C!==u.EMPTY_OBJ&&u.hasOwn(C,l)?(C[l]=h,!0):u.hasOwn(m.props,l)?(le('Attempting to mutate prop "'.concat(l,'". Props are readonly.'),m),!1):l[0]==="$"&&l.slice(1)in m?(le('Attempting to mutate public property "'.concat(l,'". ')+"Properties starting with $ are reserved and readonly.",m),!1):(l in m.appContext.config.globalProperties?Object.defineProperty(M,l,{enumerable:!0,configurable:!0,value:h}):M[l]=h,!0)},has(o,l){var{_:{data:h,setupState:m,accessCache:C,ctx:O,appContext:M,propsOptions:Y}}=o,H;return!!C[l]||h!==u.EMPTY_OBJ&&u.hasOwn(h,l)||m!==u.EMPTY_OBJ&&u.hasOwn(m,l)||(H=Y[0])&&u.hasOwn(H,l)||u.hasOwn(O,l)||u.hasOwn(so,l)||u.hasOwn(M.config.globalProperties,l)},defineProperty(o,l,h){return h.get!=null?o._.accessCache[l]=0:u.hasOwn(h,"value")&&this.set(o,l,h.value,null),Reflect.defineProperty(o,l,h)}};sa.ownKeys=o=>(le("Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead."),Reflect.ownKeys(o));var bo=u.extend({},sa,{get(o,l){if(l!==Symbol.unscopables)return sa.get(o,l,o)},has(o,l){var h=l[0]!=="_"&&!u.isGloballyWhitelisted(l);return!h&&sa.has(o,l)&&le("Property ".concat(JSON.stringify(l)," should not start with _ which is a reserved prefix for Vue internals.")),h}});function Os(o){var l={};return Object.defineProperty(l,"_",{configurable:!0,enumerable:!1,get:()=>o}),Object.keys(so).forEach(h=>{Object.defineProperty(l,h,{configurable:!0,enumerable:!1,get:()=>so[h](o),set:u.NOOP})}),l}function Pl(o){var{ctx:l,propsOptions:[h]}=o;h&&Object.keys(h).forEach(m=>{Object.defineProperty(l,m,{enumerable:!0,configurable:!0,get:()=>o.props[m],set:u.NOOP})})}function Ts(o){var{ctx:l,setupState:h}=o;Object.keys(P.toRaw(h)).forEach(m=>{if(!h.__isScriptSetup){if(_o(m[0])){le("setup() return property ".concat(JSON.stringify(m),' should not start with "$" or "_" ')+"which are reserved prefixes for Vue internals.");return}Object.defineProperty(l,m,{enumerable:!0,configurable:!0,get:()=>h[m],set:u.NOOP})}})}function al(){var o=Object.create(null);return(l,h)=>{o[h]?le("".concat(l,' property "').concat(h,'" is already defined in ').concat(o[h],".")):o[h]=l}}var _=!0;function L(o){var l=re(o),h=o.proxy,m=o.ctx;_=!1,l.beforeCreate&&z(l.beforeCreate,o,"bc");var{data:C,computed:O,methods:M,watch:Y,provide:H,inject:te,created:Ne,beforeMount:pe,mounted:ce,beforeUpdate:Fe,updated:Ye,activated:ut,deactivated:vt,beforeDestroy:we,beforeUnmount:fe,destroyed:Ce,unmounted:nt,render:We,renderTracked:i,renderTriggered:a,errorCaptured:f,serverPrefetch:p,expose:w,inheritAttrs:E,components:I,directives:D,filters:x}=l,K=al();{var[ue]=o.propsOptions;if(ue)for(var oe in ue)K("Props",oe)}if(te&&q(te,m,K,o.appContext.config.unwrapInjectedRef),M)for(var ne in M){var Ee=M[ne];u.isFunction(Ee)?(Object.defineProperty(m,ne,{value:Ee.bind(h),configurable:!0,enumerable:!0,writable:!0}),K("Methods",ne)):le('Method "'.concat(ne,'" has type "').concat(typeof Ee,'" in the component definition. ')+"Did you reference the function correctly?")}if(C&&function(){u.isFunction(C)||le("The data option must be a function. Plain object usage is no longer supported.");var Oe=C.call(h,h);if(u.isPromise(Oe)&&le("data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>."),!u.isObject(Oe))le("data() should return an object.");else{o.data=P.reactive(Oe);{var rt=function(Ge){K("Data",Ge),_o(Ge[0])||Object.defineProperty(m,Ge,{configurable:!0,enumerable:!0,get:()=>Oe[Ge],set:u.NOOP})};for(var st in Oe)rt(st)}}}(),_=!0,O){var He=function(Oe){var rt=O[Oe],st=u.isFunction(rt)?rt.bind(h,h):u.isFunction(rt.get)?rt.get.bind(h,h):u.NOOP;st===u.NOOP&&le('Computed property "'.concat(Oe,'" has no getter.'));var Ge=!u.isFunction(rt)&&u.isFunction(rt.set)?rt.set.bind(h):()=>{le('Write operation failed: computed property "'.concat(Oe,'" is readonly.'))},St=Bl({get:st,set:Ge});Object.defineProperty(m,Oe,{enumerable:!0,configurable:!0,get:()=>St.value,set:Ot=>St.value=Ot}),K("Computed",Oe)};for(var it in O)He(it)}if(Y)for(var dt in Y)Q(Y[dt],m,h,dt);if(H){var _e=u.isFunction(H)?H.call(h):H;Reflect.ownKeys(_e).forEach(Oe=>{hr(Oe,_e[Oe])})}Ne&&z(Ne,o,"c");function ae(Oe,rt){u.isArray(rt)?rt.forEach(st=>Oe(st.bind(h))):rt&&Oe(rt.bind(h))}if(ae(wi,pe),ae(Sa,ce),ae(nr,Fe),ae(Fr,Ye),ae(Bo,ut),ae(ia,vt),ae(Es,f),ae(ys,i),ae(bs,a),ae(Mo,fe),ae(aa,nt),ae(Lr,p),u.isArray(w))if(w.length){var ve=o.exposed||(o.exposed={});w.forEach(Oe=>{Object.defineProperty(ve,Oe,{get:()=>h[Oe],set:rt=>h[Oe]=rt})})}else o.exposed||(o.exposed={});We&&o.render===u.NOOP&&(o.render=We),E!=null&&(o.inheritAttrs=E),I&&(o.components=I),D&&(o.directives=D);var Ze=o.appContext.config.globalProperties.$applyOptions;Ze&&Ze(l,o,h)}function q(o,l){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:u.NOOP,m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;u.isArray(o)&&(o=Ae(o));var C=function(M){var Y=o[M],H=void 0;u.isObject(Y)?"default"in Y?H=br(Y.from||M,Y.default,!0):H=br(Y.from||M):H=br(Y),P.isRef(H)?m?Object.defineProperty(l,M,{enumerable:!0,configurable:!0,get:()=>H.value,set:te=>H.value=te}):(le('injected property "'.concat(M,'" is a ref and will be auto-unwrapped ')+"and no longer needs `.value` in the next minor release. To opt-in to the new behavior now, set `app.config.unwrapInjectedRef = true` (this config is temporary and will not be needed in the future.)"),l[M]=H):l[M]=H,h("Inject",M)};for(var O in o)C(O)}function z(o,l,h){Vt(u.isArray(o)?o.map(m=>m.bind(l.proxy)):o.bind(l.proxy),l,h)}function Q(o,l,h,m){var C=m.includes(".")?Yo(h,m):()=>h[m];if(u.isString(o)){var O=l[o];u.isFunction(O)?ao(C,O):le('Invalid watch handler specified by key "'.concat(o,'"'),O)}else if(u.isFunction(o))ao(C,o.bind(h));else if(u.isObject(o))if(u.isArray(o))o.forEach(Y=>Q(Y,l,h,m));else{var M=u.isFunction(o.handler)?o.handler.bind(h):l[o.handler];u.isFunction(M)?ao(C,M,o):le('Invalid watch handler specified by key "'.concat(o.handler,'"'),M)}else le('Invalid watch option: "'.concat(m,'"'),o)}function re(o){var l=o.type,{mixins:h,extends:m}=l,{mixins:C,optionsCache:O,config:{optionMergeStrategies:M}}=o.appContext,Y=O.get(l),H;return Y?H=Y:!C.length&&!h&&!m?H=l:(H={},C.length&&C.forEach(te=>he(H,te,M,!0)),he(H,l,M)),O.set(l,H),H}function he(o,l,h){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:C,extends:O}=l;O&&he(o,O,h,!0),C&&C.forEach(H=>he(o,H,h,!0));for(var M in l)if(m&&M==="expose")le('"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.');else{var Y=Se[M]||h&&h[M];o[M]=Y?Y(o[M],l[M]):l[M]}return o}var Se={data:Me,props:qe,emits:qe,methods:qe,computed:qe,beforeCreate:Ie,created:Ie,beforeMount:Ie,mounted:Ie,beforeUpdate:Ie,updated:Ie,beforeDestroy:Ie,beforeUnmount:Ie,destroyed:Ie,unmounted:Ie,activated:Ie,deactivated:Ie,errorCaptured:Ie,serverPrefetch:Ie,components:qe,directives:qe,watch:gt,provide:Me,inject:Ue};function Me(o,l){return l?o?function(){return u.extend(u.isFunction(o)?o.call(this,this):o,u.isFunction(l)?l.call(this,this):l)}:l:o}function Ue(o,l){return qe(Ae(o),Ae(l))}function Ae(o){if(u.isArray(o)){for(var l={},h=0;h<o.length;h++)l[o[h]]=o[h];return l}return o}function Ie(o,l){return o?[...new Set([].concat(o,l))]:l}function qe(o,l){return o?u.extend(u.extend(Object.create(null),o),l):l}function gt(o,l){if(!o)return l;if(!l)return o;var h=u.extend(Object.create(null),o);for(var m in l)h[m]=Ie(o[m],l[m]);return h}function Kt(o,l,h){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,C={},O={};u.def(O,ul,1),o.propsDefaults=Object.create(null),lt(o,l,C,O);for(var M in o.propsOptions[0])M in C||(C[M]=void 0);Mn(l||{},C,o),h?o.props=m?C:P.shallowReactive(C):o.type.props?o.props=C:o.props=O,o.attrs=O}function pt(o,l,h,m){var{props:C,attrs:O,vnode:{patchFlag:M}}=o,Y=P.toRaw(C),[H]=o.propsOptions,te=!1;if(!(o.type.__hmrId||o.parent&&o.parent.type.__hmrId)&&(m||M>0)&&!(M&16)){if(M&8)for(var Ne=o.vnode.dynamicProps,pe=0;pe<Ne.length;pe++){var ce=Ne[pe];if(!no(o.emitsOptions,ce)){var Fe=l[ce];if(H)if(u.hasOwn(O,ce))Fe!==O[ce]&&(O[ce]=Fe,te=!0);else{var Ye=u.camelize(ce);C[Ye]=It(H,Y,Ye,Fe,o,!1)}else Fe!==O[ce]&&(O[ce]=Fe,te=!0)}}}else{lt(o,l,C,O)&&(te=!0);var ut;for(var vt in Y)(!l||!u.hasOwn(l,vt)&&((ut=u.hyphenate(vt))===vt||!u.hasOwn(l,ut)))&&(H?h&&(h[vt]!==void 0||h[ut]!==void 0)&&(C[vt]=It(H,Y,vt,void 0,o,!0)):delete C[vt]);if(O!==Y)for(var we in O)(!l||!u.hasOwn(l,we)&&!0)&&(delete O[we],te=!0)}te&&P.trigger(o,"set","$attrs"),Mn(l||{},C,o)}function lt(o,l,h,m){var[C,O]=o.propsOptions,M=!1,Y;if(l){for(var H in l)if(!u.isReservedProp(H)){var te=l[H],Ne=void 0;C&&u.hasOwn(C,Ne=u.camelize(H))?!O||!O.includes(Ne)?h[Ne]=te:(Y||(Y={}))[Ne]=te:no(o.emitsOptions,H)||(!(H in m)||te!==m[H])&&(m[H]=te,M=!0)}}if(O)for(var pe=P.toRaw(h),ce=Y||u.EMPTY_OBJ,Fe=0;Fe<O.length;Fe++){var Ye=O[Fe];h[Ye]=It(C,pe,Ye,ce[Ye],o,!u.hasOwn(ce,Ye))}return M}function It(o,l,h,m,C,O){var M=o[h];if(M!=null){var Y=u.hasOwn(M,"default");if(Y&&m===void 0){var H=M.default;if(M.type!==Function&&u.isFunction(H)){var{propsDefaults:te}=C;h in te?m=te[h]:(Pi(C),m=te[h]=H.call(null,l),hi())}else m=H}M[0]&&(O&&!Y?m=!1:M[1]&&(m===""||m===u.hyphenate(h))&&(m=!0))}return m}function vn(o,l){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=l.propsCache,C=m.get(o);if(C)return C;var O=o.props,M={},Y=[],H=!1;if(!u.isFunction(o)){var te=Ce=>{H=!0;var[nt,We]=vn(Ce,l,!0);u.extend(M,nt),We&&Y.push(...We)};!h&&l.mixins.length&&l.mixins.forEach(te),o.extends&&te(o.extends),o.mixins&&o.mixins.forEach(te)}if(!O&&!H)return m.set(o,u.EMPTY_ARR),u.EMPTY_ARR;if(u.isArray(O))for(var Ne=0;Ne<O.length;Ne++){u.isString(O[Ne])||le("props must be strings when using array syntax.",O[Ne]);var pe=u.camelize(O[Ne]);wt(pe)&&(M[pe]=u.EMPTY_OBJ)}else if(O){u.isObject(O)||le("invalid props options",O);for(var ce in O){var Fe=u.camelize(ce);if(wt(Fe)){var Ye=O[ce],ut=M[Fe]=u.isArray(Ye)||u.isFunction(Ye)?{type:Ye}:Ye;if(ut){var vt=Bn(Boolean,ut.type),we=Bn(String,ut.type);ut[0]=vt>-1,ut[1]=we<0||vt<we,(vt>-1||u.hasOwn(ut,"default"))&&Y.push(Fe)}}}}var fe=[M,Y];return m.set(o,fe),fe}function wt(o){return o[0]!=="$"?!0:(le('Invalid prop name: "'.concat(o,'" is a reserved property.')),!1)}function ft(o){var l=o&&o.toString().match(/^\s*function (\w+)/);return l?l[1]:o===null?"null":""}function Lt(o,l){return ft(o)===ft(l)}function Bn(o,l){return u.isArray(l)?l.findIndex(h=>Lt(h,o)):u.isFunction(l)&&Lt(l,o)?0:-1}function Mn(o,l,h){var m=P.toRaw(l),C=h.propsOptions[0];for(var O in C){var M=C[O];M!=null&&Dn(O,m[O],M,!u.hasOwn(o,O)&&!u.hasOwn(o,u.hyphenate(O)))}}function Dn(o,l,h,m){var{type:C,required:O,validator:M}=h;if(O&&m){le('Missing required prop: "'+o+'"');return}if(!(l==null&&!h.required)){if(C!=null&&C!==!0){for(var Y=!1,H=u.isArray(C)?C:[C],te=[],Ne=0;Ne<H.length&&!Y;Ne++){var{valid:pe,expectedType:ce}=Gt(l,H[Ne]);te.push(ce||""),Y=pe}if(!Y){le(Jn(o,l,te));return}}M&&!M(l)&&le('Invalid prop: custom validator check failed for prop "'+o+'".')}}var $n=u.makeMap("String,Number,Boolean,Function,Symbol,BigInt");function Gt(o,l){var h,m=ft(l);if($n(m)){var C=typeof o;h=C===m.toLowerCase(),!h&&C==="object"&&(h=o instanceof l)}else m==="Object"?h=u.isObject(o):m==="Array"?h=u.isArray(o):m==="null"?h=o===null:h=o instanceof l;return{valid:h,expectedType:m}}function Jn(o,l,h){var m='Invalid prop: type check failed for prop "'.concat(o,'".')+" Expected ".concat(h.map(u.capitalize).join(" | ")),C=h[0],O=u.toRawType(l),M=Wa(l,C),Y=Wa(l,O);return h.length===1&&Ga(C)&&!Fo(C,O)&&(m+=" with value ".concat(M)),m+=", got ".concat(O," "),Ga(O)&&(m+="with value ".concat(Y,".")),m}function Wa(o,l){return l==="String"?'"'.concat(o,'"'):l==="Number"?"".concat(Number(o)):"".concat(o)}function Ga(o){var l=["string","number","boolean"];return l.some(h=>o.toLowerCase()===h)}function Fo(){for(var o=arguments.length,l=new Array(o),h=0;h<o;h++)l[h]=arguments[h];return l.some(m=>m.toLowerCase()==="boolean")}var Ya=o=>o[0]==="_"||o==="$stable",Ko=o=>u.isArray(o)?o.map(ji):[ji(o)],Ci=(o,l,h)=>{if(l._n)return l;var m=ke(function(){return ar&&le('Slot "'.concat(o,'" invoked outside of the render function: ')+"this will not track dependencies used in the slot. Invoke the slot function inside the render function instead."),Ko(l(...arguments))},h);return m._c=!1,m},Ps=(o,l,h)=>{var m=o._ctx;for(var C in o)if(!Ya(C)){var O=o[C];u.isFunction(O)?l[C]=Ci(C,O,m):O!=null&&function(){le('Non-function value encountered for slot "'.concat(C,'". ')+"Prefer function slots for better performance.");var M=Ko(O);l[C]=()=>M}()}},Er=(o,l)=>{yr(o.vnode)||le("Non-function value encountered for default slot. Prefer function slots for better performance.");var h=Ko(l);o.slots.default=()=>h},Oa=(o,l)=>{if(o.vnode.shapeFlag&32){var h=l._;h?(o.slots=P.toRaw(l),u.def(l,"_",h)):Ps(l,o.slots={})}else o.slots={},l&&Er(o,l);u.def(o.slots,ul,1)},sl=(o,l,h)=>{var{vnode:m,slots:C}=o,O=!0,M=u.EMPTY_OBJ;if(m.shapeFlag&32){var Y=l._;Y?zr?u.extend(C,l):h&&Y===1?O=!1:(u.extend(C,l),!h&&Y===1&&delete C._):(O=!l.$stable,Ps(l,C)),M=l}else l&&(Er(o,l),M={default:1});if(O)for(var H in C)!Ya(H)&&!(H in M)&&delete C[H]};function Is(){return{app:null,config:{isNativeTag:u.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var rs=0;function qa(o,l){return function(m){var C=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;u.isFunction(m)||(m=Object.assign({},m)),C!=null&&!u.isObject(C)&&(le("root props passed to app.mount() must be an object."),C=null);var O=Is(),M=new Set,Y=!1,H=O.app={_uid:rs++,_component:m,_props:C,_container:null,_context:O,_instance:null,version:Us,get config(){return O.config},set config(te){le("app.config cannot be replaced. Modify individual options instead.")},use(te){for(var Ne=arguments.length,pe=new Array(Ne>1?Ne-1:0),ce=1;ce<Ne;ce++)pe[ce-1]=arguments[ce];return M.has(te)?le("Plugin has already been applied to target app."):te&&u.isFunction(te.install)?(M.add(te),te.install(H,...pe)):u.isFunction(te)?(M.add(te),te(H,...pe)):le('A plugin must either be a function or an object with an "install" function.'),H},mixin(te){return O.mixins.includes(te)?le("Mixin has already been applied to target app"+(te.name?": ".concat(te.name):"")):O.mixins.push(te),H},component(te,Ne){return Il(te,O.config),Ne?(O.components[te]&&le('Component "'.concat(te,'" has already been registered in target app.')),O.components[te]=Ne,H):O.components[te]},directive(te,Ne){return ws(te),Ne?(O.directives[te]&&le('Directive "'.concat(te,'" has already been registered in target app.')),O.directives[te]=Ne,H):O.directives[te]},mount(te,Ne,pe){if(Y)le("App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. `const createMyApp = () => createApp(App)`");else{te.__vue_app__&&le("There is already an app instance mounted on the host container.\n If you want to mount another app on the same host container, you need to unmount the previous app by calling `app.unmount()` first.");var ce=Tn(m,C);return ce.appContext=O,O.reload=()=>{o(Ti(ce),te,pe)},Ne&&l?l(ce,te):o(ce,te,pe),Y=!0,H._container=te,te.__vue_app__=H,H._instance=ce.component,Br(H,Us),ls(ce.component)||ce.component.proxy}},unmount(){Y?(o(null,H._container),H._instance=null,Jr(H),delete H._container.__vue_app__):le("Cannot unmount an app that is not mounted.")},provide(te,Ne){return te in O.provides&&le('App already provides property with key "'.concat(String(te),'". ')+"It will be overwritten with the new value."),O.provides[te]=Ne,H}};return H}}function Jo(o,l,h,m){var C=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(u.isArray(o)){o.forEach((ut,vt)=>Jo(ut,l&&(u.isArray(l)?l[vt]:l),h,m,C));return}if(!(zt(m)&&!C)){var O=m.shapeFlag&4?ls(m.component)||m.component.proxy:m.el,M=C?null:O,{i:Y,r:H}=o;if(!Y){le("Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.");return}var te=l&&l.r,Ne=Y.refs===u.EMPTY_OBJ?Y.refs={}:Y.refs,pe=Y.setupState;if(te!=null&&te!==H&&(u.isString(te)?(Ne[te]=null,u.hasOwn(pe,te)&&(pe[te]=null)):P.isRef(te)&&(te.value=null)),u.isFunction(H))Dt(H,Y,12,[M,Ne]);else{var ce=u.isString(H),Fe=P.isRef(H);if(ce||Fe){var Ye=()=>{if(o.f){var ut=ce?Ne[H]:H.value;C?u.isArray(ut)&&u.remove(ut,O):u.isArray(ut)?ut.includes(O)||ut.push(O):ce?(Ne[H]=[O],u.hasOwn(pe,H)&&(pe[H]=Ne[H])):(H.value=[O],o.k&&(Ne[o.k]=H.value))}else ce?(Ne[H]=M,u.hasOwn(pe,H)&&(pe[H]=M)):Fe?(H.value=M,o.k&&(Ne[o.k]=M)):le("Invalid template ref type:",H,"(".concat(typeof H,")"))};M?(Ye.id=-1,pr(Ye,h)):Ye()}else le("Invalid template ref type:",H,"(".concat(typeof H,")"))}}}var Yn=!1,Ir=o=>/svg/.test(o.namespaceURI)&&o.tagName!=="foreignObject",Ui=o=>o.nodeType===8;function ni(o){var{mt:l,p:h,o:{patchProp:m,createText:C,nextSibling:O,parentNode:M,remove:Y,insert:H,createComment:te}}=o,Ne=(we,fe)=>{if(!fe.hasChildNodes()){le("Attempting to hydrate existing markup but container is empty. Performing full mount instead."),h(null,we,fe),Zi(),fe._vnode=we;return}Yn=!1,pe(fe.firstChild,we,null,null,null),Zi(),fe._vnode=we,Yn&&console.error("Hydration completed but contains mismatches.")},pe=function(we,fe,Ce,nt,We){var i=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,a=Ui(we)&&we.data==="[",f=()=>ut(we,fe,Ce,nt,We,a),{type:p,ref:w,shapeFlag:E,patchFlag:I}=fe,D=we.nodeType;fe.el=we,I===-2&&(i=!1,fe.dynamicChildren=null);var x=null;switch(p){case Ht:D!==3?fe.children===""?(H(fe.el=C(""),M(we),we),x=we):x=f():(we.data!==fe.children&&(Yn=!0,le("Hydration text mismatch:"+`
- Client: `.concat(JSON.stringify(we.data))+`
- Server: `.concat(JSON.stringify(fe.children))),we.data=fe.children),x=O(we));break;case Jt:D!==8||a?x=f():x=O(we);break;case on:if(D!==1&&D!==3)x=f();else{x=we;for(var K=!fe.children.length,ue=0;ue<fe.staticCount;ue++)K&&(fe.children+=x.nodeType===1?x.outerHTML:x.data),ue===fe.staticCount-1&&(fe.anchor=x),x=O(x);return x}break;case Ut:a?x=Ye(we,fe,Ce,nt,We,i):x=f();break;default:if(E&1)D!==1||fe.type.toLowerCase()!==we.tagName.toLowerCase()?x=f():x=ce(we,fe,Ce,nt,We,i);else if(E&6){fe.slotScopeIds=We;var oe=M(we);if(l(fe,oe,null,Ce,nt,Ir(oe),i),x=a?vt(we):O(we),x&&Ui(x)&&x.data==="teleport end"&&(x=O(x)),zt(fe)){var ne;a?(ne=Tn(Ut),ne.anchor=x?x.previousSibling:oe.lastChild):ne=we.nodeType===3?ss(""):Tn("div"),ne.el=we,fe.component.subTree=ne}}else E&64?D!==8?x=f():x=fe.type.hydrate(we,fe,Ce,nt,We,i,o,Fe):E&128?x=fe.type.hydrate(we,fe,Ce,nt,Ir(M(we)),We,i,o,pe):le("Invalid HostVNode type:",p,"(".concat(typeof p,")"))}return w!=null&&Jo(w,null,nt,fe),x},ce=(we,fe,Ce,nt,We,i)=>{i=i||!!fe.dynamicChildren;var{type:a,props:f,patchFlag:p,shapeFlag:w,dirs:E}=fe,I=a==="input"&&E||a==="option";{if(E&&ti(fe,null,Ce,"created"),f)if(I||!i||p&(16|32))for(var D in f)(I&&D.endsWith("value")||u.isOn(D)&&!u.isReservedProp(D))&&m(we,D,null,f[D],!1,void 0,Ce);else f.onClick&&m(we,"onClick",null,f.onClick,!1,void 0,Ce);var x;if((x=f&&f.onVnodeBeforeMount)&&Rn(x,Ce,fe),E&&ti(fe,null,Ce,"beforeMount"),((x=f&&f.onVnodeMounted)||E)&&Dr(()=>{x&&Rn(x,Ce,fe),E&&ti(fe,null,Ce,"mounted")},nt),w&16&&!(f&&(f.innerHTML||f.textContent)))for(var K=Fe(we.firstChild,fe,we,Ce,nt,We,i),ue=!1;K;){Yn=!0,ue||(le("Hydration children mismatch in <".concat(fe.type,">: ")+"server rendered element contains more child nodes than client vdom."),ue=!0);var oe=K;K=K.nextSibling,Y(oe)}else w&8&&we.textContent!==fe.children&&(Yn=!0,le("Hydration text content mismatch in <".concat(fe.type,`>:
`)+"- Client: ".concat(we.textContent,`
`)+"- Server: ".concat(fe.children)),we.textContent=fe.children)}return we.nextSibling},Fe=(we,fe,Ce,nt,We,i,a)=>{a=a||!!fe.dynamicChildren;for(var f=fe.children,p=f.length,w=!1,E=0;E<p;E++){var I=a?f[E]:f[E]=ji(f[E]);if(we)we=pe(we,I,nt,We,i,a);else{if(I.type===Ht&&!I.children)continue;Yn=!0,w||(le("Hydration children mismatch in <".concat(Ce.tagName.toLowerCase(),">: ")+"server rendered element contains fewer child nodes than client vdom."),w=!0),h(null,I,Ce,null,nt,We,Ir(Ce),i)}}return we},Ye=(we,fe,Ce,nt,We,i)=>{var{slotScopeIds:a}=fe;a&&(We=We?We.concat(a):a);var f=M(we),p=Fe(O(we),fe,f,Ce,nt,We,i);return p&&Ui(p)&&p.data==="]"?O(fe.anchor=p):(Yn=!0,H(fe.anchor=te("]"),f,p),p)},ut=(we,fe,Ce,nt,We,i)=>{if(Yn=!0,le(`Hydration node mismatch:
- Client vnode:`,fe.type,`
- Server rendered DOM:`,we,we.nodeType===3?"(text)":Ui(we)&&we.data==="["?"(start of fragment)":""),fe.el=null,i)for(var a=vt(we);;){var f=O(we);if(f&&f!==a)Y(f);else break}var p=O(we),w=M(we);return Y(we),h(null,fe,w,p,Ce,nt,Ir(w),We),p},vt=we=>{for(var fe=0;we;)if(we=O(we),we&&Ui(we)&&(we.data==="["&&fe++,we.data==="]")){if(fe===0)return O(we);fe--}return we};return[Ne,pe]}var Ta,Ai;function Vr(o,l){o.appContext.config.performance&&ui()&&Ai.mark("vue-".concat(l,"-").concat(o.uid)),go(o,l,ui()?Ai.now():Date.now())}function rr(o,l){if(o.appContext.config.performance&&ui()){var h="vue-".concat(l,"-").concat(o.uid),m=h+":end";Ai.mark(m),Ai.measure("<".concat(Ra(o,o.type),"> ").concat(l),h,m),Ai.clearMarks(h),Ai.clearMarks(m)}yi(o,l,ui()?Ai.now():Date.now())}function ui(){return Ta!==void 0||(typeof window!="undefined"&&window.performance?(Ta=!0,Ai=window.performance):Ta=!1),Ta}function la(){var o=[];if(o.length){var l=o.length>1;console.warn("Feature flag".concat(l?"s":""," ").concat(o.join(", ")," ").concat(l?"are":"is"," not explicitly defined. You are running the esm-bundler build of Vue, ")+`which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.

For more details, see https://link.vuejs.org/feature-flags.`)}}var pr=Dr;function wr(o){return ks(o)}function Ns(o){return ks(o,ni)}function ks(o,l){la();var h=u.getGlobalThis();h.__VUE__=!0,Tr(h.__VUE_DEVTOOLS_GLOBAL_HOOK__,h);var{insert:m,remove:C,patchProp:O,forcePatchProp:M,createElement:Y,createText:H,createComment:te,setText:Ne,setElementText:pe,parentNode:ce,nextSibling:Fe,setScopeId:Ye=u.NOOP,cloneNode:ut,insertStaticContent:vt}=o,we=function(R,U,de){var Pe=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,Re=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,Je=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,ct=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,Xe=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:zr?!1:!!U.dynamicChildren;if(R!==U){R&&!$r(R,U)&&(Pe=Ge(R),ve(R,Re,Je,!0),R=null),U.patchFlag===-2&&(tt=!1,U.dynamicChildren=null);var{type:je,ref:Rt,shapeFlag:ht}=U;switch(je){case Ht:fe(R,U,de,Pe);break;case Jt:Ce(R,U,de,Pe);break;case on:R==null?nt(U,de,Pe,ct):We(R,U,de,ct);break;case Ut:K(R,U,de,Pe,Re,Je,ct,Xe,tt);break;default:ht&1?f(R,U,de,Pe,Re,Je,ct,Xe,tt):ht&6?ue(R,U,de,Pe,Re,Je,ct,Xe,tt):ht&64||ht&128?je.process(R,U,de,Pe,Re,Je,ct,Xe,tt,Ot):le("Invalid VNode type:",je,"(".concat(typeof je,")"))}Rt!=null&&Re&&Jo(Rt,R&&R.ref,Je,U||R,!U)}},fe=(R,U,de,Pe)=>{if(R==null)m(U.el=H(U.children),de,Pe);else{var Re=U.el=R.el;U.children!==R.children&&Ne(Re,U.children)}},Ce=(R,U,de,Pe)=>{R==null?m(U.el=te(U.children||""),de,Pe):U.el=R.el},nt=(R,U,de,Pe)=>{[R.el,R.anchor]=vt(R.children,U,de,Pe,R.el,R.anchor)},We=(R,U,de,Pe)=>{if(U.children!==R.children){var Re=Fe(R.anchor);a(R),[U.el,U.anchor]=vt(U.children,de,Re,Pe)}else U.el=R.el,U.anchor=R.anchor},i=(R,U,de)=>{for(var{el:Pe,anchor:Re}=R,Je;Pe&&Pe!==Re;)Je=Fe(Pe),m(Pe,U,de),Pe=Je;m(Re,U,de)},a=R=>{for(var{el:U,anchor:de}=R,Pe;U&&U!==de;)Pe=Fe(U),C(U),U=Pe;C(de)},f=(R,U,de,Pe,Re,Je,ct,Xe,tt)=>{ct=ct||U.type==="svg",R==null?p(U,de,Pe,Re,Je,ct,Xe,tt):I(R,U,Re,Je,ct,Xe,tt)},p=(R,U,de,Pe,Re,Je,ct,Xe)=>{var tt,je,{type:Rt,props:ht,shapeFlag:Et,transition:en,patchFlag:nn,dirs:jt}=R;{if(tt=R.el=Y(R.type,Je,ht&&ht.is,ht),Et&8?pe(tt,R.children):Et&16&&E(R.children,tt,null,Pe,Re,Je&&Rt!=="foreignObject",ct,Xe),jt&&ti(R,null,Pe,"created"),ht){for(var pn in ht)pn!=="value"&&!u.isReservedProp(pn)&&O(tt,pn,null,ht[pn],Je,R.children,Pe,Re,st,R.hostInstance);"value"in ht&&O(tt,"value",null,ht.value,!1,[],Pe,null,void 0,R.hostInstance),(je=ht.onVnodeBeforeMount)&&Rn(je,Pe,R)}w(tt,R,R.scopeId,ct,Pe)}Object.defineProperty(tt,"__vnode",{value:R,enumerable:!1}),Object.defineProperty(tt,"__vueParentComponent",{value:Pe,enumerable:!1}),jt&&ti(R,null,Pe,"beforeMount");var Hn=(!Re||Re&&!Re.pendingBranch)&&en&&!en.persisted;Hn&&en.beforeEnter(tt),m(tt,U,de),((je=ht&&ht.onVnodeMounted)||Hn||jt)&&pr(()=>{je&&Rn(je,Pe,R),Hn&&en.enter(tt),jt&&ti(R,null,Pe,"mounted")},Re)},w=(R,U,de,Pe,Re)=>{if(de&&Ye(R,de),Pe)for(var Je=0;Je<Pe.length;Je++)Ye(R,Pe[Je]);if(Re){var ct=Re.subTree;if(ct.patchFlag>0&&ct.patchFlag&2048&&(ct=Fi(ct.children)||ct),U===ct){var Xe=Re.vnode;w(R,Xe,Xe.scopeId,Xe.slotScopeIds,Re.parent)}}},E=function(R,U,de,Pe,Re,Je,ct,Xe){for(var tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,je=tt;je<R.length;je++){var Rt=R[je]=Xe?ir(R[je]):ji(R[je]);we(null,Rt,U,de,Pe,Re,Je,ct,Xe)}},I=(R,U,de,Pe,Re,Je,ct)=>{var Xe=U.el=R.el,{patchFlag:tt,dynamicChildren:je,dirs:Rt}=U;tt|=R.patchFlag&16;var ht=R.props||u.EMPTY_OBJ,Et=U.props||u.EMPTY_OBJ,en;de&&yo(de,!1),(en=Et.onVnodeBeforeUpdate)&&Rn(en,de,U,R),Rt&&ti(U,R,de,"beforeUpdate"),de&&yo(de,!0),zr&&(tt=0,ct=!1,je=null);var nn=Re&&U.type!=="foreignObject";if(je?(D(R.dynamicChildren,je,Xe,de,Pe,nn,Je),de&&de.type.__hmrId&&fi(R,U)):ct||it(R,U,Xe,null,de,Pe,nn,Je,!1),tt>0){if(tt&16)x(Xe,U,ht,Et,de,Pe,Re);else if(tt&2&&ht.class!==Et.class&&O(Xe,"class",null,Et.class,Re,[],de,null,void 0,U.hostInstance),tt&4&&O(Xe,"style",ht.style,Et.style,Re,[],de,null,void 0,U.hostInstance),tt&8)for(var jt=U.dynamicProps,pn=0;pn<jt.length;pn++){var Hn=jt[pn],Uo=ht[Hn],uo=Et[Hn];(uo!==Uo||Hn==="value"||M&&M(Xe,Hn))&&O(Xe,Hn,Uo,uo,Re,R.children,de,Pe,st,U.hostInstance)}tt&1&&R.children!==U.children&&pe(Xe,U.children)}else!ct&&je==null&&x(Xe,U,ht,Et,de,Pe,Re);((en=Et.onVnodeUpdated)||Rt)&&pr(()=>{en&&Rn(en,de,U,R),Rt&&ti(U,R,de,"updated")},Pe)},D=(R,U,de,Pe,Re,Je,ct)=>{for(var Xe=0;Xe<U.length;Xe++){var tt=R[Xe],je=U[Xe],Rt=tt.el&&(tt.type===Ut||!$r(tt,je)||tt.shapeFlag&(6|64))?ce(tt.el):de;we(tt,je,Rt,null,Pe,Re,Je,ct,!0)}},x=(R,U,de,Pe,Re,Je,ct)=>{if(de!==Pe){for(var Xe in Pe)if(!u.isReservedProp(Xe)){var tt=Pe[Xe],je=de[Xe];(tt!==je&&Xe!=="value"||M&&M(R,Xe))&&O(R,Xe,je,tt,ct,U.children,Re,Je,st,U.hostInstance)}if(de!==u.EMPTY_OBJ)for(var Rt in de)!u.isReservedProp(Rt)&&!(Rt in Pe)&&O(R,Rt,de[Rt],null,ct,U.children,Re,Je,st,U.hostInstance);"value"in Pe&&O(R,"value",de.value,Pe.value,!1,[],Re,null,void 0,U.hostInstance)}},K=(R,U,de,Pe,Re,Je,ct,Xe,tt)=>{var je=U.el=R?R.el:H(""),Rt=U.anchor=R?R.anchor:H(""),{patchFlag:ht,dynamicChildren:Et,slotScopeIds:en}=U;(zr||ht&2048)&&(ht=0,tt=!1,Et=null),en&&(Xe=Xe?Xe.concat(en):en),R==null?(m(je,de,Pe),m(Rt,de,Pe),E(U.children,de,Rt,Re,Je,ct,Xe,tt)):ht>0&&ht&64&&Et&&R.dynamicChildren?(D(R.dynamicChildren,Et,de,Re,Je,ct,Xe),Re&&Re.type.__hmrId?fi(R,U):(U.key!=null||Re&&U===Re.subTree)&&fi(R,U,!0)):it(R,U,de,Rt,Re,Je,ct,Xe,tt)},ue=(R,U,de,Pe,Re,Je,ct,Xe,tt)=>{U.slotScopeIds=Xe,R==null?U.shapeFlag&512?Re.ctx.activate(U,de,Pe,ct,tt):oe(U,de,Pe,Re,Je,ct,tt):ne(R,U,tt)},oe=(R,U,de,Pe,Re,Je,ct)=>{var Xe=R.component=Dc(R,Pe,Re);if(Xe.type.__hmrId&&Qi(Xe),rn(R),Vr(Xe,"mount"),yr(R)&&(Xe.ctx.renderer=Ot),Vr(Xe,"init"),dl(Xe),rr(Xe,"init"),Xe.asyncDep){if(Re&&Re.registerDep(Xe,Ee),!R.el){var tt=Xe.subTree=Tn(Jt);Ce(null,tt,U,de)}return}Ee(Xe,R,U,de,Re,Je,ct),A(),rr(Xe,"mount")},ne=(R,U,de)=>{var Pe=U.component=R.component;if(Qt(R,U,de))if(Pe.asyncDep&&!Pe.asyncResolved){rn(U),He(Pe,U,de),A();return}else Pe.next=U,cr(Pe.update),Pe.update();else U.el=R.el,Pe.vnode=U},Ee=(R,U,de,Pe,Re,Je,ct)=>{var Xe=()=>{if(R.isMounted){var{next:vr,bu:Da,u:W,parent:X,vnode:be}=R,Le=vr,De;rn(vr||R.vnode),yo(R,!1),vr?(vr.el=be.el,He(R,vr,ct)):vr=be,Da&&u.invokeArrayFns(Da),(De=vr.props&&vr.props.onVnodeBeforeUpdate)&&Rn(De,X,vr,be),yo(R,!0),Vr(R,"render");var et=Di(R);rr(R,"render");var ot=R.subTree;R.subTree=et,Vr(R,"patch"),we(ot,et,ce(ot.el),Ge(ot),R,Re,Je),rr(R,"patch"),vr.el=et.el,Le===null&&Li(R,et.el),W&&pr(W,Re),(De=vr.props&&vr.props.onVnodeUpdated)&&pr(()=>Rn(De,X,vr,be),Re),er(R),A()}else{var Rt,{el:ht,props:Et}=U,{bm:en,m:nn,parent:jt}=R,pn=zt(U);if(yo(R,!1),en&&u.invokeArrayFns(en),!pn&&(Rt=Et&&Et.onVnodeBeforeMount)&&Rn(Rt,jt,U),yo(R,!0),ht&&Zt){var Hn=()=>{Vr(R,"render"),R.subTree=Di(R),rr(R,"render"),Vr(R,"hydrate"),Zt(ht,R.subTree,R,Re,null),rr(R,"hydrate")};pn?U.type.__asyncLoader().then(()=>!R.isUnmounted&&Hn()):Hn()}else{Vr(R,"render");var Uo=R.subTree=Di(R);rr(R,"render"),Vr(R,"patch"),we(null,Uo,de,Pe,R,Re,Je),rr(R,"patch"),U.el=Uo.el}if(nn&&pr(nn,Re),!pn&&(Rt=Et&&Et.onVnodeMounted)){var uo=U;pr(()=>Rn(Rt,jt,uo),Re)}(U.shapeFlag&256||jt&&zt(jt.vnode)&&jt.vnode.shapeFlag&256)&&R.a&&pr(R.a,Re),R.isMounted=!0,Zr(R),U=de=Pe=null}},tt=R.effect=new P.ReactiveEffect(Xe,()=>xi(je),R.scope),je=R.update=()=>tt.run();je.id=R.uid,yo(R,!0),tt.onTrack=R.rtc?Rt=>u.invokeArrayFns(R.rtc,Rt):void 0,tt.onTrigger=R.rtg?Rt=>u.invokeArrayFns(R.rtg,Rt):void 0,je.ownerInstance=R,je()},He=(R,U,de)=>{U.component=R;var Pe=R.vnode.props;R.vnode=U,R.next=null,pt(R,U.props,Pe,de),sl(R,U.children,de),P.pauseTracking(),Ji(void 0,R.update),P.resetTracking()},it=function(R,U,de,Pe,Re,Je,ct,Xe){var tt=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,je=R&&R.children,Rt=R?R.shapeFlag:0,ht=U.children,{patchFlag:Et,shapeFlag:en}=U;if(Et>0){if(Et&128){_e(je,ht,de,Pe,Re,Je,ct,Xe,tt);return}else if(Et&256){dt(je,ht,de,Pe,Re,Je,ct,Xe,tt);return}}en&8?(Rt&16&&st(je,Re,Je),ht!==je&&pe(de,ht)):Rt&16?en&16?_e(je,ht,de,Pe,Re,Je,ct,Xe,tt):st(je,Re,Je,!0):(Rt&8&&pe(de,""),en&16&&E(ht,de,Pe,Re,Je,ct,Xe,tt))},dt=(R,U,de,Pe,Re,Je,ct,Xe,tt)=>{R=R||u.EMPTY_ARR,U=U||u.EMPTY_ARR;var je=R.length,Rt=U.length,ht=Math.min(je,Rt),Et;for(Et=0;Et<ht;Et++){var en=U[Et]=tt?ir(U[Et]):ji(U[Et]);we(R[Et],en,de,null,Re,Je,ct,Xe,tt)}je>Rt?st(R,Re,Je,!0,!1,ht):E(U,de,Pe,Re,Je,ct,Xe,tt,ht)},_e=(R,U,de,Pe,Re,Je,ct,Xe,tt)=>{for(var je=0,Rt=U.length,ht=R.length-1,Et=Rt-1;je<=ht&&je<=Et;){var en=R[je],nn=U[je]=tt?ir(U[je]):ji(U[je]);if($r(en,nn))we(en,nn,de,null,Re,Je,ct,Xe,tt);else break;je++}for(;je<=ht&&je<=Et;){var jt=R[ht],pn=U[Et]=tt?ir(U[Et]):ji(U[Et]);if($r(jt,pn))we(jt,pn,de,null,Re,Je,ct,Xe,tt);else break;ht--,Et--}if(je>ht){if(je<=Et)for(var Hn=Et+1,Uo=Hn<Rt?U[Hn].el:Pe;je<=Et;)we(null,U[je]=tt?ir(U[je]):ji(U[je]),de,Uo,Re,Je,ct,Xe,tt),je++}else if(je>Et)for(;je<=ht;)ve(R[je],Re,Je,!0),je++;else{var uo=je,vr=je,Da=new Map;for(je=vr;je<=Et;je++){var W=U[je]=tt?ir(U[je]):ji(U[je]);W.key!=null&&(Da.has(W.key)&&le("Duplicate keys found during update:",JSON.stringify(W.key),"Make sure keys are unique."),Da.set(W.key,je))}var X,be=0,Le=Et-vr+1,De=!1,et=0,ot=new Array(Le);for(je=0;je<Le;je++)ot[je]=0;for(je=uo;je<=ht;je++){var Ke=R[je];if(be>=Le){ve(Ke,Re,Je,!0);continue}var Qe=void 0;if(Ke.key!=null)Qe=Da.get(Ke.key);else for(X=vr;X<=Et;X++)if(ot[X-vr]===0&&$r(Ke,U[X])){Qe=X;break}Qe===void 0?ve(Ke,Re,Je,!0):(ot[Qe-vr]=je+1,Qe>=et?et=Qe:De=!0,we(Ke,U[Qe],de,null,Re,Je,ct,Xe,tt),be++)}var $e=De?Zo(ot):u.EMPTY_ARR;for(X=$e.length-1,je=Le-1;je>=0;je--){var kt=vr+je,Bt=U[kt],Ct=kt+1<Rt?U[kt+1].el:Pe;ot[je]===0?we(null,Bt,de,Ct,Re,Je,ct,Xe,tt):De&&(X<0||je!==$e[X]?ae(Bt,de,Ct,2):X--)}}},ae=function(R,U,de,Pe){var Re=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:Je,type:ct,transition:Xe,children:tt,shapeFlag:je}=R;if(je&6){ae(R.component.subTree,U,de,Pe);return}if(je&128){R.suspense.move(U,de,Pe);return}if(je&64){ct.move(R,U,de,Ot);return}if(ct===Ut){m(Je,U,de);for(var Rt=0;Rt<tt.length;Rt++)ae(tt[Rt],U,de,Pe);m(R.anchor,U,de);return}if(ct===on){i(R,U,de);return}var ht=Pe!==2&&je&1&&Xe;if(ht)if(Pe===0)Xe.beforeEnter(Je),m(Je,U,de),pr(()=>Xe.enter(Je),Re);else{var{leave:Et,delayLeave:en,afterLeave:nn}=Xe,jt=()=>m(Je,U,de),pn=()=>{Et(Je,()=>{jt(),nn&&nn()})};en?en(Je,jt,pn):pn()}else m(Je,U,de)},ve=function(R,U,de){var Pe=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,Re=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:Je,props:ct,ref:Xe,children:tt,dynamicChildren:je,shapeFlag:Rt,patchFlag:ht,dirs:Et}=R;if(Xe!=null&&Jo(Xe,null,de,R,!0),Rt&256){U.ctx.deactivate(R);return}var en=Rt&1&&Et,nn=!zt(R),jt;if(nn&&(jt=ct&&ct.onVnodeBeforeUnmount)&&Rn(jt,U,R),Rt&6)rt(R.component,de,Pe);else{if(Rt&128){R.suspense.unmount(de,Pe);return}en&&ti(R,null,U,"beforeUnmount"),Rt&64?R.type.remove(R,U,de,Re,Ot,Pe):je&&(Je!==Ut||ht>0&&ht&64)?st(je,U,de,!1,!0):(Je===Ut&&ht&(128|256)||!Re&&Rt&16)&&st(tt,U,de),Pe&&Ze(R)}(nn&&(jt=ct&&ct.onVnodeUnmounted)||en)&&pr(()=>{jt&&Rn(jt,U,R),en&&ti(R,null,U,"unmounted")},de)},Ze=R=>{var{type:U,el:de,anchor:Pe,transition:Re}=R;if(U===Ut){R.patchFlag>0&&R.patchFlag&2048&&Re&&!Re.persisted?R.children.forEach(je=>{je.type===Jt?C(je.el):Ze(je)}):Oe(de,Pe);return}if(U===on){a(R);return}var Je=()=>{C(de),Re&&!Re.persisted&&Re.afterLeave&&Re.afterLeave()};if(R.shapeFlag&1&&Re&&!Re.persisted){var{leave:ct,delayLeave:Xe}=Re,tt=()=>ct(de,Je);Xe?Xe(R.el,Je,tt):tt()}else Je()},Oe=(R,U)=>{for(var de;R!==U;)de=Fe(R),C(R),R=de;C(U)},rt=(R,U,de)=>{R.type.__hmrId&&To(R);var{bum:Pe,scope:Re,update:Je,subTree:ct,um:Xe}=R;Pe&&u.invokeArrayFns(Pe),Re.stop(),Je&&(Je.active=!1,ve(ct,R,U,de)),Xe&&pr(Xe,U),pr(()=>{R.isUnmounted=!0},U),U&&U.pendingBranch&&!U.isUnmounted&&R.asyncDep&&!R.asyncResolved&&R.suspenseId===U.pendingId&&(U.deps--,U.deps===0&&U.resolve()),eo(R)},st=function(R,U,de){for(var Pe=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,Re=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,Je=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,ct=Je;ct<R.length;ct++)ve(R[ct],U,de,Pe,Re)},Ge=R=>R.shapeFlag&6?Ge(R.component.subTree):R.shapeFlag&128?R.suspense.next():Fe(R.anchor||R.el),St=(R,U,de)=>{R==null?U._vnode&&ve(U._vnode,null,null,!0):we(U._vnode||null,R,U,null,null,null,de),Zi(),U._vnode=R},Ot={p:we,um:ve,m:ae,r:Ze,mt:oe,mc:E,pc:it,pbc:D,n:Ge,o},Tt,Zt;return l&&([Tt,Zt]=l(Ot)),{render:St,hydrate:Tt,createApp:qa(St,Tt)}}function yo(o,l){var{effect:h,update:m}=o;h.allowRecurse=m.allowRecurse=l}function fi(o,l){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=o.children,C=l.children;if(u.isArray(m)&&u.isArray(C))for(var O=0;O<m.length;O++){var M=m[O],Y=C[O];Y.shapeFlag&1&&!Y.dynamicChildren&&((Y.patchFlag<=0||Y.patchFlag===32)&&(Y=C[O]=ir(C[O]),Y.el=M.el),h||fi(M,Y)),Y.type===Jt&&!Y.el&&(Y.el=M.el)}}function Zo(o){var l=o.slice(),h=[0],m,C,O,M,Y,H=o.length;for(m=0;m<H;m++){var te=o[m];if(te!==0){if(C=h[h.length-1],o[C]<te){l[m]=C,h.push(m);continue}for(O=0,M=h.length-1;O<M;)Y=O+M>>1,o[h[Y]]<te?O=Y+1:M=Y;te<o[h[O]]&&(O>0&&(l[m]=h[O-1]),h[O]=m)}}for(O=h.length,M=h[O-1];O-- >0;)h[O]=M,M=l[M];return h}var Ft=o=>o.__isTeleport,lo=o=>o&&(o.disabled||o.disabled===""),Xo=o=>typeof SVGElement!="undefined"&&o instanceof SVGElement,Pa=(o,l)=>{var h=o&&o.to;if(u.isString(h))if(l){var m=l(h);return m||le('Failed to locate Teleport target with selector "'.concat(h,'". ')+"Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree."),m}else return le("Current renderer does not support string target for Teleports. (missing querySelector renderer option)"),null;else return!h&&!lo(o)&&le("Invalid Teleport target: ".concat(h)),h},ll={__isTeleport:!0,process(o,l,h,m,C,O,M,Y,H,te){var{mc:Ne,pc:pe,pbc:ce,o:{insert:Fe,querySelector:Ye,createText:ut,createComment:vt}}=te,we=lo(l.props),{shapeFlag:fe,children:Ce,dynamicChildren:nt}=l;if(zr&&(H=!1,nt=null),o==null){var We=l.el=vt("teleport start"),i=l.anchor=vt("teleport end");Fe(We,h,m),Fe(i,h,m);var a=l.target=Pa(l.props,Ye),f=l.targetAnchor=ut("");a?(Fe(f,a),M=M||Xo(a)):we||le("Invalid Teleport target on mount:",a,"(".concat(typeof a,")"));var p=(oe,ne)=>{fe&16&&Ne(Ce,oe,ne,C,O,M,Y,H)};we?p(h,i):a&&p(a,f)}else{l.el=o.el;var w=l.anchor=o.anchor,E=l.target=o.target,I=l.targetAnchor=o.targetAnchor,D=lo(o.props),x=D?h:E,K=D?w:I;if(M=M||Xo(E),nt?(ce(o.dynamicChildren,nt,x,C,O,M,Y),fi(o,l,!0)):H||pe(o,l,x,K,C,O,M,Y,!1),we)D||xe(l,h,w,te,1);else if((l.props&&l.props.to)!==(o.props&&o.props.to)){var ue=l.target=Pa(l.props,Ye);ue?xe(l,ue,null,te,0):le("Invalid Teleport target on update:",E,"(".concat(typeof E,")"))}else D&&xe(l,E,I,te,1)}},remove(o,l,h,m,C,O){var{um:M,o:{remove:Y}}=C,{shapeFlag:H,children:te,anchor:Ne,targetAnchor:pe,target:ce,props:Fe}=o;if(ce&&Y(pe),(O||!lo(Fe))&&(Y(Ne),H&16))for(var Ye=0;Ye<te.length;Ye++){var ut=te[Ye];M(ut,l,h,!0,!!ut.dynamicChildren)}},move:xe,hydrate:Pt};function xe(o,l,h,m){var{o:{insert:C},m:O}=m,M=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;M===0&&C(o.targetAnchor,l,h);var{el:Y,anchor:H,shapeFlag:te,children:Ne,props:pe}=o,ce=M===2;if(ce&&C(Y,l,h),(!ce||lo(pe))&&te&16)for(var Fe=0;Fe<Ne.length;Fe++)O(Ne[Fe],l,h,2);ce&&C(H,l,h)}function Pt(o,l,h,m,C,O,M,Y){var{o:{nextSibling:H,parentNode:te,querySelector:Ne}}=M,pe=l.target=Pa(l.props,Ne);if(pe){var ce=pe._lpa||pe.firstChild;if(l.shapeFlag&16)if(lo(l.props))l.anchor=Y(H(o),l,te(o),h,m,C,O),l.targetAnchor=ce;else{l.anchor=H(o);for(var Fe=ce;Fe;)if(Fe=H(Fe),Fe&&Fe.nodeType===8&&Fe.data==="teleport anchor"){l.targetAnchor=Fe,pe._lpa=l.targetAnchor&&H(l.targetAnchor);break}Y(ce,l,pe,h,m,C,O)}}return l.anchor&&H(l.anchor)}var xt=ll,Ut=Symbol("Fragment"),Ht=Symbol("Text"),Jt=Symbol("Comment"),on=Symbol("Static"),gr=[],Un=null;function Zn(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;gr.push(Un=o?null:[])}function ca(){gr.pop(),Un=gr[gr.length-1]||null}var ua=1;function Oi(o){ua+=o}function is(o){return o.dynamicChildren=ua>0?Un||u.EMPTY_ARR:null,ca(),ua>0&&Un&&Un.push(o),o}function ec(o,l,h,m,C,O){return is(Hi(o,l,h,m,C,O,!0))}function Rs(o,l,h,m,C){return is(Tn(o,l,h,m,C,!0))}function Lo(o){return o?o.__v_isVNode===!0:!1}function $r(o,l){return l.shapeFlag&6&&ur.has(l.type)?!1:o.type===l.type&&o.key===l.key}var co;function xs(o){co=o}var cl=function(){for(var o=arguments.length,l=new Array(o),h=0;h<o;h++)l[h]=arguments[h];return kn(...co?co(l,Cn):l)},ul="__vInternal",os=o=>{var{key:l}=o;return l!=null?l:null},Bs=o=>{var{ref:l,ref_key:h,ref_for:m}=o;return l!=null?u.isString(l)||P.isRef(l)||u.isFunction(l)?{i:Cn,r:l,k:h,f:!!m}:l:null};function Hi(o){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,C=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,O=arguments.length>5&&arguments[5]!==void 0?arguments[5]:o===Ut?0:1,M=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,Y=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,H={__v_isVNode:!0,__v_skip:!0,type:o,props:l,key:l&&os(l),ref:l&&Bs(l),scopeId:An,slotScopeIds:null,children:h,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:O,patchFlag:m,dynamicProps:C,dynamicChildren:null,appContext:null,hostInstance:Cn};return Y?(Vo(H,h),O&128&&o.normalize(H)):h&&(H.shapeFlag|=u.isString(h)?8:16),H.key!==H.key&&le("VNode created with invalid key (NaN). VNode type:",H.type),ua>0&&!M&&Un&&(H.patchFlag>0||O&6)&&H.patchFlag!==32&&Un.push(H),H}var Tn=cl;function kn(o){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,C=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,O=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!o||o===ja)&&(o||le("Invalid vnode type when creating vnode: ".concat(o,".")),o=Jt),Lo(o)){var M=Ti(o,l,!0);return h&&Vo(M,h),ua>0&&!O&&Un&&(M.shapeFlag&6?Un[Un.indexOf(o)]=M:Un.push(M)),M.patchFlag|=-2,M}if(Ls(o)&&(o=o.__vccOpts),l){l=as(l);var{class:Y,style:H}=l;Y&&!u.isString(Y)&&(l.class=u.normalizeClass(Y)),u.isObject(H)&&(P.isProxy(H)&&!u.isArray(H)&&(H=u.extend({},H)),l.style=u.normalizeStyle(H))}var te=u.isString(o)?1:hn(o)?128:Ft(o)?64:u.isObject(o)?4:u.isFunction(o)?2:0;return te&4&&P.isProxy(o)&&(o=P.toRaw(o),le("Vue received a Component which was made a reactive object. This can lead to unnecessary performance overhead, and should be avoided by marking the component with `markRaw` or using `shallowRef` instead of `ref`.",`
Component that was made reactive: `,o)),Hi(o,l,h,m,C,te,O,!0)}function as(o){return o?P.isProxy(o)||ul in o?u.extend({},o):o:null}function Ti(o,l){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:m,ref:C,patchFlag:O,children:M}=o,Y=l?Ia(m||{},l):m,H={__v_isVNode:!0,__v_skip:!0,type:o.type,props:Y,key:Y&&os(Y),ref:l&&l.ref?h&&C?u.isArray(C)?C.concat(Bs(l)):[C,Bs(l)]:Bs(l):C,scopeId:o.scopeId,slotScopeIds:o.slotScopeIds,children:O===-1&&u.isArray(M)?M.map(di):M,target:o.target,targetAnchor:o.targetAnchor,staticCount:o.staticCount,shapeFlag:o.shapeFlag,patchFlag:l&&o.type!==Ut?O===-1?16:O|16:O,dynamicProps:o.dynamicProps,dynamicChildren:o.dynamicChildren,appContext:o.appContext,hostInstance:o.hostInstance,dirs:o.dirs,transition:o.transition,component:o.component,suspense:o.suspense,ssContent:o.ssContent&&Ti(o.ssContent),ssFallback:o.ssFallback&&Ti(o.ssFallback),el:o.el,anchor:o.anchor};return H}function di(o){var l=Ti(o);return u.isArray(o.children)&&(l.children=o.children.map(di)),l}function ss(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return Tn(Ht,null,o,l)}function fl(o,l){var h=Tn(on,null,o);return h.staticCount=l,h}function tc(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return l?(Zn(),Rs(Jt,null,o)):Tn(Jt,null,o)}function ji(o){return o==null||typeof o=="boolean"?Tn(Jt):u.isArray(o)?Tn(Ut,null,o.slice()):typeof o=="object"?ir(o):Tn(Ht,null,String(o))}function ir(o){return o.el===null||o.memo?o:Ti(o)}function Vo(o,l){var h=0,{shapeFlag:m}=o;if(l==null)l=null;else if(u.isArray(l))h=16;else if(typeof l=="object")if(m&(1|64)){var C=l.default;C&&(C._c&&(C._d=!1),Vo(o,C()),C._c&&(C._d=!0));return}else{h=32;var O=l._;!O&&!(ul in l)?l._ctx=Cn:O===3&&Cn&&(Cn.slots._===1?l._=1:(l._=2,o.patchFlag|=1024))}else u.isFunction(l)?(l={default:l,_ctx:Cn},h=32):(l=String(l),m&64?(h=16,l=[ss(l)]):h=8);o.children=l,o.shapeFlag|=h}function Ia(){for(var o={},l=0;l<arguments.length;l++){var h=l<0||arguments.length<=l?void 0:arguments[l];for(var m in h)if(m==="class")o.class!==h.class&&(o.class=u.normalizeClass([o.class,h.class]));else if(m==="style")o.style=u.normalizeStyle([o.style,h.style]);else if(u.isOn(m)){var C=o[m],O=h[m];O&&C!==O&&!(u.isArray(C)&&C.includes(O))&&(o[m]=C?[].concat(C,O):O)}else m!==""&&(o[m]=h[m])}return o}function Rn(o,l,h){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;Vt(o,l,7,[h,m])}var or=Is(),nc=0;function Dc(o,l,h){var m=o.type,C=(l?l.appContext:o.appContext)||or,O={uid:nc++,vnode:o,type:m,parent:l,appContext:C,root:null,next:null,subTree:null,effect:null,update:null,scope:new P.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:l?l.provides:Object.create(C.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:vn(m,C),emitsOptions:zo(m,C),emit:null,emitted:null,propsDefaults:u.EMPTY_OBJ,inheritAttrs:m.inheritAttrs,ctx:u.EMPTY_OBJ,data:u.EMPTY_OBJ,props:u.EMPTY_OBJ,attrs:u.EMPTY_OBJ,slots:u.EMPTY_OBJ,refs:u.EMPTY_OBJ,setupState:u.EMPTY_OBJ,setupContext:null,suspense:h,suspenseId:h?h.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return O.ctx=Os(O),O.root=l?l.root:O,O.emit=ba.bind(null,O),o.ce&&o.ce(O),O}var ar=null,Pn=()=>ar||Cn,Pi=o=>{ar=o,o.scope.on()},hi=()=>{ar&&ar.scope.off(),ar=null},fa=u.makeMap("slot,component");function Il(o,l){var h=l.isNativeTag||u.NO;(fa(o)||h(o))&&le("Do not use built-in or reserved HTML elements as component id: "+o)}function Ms(o){return o.vnode.shapeFlag&4}k.isInSSRComponentSetup=!1;function dl(o){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;k.isInSSRComponentSetup=l;var{props:h,children:m}=o.vnode,C=Ms(o);Kt(o,h,C,l),Oa(o,m);var O=C?Nl(o,l):void 0;return k.isInSSRComponentSetup=!1,O}function Nl(o,l){var h,m=o.type;{if(m.name&&Il(m.name,o.appContext.config),m.components)for(var C=Object.keys(m.components),O=0;O<C.length;O++)Il(C[O],o.appContext.config);if(m.directives)for(var M=Object.keys(m.directives),Y=0;Y<M.length;Y++)ws(M[Y]);m.compilerOptions&&rc()&&le('"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.')}o.accessCache=Object.create(null),o.proxy=P.markRaw(new Proxy(o.ctx,sa)),Pl(o);var{setup:H}=m;if(H){var te=o.setupContext=H.length>1?ic(o):null;Pi(o),P.pauseTracking();var Ne=Dt(H,o,0,[P.shallowReadonly(o.props),te]);if(P.resetTracking(),hi(),u.isPromise(Ne)){if(Ne.then(hi,hi),l)return Ne.then(ce=>{Ds(o,ce,l)}).catch(ce=>{Kr(ce,o,0)});if(o.asyncDep=Ne,!o.suspense){var pe=(h=m.name)!==null&&h!==void 0?h:"Anonymous";le("Component <".concat(pe,">: setup function returned a promise, but no ")+"<Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.")}}else Ds(o,Ne,l)}else Rl(o,l)}function Ds(o,l,h){u.isFunction(l)?o.type.__ssrInlineRender?o.ssrRender=l:o.render=l:u.isObject(l)?(Lo(l)&&le("setup() should not return VNodes directly - return a render function instead."),o.devtoolsRawSetupState=l,o.setupState=P.proxyRefs(l),Ts(o)):l!==void 0&&le("setup() should return an object. Received: ".concat(l===null?"null":typeof l)),Rl(o,h)}var Na,ka;function kl(o){Na=o,ka=l=>{l.render._rc&&(l.withProxy=new Proxy(l.ctx,bo))}}var rc=()=>!Na;function Rl(o,l,h){var m=o.type;if(!o.render){if(!l&&Na&&!m.render){var C=m.template;if(C){Vr(o,"compile");var{isCustomElement:O,compilerOptions:M}=o.appContext.config,{delimiters:Y,compilerOptions:H}=m,te=u.extend(u.extend({isCustomElement:O,delimiters:Y},M),H);m.render=Na(C,te),rr(o,"compile")}}o.render=m.render||u.NOOP,ka&&ka(o)}Pi(o),P.pauseTracking(),L(o),P.resetTracking(),hi(),!m.render&&o.render===u.NOOP&&!l&&(!Na&&m.template?le('Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".'):le("Component is missing template or render function."))}function xl(o){return new Proxy(o.attrs,{get(l,h){return si(),P.track(o,"get","$attrs"),l[h]},set(){return le("setupContext.attrs is readonly."),!1},deleteProperty(){return le("setupContext.attrs is readonly."),!1}})}function ic(o){var l=m=>{o.exposed&&le("expose() should be called only once per setup()."),o.exposed=m||{}},h;return Object.freeze({get attrs(){return h||(h=xl(o))},get slots(){return P.shallowReadonly(o.slots)},get emit(){return function(m){for(var C=arguments.length,O=new Array(C>1?C-1:0),M=1;M<C;M++)O[M-1]=arguments[M];return o.emit(m,...O)}},expose:l})}function ls(o){if(o.exposed)return o.exposeProxy||(o.exposeProxy=new Proxy(P.proxyRefs(P.markRaw(o.exposed)),{get(l,h){if(h in l)return l[h];if(h in so)return so[h](o)}}))}var hl=/(?:^|[-_])(\w)/g,Fc=o=>o.replace(hl,l=>l.toUpperCase()).replace(/[-_]/g,"");function Fs(o){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return u.isFunction(o)?o.displayName||o.name:o.name||l&&o.__name}function Ra(o,l){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,m=Fs(l);if(!m&&l.__file){var C=l.__file.match(/([^/\\]+)\.\w+$/);C&&(m=C[1])}if(!m&&o&&o.parent){var O=M=>{for(var Y in M)if(M[Y]===l)return Y};m=O(o.components||o.parent.type.components)||O(o.appContext.components)}return m?Fc(m):h?"App":"Anonymous"}function Ls(o){return u.isFunction(o)&&"__vccOpts"in o}var Bl=(o,l)=>P.computed(o,l,k.isInSSRComponentSetup),Vs=o=>le("".concat(o,"() is a compiler-hint helper that is only usable inside ")+"<script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.");function pl(){return Vs("defineProps"),null}function Lc(){return Vs("defineEmits"),null}function Vc(o){Vs("defineExpose")}function $c(o,l){return Vs("withDefaults"),null}function Uc(){return oc().slots}function Hc(){return oc().attrs}function oc(){var o=Pn();return o||le("useContext() called without active instance."),o.setupContext||(o.setupContext=ic(o))}function ac(o,l){var h=u.isArray(o)?o.reduce((O,M)=>(O[M]={},O),{}):o;for(var m in l){var C=h[m];C?u.isArray(C)||u.isFunction(C)?h[m]={type:C,default:l[m]}:C.default=l[m]:C===null?h[m]={default:l[m]}:le('props default key "'.concat(m,'" has no corresponding declaration.'))}return h}function jc(o,l){var h={},m=function(O){l.includes(O)||Object.defineProperty(h,O,{enumerable:!0,get:()=>o[O]})};for(var C in o)m(C);return h}function Eo(o){var l=Pn();l||le("withAsyncContext called without active current instance. This is likely a bug.");var h=o();return hi(),u.isPromise(h)&&(h=h.catch(m=>{throw Pi(l),m})),[h,()=>Pi(l)]}function $s(o,l,h){var m=arguments.length;return m===2?u.isObject(l)&&!u.isArray(l)?Lo(l)?Tn(o,null,[l]):Tn(o,l):Tn(o,null,l):(m>3?h=Array.prototype.slice.call(arguments,2):m===3&&Lo(h)&&(h=[h]),Tn(o,l,h))}var Nr=Symbol("ssrContext"),xa=()=>{{var o=br(Nr);return o||le("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),o}};function da(o){return!!(o&&o.__v_isShallow)}function Ml(){if(typeof window=="undefined")return;var o={style:"color:#3ba776"},l={style:"color:#0b1bc9"},h={style:"color:#b62e24"},m={style:"color:#9d288c"},C={header(pe){return u.isObject(pe)?pe.__isVue?["div",o,"VueInstance"]:P.isRef(pe)?["div",{},["span",o,Ne(pe)],"<",Y(pe.value),">"]:P.isReactive(pe)?["div",{},["span",o,da(pe)?"ShallowReactive":"Reactive"],"<",Y(pe),">".concat(P.isReadonly(pe)?" (readonly)":"")]:P.isReadonly(pe)?["div",{},["span",o,da(pe)?"ShallowReadonly":"Readonly"],"<",Y(pe),">"]:null:null},hasBody(pe){return pe&&pe.__isVue},body(pe){if(pe&&pe.__isVue)return["div",{},...O(pe.$)]}};function O(pe){var ce=[];pe.type.props&&pe.props&&ce.push(M("props",P.toRaw(pe.props))),pe.setupState!==u.EMPTY_OBJ&&ce.push(M("setup",pe.setupState)),pe.data!==u.EMPTY_OBJ&&ce.push(M("data",P.toRaw(pe.data)));var Fe=H(pe,"computed");Fe&&ce.push(M("computed",Fe));var Ye=H(pe,"inject");return Ye&&ce.push(M("injected",Ye)),ce.push(["div",{},["span",{style:m.style+";opacity:0.66"},"$ (internal): "],["object",{object:pe}]]),ce}function M(pe,ce){return ce=u.extend({},ce),Object.keys(ce).length?["div",{style:"line-height:1.25em;margin-bottom:0.6em"},["div",{style:"color:#476582"},pe],["div",{style:"padding-left:1.25em"},...Object.keys(ce).map(Fe=>["div",{},["span",m,Fe+": "],Y(ce[Fe],!1)])]]:["span",{}]}function Y(pe){var ce=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return typeof pe=="number"?["span",l,pe]:typeof pe=="string"?["span",h,JSON.stringify(pe)]:typeof pe=="boolean"?["span",m,pe]:u.isObject(pe)?["object",{object:ce?P.toRaw(pe):pe}]:["span",h,String(pe)]}function H(pe,ce){var Fe=pe.type;if(!u.isFunction(Fe)){var Ye={};for(var ut in pe.ctx)te(Fe,ut,ce)&&(Ye[ut]=pe.ctx[ut]);return Ye}}function te(pe,ce,Fe){var Ye=pe[Fe];if(u.isArray(Ye)&&Ye.includes(ce)||u.isObject(Ye)&&ce in Ye||pe.extends&&te(pe.extends,ce,Fe)||pe.mixins&&pe.mixins.some(ut=>te(ut,ce,Fe)))return!0}function Ne(pe){return da(pe)?"ShallowRef":pe.effect?"ComputedRef":"Ref"}window.devtoolsFormatters?window.devtoolsFormatters.push(C):window.devtoolsFormatters=[C]}function zc(o,l,h,m){var C=h[m];if(C&&ha(C,o))return C;var O=l();return O.memo=o.slice(),h[m]=O}function ha(o,l){var h=o.memo;if(h.length!=l.length)return!1;for(var m=0;m<h.length;m++)if(u.hasChanged(h[m],l[m]))return!1;return ua>0&&Un&&Un.push(o),!0}var Us="3.2.37",wo=null,sc=null,So={insert:(o,l,h)=>h?l.insertBefore(o,h):l.appendChild(o),remove:o=>{var l=o.parentNode;l&&l.removeChild(o)},createElement:o=>c.createElement(o),createText:o=>c.createText(o),createComment:o=>c.createComment(o),setText:(o,l)=>{o.setAttr("value",l)},setElementText:(o,l)=>{o.setAttr("value",l)},parentNode:o=>o.parentNode,nextSibling:o=>o.nextSibling};function Hs(o){return Object.keys(o)}function js(o){var l={};return u.isArray(o)&&o.forEach(h=>{Hs(h).forEach(m=>{var C=h[m],O=l[m]||(l[m]={});Hs(C).forEach(M=>{var Y=C[M],H=O[M]||(O[M]={});Hs(Y).forEach(te=>{te[0]==="!"?(H[te]=Y[te],delete H[te.slice(1)]):u.hasOwn(H,"!"+te)||(H[te]=Y[te])})})})}),l}function gl(o,l){var h=l&&l.classList;return h&&h.includes(o)}var lc=/[+~> ]$/,Ka="parentNode",Dl="previousSibling";function cc(o,l){for(var h=o.split("."),m=h.length-1;m>0;m--){var C=h[m],O=C[C.length-1],M=C.replace(lc,"");if(O==="~"||O===" "){for(var Y=O==="~"?Dl:Ka;l&&(l=l[Y],!gl(M,l)););if(!l)return!1}else if(O===">"?l=l&&l[Ka]:O==="+"&&(l=l&&l[Dl]),!gl(M,l))return!1}return!0}var Wc=1e3;function Gc(o,l,h){var{styles:m,weights:C}=o;Hs(l).forEach(O=>{if(!(O&&h&&!cc(O,h))){var M=O.split(".").length,Y=l[O];Hs(Y).forEach(H=>{var te=Y[H],Ne=H[0]==="!";Ne&&(H=H.slice(1));var pe=C[H]||0,ce=M+(Ne?Wc:0);ce>=pe&&(C[H]=ce,m[H]=te)})}})}function zs(o,l){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,m={styles:{},weights:{}};return o.forEach(C=>{var O=l[C];O&&Gc(m,O,h)}),m.styles}function uc(o){return zs(o.classList,o.styleSheet,o)}function fc(o,l){var h=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null;return zs(o,dc(l),h)}function dc(o){var{type:l,appContext:h}=o,m=l;if(!m.__styles)if(h&&u.isArray(h.provides.__globalStyles)&&(h.provides.__globalStyles=js(h.provides.__globalStyles)),m.mpType==="page"&&h)m.__styles=h.provides.__globalStyles;else{var C=[];h&&C.push(h.provides.__globalStyles),u.isArray(m.styles)&&m.styles.forEach(O=>C.push(O)),m.__styles=js(C)}return m.__styles}function hc(o,l,h){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;m&&([l,h]=Wr(o,l,h,m)),o.setAttr(l,h)}var Fl="hoverClass",vl="placeholderClass",pc="placeholderStyle",Yc="indicatorClass",qc="indicatorStyle",Kc="maskClass",an="maskStyle",pa={view:{class:[Fl],style:[]},button:{class:[Fl],style:[]},navigator:{class:[Fl],style:[]},"u-input":{class:[vl],style:[pc]},"u-textarea":{class:[vl],style:[pc]},"picker-view":{class:[Yc,Kc],style:[qc,an]}};function Wr(o,l,h,m){if(!h)return[l,h];var C=pa[o.type];if(C){var O=u.camelize(l);if(C.class.indexOf(O)>-1)return[O,fc([h],m,o)];if(C.style.indexOf(l)>-1)return u.isString(h)?[O,u.parseStringStyle(h)]:[O,u.normalizeStyle(h)]}return[l,h]}function Ws(o,l,h){var m=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;if(!!m){var C=h?h.split(" "):[];o.setClassList(C),o.setStyleSheet(dc(m))}}function cs(o,l,h,m){o.addEvent(l,h)}function ml(o,l){o.removeEvent(l)}function _l(o,l,h,m){var C=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,O=o._vei||(o._vei={}),M=O[l];if(m&&M)M.value=m;else{var[Y,H]=Ba(l);if(m){var te=O[l]=Ys(m,C);cs(o,Y,te)}else M&&(ml(o,Y),O[l]=void 0)}}var $o=/(?:Once|Passive|Capture)$/;function Gs(o){return o==="on-post-message"?"onPostMessage":o}function Ba(o){var l;if($o.test(o)){l={};for(var h;h=o.match($o);)o=o.slice(0,o.length-h[0].length),l[h[0].toLowerCase()]=!0}return o=o.slice(2),[Gs(u.hyphenate(o)),l]}function Ys(o,l){var h=C=>{Vt(h.value,l,5,[C])};h.value=o;var m=new Set;return u.isArray(h.value)?h.value.forEach(C=>{C.modifiers&&C.modifiers.forEach(O=>{m.add(O)})}):(h.value.modifiers&&h.value.modifiers.forEach(C=>{m.add(C)}),Sr(h,l)),h.modifiers=[...m],h}function Sr(o,l){if(!!l){var{$wxsModules:h}=l;if(!!h){var m=o.value.toString();!h.find(C=>m.indexOf("."+C+".")>-1)||(o.wxsEvent=o.value())}}}function qs(o,l,h){if(!!h){u.isString(h)&&(h=u.parseStringStyle(h));var m={},C=l&&!u.isString(l);if(C){for(var O in l)h[O]==null&&(m[u.camelize(O)]="");for(var M in h){var Y=h[M];Y!==l[M]&&(m[u.camelize(M)]=Y)}}else for(var H in h)m[u.camelize(H)]=h[H];o.setStyles(m)}}var Ii=["u-input","u-textarea"],Co=function(o,l,h,m){var C=arguments.length>6?arguments[6]:void 0,O=arguments.length>9?arguments[9]:void 0;l==="class"?Ws(o,h,m,O||C):l==="style"?qs(o,h,m):u.isOn(l)?u.isModelListener(l)||_l(o,l,h,m,C):l==="modelValue"&&Ii.includes(o.type)?o.setAttrs({modelValue:m,value:m}):hc(o,l,m,C)};function gc(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var l=Pn();if(!l)return le("useCssModule must be called inside setup()"),u.EMPTY_OBJ;var h=l.type.__cssModules;if(!h)return le("Current instance does not have CSS modules injected."),u.EMPTY_OBJ;var m=h[o];return m||(le('Current instance does not have CSS module named "'.concat(o,'".')),u.EMPTY_OBJ)}}function Ma(o){var l=Pn();if(!l){le("useCssVars is called without current active component instance.");return}var h=()=>Ks(l.subTree,o(l.proxy));Sa(()=>oo(h,{flush:"post"})),Fr(h)}function Ks(o,l){if(o.shapeFlag&128){var h=o.suspense;o=h.activeBranch,h.pendingBranch&&!h.isHydrating&&h.effects.push(()=>{Ks(h.activeBranch,l)})}for(;o.component;)o=o.component.subTree;if(o.shapeFlag&1&&o.el){var m=o.el.style;for(var C in l)m.setProperty("--".concat(C),l[C])}else o.type===Ut&&o.children.forEach(O=>Ks(O,l))}var ga=["ctrl","shift","alt","meta"],va={stop:o=>o.stopPropagation(),prevent:o=>o.preventDefault(),self:o=>o.target!==o.currentTarget,ctrl:o=>!o.ctrlKey,shift:o=>!o.shiftKey,alt:o=>!o.altKey,meta:o=>!o.metaKey,left:o=>"button"in o&&o.button!==0,middle:o=>"button"in o&&o.button!==1,right:o=>"button"in o&&o.button!==2,exact:(o,l)=>ga.some(h=>o["".concat(h,"Key")]&&!l.includes(h))},Gr=(o,l)=>function(h){for(var m=0;m<l.length;m++){var C=va[l[m]];if(C&&C(h,l))return}for(var O=arguments.length,M=new Array(O>1?O-1:0),Y=1;Y<O;Y++)M[Y-1]=arguments[Y];return o(h,...M)},mn=(o,l)=>h=>{if("key"in h){var m=u.hyphenate(h.key);if(l.some(C=>C===m))return o(h)}},us=u.extend({patchProp:Co},So),Ll;function Vl(){return Ll||(Ll=wr(us))}var Ja=function(){Vl().render(...arguments)},Jc=function(){var o=Vl().createApp(...arguments),{mount:l}=o;return o.mount=h=>l(h),o};return Object.defineProperty(k,"camelize",{enumerable:!0,get:function(){return u.camelize}}),Object.defineProperty(k,"capitalize",{enumerable:!0,get:function(){return u.capitalize}}),Object.defineProperty(k,"hyphenate",{enumerable:!0,get:function(){return u.hyphenate}}),Object.defineProperty(k,"normalizeClass",{enumerable:!0,get:function(){return u.normalizeClass}}),Object.defineProperty(k,"normalizeProps",{enumerable:!0,get:function(){return u.normalizeProps}}),Object.defineProperty(k,"normalizeStyle",{enumerable:!0,get:function(){return u.normalizeStyle}}),Object.defineProperty(k,"toDisplayString",{enumerable:!0,get:function(){return u.toDisplayString}}),Object.defineProperty(k,"toHandlerKey",{enumerable:!0,get:function(){return u.toHandlerKey}}),Object.defineProperty(k,"EffectScope",{enumerable:!0,get:function(){return P.EffectScope}}),Object.defineProperty(k,"ReactiveEffect",{enumerable:!0,get:function(){return P.ReactiveEffect}}),Object.defineProperty(k,"customRef",{enumerable:!0,get:function(){return P.customRef}}),Object.defineProperty(k,"effect",{enumerable:!0,get:function(){return P.effect}}),Object.defineProperty(k,"effectScope",{enumerable:!0,get:function(){return P.effectScope}}),Object.defineProperty(k,"getCurrentScope",{enumerable:!0,get:function(){return P.getCurrentScope}}),Object.defineProperty(k,"isProxy",{enumerable:!0,get:function(){return P.isProxy}}),Object.defineProperty(k,"isReactive",{enumerable:!0,get:function(){return P.isReactive}}),Object.defineProperty(k,"isReadonly",{enumerable:!0,get:function(){return P.isReadonly}}),Object.defineProperty(k,"isRef",{enumerable:!0,get:function(){return P.isRef}}),Object.defineProperty(k,"isShallow",{enumerable:!0,get:function(){return P.isShallow}}),Object.defineProperty(k,"markRaw",{enumerable:!0,get:function(){return P.markRaw}}),Object.defineProperty(k,"onScopeDispose",{enumerable:!0,get:function(){return P.onScopeDispose}}),Object.defineProperty(k,"proxyRefs",{enumerable:!0,get:function(){return P.proxyRefs}}),Object.defineProperty(k,"reactive",{enumerable:!0,get:function(){return P.reactive}}),Object.defineProperty(k,"readonly",{enumerable:!0,get:function(){return P.readonly}}),Object.defineProperty(k,"ref",{enumerable:!0,get:function(){return P.ref}}),Object.defineProperty(k,"shallowReactive",{enumerable:!0,get:function(){return P.shallowReactive}}),Object.defineProperty(k,"shallowReadonly",{enumerable:!0,get:function(){return P.shallowReadonly}}),Object.defineProperty(k,"shallowRef",{enumerable:!0,get:function(){return P.shallowRef}}),Object.defineProperty(k,"stop",{enumerable:!0,get:function(){return P.stop}}),Object.defineProperty(k,"toRaw",{enumerable:!0,get:function(){return P.toRaw}}),Object.defineProperty(k,"toRef",{enumerable:!0,get:function(){return P.toRef}}),Object.defineProperty(k,"toRefs",{enumerable:!0,get:function(){return P.toRefs}}),Object.defineProperty(k,"triggerRef",{enumerable:!0,get:function(){return P.triggerRef}}),Object.defineProperty(k,"unref",{enumerable:!0,get:function(){return P.unref}}),k.BaseTransition=F,k.Comment=Jt,k.Fragment=Ut,k.KeepAlive=$a,k.Static=on,k.Suspense=Vi,k.Teleport=xt,k.Text=Ht,k.callWithAsyncErrorHandling=Vt,k.callWithErrorHandling=Dt,k.cloneVNode=Ti,k.compatUtils=sc,k.computed=Bl,k.createApp=Jc,k.createBlock=Rs,k.createCommentVNode=tc,k.createElementBlock=ec,k.createElementVNode=Hi,k.createHydrationRenderer=Ns,k.createPropsRestProxy=jc,k.createRenderer=wr,k.createSlots=Ca,k.createStaticVNode=fl,k.createTextVNode=ss,k.createVNode=Tn,k.defineAsyncComponent=On,k.defineComponent=ge,k.defineEmits=Lc,k.defineExpose=Vc,k.defineProps=pl,k.getCurrentInstance=Pn,k.getTransitionRawChildren=Z,k.guardReactiveProps=as,k.h=$s,k.handleError=Kr,k.initCustomFormatter=Ml,k.inject=br,k.injectHook=qo,k.isMemoSame=ha,k.isRuntimeOnly=rc,k.isVNode=Lo,k.mergeDefaults=ac,k.mergeProps=Ia,k.nextTick=_r,k.onActivated=Bo,k.onBeforeMount=wi,k.onBeforeUnmount=Mo,k.onBeforeUpdate=nr,k.onDeactivated=ia,k.onErrorCaptured=Es,k.onMounted=Sa,k.onRenderTracked=ys,k.onRenderTriggered=bs,k.onServerPrefetch=Lr,k.onUnmounted=aa,k.onUpdated=Fr,k.openBlock=Zn,k.parseClassList=fc,k.parseClassStyles=uc,k.popScopeId=No,k.provide=hr,k.pushScopeId=dr,k.queuePostFlushCb=Mi,k.registerRuntimeCompiler=kl,k.render=Ja,k.renderList=Cs,k.renderSlot=Do,k.resolveComponent=Tl,k.resolveDirective=ol,k.resolveDynamicComponent=vo,k.resolveFilter=wo,k.resolveTransitionHooks=ye,k.setBlockTracking=Oi,k.setDevtoolsHook=Tr,k.setTransitionHooks=J,k.ssrContextKey=Nr,k.toHandlers=za,k.transformVNodeArgs=xs,k.useAttrs=Hc,k.useCssModule=gc,k.useCssStyles=js,k.useCssVars=Ma,k.useSSRContext=xa,k.useSlots=Uc,k.useTransitionState=Ei,k.version=Us,k.warn=le,k.watch=ao,k.watchEffect=oo,k.watchPostEffect=Go,k.watchSyncEffect=Va,k.withAsyncContext=Eo,k.withCtx=ke,k.withDefaults=$c,k.withDirectives=il,k.withKeys=mn,k.withMemo=zc,k.withModifiers=Gr,k.withScopeId=Mt,Object.defineProperty(k,"__esModule",{value:!0}),k}({},T,B,b);return S.__TYPE__="nvue",S}var Pg=vP(EP);var gu={};fP(gu,{EMPTY_ARR:()=>BP,EMPTY_OBJ:()=>xP,NO:()=>DP,NOOP:()=>MP,camelize:()=>KP,capitalize:()=>Qu,def:()=>eI,extend:()=>pi,getGlobalThis:()=>nI,hasChanged:()=>XP,hasOwn:()=>Gl,hyphenate:()=>Jf,invokeArrayFns:()=>QP,isArray:()=>Yi,isBuiltInDirective:()=>YP,isFunction:()=>zn,isGloballyWhitelisted:()=>CP,isHTMLTag:()=>NP,isIntegerKey:()=>WP,isMap:()=>kg,isModelListener:()=>VP,isObject:()=>Rc,isOn:()=>LP,isPlainObject:()=>xc,isPromise:()=>jP,isReservedProp:()=>GP,isSVGTag:()=>kP,isSet:()=>Rg,isString:()=>qi,isSymbol:()=>HP,makeMap:()=>kc,normalizeClass:()=>Kf,normalizeProps:()=>TP,normalizeStyle:()=>qf,parseStringStyle:()=>Ig,remove:()=>$P,toDisplayString:()=>RP,toHandlerKey:()=>ZP,toNumber:()=>tI,toRawType:()=>zP,toTypeString:()=>tl});function kc(v,c){let b=Object.create(null),T=v.split(",");for(let B=0;B<T.length;B++)b[T[B]]=!0;return c?B=>!!b[B.toLowerCase()]:B=>!!b[B]}var SP="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt",CP=kc(SP);function qf(v){if(Yi(v)){let c={};for(let b=0;b<v.length;b++){let T=v[b],B=qi(T)?Ig(T):qf(T);if(B)for(let S in B)c[S]=B[S]}return c}else{if(qi(v))return v;if(Rc(v))return v}}var AP=/;(?![^(]*\))/g,OP=/:(.+)/;function Ig(v){let c={};return v.split(AP).forEach(b=>{if(b){let T=b.split(OP);T.length>1&&(c[T[0].trim()]=T[1].trim())}}),c}function Kf(v){let c="";if(qi(v))c=v;else if(Yi(v))for(let b=0;b<v.length;b++){let T=Kf(v[b]);T&&(c+=T+" ")}else if(Rc(v))for(let b in v)v[b]&&(c+=b+" ");return c.trim()}function TP(v){if(!v)return null;let{class:c,style:b}=v;return c&&!qi(c)&&(v.class=Kf(c)),b&&(v.style=qf(b)),v}var PP="html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot",IP="svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view",NP=kc(PP),kP=kc(IP),RP=v=>qi(v)?v:v==null?"":Yi(v)||Rc(v)&&(v.toString===xg||!zn(v.toString))?JSON.stringify(v,Ng,2):String(v),Ng=(v,c)=>c&&c.__v_isRef?Ng(v,c.value):kg(c)?{[`Map(${c.size})`]:[...c.entries()].reduce((b,[T,B])=>(b[`${T} =>`]=B,b),{})}:Rg(c)?{[`Set(${c.size})`]:[...c.values()]}:Rc(c)&&!Yi(c)&&!xc(c)?String(c):c,xP={},BP=[],MP=()=>{},DP=()=>!1,FP=/^on[^a-z]/,LP=v=>FP.test(v),VP=v=>v.startsWith("onUpdate:"),pi=Object.assign,$P=(v,c)=>{let b=v.indexOf(c);b>-1&&v.splice(b,1)},UP=Object.prototype.hasOwnProperty,Gl=(v,c)=>UP.call(v,c),Yi=Array.isArray,kg=v=>tl(v)==="[object Map]",Rg=v=>tl(v)==="[object Set]",zn=v=>typeof v=="function",qi=v=>typeof v=="string",HP=v=>typeof v=="symbol",Rc=v=>v!==null&&typeof v=="object",jP=v=>Rc(v)&&zn(v.then)&&zn(v.catch),xg=Object.prototype.toString,tl=v=>xg.call(v),zP=v=>tl(v).slice(8,-1),xc=v=>tl(v)==="[object Object]",WP=v=>qi(v)&&v!=="NaN"&&v[0]!=="-"&&""+parseInt(v,10)===v,GP=kc(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),YP=kc("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"),Xu=v=>{let c=Object.create(null);return b=>c[b]||(c[b]=v(b))},qP=/-(\w)/g,KP=Xu(v=>v.replace(qP,(c,b)=>b?b.toUpperCase():"")),JP=/\B([A-Z])/g,Jf=Xu(v=>v.replace(JP,"-$1").toLowerCase()),Qu=Xu(v=>v.charAt(0).toUpperCase()+v.slice(1)),ZP=Xu(v=>v?`on${Qu(v)}`:""),XP=(v,c)=>!Object.is(v,c),QP=(v,c)=>{for(let b=0;b<v.length;b++)v[b](c)},eI=(v,c,b)=>{Object.defineProperty(v,c,{configurable:!0,enumerable:!1,value:b})},tI=v=>{let c=parseFloat(v);return isNaN(c)?v:c},Bg,nI=()=>Bg||(Bg=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});function Mg(v){var c=function(b,T){"use strict";function B(F,...ie){console.warn(`[Vue warn] ${F}`,...ie)}let S;class k{constructor(ie=!1){this.active=!0,this.effects=[],this.cleanups=[],!ie&&S&&(this.parent=S,this.index=(S.scopes||(S.scopes=[])).push(this)-1)}run(ie){if(this.active){let ye=S;try{return S=this,ie()}finally{S=ye}}}on(){S=this}off(){S=this.parent}stop(ie){if(this.active){let ye,G;for(ye=0,G=this.effects.length;ye<G;ye++)this.effects[ye].stop();for(ye=0,G=this.cleanups.length;ye<G;ye++)this.cleanups[ye]();if(this.scopes)for(ye=0,G=this.scopes.length;ye<G;ye++)this.scopes[ye].stop(!0);if(this.parent&&!ie){let V=this.parent.scopes.pop();V&&V!==this&&(this.parent.scopes[this.index]=V,V.index=this.index)}this.active=!1}}}function u(F){return new k(F)}function P(F,ie=S){ie&&ie.active&&ie.effects.push(F)}function ze(){return S}function At(F){S&&S.cleanups.push(F)}let rn=F=>{let ie=new Set(F);return ie.w=0,ie.n=0,ie},A=F=>(F.w&se)>0,le=F=>(F.n&se)>0,Sn=({deps:F})=>{if(F.length)for(let ie=0;ie<F.length;ie++)F[ie].w|=se},Ln=F=>{let{deps:ie}=F;if(ie.length){let ye=0;for(let G=0;G<ie.length;G++){let V=ie[G];A(V)&&!le(V)?V.delete(F):ie[ye++]=V,V.w&=~se,V.n&=~se}ie.length=ye}},bt=new WeakMap,ee=0,se=1,gn=30,Dt,Vt=Symbol(""),Kr=Symbol("");class ii{constructor(ie,ye=null,G){this.fn=ie,this.scheduler=ye,this.active=!0,this.deps=[],this.parent=void 0,P(this,G)}run(){if(!this.active)return this.fn();let ie=Dt,ye=cn;for(;ie;){if(ie===this)return;ie=ie.parent}try{return this.parent=Dt,Dt=this,cn=!0,se=1<<++ee,ee<=gn?Sn(this):Rr(this),this.fn()}finally{ee<=gn&&Ln(this),se=1<<--ee,Dt=this.parent,cn=ye,this.parent=void 0,this.deferStop&&this.stop()}}stop(){Dt===this?this.deferStop=!0:this.active&&(Rr(this),this.onStop&&this.onStop(),this.active=!1)}}function Rr(F){let{deps:ie}=F;if(ie.length){for(let ye=0;ye<ie.length;ye++)ie[ye].delete(F);ie.length=0}}function yn(F,ie){F.effect&&(F=F.effect.fn);let ye=new ii(F);ie&&(T.extend(ye,ie),ie.scope&&P(ye,ie.scope)),(!ie||!ie.lazy)&&ye.run();let G=ye.run.bind(ye);return G.effect=ye,G}function Wt(F){F.effect.stop()}let cn=!0,In=[];function Wn(){In.push(cn),cn=!1}function lr(){In.push(cn),cn=!0}function Vn(){let F=In.pop();cn=F===void 0?!0:F}function Be(F,ie,ye){if(cn&&Dt){let G=bt.get(F);G||bt.set(F,G=new Map);let V=G.get(ye);V||G.set(ye,V=rn()),at(V,void 0)}}function at(F,ie){let ye=!1;ee<=gn?le(F)||(F.n|=se,ye=!A(F)):ye=!F.has(Dt),ye&&(F.add(Dt),Dt.deps.push(F))}function _t(F,ie,ye,G,V,J){let Z=bt.get(F);if(!Z)return;let ge=[];if(ie==="clear")ge=[...Z.values()];else if(ye==="length"&&T.isArray(F))Z.forEach((On,En)=>{(En==="length"||En>=G)&&ge.push(On)});else switch(ye!==void 0&&ge.push(Z.get(ye)),ie){case"add":T.isArray(F)?T.isIntegerKey(ye)&&ge.push(Z.get("length")):(ge.push(Z.get(Vt)),T.isMap(F)&&ge.push(Z.get(Kr)));break;case"delete":T.isArray(F)||(ge.push(Z.get(Vt)),T.isMap(F)&&ge.push(Z.get(Kr)));break;case"set":T.isMap(F)&&ge.push(Z.get(Vt));break}let zt=void 0;if(ge.length===1)ge[0]&&Xt(ge[0]);else{let On=[];for(let En of ge)En&&On.push(...En);Xt(rn(On))}}function Xt(F,ie){let ye=T.isArray(F)?F:[...F];for(let G of ye)G.computed&&un(G,ie);for(let G of ye)G.computed||un(G,ie)}function un(F,ie){(F!==Dt||F.allowRecurse)&&(F.scheduler?F.scheduler():F.run())}let dn=T.makeMap("__proto__,__v_isRef,__isVue"),_r=new Set(Object.getOwnPropertyNames(Symbol).filter(F=>F!=="arguments"&&F!=="caller").map(F=>Symbol[F]).filter(T.isSymbol)),Or=Mi(),xi=Mi(!1,!0),Bi=Mi(!0),cr=Mi(!0,!0),Ki=Ho();function Ho(){let F={};return["includes","indexOf","lastIndexOf"].forEach(ie=>{F[ie]=function(...ye){let G=Qt(this);for(let J=0,Z=this.length;J<Z;J++)Be(G,"get",J+"");let V=G[ie](...ye);return V===-1||V===!1?G[ie](...ye.map(Qt)):V}}),["push","pop","shift","unshift","splice"].forEach(ie=>{F[ie]=function(...ye){Wn();let G=Qt(this)[ie].apply(this,ye);return Vn(),G}}),F}function Mi(F=!1,ie=!1){return function(G,V,J){if(V==="__v_isReactive")return!F;if(V==="__v_isReadonly")return F;if(V==="__v_isShallow")return ie;if(V==="__v_raw"&&J===(F?ie?dr:Nn:ie?An:Cn).get(G))return G;let Z=T.isArray(G);if(!F&&Z&&T.hasOwn(Ki,V))return Reflect.get(Ki,V,J);let ge=Reflect.get(G,V,J);return(T.isSymbol(V)?_r.has(V):dn(V))||(F||Be(G,"get",V),ie)?ge:qn(ge)?Z&&T.isIntegerKey(V)?ge:ge.value:T.isObject(ge)?F?si(ge):ke(ge):ge}}let Ji=gi(),Zi=gi(!0);function gi(F=!1){return function(ye,G,V,J){let Z=ye[G];if(Xr(Z)&&qn(Z)&&!qn(V))return!1;if(!F&&!Xr(V)&&(ta(V)||(V=Qt(V),Z=Qt(Z)),!T.isArray(ye)&&qn(Z)&&!qn(V)))return Z.value=V,!0;let ge=T.isArray(ye)&&T.isIntegerKey(G)?Number(G)<ye.length:T.hasOwn(ye,G),zt=Reflect.set(ye,G,V,J);return ye===Qt(J)&&(ge?T.hasChanged(V,Z)&&_t(ye,"set",G,V,Z):_t(ye,"add",G,V)),zt}}function Xi(F,ie){let ye=T.hasOwn(F,ie),G=F[ie],V=Reflect.deleteProperty(F,ie);return V&&ye&&_t(F,"delete",ie,void 0,G),V}function jr(F,ie){let ye=Reflect.has(F,ie);return(!T.isSymbol(ie)||!_r.has(ie))&&Be(F,"has",ie),ye}function zr(F){return Be(F,"iterate",T.isArray(F)?"length":Vt),Reflect.ownKeys(F)}let ur={get:Or,set:Ji,deleteProperty:Xi,has:jr,ownKeys:zr},xr={get:Bi,set(F,ie){return!0},deleteProperty(F,ie){return!0}},Qi=T.extend({},ur,{get:xi,set:Zi}),To=T.extend({},xr,{get:cr}),Po=F=>F,oi=F=>Reflect.getPrototypeOf(F);function Qn(F,ie,ye=!1,G=!1){F=F.__v_raw;let V=Qt(F),J=Qt(ie);ye||(ie!==J&&Be(V,"get",ie),Be(V,"get",J));let{has:Z}=oi(V),ge=G?Po:ye?hn:Li;if(Z.call(V,ie))return ge(F.get(ie));if(Z.call(V,J))return ge(F.get(J));F!==V&&F.get(ie)}function vi(F,ie=!1){let ye=this.__v_raw,G=Qt(ye),V=Qt(F);return ie||(F!==V&&Be(G,"has",F),Be(G,"has",V)),F===V?ye.has(F):ye.has(F)||ye.has(V)}function ai(F,ie=!1){return F=F.__v_raw,!ie&&Be(Qt(F),"iterate",Vt),Reflect.get(F,"size",F)}function fr(F){F=Qt(F);let ie=Qt(this);return oi(ie).has.call(ie,F)||(ie.add(F),_t(ie,"add",F,F)),this}function mi(F,ie){ie=Qt(ie);let ye=Qt(this),{has:G,get:V}=oi(ye),J=G.call(ye,F);J||(F=Qt(F),J=G.call(ye,F));let Z=V.call(ye,F);return ye.set(F,ie),J?T.hasChanged(ie,Z)&&_t(ye,"set",F,ie,Z):_t(ye,"add",F,ie),this}function _i(F){let ie=Qt(this),{has:ye,get:G}=oi(ie),V=ye.call(ie,F);V||(F=Qt(F),V=ye.call(ie,F));let J=G?G.call(ie,F):void 0,Z=ie.delete(F);return V&&_t(ie,"delete",F,void 0,J),Z}function bi(){let F=Qt(this),ie=F.size!==0,ye=void 0,G=F.clear();return ie&&_t(F,"clear",void 0,void 0,ye),G}function Tr(F,ie){return function(G,V){let J=this,Z=J.__v_raw,ge=Qt(Z),zt=ie?Po:F?hn:Li;return!F&&Be(ge,"iterate",Vt),Z.forEach((On,En)=>G.call(V,zt(On),zt(En),J))}}function Br(F,ie,ye){return function(...G){let V=this.__v_raw,J=Qt(V),Z=T.isMap(J),ge=F==="entries"||F===Symbol.iterator&&Z,zt=F==="keys"&&Z,On=V[F](...G),En=ye?Po:ie?hn:Li;return!ie&&Be(J,"iterate",zt?Kr:Vt),{next(){let{value:yr,done:Kn}=On.next();return Kn?{value:yr,done:Kn}:{value:ge?[En(yr[0]),En(yr[1])]:En(yr),done:Kn}},[Symbol.iterator](){return this}}}}function Jr(F){return function(...ie){return F==="delete"?!1:this}}function Zr(){let F={get(J){return Qn(this,J)},get size(){return ai(this)},has:vi,add:fr,set:mi,delete:_i,clear:bi,forEach:Tr(!1,!1)},ie={get(J){return Qn(this,J,!1,!0)},get size(){return ai(this)},has:vi,add:fr,set:mi,delete:_i,clear:bi,forEach:Tr(!1,!0)},ye={get(J){return Qn(this,J,!0)},get size(){return ai(this,!0)},has(J){return vi.call(this,J,!0)},add:Jr("add"),set:Jr("set"),delete:Jr("delete"),clear:Jr("clear"),forEach:Tr(!0,!1)},G={get(J){return Qn(this,J,!0,!0)},get size(){return ai(this,!0)},has(J){return vi.call(this,J,!0)},add:Jr("add"),set:Jr("set"),delete:Jr("delete"),clear:Jr("clear"),forEach:Tr(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(J=>{F[J]=Br(J,!1,!1),ye[J]=Br(J,!0,!1),ie[J]=Br(J,!1,!0),G[J]=Br(J,!0,!0)}),[F,ye,ie,G]}let[er,eo,to,go]=Zr();function yi(F,ie){let ye=ie?F?go:to:F?eo:er;return(G,V,J)=>V==="__v_isReactive"?!F:V==="__v_isReadonly"?F:V==="__v_raw"?G:Reflect.get(T.hasOwn(ye,V)&&V in G?ye:G,V,J)}let Io={get:yi(!1,!1)},jo={get:yi(!1,!0)},ba={get:yi(!0,!1)},zo={get:yi(!0,!0)};function no(F,ie,ye){let G=Qt(ye);if(G!==ye&&ie.call(F,G)){let V=T.toRawType(F);console.warn(`Reactive ${V} contains both the raw and reactive versions of the same object${V==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}let Cn=new WeakMap,An=new WeakMap,Nn=new WeakMap,dr=new WeakMap;function No(F){switch(F){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Mt(F){return F.__v_skip||!Object.isExtensible(F)?0:No(T.toRawType(F))}function ke(F){return Xr(F)?F:io(F,!1,ur,Io,Cn)}function ro(F){return io(F,!1,Qi,jo,An)}function si(F){return io(F,!0,xr,ba,Nn)}function Di(F){return io(F,!0,To,zo,dr)}function io(F,ie,ye,G,V){if(!T.isObject(F)||F.__v_raw&&!(ie&&F.__v_isReactive))return F;let J=V.get(F);if(J)return J;let Z=Mt(F);if(Z===0)return F;let ge=new Proxy(F,Z===2?G:ye);return V.set(F,ge),ge}function Fi(F){return Xr(F)?Fi(F.__v_raw):!!(F&&F.__v_isReactive)}function Xr(F){return!!(F&&F.__v_isReadonly)}function ta(F){return!!(F&&F.__v_isShallow)}function ko(F){return Fi(F)||Xr(F)}function Qt(F){let ie=F&&F.__v_raw;return ie?Qt(ie):F}function ya(F){return T.def(F,"__v_skip",!0),F}let Li=F=>T.isObject(F)?ke(F):F,hn=F=>T.isObject(F)?si(F):F;function Qr(F){cn&&Dt&&(F=Qt(F),at(F.dep||(F.dep=rn())))}function Vi(F,ie){F=Qt(F),F.dep&&Xt(F.dep)}function qn(F){return!!(F&&F.__v_isRef===!0)}function Ro(F){return na(F,!1)}function La(F){return na(F,!0)}function na(F,ie){return qn(F)?F:new Wo(F,ie)}class Wo{constructor(ie,ye){this.__v_isShallow=ye,this.dep=void 0,this.__v_isRef=!0,this._rawValue=ye?ie:Qt(ie),this._value=ye?ie:Li(ie)}get value(){return Qr(this),this._value}set value(ie){ie=this.__v_isShallow?ie:Qt(ie),T.hasChanged(ie,this._rawValue)&&(this._rawValue=ie,this._value=this.__v_isShallow?ie:Li(ie),Vi(this,ie))}}function ra(F){Vi(F,void 0)}function Ea(F){return qn(F)?F.value:F}let Mr={get:(F,ie,ye)=>Ea(Reflect.get(F,ie,ye)),set:(F,ie,ye,G)=>{let V=F[ie];return qn(V)&&!qn(ye)?(V.value=ye,!0):Reflect.set(F,ie,ye,G)}};function Dr(F){return Fi(F)?F:new Proxy(F,Mr)}class xn{constructor(ie){this.dep=void 0,this.__v_isRef=!0;let{get:ye,set:G}=ie(()=>Qr(this),()=>Vi(this));this._get=ye,this._set=G}get value(){return this._get()}set value(ie){this._set(ie)}}function hr(F){return new xn(F)}function br(F){let ie=T.isArray(F)?new Array(F.length):{};for(let ye in F)ie[ye]=Go(F,ye);return ie}class oo{constructor(ie,ye,G){this._object=ie,this._key=ye,this._defaultValue=G,this.__v_isRef=!0}get value(){let ie=this._object[this._key];return ie===void 0?this._defaultValue:ie}set value(ie){this._object[this._key]=ie}}function Go(F,ie,ye){let G=F[ie];return qn(G)?G:new oo(F,ie,ye)}class Va{constructor(ie,ye,G,V){this._setter=ye,this.dep=void 0,this.__v_isRef=!0,this._dirty=!0,this.effect=new ii(ie,()=>{this._dirty||(this._dirty=!0,Vi(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!V,this.__v_isReadonly=G}get value(){let ie=Qt(this);return Qr(ie),(ie._dirty||!ie._cacheable)&&(ie._dirty=!1,ie._value=ie.effect.run()),ie._value}set value(ie){this._setter(ie)}}function wa(F,ie,ye=!1){let G,V,J=T.isFunction(F);return J?(G=F,V=T.NOOP):(G=F.get,V=F.set),new Va(G,V,J||!V,ye)}var ao;let ei=Promise.resolve(),$i=[],Yo=!1,li=F=>{$i.push(F),Yo||(Yo=!0,ei.then(Ei))},Ei=()=>{for(let F=0;F<$i.length;F++)$i[F]();$i.length=0,Yo=!1};class tr{constructor(ie){this.dep=void 0,this._dirty=!0,this.__v_isRef=!0,this[ao]=!0;let ye,G=!1,V=!1;this.effect=new ii(ie,J=>{if(this.dep){if(J)ye=this._value,G=!0;else if(!V){let Z=G?ye:this._value;V=!0,G=!1,li(()=>{this.effect.active&&this._get()!==Z&&Vi(this),V=!1})}for(let Z of this.dep)Z.computed instanceof tr&&Z.scheduler(!0)}this._dirty=!0}),this.effect.computed=this}_get(){return this._dirty?(this._dirty=!1,this._value=this.effect.run()):this._value}get value(){return Qr(this),Qt(this)._get()}}ao="__v_isReadonly";function Pr(F){return new tr(F)}return b.EffectScope=k,b.ITERATE_KEY=Vt,b.ReactiveEffect=ii,b.computed=wa,b.customRef=hr,b.deferredComputed=Pr,b.effect=yn,b.effectScope=u,b.enableTracking=lr,b.getCurrentScope=ze,b.isProxy=ko,b.isReactive=Fi,b.isReadonly=Xr,b.isRef=qn,b.isShallow=ta,b.markRaw=ya,b.onScopeDispose=At,b.pauseTracking=Wn,b.proxyRefs=Dr,b.reactive=ke,b.readonly=si,b.ref=Ro,b.resetTracking=Vn,b.shallowReactive=ro,b.shallowReadonly=Di,b.shallowRef=La,b.stop=Wt,b.toRaw=Qt,b.toRef=Go,b.toRefs=br,b.track=Be,b.trigger=_t,b.triggerRef=ra,b.unref=Ea,Object.defineProperty(b,"__esModule",{value:!0}),b}({},v);return c}function Dg(v){var c=function(b){"use strict";let T=`
`,B=44,S=50,k=50,u=["%","%"],P="#007aff",ze="#f7f7f7",At=/^([a-z-]+:)?\/\//i,rn=/^data:.*,.*/,A="WEB_INVOKE_APPSERVICE",le="wxs://",Sn="json://",Ln="wxsModules",bt="renderjsModules",ee="onShow",se="onHide",gn="onLaunch",Dt="onError",Vt="onThemeChange",Kr="onKeyboardHeightChange",ii="onPageNotFound",Rr="onUnhandledRejection",yn="onLoad",Wt="onReady",cn="onUnload",In="onInit",Wn="onSaveExitState",lr="onResize",Vn="onBackPress",Be="onPageScroll",at="onTabItemTap",_t="onReachBottom",Xt="onPullDownRefresh",un="onShareTimeline",dn="onAddToFavorites",_r="onShareAppMessage",Or="onNavigationBarButtonTap",xi="onNavigationBarSearchInputClicked",Bi="onNavigationBarSearchInputChanged",cr="onNavigationBarSearchInputConfirmed",Ki="onNavigationBarSearchInputFocusChanged",Ho="onAppEnterForeground",Mi="onAppEnterBackground",Ji="onWxsInvokeCallMethod";function Zi(G){return!!G.appContext}function gi(G){return G&&(Zi(G)?G.proxy:G)}function Xi(G){return G.nodeType===1}function jr(G){let{vnode:V}=G;if(Xi(V.el))return V.el;let{subTree:J}=G;if(J.shapeFlag&16){let Z=J.children.find(ge=>ge.el&&Xi(ge.el));if(Z)return Z.el}return V.el}let zr=0;function ur(G,...V){let J=Date.now(),Z=zr?J-zr:0;return zr=J,`[${J}][${Z}ms][${G}]\uFF1A${V.map(ge=>JSON.stringify(ge)).join(" ")}`}function xr(G){let V=Object.create(null);return J=>V[J]||(V[J]=G(J))}function Qi(G){return xr(G)}function To(G=""){return(""+G).replace(/[^\x00-\xff]/g,"**").length}function Po(G){return G.indexOf("/")===0}function oi(G){return Po(G)?G:"/"+G}function Qn(G){return Po(G)?G.slice(1):G}let vi=(G,V)=>{let J;for(let Z=0;Z<G.length;Z++)J=G[Z](V);return J};function ai(G,V=null){let J;return(...Z)=>(G&&(J=G.apply(V,Z),G=null),J)}function fr(G,V){G=G||{},b.isString(V)&&(V={errMsg:V}),/:ok$/.test(V.errMsg)?b.isFunction(G.success)&&G.success(V):b.isFunction(G.fail)&&G.fail(V),b.isFunction(G.complete)&&G.complete(V)}function mi(G){let V={};return b.isPlainObject(G)&&Object.keys(G).sort().forEach(J=>{let Z=J;V[Z]=G[Z]}),Object.keys(V)?V:G}let _i=encodeURIComponent;function bi(G,V=_i){let J=G?Object.keys(G).map(Z=>{let ge=G[Z];return typeof ge===void 0||ge===null?ge="":b.isPlainObject(ge)&&(ge=JSON.stringify(ge)),V(Z)+"="+V(ge)}).filter(Z=>Z.length>0).join("&"):null;return J?`?${J}`:""}function Tr(G){try{return decodeURIComponent(""+G)}catch(V){}return""+G}let Br=/\+/g;function Jr(G){let V={};if(G===""||G==="?")return V;let Z=(G[0]==="?"?G.slice(1):G).split("&");for(let ge=0;ge<Z.length;++ge){let zt=Z[ge].replace(Br," "),On=zt.indexOf("="),En=Tr(On<0?zt:zt.slice(0,On)),yr=On<0?null:Tr(zt.slice(On+1));if(En in V){let Kn=V[En];b.isArray(Kn)||(Kn=V[En]=[Kn]),Kn.push(yr)}else V[En]=yr}return V}function Zr(G){let[V,J]=G.split("?",2);return{path:V,query:Jr(J||"")}}function er(G){let V={};return G&&Object.keys(G).forEach(J=>{J.indexOf("data-")===0&&(V[J.replace("data-","")]=G[J])}),V}class eo extends Error{constructor(V){super(V);this.name="DOMException"}}function to(G,V){return V&&(V.capture&&(G+="Capture"),V.once&&(G+="Once"),V.passive&&(G+="Passive")),`on${b.capitalize(b.camelize(G))}`}class go{constructor(V,J){this.defaultPrevented=!1,this.timeStamp=Date.now(),this._stop=!1,this._end=!1,this.type=V,this.bubbles=!!J.bubbles,this.cancelable=!!J.cancelable}preventDefault(){this.defaultPrevented=!0}stopImmediatePropagation(){this._end=this._stop=!0}stopPropagation(){this._stop=!0}}function yi(G){if(G instanceof go)return G;let[V]=ba(G.type),J=new go(V,{bubbles:!1,cancelable:!1});return b.extend(J,G),J}class Io{constructor(){this.listeners=Object.create(null)}dispatchEvent(V){let J=this.listeners[V.type];if(!J)return!1;let Z=yi(V),ge=J.length;for(let zt=0;zt<ge&&(J[zt].call(this,Z),!Z._end);zt++);return Z.cancelable&&Z.defaultPrevented}addEventListener(V,J,Z){V=to(V,Z),(this.listeners[V]||(this.listeners[V]=[])).push(J)}removeEventListener(V,J,Z){V=to(V,Z);let ge=this.listeners[V];if(!ge)return;let zt=ge.indexOf(J);zt>-1&&ge.splice(zt,1)}}let jo=/(?:Once|Passive|Capture)$/;function ba(G){let V;if(jo.test(G)){V={};let J;for(;J=G.match(jo);)G=G.slice(0,G.length-J[0].length),V[J[0].toLowerCase()]=!0}return[b.hyphenate(G.slice(2)),V]}let zo=(()=>({stop:1,prevent:1<<1,self:1<<2}))();function no(G){let V=0;return G.includes("stop")&&(V|=zo.stop),G.includes("prevent")&&(V|=zo.prevent),G.includes("self")&&(V|=zo.self),V}let Cn=0,An=1,Nn=3,dr=8;function No(G,V){let{parentNode:J}=G;if(!J)return null;let{childNodes:Z}=J;return Z[Z.indexOf(G)+(V==="n"?1:-1)]||null}function Mt(G){let{parentNode:V}=G;V&&V.removeChild(G)}function ke(G){!G.nodeId&&G.pageNode&&(G.nodeId=G.pageNode.genId())}class ro extends Io{constructor(V,J,Z){super();if(this.pageNode=null,this.parentNode=null,this._text=null,Z){let{pageNode:ge}=Z;ge&&(this.pageNode=ge,this.nodeId=ge.genId(),!ge.isUnmounted&&ge.onCreate(this,J))}this.nodeType=V,this.nodeName=J,this.childNodes=[]}get firstChild(){return this.childNodes[0]||null}get lastChild(){let{childNodes:V}=this,J=V.length;return J?V[J-1]:null}get nextSibling(){return No(this,"n")}get nodeValue(){return null}set nodeValue(V){}get textContent(){return this._text||""}set textContent(V){this._text=V,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onTextContent(this,V)}get parentElement(){let{parentNode:V}=this;return V&&V.nodeType===An?V:null}get previousSibling(){return No(this,"p")}appendChild(V){return this.insertBefore(V,null)}cloneNode(V){let J=b.extend(Object.create(Object.getPrototypeOf(this)),this),{attributes:Z}=J;return Z&&(J.attributes=b.extend({},Z)),V&&(J.childNodes=J.childNodes.map(ge=>ge.cloneNode(!0))),J}insertBefore(V,J){Mt(V),V.pageNode=this.pageNode,V.parentNode=this,ke(V);let{childNodes:Z}=this;if(J){let ge=Z.indexOf(J);if(ge===-1)throw new eo("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");Z.splice(ge,0,V)}else Z.push(V);return this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onInsertBefore(this,V,J):V}removeChild(V){let{childNodes:J}=this,Z=J.indexOf(V);if(Z===-1)throw new eo("Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.");return V.parentNode=null,J.splice(Z,1),this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onRemoveChild(V):V}}let si="class",Di="style",io=".vOwnerId",Fi=".vRenderjs";class Xr extends ro{constructor(V,J,Z){super(V,J,Z);this.attributes=Object.create(null),this.style=null,this.vShow=null,this._html=null}get className(){return this.attributes[si]||""}set className(V){this.setAttribute(si,V)}get innerHTML(){return""}set innerHTML(V){this._html=V}addEventListener(V,J,Z){super.addEventListener(V,J,Z),this.pageNode&&!this.pageNode.isUnmounted&&(J.wxsEvent?this.pageNode.onAddWxsEvent(this,to(V,Z),J.wxsEvent,no(J.modifiers||[])):this.pageNode.onAddEvent(this,to(V,Z),no(J.modifiers||[])))}removeEventListener(V,J,Z){super.removeEventListener(V,J,Z),this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveEvent(this,to(V,Z))}getAttribute(V){return V===Di?this.style:this.attributes[V]}removeAttribute(V){V==Di?this.style=null:delete this.attributes[V],this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveAttribute(this,V)}setAttribute(V,J){V===Di?this.style=J:this.attributes[V]=J,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onSetAttribute(this,V,J)}toJSON({attr:V,normalize:J}={}){let{attributes:Z,style:ge,listeners:zt,_text:On}=this,En={};Object.keys(Z).length&&(En.a=J?J(Z):Z);let yr=Object.keys(zt);if(yr.length){let Kn,$a={};yr.forEach(xo=>{let Bo=zt[xo];if(Bo.length){let{wxsEvent:ia,modifiers:Ua}=Bo[0],Ha=no(Ua||[]);ia?(Kn||(Kn={}),Kn[xo]=[J?J(ia):ia,Ha]):$a[xo]=Ha}}),En.e=J?J($a,!1):$a,Kn&&(En.w=J?J(Kn,!1):Kn)}return ge!==null&&(En.s=J?J(ge):ge),V||(En.i=this.nodeId,En.n=this.nodeName),On!==null&&(En.t=J?J(On):On),En}}class ta extends ro{constructor(V,J){super(dr,"#comment",J);this._text=""}toJSON(V={}){return V.attr?{}:{i:this.nodeId}}}class ko extends Xr{constructor(V,J){super(An,V.toUpperCase(),J);this.tagName=this.nodeName}}class Qt extends ko{get value(){return this.getAttribute("value")}set value(V){this.setAttribute("value",V)}}class ya extends Qt{}class Li extends Xr{constructor(V,J){super(Nn,"#text",J);this._text=V}get nodeValue(){return this._text||""}set nodeValue(V){this._text=V,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onNodeValue(this,V)}}let hn={AD:["data"],"AD-DRAW":["data"],"LIVE-PLAYER":["picture-in-picture-mode"],MAP:["markers","polyline","circles","controls","include-points","polygons"],PICKER:["range","value"],"PICKER-VIEW":["value"],"RICH-TEXT":["nodes"],VIDEO:["danmu-list","header"],"WEB-VIEW":["webview-styles"]},Qr=["animation"],Vi=(G,V)=>{if(Qr.indexOf(V)>-1)return!0;let J=hn[G.nodeName];return!!(J&&J.indexOf(V)>-1)},qn=1,Ro=2,La=3,na=4,Wo=5,ra=6,Ea=7,Mr=8,Dr=9,xn=10,hr=12,br=15,oo=20;function Go(G,V,{clearTimeout:J,setTimeout:Z}){let ge,zt=function(){J(ge),ge=Z(()=>G.apply(this,arguments),V)};return zt.cancel=function(){J(ge)},zt}class Va{constructor(V,J){this.id=V,this.listener={},this.emitCache={},J&&Object.keys(J).forEach(Z=>{this.on(Z,J[Z])})}emit(V,...J){let Z=this.listener[V];if(!Z)return(this.emitCache[V]||(this.emitCache[V]=[])).push(J);Z.forEach(ge=>{ge.fn.apply(ge.fn,J)}),this.listener[V]=Z.filter(ge=>ge.type!=="once")}on(V,J){this._addListener(V,"on",J),this._clearCache(V)}once(V,J){this._addListener(V,"once",J),this._clearCache(V)}off(V,J){let Z=this.listener[V];if(!!Z)if(J)for(let ge=0;ge<Z.length;)Z[ge].fn===J&&(Z.splice(ge,1),ge--),ge++;else delete this.listener[V]}_clearCache(V){let J=this.emitCache[V];if(J)for(;J.length>0;)this.emit.apply(this,[V,...J.shift()])}_addListener(V,J,Z){(this.listener[V]||(this.listener[V]=[])).push({fn:Z,type:J})}}let wa=[In,yn,ee,se,cn,Vn,Be,at,_t,Xt,un,_r,dn,Wn,Or,xi,Bi,cr,Ki],ao=[yn,ee];function ei(G){return ao.indexOf(G)>-1}function $i(G){return wa.indexOf(G)>-1}let Yo=[ee,se,gn,Dt,Vt,ii,Rr,In,yn,Wt,cn,lr,Vn,Be,at,_t,Xt,un,dn,_r,Wn,Or,xi,Bi,cr,Ki],li,Ei=[];function tr(G){if(li)return G(li);Ei.push(G)}function Pr(G){li=G,Ei.forEach(V=>V(G))}let F=function(){};F.prototype={on:function(G,V,J){var Z=this.e||(this.e={});return(Z[G]||(Z[G]=[])).push({fn:V,ctx:J}),this},once:function(G,V,J){var Z=this;function ge(){Z.off(G,ge),V.apply(J,arguments)}return ge._=V,this.on(G,ge,J)},emit:function(G){var V=[].slice.call(arguments,1),J=((this.e||(this.e={}))[G]||[]).slice(),Z=0,ge=J.length;for(Z;Z<ge;Z++)J[Z].fn.apply(J[Z].ctx,V);return this},off:function(G,V){var J=this.e||(this.e={}),Z=J[G],ge=[];if(Z&&V)for(var zt=0,On=Z.length;zt<On;zt++)Z[zt].fn!==V&&Z[zt].fn._!==V&&ge.push(Z[zt]);return ge.length?J[G]=ge:delete J[G],this}};var ie=F,ye={invokeArrayFns:vi,ON_LOAD:yn,ON_SHOW:ee,LINEFEED:T,RENDERJS_MODULES:bt,WXS_PROTOCOL:le,formatLog:ur,WXS_MODULES:Ln,ON_ERROR:Dt,UniLifecycleHooks:Yo,invokeCreateVueAppHook:Pr,parseNVueDataset:er,once:ai,I18N_JSON_DELIMITERS:u,Emitter:ie,addLeadingSlash:oi,resolveComponentInstance:gi,removeLeadingSlash:Qn,ON_RESIZE:lr,ON_APP_ENTER_FOREGROUND:Ho,ON_APP_ENTER_BACKGROUND:Mi,ON_HIDE:se,ON_PAGE_SCROLL:Be,ON_REACH_BOTTOM:_t,SCHEME_RE:At,DATA_RE:rn,cacheStringFunction:Qi,parseQuery:Jr,callOptions:fr,ON_UNHANDLE_REJECTION:Rr,ON_PAGE_NOT_FOUND:ii,PRIMARY_COLOR:P,getLen:To,TABBAR_HEIGHT:S,NAVBAR_HEIGHT:B,sortObject:mi,ON_THEME_CHANGE:Vt,ON_KEYBOARD_HEIGHT_CHANGE:Kr,BACKGROUND_COLOR:ze,ON_NAVIGATION_BAR_BUTTON_TAP:Or,stringifyQuery:bi,debounce:Go,ON_PULL_DOWN_REFRESH:Xt,ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED:Bi,ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED:cr,ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED:xi,ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED:Ki,ON_BACK_PRESS:Vn,UniNode:ro,NODE_TYPE_PAGE:Cn,ACTION_TYPE_PAGE_CREATE:qn,ACTION_TYPE_PAGE_CREATED:Ro,ACTION_TYPE_PAGE_SCROLL:br,ACTION_TYPE_INSERT:na,ACTION_TYPE_CREATE:La,ACTION_TYPE_REMOVE:Wo,ACTION_TYPE_ADD_EVENT:Mr,ACTION_TYPE_ADD_WXS_EVENT:hr,ACTION_TYPE_REMOVE_EVENT:Dr,ACTION_TYPE_SET_ATTRIBUTE:ra,ACTION_TYPE_REMOVE_ATTRIBUTE:Ea,ACTION_TYPE_SET_TEXT:xn,ON_READY:Wt,ON_UNLOAD:cn,EventChannel:Va,ON_REACH_BOTTOM_DISTANCE:k,parseUrl:Zr,onCreateVueApp:tr,ON_TAB_ITEM_TAP:at,ON_LAUNCH:gn,ACTION_TYPE_EVENT:oo,createUniEvent:yi,ON_WXS_INVOKE_CALL_METHOD:Ji,WEB_INVOKE_APPSERVICE:A,isRootHook:$i,isRootImmediateHook:ei,UniInputElement:Qt,UniTextAreaElement:ya,UniElement:ko,UniTextNode:Li,UniCommentNode:ta,forcePatchProp:Vi,resolveOwnerEl:jr,ATTR_V_OWNER_ID:io,ATTR_V_RENDERJS:Fi,JSON_PROTOCOL:Sn};return ye}(v);return c}var rI=1;function Fg(){return(rI++).toString()}var Zf=v=>v&&JSON.parse(JSON.stringify(v))||v;function vu(v){let c=tl(v);return c.substring(8,c.length-1)}function Xf(v){if(!zn(btoa))return"";let c=Array.prototype.map.call(new Uint8Array(v),b=>String.fromCharCode(b)).join("");return btoa(c)}function mu(v){if(!v||typeof v!="object")return!0;for(let c in v)if(Gl(v,c))return!1;return!0}var ef=["off","error","warn","info","log","debug"],tf={};function Lg(){ef.forEach(v=>{let c=ef.indexOf(v);tf[v]={},ef.forEach(b=>{ef.indexOf(b)<=c&&(tf[v][b]=!0)})})}function Xn(v){let c=global.WXEnvironment&&global.WXEnvironment.logLevel||"log";return tf[c]&&tf[c][v]}function po(v){global.nativeLog("wxInteractionAnalyzer: [jsfm]"+v,"__DEBUG")}function Vg(v,c,b){return`${c}@${b}#${v}`}var nf=class{constructor(c){this.instanceId=String(c),this.lastCallbackId=0,this.callbacks={},this.hooks={}}add(c){return this.lastCallbackId++,this.callbacks[this.lastCallbackId]=c,this.lastCallbackId}remove(c){let b=this.callbacks[c];return delete this.callbacks[c],b}registerHook(c,b,T,B){let S=Vg(c,b,T);this.hooks[S]&&console.warn(`[JS Framework] Override an existing component hook "${S}".`),this.hooks[S]=B}triggerHook(c,b,T,B){let S=Vg(c,b,T),k=this.hooks[S];if(!zn(k))return console.error(`[JS Framework] Invalid hook function type (${typeof k}) on "${S}".`),null;let u=null;try{u=k.apply(null,B||[])}catch(P){throw console.error(`[JS Framework] Failed to execute the hook function on "${S}".`),P}return u}consume(c,b,T){let B=this.callbacks[c];if((typeof T=="undefined"||T===!1)&&delete this.callbacks[c],zn(B))try{return B.call(null,b,T)}catch(S){throw console.error(`[JS Framework] Failed to execute the callback function:
 ${S.toString()}`),S}return new Error(`invalid callback id "${c}"`)}close(){this.callbacks={},this.hooks={}}};var rf={};function $g(v,c){v&&(rf[v]=c)}function nl(v){return rf[v]}function Ug(v){delete rf[v]}function qr(v){if(v){let c=rf[v];if(c&&c.taskCenter)return c.taskCenter}return null}function iI(v){v.calcClassList&&v.calcClassList()}function Qf(v,c,b){let{documentElement:T}=v;if(T.pureChildren.length>0||c.parentNode)return;let B=T.children,S=b?B.indexOf(b):-1;S<0?B.push(c):B.splice(S,0,c),c.nodeType===1?(c.role==="body"?(c.docId=v.id,c.ownerDocument=v,c.parentNode=T,Yl(c,T)):(c.children.forEach(k=>{k.parentNode=c}),ed(v,c),Yl(c,T),delete v.nodeMap[c.nodeId]),T.pureChildren.push(c),oI(v,c)):(c.parentNode=T,v.nodeMap[c.ref]=c)}function oI(v,c){let b=c.toJSON();v&&v.taskCenter&&zn(v.taskCenter.send)&&v.taskCenter.send("dom",{action:"createBody"},[b])}function ed(v,c){c.role="body",c.depth=1,delete v.nodeMap[c.nodeId],c.ref="_root",v.nodeMap._root=c,v.body=c}function Yl(v,c){v.parentNode=c,iI(v),c.docId&&(v.docId=c.docId,v.ownerDocument=c.ownerDocument,v.ownerDocument.nodeMap[v.nodeId]=v,v.depth=c.depth+1),v.children.forEach(b=>{Yl(b,v)})}function td(v){for(;v;){if(v.nodeType===1)return v;v=v.nextSibling}}function nd(v){for(;v;){if(v.nodeType===1)return v;v=v.previousSibling}}function ql(v,c,b,T=!1){b<0&&(b=0);let B=c[b-1],S=c[b];return c.splice(b,0,v),T&&(B&&(B.nextSibling=v),v.previousSibling=B,v.nextSibling=S,S&&(S.previousSibling=v)),b}function Kl(v,c,b,T=!1){let B=c.indexOf(v);if(B<0)return-1;if(T){let P=c[B-1],ze=c[B+1];P&&(P.nextSibling=ze),ze&&(ze.previousSibling=P)}c.splice(B,1);let S=b;B<=b&&(S=b-1);let k=c[S-1],u=c[S];return c.splice(S,0,v),T&&(k&&(k.nextSibling=v),v.previousSibling=k,v.nextSibling=u,u&&(u.previousSibling=v)),B===S?-1:b}function rd(v,c,b=!1){let T=c.indexOf(v);if(!(T<0)){if(b){let B=c[T-1],S=c[T+1];B&&(B.nextSibling=S),S&&(S.previousSibling=B)}c.splice(T,1)}}var Jl=class{constructor(){this.depth=0;this.nodeId=Fg(),this.ref=this.nodeId,this.children=[],this.pureChildren=[],this.parentNode=null,this.nextSibling=null,this.previousSibling=null}destroy(){let c=nl(this.docId);c&&(delete this.docId,delete c.nodeMap[this.nodeId]),this.children.forEach(b=>{b.destroy()})}};var Hg={};function id(v,c){if(!Yi(c)||!c.length)return;class b extends Oo{}c.forEach(T=>{b.prototype[T]=function(...B){let S=qr(this.docId);if(S)return S.send("component",{ref:this.ref,component:v,method:T},B)}}),Hg[v]=b}function jg(v){return Hg[v]}function Hr(v,c,b,T,B){return{type:"decl",prop:v,value:c+(b?" !important":""),raws:T,source:B}}var aI="backgroundColor",sI="backgroundImage",lI=v=>{let{value:c,important:b,raws:T,source:B}=v;return/^#?\S+$/.test(c)||/^rgba?(.+)$/.test(c)?[Hr(aI,c,b,T,B)]:/^linear-gradient(.+)$/.test(c)?[Hr(sI,c,b,T,B)]:[v]},cI="Width",uI="Style",fI="Color",_u=v=>{let{prop:c,value:b,important:T,raws:B,source:S}=v,k=b.replace(/\s*,\s*/g,",").split(/\s+/),u=[/^[\d\.]+\S*$/,/^(solid|dashed|dotted)$/,/\S+/].map(P=>{let ze=k.findIndex(At=>P.test(At));return ze<0?null:k.splice(ze,1)[0]});return k.length?[v]:[Hr(c+cI,(u[0]||"0").trim(),T,B,S),Hr(c+uI,(u[1]||"solid").trim(),T,B,S),Hr(c+fI,(u[2]||"#000000").trim(),T,B,S)]},dI="borderTop",hI="borderRight",pI="borderBottom",gI="borderLeft",od=v=>{let{prop:c,value:b,important:T,raws:B,source:S}=v,k=Jf(c).split("-")[1];k=Qu(k);let u=b.replace(/\s*,\s*/g,",").split(/\s+/);switch(u.length){case 1:return[v];case 2:u.push(u[0],u[1]);break;case 3:u.push(u[1]);break}return[Hr(dI+k,u[0],T,B,S),Hr(hI+k,u[1],T,B,S),Hr(pI+k,u[2],T,B,S),Hr(gI+k,u[3],T,B,S)]},vI="borderTopLeftRadius",mI="borderTopRightRadius",_I="borderBottomRightRadius",bI="borderBottomLeftRadius",yI=v=>{let{value:c,important:b,raws:T,source:B}=v,S=c.split(/\s+/);if(c.includes("/"))return[v];switch(S.length){case 1:return[v];case 2:S.push(S[0],S[1]);break;case 3:S.push(S[1]);break}return[Hr(vI,S[0],b,T,B),Hr(mI,S[1],b,T,B),Hr(_I,S[2],b,T,B),Hr(bI,S[3],b,T,B)]},EI=od,wI=od,SI="flexDirection",CI="flexWrap",AI=v=>{let{value:c,important:b,raws:T,source:B}=v,S=c.split(/\s+/),k=[/^(column|column-reverse|row|row-reverse)$/,/^(nowrap|wrap|wrap-reverse)$/].map(u=>{let P=S.findIndex(ze=>u.test(ze));return P<0?null:S.splice(P,1)[0]});return S.length?[v]:[Hr(SI,k[0]||"column",b,T,B),Hr(CI,k[1]||"nowrap",b,T,B)]},OI="Top",TI="Right",PI="Bottom",II="Left",zg=v=>c=>{let{value:b,important:T,raws:B,source:S}=c,k=b.split(/\s+/);switch(k.length){case 1:k.push(k[0],k[0],k[0]);break;case 2:k.push(k[0],k[1]);break;case 3:k.push(k[1]);break}return[Hr(v+OI,k[0],T,B,S),Hr(v+TI,k[1],T,B,S),Hr(v+PI,k[2],T,B,S),Hr(v+II,k[3],T,B,S)]},NI=zg("margin"),kI=zg("padding"),RI="transitionProperty",xI="transitionDuration",BI="transitionTimingFunction",MI="transitionDelay",DI=v=>{let c=/^(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?\s*(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?$/,{value:b,important:T,raws:B,source:S}=v,k=[],u=b.match(c);return u&&(u[1]&&k.push(Hr(RI,u[1],T,B,S)),u[2]&&k.push(Hr(xI,u[2],T,B,S)),u[3]&&k.push(Hr(BI,u[3],T,B,S)),u[4]&&k.push(Hr(MI,u[4],T,B,S))),k},Wg={transition:DI,margin:NI,padding:kI,border:_u,background:lI};pi(Wg,{borderTop:_u,borderRight:_u,borderBottom:_u,borderLeft:_u,borderStyle:EI,borderWidth:wI,borderColor:od,borderRadius:yI,flexFlow:AI});var Gg=Symbol("expanded"),Yg={postcssPlugin:"nvue:expand",Declaration(v){if(v[Gg])return;let c=Wg[v.prop];if(c){let b=c(v);b.length===1&&b[0]===v||v.replaceWith(b)}v[Gg]=!0}};var FI=Yg.Declaration;function ad(v,c){let b=pi({replaceWith(B){T=B}},LI(v,c)),T=[b];return FI(b),T}function LI(v,c){let b=c+"";return b.includes("!important")?{prop:v,value:b.replace(/\s*!important/,""),important:!0}:{prop:v,value:b,important:!1}}var VI="view",$I=["click","longpress","touchstart","touchmove","touchend","panstart","panmove","panend","horizontalpan","verticalpan","swipe"];function sd(v,c){let b=nl(v);b.nodeMap[c.nodeId]=c}var ld;function qg(v){ld||(ld=v)}var Oo=class extends Jl{constructor(c=VI,b={},T){super();let B=jg(c);if(B&&!T)return new B(c,b,!0);this.nodeType=1,this.type=c,this.attr=b.attr||{},this.style=b.style||{},this.classStyle=b.classStyle||{},this.classList=b.classList||[],this.styleSheet=b.styleSheet||{},this.event={}}appendChild(c){if(!(c.parentNode&&c.parentNode!==this)){if(c.parentNode){if(Xn("debug")&&po(`[appendChild](${this.docId},${c.type},${c.ref}) Move <${c.type}> to ${this.children.length} of <${this.type}> (${this.ref}).`),Kl(c,this.children,this.children.length,!0),c.nodeType===1){let b=Kl(c,this.pureChildren,this.pureChildren.length),T=qr(this.docId);if(T&&b>=0)return T.send("dom",{action:"moveElement"},[c.ref,this.ref,b])}}else if(Xn("debug")&&po(`[appendChild](${this.docId},${c.type},${c.ref}) Append <${c.type}> to <${this.type}> (${this.ref}).`),Yl(c,this),ql(c,this.children,this.children.length,!0),this.docId&&sd(this.docId,c),c.nodeType===1){ql(c,this.pureChildren,this.pureChildren.length);let b=qr(this.docId);if(b)return b.send("dom",{action:"addElement"},[this.ref,c.toJSON(),-1])}}}insertBefore(c,b){if(!(c.parentNode&&c.parentNode!==this)&&!(c===b||c.nextSibling&&c.nextSibling===b)){if(c.parentNode){if(Kl(c,this.children,this.children.indexOf(b),!0),c.nodeType===1){let T=td(b),B=Kl(c,this.pureChildren,T?this.pureChildren.indexOf(T):this.pureChildren.length),S=qr(this.docId);if(S&&B>=0)return S.send("dom",{action:"moveElement"},[c.ref,this.ref,B])}}else if(Xn("debug")&&po(`[insertBefore](${this.docId},${c.type},${c.ref}) Insert <${c.type}> to <${this.type}> (${this.ref}), before (${b.ref}).`),Yl(c,this),ql(c,this.children,this.children.indexOf(b),!0),this.docId&&sd(this.docId,c),c.nodeType===1){let T=td(b),B=ql(c,this.pureChildren,T?this.pureChildren.indexOf(T):this.pureChildren.length),S=qr(this.docId);if(S)return S.send("dom",{action:"addElement"},[this.ref,c.toJSON(),B])}}}insertAfter(c,b){if(!(c.parentNode&&c.parentNode!==this)&&!(c===b||c.previousSibling&&c.previousSibling===b)){if(c.parentNode){if(Kl(c,this.children,this.children.indexOf(b)+1,!0),c.nodeType===1){let T=Kl(c,this.pureChildren,this.pureChildren.indexOf(nd(b))+1),B=qr(this.docId);if(B&&T>=0)return B.send("dom",{action:"moveElement"},[c.ref,this.ref,T])}}else if(Xn("debug")&&po(`[insertAfter](${this.docId},${c.type},${c.ref}) Insert <${c.type}> to <${this.type}> (${this.ref}), after (${b.ref}).`),Yl(c,this),ql(c,this.children,this.children.indexOf(b)+1,!0),this.docId&&sd(this.docId,c),c.nodeType===1){let T=ql(c,this.pureChildren,this.pureChildren.indexOf(nd(b))+1),B=qr(this.docId);if(B)return B.send("dom",{action:"addElement"},[this.ref,c.toJSON(),T])}}}removeChild(c,b){if(c.parentNode&&(rd(c,this.children,!0),c.nodeType===1)){Xn("debug")&&po(`[removeChild](${this.docId},${c.type},${c.ref}) Remove <${c.type}> from <${this.type}> (${this.ref}).`),rd(c,this.pureChildren);let T=qr(this.docId);T&&T.send("dom",{action:"removeElement"},[c.ref])}b||c.destroy()}clear(){let c=qr(this.docId);c&&this.pureChildren.forEach(b=>{c.send("dom",{action:"removeElement"},[b.ref])}),this.children.forEach(b=>{b.destroy()}),this.children.length=0,this.pureChildren.length=0}setAttr(c,b,T){if(this.attr[c]===b&&T!==!1)return;this.attr[c]=b;let B=qr(this.docId);!T&&B&&B.send("dom",{action:"updateAttrs"},[this.ref,{[c]:b}])}setAttrs(c,b){if(mu(c))return;let T={};for(let B in c)this.attr[B]!==c[B]&&(this.attr[B]=c[B],T[B]=c[B]);if(!mu(T)){let B=qr(this.docId);!b&&B&&B.send("dom",{action:"updateAttrs"},[this.ref,T])}}setStyle(c,b,T){ad(c,b).forEach(({prop:B,value:S})=>{if(this.style[B]===S&&T!==!1)return;this.style[B]=S;let k=qr(this.docId);!T&&k&&k.send("dom",{action:"updateStyle"},[this.ref,{[B]:S}])})}setStyles(c,b){if(mu(c))return;let T={};for(let B in c)ad(B,c[B]).forEach(({prop:S,value:k})=>{this.style[S]!==k&&(this.style[S]=k,T[S]=k)});if(!mu(T)){let B=qr(this.docId);!b&&B&&B.send("dom",{action:"updateStyle"},[this.ref,T])}}setClassStyle(c){for(let T in this.classStyle)this.classStyle[T]="";pi(this.classStyle,c);let b=qr(this.docId);b&&b.send("dom",{action:"updateStyle"},[this.ref,this.toStyle()])}setClassList(c){c.length===this.classList.length&&c.filter(b=>!this.classList.includes(b)).length===0||(this.classList=c,this.parentNode&&this.calcClassList())}calcClassList(){this.setClassStyle(ld(this))}setStyleSheet(c){this.styleSheet=c}addEvent(c,b,T){if(this.event||(this.event={}),!this.event[c]){Xn("debug")&&po(`[addEvent](${this.docId},${this.type},${this.ref}) Add "${c}" event on <${this.type}> (${this.ref}).`),this.event[c]={handler:b,params:T};let B=qr(this.docId);B&&B.send("dom",{action:"addEvent"},[this.ref,c])}}removeEvent(c){if(this.event&&this.event[c]){Xn("debug")&&po(`[removeEvent](${this.docId},${this.type},${this.ref}) Remove "${c}" event on <${this.type}> (${this.ref}).`),delete this.event[c];let b=qr(this.docId);b&&b.send("dom",{action:"removeEvent"},[this.ref,c])}}fireEvent(c,b,T,B){let S=null,k=!1,u=this.event[c];if(u&&b){Xn("debug")&&po(`[fireEvent](${this.docId},${this.type},${this.ref}) Fire "${c}" event on <${this.type}> (${this.ref}).`);let P=u.handler;b.stopPropagation=()=>{k=!0},b.preventDefault=()=>{};try{B&&B.params?S=P.call(this,...B.params,b):S=P.call(this,b)}catch(ze){throw console.error(`[JS Framework] Failed to invoke the event handler of "${c}" on ${this.type} (${this.ref}):
 ${ze.toString()}`),ze}}return!k&&T&&$I.indexOf(c)!==-1&&this.parentNode&&this.parentNode.fireEvent&&(b.currentTarget=this.parentNode,this.parentNode.fireEvent(c,b,T)),S}toStyle(){return pi({},this.classStyle,this.style)}toJSON(c=!1){let b={ref:this.ref.toString(),type:this.type,attr:this.attr,style:this.toStyle()},T=[];for(let B in this.event){let{params:S}=this.event[B];S?T.push({type:B,params:S}):T.push(B)}return T.length&&(b.event=T),!c&&this.pureChildren.length&&(b.children=this.pureChildren.map(B=>B.toJSON())),b}toString(){return"<"+this.type+" attr="+JSON.stringify(this.attr)+" style="+JSON.stringify(this.toStyle())+">"+this.pureChildren.map(c=>c.toString()).join("")+"</"+this.type+">"}};function Kg(v){let c=v&&v.__v_raw;return c?Kg(c):v}function Jg(v){let c=vu(v);switch(c){case"Undefined":case"Null":return"";case"RegExp":return v.toString();case"Date":return v.toISOString();case"Number":case"String":case"Boolean":case"Array":case"Object":return Kg(v);case"ArrayBuffer":return{"@type":"binary",dataType:c,base64:Xf(v)};case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":return{"@type":"binary",dataType:c,base64:Xf(v.buffer)};default:return JSON.stringify(v)}}var of=function(){},Bc=class{constructor(c,b){Object.defineProperty(this,"instanceId",{enumerable:!0,value:String(c)}),Object.defineProperty(this,"callbackManager",{enumerable:!0,value:new nf(c)}),of=b||function(){}}callback(c,b,T){return this.callbackManager.consume(c,b,T)}registerHook(c,b,T,B){return this.callbackManager.registerHook(c,b,T,B)}triggerHook(c,b,T,B){return this.callbackManager.triggerHook(c,b,T,B)}updateData(c,b,T){this.send("module",{module:"dom",method:"updateComponentData"},[c,b,T])}destroyCallback(){return this.callbackManager.close()}normalize(c,b=!1){let T=vu(c);if(c&&c instanceof Oo)return c.ref;if(c&&c.$el instanceof Oo)return c.$el.ref;if(T==="Function")return this.callbackManager.add(c).toString();if(b){if(T==="Object"){let B={};for(let S in c)B[S]=this.normalize(c[S],!0);return B}if(T==="Array")return c.map(B=>this.normalize(B,!0))}return c&&c.ref&&c["[[VirtualElement]]"]?c.ref:Jg(c)}send(c,b,T,B){let{action:S,component:k,ref:u,module:P,method:ze}=b;switch(T=T.map(At=>this.normalize(At,c!=="module")),vu(B)==="Object"&&(B=this.normalize(B,!0)),c){case"dom":return Xn("debug")&&po(`[task](${this.instanceId},${c},${S}) ${JSON.stringify(T)}`),this[S](this.instanceId,T);case"component":return this.componentHandler(this.instanceId,u,ze,T,pi({component:k},B));default:return Xn("debug")&&po(`[task](${this.instanceId},${P},${ze}) ${JSON.stringify(T)}`),this.moduleHandler(this.instanceId,P,ze,T,B)}}callDOM(c,b){return this[c](this.instanceId,b)}callComponent(c,b,T,B){return this.componentHandler(this.instanceId,c,b,T,B)}callModule(c,b,T,B){return this.moduleHandler(this.instanceId,c,b,T,B)}};function Zg(){let v={createFinish:global.callCreateFinish,updateFinish:global.callUpdateFinish,refreshFinish:global.callRefreshFinish,createBody:global.callCreateBody,addElement:global.callAddElement,removeElement:global.callRemoveElement,moveElement:global.callMoveElement,updateAttrs:global.callUpdateAttrs,updateStyle:global.callUpdateStyle,addEvent:global.callAddEvent,removeEvent:global.callRemoveEvent,__updateComponentData:global.__updateComponentData},c=Bc.prototype;for(let b in v){let T=v[b];c[b]=T?(B,S)=>T(B,...S):(B,S)=>of(B,[{module:"dom",method:b,args:S}],"-1")}c.componentHandler=global.callNativeComponent||((b,T,B,S,k)=>of(b,[{component:k.component,ref:T,method:B,args:S}])),c.moduleHandler=global.callNativeModule||((b,T,B,S)=>of(b,[{module:T,method:B,args:S}]))}function UI(v,c,b,T,B,S){let k=v.getRef(c);if(k)return v.fireEvent(k,b,T,B,S);if(T)return T._nodeId=c,v.fireEvent(v.getRef("_documentElement"),b,T,B,S)}function HI(v,c,b,T){return v.taskCenter.callback(c,b,T)}function jI(v,c,b,T,B){if(!v||!v.taskCenter)return console.error(`[JS Framework] Can't find "document" or "taskCenter".`),null;let S=null;try{S=v.taskCenter.triggerHook(c,b,T,B)}catch(k){throw console.error(`[JS Framework] Failed to trigger the "${b}@${T}" hook on ${c}.`),k}return S}function cd(v,c){let b=nl(v);if(!b)return new Error(`[JS Framework] Failed to receiveTasks, instance (${v}) is not available.`);if(Yi(c))return c.map(T=>{switch(T.method){case"callback":return HI(b,...T.args);case"fireEventSync":case"fireEvent":return UI(b,...T.args);case"componentHook":return jI(b,...T.args)}})}var Cl={};function Xg(v={}){for(let c in v)Gl(Cl,c)||(Cl[c]={}),!!Yi(v[c])&&v[c].forEach(b=>{qi(b)?Cl[c][b]=!0:xc(b)&&qi(b.name)&&(Cl[c][b.name]=b.args||[])})}function af(v,c){return qi(c)?!!(Cl[v]&&Cl[v][c]):!!Cl[v]}function Qg(v){return Cl[v]}var ud={};function ev(v){!Yi(v)||v.forEach(c=>{!c||(qi(c)?ud[c]=!0:xc(c)&&qi(c.type)&&(ud[c.type]=c,id(c.type,c.methods)))})}function fd(v){return!!ud[v]}var Al=[];function sf(v,c){dd(v)?console.warn(`Service "${v}" has been registered already!`):(c=pi({},c),Al.push({name:v,options:c}))}function lf(v){Al.some((c,b)=>{if(c.name===v)return Al.splice(b,1),!0})}function dd(v){return zI(v)>=0}function zI(v){return Al.map(c=>c.name).indexOf(v)}function WI(v){return c=>{let b=Ju(v,c),{createApp:T}=b;b.createVueApp=b.createApp=(B,S)=>T(B,S).use(GI,c),c.Vue=b}}var GI={install(v,c){YI(v,c),pu(c).initApp(v)}};function YI(v,c){let{mount:b}=v;v.mount=T=>{let B=b(T);return T==="#app"&&c.__registerApp(B),B}}function qI(v){let{UniShared:c,VueShared:b,VueReactivity:T}=v;var B=function(S,k,u,P){"use strict";var ze=[];function At(i){ze.push(i)}function rn(){ze.pop()}function A(i){P.pauseTracking();for(var a=ze.length?ze[ze.length-1].component:null,f=a&&a.appContext.config.warnHandler,p=le(),w=arguments.length,E=new Array(w>1?w-1:0),I=1;I<w;I++)E[I-1]=arguments[I];if(f)gn(f,a,11,[i+E.join(""),a&&a.proxy,p.map(x=>{var{vnode:K}=x;return"at <".concat(Ls(a,K.type),">")}).join(`
`),p]);else{var D=["[Vue warn]: ".concat(i),...E];p.length&&D.push(`
`,...Sn(p)),console.warn(...D)}P.resetTracking()}function le(){var i=ze[ze.length-1];if(!i)return[];for(var a=[];i;){var f=a[0];f&&f.vnode===i?f.recurseCount++:a.push({vnode:i,recurseCount:0});var p=i.component&&i.component.parent;i=p&&p.vnode}return a}function Sn(i){var a=[];return i.forEach((f,p)=>{a.push(...p===0?[]:[`
`],...Ln(f))}),a}function Ln(i){var{vnode:a,recurseCount:f}=i,p=f>0?"... (".concat(f," recursive calls)"):"",w=a.component?a.component.parent==null:!1,E=" at <".concat(Ls(a.component,a.type,w)),I=">"+p;return a.props?[E,...bt(a.props),I]:[E+I]}function bt(i){var a=[],f=Object.keys(i);return f.slice(0,3).forEach(p=>{a.push(...ee(p,i[p]))}),f.length>3&&a.push(" ..."),a}function ee(i,a,f){return u.isString(a)?(a=JSON.stringify(a),f?a:["".concat(i,"=").concat(a)]):typeof a=="number"||typeof a=="boolean"||a==null?f?a:["".concat(i,"=").concat(a)]:P.isRef(a)?(a=ee(i,P.toRaw(a.value),!0),f?a:["".concat(i,"=Ref<"),a,">"]):u.isFunction(a)?["".concat(i,"=fn").concat(a.name?"<".concat(a.name,">"):"")]:(a=P.toRaw(a),f?a:["".concat(i,"="),a])}var se={sp:"serverPrefetch hook",bc:"beforeCreate hook",c:"created hook",bm:"beforeMount hook",m:"mounted hook",bu:"beforeUpdate hook",u:"updated",bum:"beforeUnmount hook",um:"unmounted hook",a:"activated hook",da:"deactivated hook",ec:"errorCaptured hook",rtc:"renderTracked hook",rtg:"renderTriggered hook",[0]:"setup function",[1]:"render function",[2]:"watcher getter",[3]:"watcher callback",[4]:"watcher cleanup function",[5]:"native event handler",[6]:"component event handler",[7]:"vnode hook",[8]:"directive hook",[9]:"transition hook",[10]:"app errorHandler",[11]:"app warnHandler",[12]:"ref function",[13]:"async component loader",[14]:"scheduler flush. This is likely a Vue internals bug. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/core"};function gn(i,a,f,p){var w;try{w=p?i(...p):i()}catch(E){Vt(E,a,f)}return w}function Dt(i,a,f,p){if(u.isFunction(i)){var w=gn(i,a,f,p);return w&&u.isPromise(w)&&w.catch(D=>{Vt(D,a,f)}),w}for(var E=[],I=0;I<i.length;I++)E.push(Dt(i[I],a,f,p));return E}function Vt(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0,w=a?a.vnode:null;if(a){for(var E=a.parent,I=a.proxy,D=se[f]||f;E;){var x=E.ec;if(x){for(var K=0;K<x.length;K++)if(x[K](i,I,D)===!1)return}E=E.parent}var ue=a.appContext.config.errorHandler;if(ue){gn(ue,null,10,[i,I,D]);return}}Kr(i,f,w,p)}function Kr(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!0;{var w=se[a]||a;f&&At(f),A("Unhandled error".concat(w?" during execution of ".concat(w):"")),f&&rn(),console.error(i)}}var ii=!1,Rr=!1,yn=[],Wt=0,cn=[],In=null,Wn=0,lr=[],Vn=null,Be=0,at={then(i){setTimeout(()=>i(),0)}},_t=S.platform==="iOS",Xt=_t?at:Promise.resolve(),un=null,dn=null,_r=100;function Or(i){var a=un||Xt;return i?a.then(this?i.bind(this):i):a}function xi(i){for(var a=Wt+1,f=yn.length;a<f;){var p=a+f>>>1,w=Xi(yn[p]);w<i?a=p+1:f=p}return a}function Bi(i){(!yn.length||!yn.includes(i,ii&&i.allowRecurse?Wt+1:Wt))&&i!==dn&&(i.id==null?yn.push(i):yn.splice(xi(i.id),0,i),cr())}function cr(){!ii&&!Rr&&(Rr=!0,un=Xt.then(jr))}function Ki(i){var a=yn.indexOf(i);a>Wt&&yn.splice(a,1)}function Ho(i,a,f,p){u.isArray(i)?f.push(...i):(!a||!a.includes(i,i.allowRecurse?p+1:p))&&f.push(i),cr()}function Mi(i){Ho(i,In,cn,Wn)}function Ji(i){Ho(i,Vn,lr,Be)}function Zi(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(cn.length){for(dn=a,In=[...new Set(cn)],cn.length=0,i=i||new Map,Wn=0;Wn<In.length;Wn++)zr(i,In[Wn])||In[Wn]();In=null,Wn=0,dn=null,Zi(i,a)}}function gi(i){if(Zi(),lr.length){var a=[...new Set(lr)];if(lr.length=0,Vn){Vn.push(...a);return}for(Vn=a,i=i||new Map,Vn.sort((f,p)=>Xi(f)-Xi(p)),Be=0;Be<Vn.length;Be++)zr(i,Vn[Be])||Vn[Be]();Vn=null,Be=0}}var Xi=i=>i.id==null?1/0:i.id;function jr(i){Rr=!1,ii=!0,i=i||new Map,Zi(i),yn.sort((p,w)=>Xi(p)-Xi(w));var a=p=>zr(i,p);try{for(Wt=0;Wt<yn.length;Wt++){var f=yn[Wt];if(f&&f.active!==!1){if(a(f))continue;gn(f,null,14)}}}finally{Wt=0,yn.length=0,gi(i),ii=!1,un=null,(yn.length||cn.length||lr.length)&&jr(i)}}function zr(i,a){if(!i.has(a))i.set(a,1);else{var f=i.get(a);if(f>_r){var p=a.ownerInstance,w=p&&Ra(p.type);return A("Maximum recursive updates exceeded".concat(w?" in component <".concat(w,">"):"",". ")+"This means you have a reactive effect that is mutating its own dependencies and thus recursively triggering itself. Possible sources include component template, render function, updated hook or watcher source function."),!0}else i.set(a,f+1)}}var ur=!1,xr=new Set;u.getGlobalThis().__VUE_HMR_RUNTIME__={createRecord:mi(oi),rerender:mi(vi),reload:mi(ai)};var Qi=new Map;function To(i){var a=i.type.__hmrId,f=Qi.get(a);f||(oi(a,i.type),f=Qi.get(a)),f.instances.add(i)}function Po(i){Qi.get(i.type.__hmrId).instances.delete(i)}function oi(i,a){return Qi.has(i)?!1:(Qi.set(i,{initialDef:Qn(a),instances:new Set}),!0)}function Qn(i){return Bl(i)?i.__vccOpts:i}function vi(i,a){var f=Qi.get(i);!f||(f.initialDef.render=a,[...f.instances].forEach(p=>{a&&(p.render=a,Qn(p.type).render=a),p.renderCache=[],ur=!0,p.update(),ur=!1}))}function ai(i,a){var f=Qi.get(i);if(!!f){a=Qn(a),fr(f.initialDef,a);var p=[...f.instances];for(var w of p){var E=Qn(w.type);xr.has(E)||(E!==f.initialDef&&fr(E,a),xr.add(E)),w.appContext.optionsCache.delete(w.type),w.ceReload?(xr.add(E),w.ceReload(a.styles),xr.delete(E)):w.parent?(Bi(w.parent.update),w.parent.type.__asyncLoader&&w.parent.ceReload&&w.parent.ceReload(a.styles)):w.appContext.reload?w.appContext.reload():typeof window!="undefined"?window.location.reload():console.warn("[HMR] Root or manually mounted instance modified. Full reload required.")}Ji(()=>{for(var I of p)xr.delete(Qn(I.type))})}}function fr(i,a){u.extend(i,a);for(var f in i)f!=="__file"&&!(f in a)&&delete i[f]}function mi(i){return(a,f)=>{try{return i(a,f)}catch(p){console.error(p),console.warn("[HMR] Something went wrong during Vue component hot-reload. Full reload required.")}}}S.devtools=void 0;var _i=[],bi=!1;function Tr(i){for(var a=arguments.length,f=new Array(a>1?a-1:0),p=1;p<a;p++)f[p-1]=arguments[p];S.devtools?S.devtools.emit(i,...f):bi||_i.push({event:i,args:f})}function Br(i,a){var f,p;if(S.devtools=i,S.devtools)S.devtools.enabled=!0,_i.forEach(E=>{var{event:I,args:D}=E;return S.devtools.emit(I,...D)}),_i=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((p=(f=window.navigator)===null||f===void 0?void 0:f.userAgent)===null||p===void 0?void 0:p.includes("jsdom"))){var w=a.__VUE_DEVTOOLS_HOOK_REPLAY__=a.__VUE_DEVTOOLS_HOOK_REPLAY__||[];w.push(E=>{Br(E,a)}),setTimeout(()=>{S.devtools||(a.__VUE_DEVTOOLS_HOOK_REPLAY__=null,bi=!0,_i=[])},3e3)}else bi=!0,_i=[]}function Jr(i,a){Tr("app:init",i,a,{Fragment:Ht,Text:Jt,Comment:on,Static:gr})}function Zr(i){Tr("app:unmount",i)}var er=go("component:added"),eo=go("component:updated"),to=go("component:removed");function go(i){return a=>{Tr(i,a.appContext.app,a.uid,a.parent?a.parent.uid:void 0,a)}}var yi=jo("perf:start"),Io=jo("perf:end");function jo(i){return(a,f,p)=>{Tr(i,a.appContext.app,a.uid,a,f,p)}}function ba(i,a,f){Tr("component:emit",i.appContext.app,i,a,f)}function zo(i,a){if(!i.isUnmounted){for(var f=i.vnode.props||u.EMPTY_OBJ,p=arguments.length,w=new Array(p>2?p-2:0),E=2;E<p;E++)w[E-2]=arguments[E];{var{emitsOptions:I,propsOptions:[D]}=i;if(I)if(!(a in I))(!D||!(u.toHandlerKey(a)in D))&&A('Component emitted event "'.concat(a,'" but it is neither declared in ')+'the emits option nor as an "'.concat(u.toHandlerKey(a),'" prop.'));else{var x=I[a];if(u.isFunction(x)){var K=x(...w);K||A('Invalid event arguments: event validation failed for event "'.concat(a,'".'))}}}var ue=w,oe=a.startsWith("update:"),ne=oe&&a.slice(7);if(ne&&ne in f){var Ee="".concat(ne==="modelValue"?"model":ne,"Modifiers"),{number:He,trim:it}=f[Ee]||u.EMPTY_OBJ;it&&(ue=w.map(Ze=>Ze.trim())),He&&(ue=w.map(u.toNumber))}ba(i,a,ue);{var dt=a.toLowerCase();dt!==a&&f[u.toHandlerKey(dt)]&&A('Event "'.concat(dt,'" is emitted in component ')+"".concat(Ls(i,i.type),' but the handler is registered for "').concat(a,'". ')+"Note that HTML attributes are case-insensitive and you cannot use v-on to listen to camelCase events when using in-DOM templates. "+'You should probably use "'.concat(u.hyphenate(a),'" instead of "').concat(a,'".'))}var _e,ae=f[_e=u.toHandlerKey(a)]||f[_e=u.toHandlerKey(u.camelize(a))];!ae&&oe&&(ae=f[_e=u.toHandlerKey(u.hyphenate(a))]),ae&&Dt(ae,i,6,ue);var ve=f[_e+"Once"];if(ve){if(!i.emitted)i.emitted={};else if(i.emitted[_e])return;i.emitted[_e]=!0,Dt(ve,i,6,ue)}}}function no(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=a.emitsCache,w=p.get(i);if(w!==void 0)return w;var E=i.emits,I={},D=!1;if(!u.isFunction(i)){var x=K=>{var ue=no(K,a,!0);ue&&(D=!0,u.extend(I,ue))};!f&&a.mixins.length&&a.mixins.forEach(x),i.extends&&x(i.extends),i.mixins&&i.mixins.forEach(x)}return!E&&!D?(p.set(i,null),null):(u.isArray(E)?E.forEach(K=>I[K]=null):u.extend(I,E),p.set(i,I),I)}function Cn(i,a){return!i||!u.isOn(a)?!1:(a=a.slice(2).replace(/Once$/,""),u.hasOwn(i,a[0].toLowerCase()+a.slice(1))||u.hasOwn(i,u.hyphenate(a))||u.hasOwn(i,a))}var An=null,Nn=null;function dr(i){var a=An;return An=i,Nn=i&&i.type.__scopeId||null,a}function No(i){Nn=i}function Mt(){Nn=null}var ke=i=>ro;function ro(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:An;if(!a||i._n)return i;var f=function(){f._d&&is(-1);var p=dr(a),w=i(...arguments);return dr(p),f._d&&is(1),eo(a),w};return f._n=!0,f._c=!0,f._d=!0,f}var si=!1;function Di(){si=!0}function io(i){var{type:a,vnode:f,proxy:p,withProxy:w,props:E,propsOptions:[I],slots:D,attrs:x,emit:K,render:ue,renderCache:oe,data:ne,setupState:Ee,ctx:He,inheritAttrs:it}=i,dt,_e,ae=dr(i);si=!1;try{if(f.shapeFlag&4){var ve=w||p;dt=ir(ue.call(ve,ve,oe,E,Ee,ne,He)),_e=x}else{var Ze=a;x===E&&Di(),dt=ir(Ze.length>1?Ze(E,{get attrs(){return Di(),x},slots:D,emit:K}):Ze(E,null)),_e=a.props?x:ta(x)}}catch(de){Un.length=0,Vt(de,i,1),dt=kn(on)}var Oe=dt,rt=void 0;if(dt.patchFlag>0&&dt.patchFlag&2048&&([Oe,rt]=Fi(dt)),_e&&it!==!1){var st=Object.keys(_e),{shapeFlag:Ge}=Oe;if(st.length){if(Ge&(1|6))I&&st.some(u.isModelListener)&&(_e=ko(_e,I)),Oe=di(Oe,_e);else if(!si&&Oe.type!==on){for(var St=Object.keys(x),Ot=[],Tt=[],Zt=0,R=St.length;Zt<R;Zt++){var U=St[Zt];u.isOn(U)?u.isModelListener(U)||Ot.push(U[2].toLowerCase()+U.slice(3)):Tt.push(U)}Tt.length&&A("Extraneous non-props attributes ("+"".concat(Tt.join(", "),") ")+"were passed to component but could not be automatically inherited because component renders fragment or text root nodes."),Ot.length&&A("Extraneous non-emits event listeners ("+"".concat(Ot.join(", "),") ")+'were passed to component but could not be automatically inherited because component renders fragment or text root nodes. If the listener is intended to be a component custom event listener only, declare it using the "emits" option.')}}}return f.dirs&&(Qt(Oe)||A("Runtime directive used on component with non-element root node. The directives will not function as intended."),Oe=di(Oe),Oe.dirs=Oe.dirs?Oe.dirs.concat(f.dirs):f.dirs),f.transition&&(Qt(Oe)||A("Component inside <Transition> renders non-element root node that cannot be animated."),Oe.transition=f.transition),rt?rt(Oe):dt=Oe,dr(ae),dt}var Fi=i=>{var a=i.children,f=i.dynamicChildren,p=Xr(a);if(!p)return[i,void 0];var w=a.indexOf(p),E=f?f.indexOf(p):-1,I=D=>{a[w]=D,f&&(E>-1?f[E]=D:D.patchFlag>0&&(i.dynamicChildren=[...f,D]))};return[ir(p),I]};function Xr(i){for(var a,f=0;f<i.length;f++){var p=i[f];if($r(p)){if(p.type!==on||p.children==="v-if"){if(a)return;a=p}}else return}return a}var ta=i=>{var a;for(var f in i)(f==="class"||f==="style"||u.isOn(f))&&((a||(a={}))[f]=i[f]);return a},ko=(i,a)=>{var f={};for(var p in i)(!u.isModelListener(p)||!(p.slice(9)in a))&&(f[p]=i[p]);return f},Qt=i=>i.shapeFlag&(6|1)||i.type===on;function ya(i,a,f){var{props:p,children:w,component:E}=i,{props:I,children:D,patchFlag:x}=a,K=E.emitsOptions;if((w||D)&&ur||a.dirs||a.transition)return!0;if(f&&x>=0){if(x&1024)return!0;if(x&16)return p?Li(p,I,K):!!I;if(x&8)for(var ue=a.dynamicProps,oe=0;oe<ue.length;oe++){var ne=ue[oe];if(I[ne]!==p[ne]&&!Cn(K,ne))return!0}}else return(w||D)&&(!D||!D.$stable)?!0:p===I?!1:p?I?Li(p,I,K):!0:!!I;return!1}function Li(i,a,f){var p=Object.keys(a);if(p.length!==Object.keys(i).length)return!0;for(var w=0;w<p.length;w++){var E=p[w];if(a[E]!==i[E]&&!Cn(f,E))return!0}return!1}function hn(i,a){for(var{vnode:f,parent:p}=i;p&&p.subTree===f;)(f=p.vnode).el=a,p=p.parent}var Qr=i=>i.__isSuspense,Vi={name:"Suspense",__isSuspense:!0,process(i,a,f,p,w,E,I,D,x,K){i==null?La(a,f,p,w,E,I,D,x,K):na(i,a,f,p,w,I,D,x,K)},hydrate:Ea,create:ra,normalize:Mr},qn=Vi;function Ro(i,a){var f=i.props&&i.props[a];u.isFunction(f)&&f()}function La(i,a,f,p,w,E,I,D,x){var{p:K,o:{createElement:ue}}=x,oe=ue("div",a),ne=i.suspense=ra(i,w,p,a,oe,f,E,I,D,x);K(null,ne.pendingBranch=i.ssContent,oe,null,p,ne,E,I),ne.deps>0?(Ro(i,"onPending"),Ro(i,"onFallback"),K(null,i.ssFallback,a,f,p,null,E,I),hr(ne,i.ssFallback)):ne.resolve()}function na(i,a,f,p,w,E,I,D,x){var{p:K,um:ue,o:{createElement:oe}}=x,ne=a.suspense=i.suspense;ne.vnode=a,a.el=i.el;var Ee=a.ssContent,He=a.ssFallback,{activeBranch:it,pendingBranch:dt,isInFallback:_e,isHydrating:ae}=ne;if(dt)ne.pendingBranch=Ee,co(Ee,dt)?(K(dt,Ee,ne.hiddenContainer,null,w,ne,E,I,D),ne.deps<=0?ne.resolve():_e&&(K(it,He,f,p,w,null,E,I,D),hr(ne,He))):(ne.pendingId++,ae?(ne.isHydrating=!1,ne.activeBranch=dt):ue(dt,w,ne),ne.deps=0,ne.effects.length=0,ne.hiddenContainer=oe("div",f),_e?(K(null,Ee,ne.hiddenContainer,null,w,ne,E,I,D),ne.deps<=0?ne.resolve():(K(it,He,f,p,w,null,E,I,D),hr(ne,He))):it&&co(Ee,it)?(K(it,Ee,f,p,w,ne,E,I,D),ne.resolve(!0)):(K(null,Ee,ne.hiddenContainer,null,w,ne,E,I,D),ne.deps<=0&&ne.resolve()));else if(it&&co(Ee,it))K(it,Ee,f,p,w,ne,E,I,D),hr(ne,Ee);else if(Ro(a,"onPending"),ne.pendingBranch=Ee,ne.pendingId++,K(null,Ee,ne.hiddenContainer,null,w,ne,E,I,D),ne.deps<=0)ne.resolve();else{var{timeout:ve,pendingId:Ze}=ne;ve>0?setTimeout(()=>{ne.pendingId===Ze&&ne.fallback(He)},ve):ve===0&&ne.fallback(He)}}var Wo=!1;function ra(i,a,f,p,w,E,I,D,x,K){var ue=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1;Wo||(Wo=!0,console[console.info?"info":"log"]("<Suspense> is an experimental feature and its API will likely change."));var{p:oe,m:ne,um:Ee,n:He,o:{parentNode:it,remove:dt}}=K,_e=u.toNumber(i.props&&i.props.timeout),ae={vnode:i,parent:a,parentComponent:f,isSVG:I,container:p,hiddenContainer:w,anchor:E,deps:0,pendingId:0,timeout:typeof _e=="number"?_e:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:ue,isUnmounted:!1,effects:[],resolve(){var ve=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;{if(!ve&&!ae.pendingBranch)throw new Error("suspense.resolve() is called without a pending branch.");if(ae.isUnmounted)throw new Error("suspense.resolve() is called on an already unmounted suspense boundary.")}var{vnode:Ze,activeBranch:Oe,pendingBranch:rt,pendingId:st,effects:Ge,parentComponent:St,container:Ot}=ae;if(ae.isHydrating)ae.isHydrating=!1;else if(!ve){var Tt=Oe&&rt.transition&&rt.transition.mode==="out-in";Tt&&(Oe.transition.afterLeave=()=>{st===ae.pendingId&&ne(rt,Ot,Zt,0)});var{anchor:Zt}=ae;Oe&&(Zt=He(Oe),Ee(Oe,St,ae,!0)),Tt||ne(rt,Ot,Zt,0)}hr(ae,rt),ae.pendingBranch=null,ae.isInFallback=!1;for(var R=ae.parent,U=!1;R;){if(R.pendingBranch){R.effects.push(...Ge),U=!0;break}R=R.parent}U||Ji(Ge),ae.effects=[],Ro(Ze,"onResolve")},fallback(ve){if(!!ae.pendingBranch){var{vnode:Ze,activeBranch:Oe,parentComponent:rt,container:st,isSVG:Ge}=ae;Ro(Ze,"onFallback");var St=He(Oe),Ot=()=>{!ae.isInFallback||(oe(null,ve,st,St,rt,null,Ge,D,x),hr(ae,ve))},Tt=ve.transition&&ve.transition.mode==="out-in";Tt&&(Oe.transition.afterLeave=Ot),ae.isInFallback=!0,Ee(Oe,rt,null,!0),Tt||Ot()}},move(ve,Ze,Oe){ae.activeBranch&&ne(ae.activeBranch,ve,Ze,Oe),ae.container=ve},next(){return ae.activeBranch&&He(ae.activeBranch)},registerDep(ve,Ze){var Oe=!!ae.pendingBranch;Oe&&ae.deps++;var rt=ve.vnode.el;ve.asyncDep.catch(st=>{Vt(st,ve,0)}).then(st=>{if(!(ve.isUnmounted||ae.isUnmounted||ae.pendingId!==ve.suspenseId)){ve.asyncResolved=!0;var{vnode:Ge}=ve;At(Ge),Na(ve,st,!1),rt&&(Ge.el=rt);var St=!rt&&ve.subTree.el;Ze(ve,Ge,it(rt||ve.subTree.el),rt?null:He(ve.subTree),ae,I,x),St&&dt(St),hn(ve,Ge.el),rn(),Oe&&--ae.deps===0&&ae.resolve()}})},unmount(ve,Ze){ae.isUnmounted=!0,ae.activeBranch&&Ee(ae.activeBranch,f,ve,Ze),ae.pendingBranch&&Ee(ae.pendingBranch,f,ve,Ze)}};return ae}function Ea(i,a,f,p,w,E,I,D,x){var K=a.suspense=ra(a,p,f,i.parentNode,document.createElement("div"),null,w,E,I,D,!0),ue=x(i,K.pendingBranch=a.ssContent,f,K,E,I);return K.deps===0&&K.resolve(),ue}function Mr(i){var{shapeFlag:a,children:f}=i,p=a&32;i.ssContent=Dr(p?f.default:f),i.ssFallback=p?Dr(f.fallback):kn(on)}function Dr(i){var a;if(u.isFunction(i)){var f=Oi&&i._c;f&&(i._d=!1,ca()),i=i(),f&&(i._d=!0,a=Zn,ua())}if(u.isArray(i)){var p=Xr(i);p||A("<Suspense> slots expect a single root node."),i=p}return i=ir(i),a&&!i.dynamicChildren&&(i.dynamicChildren=a.filter(w=>w!==i)),i}function xn(i,a){a&&a.pendingBranch?u.isArray(i)?a.effects.push(...i):a.effects.push(i):Ji(i)}function hr(i,a){i.activeBranch=a;var{vnode:f,parentComponent:p}=i,w=f.el=a.el;p&&p.subTree===f&&(p.vnode.el=w,hn(p,w))}function br(i,a){if(!Pn)A("provide() can only be used inside setup().");else{var f=Pn.provides,p=Pn.parent&&Pn.parent.provides;p===f&&(f=Pn.provides=Object.create(p)),f[i]=a,Pn.type.mpType==="app"&&Pn.appContext.app.provide(i,a)}}function oo(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=Pn||An;if(p){var w=p.parent==null?p.vnode.appContext&&p.vnode.appContext.provides:p.parent.provides;if(w&&i in w)return w[i];if(arguments.length>1)return f&&u.isFunction(a)?a.call(p.proxy):a;A('injection "'.concat(String(i),'" not found.'))}else A("inject() can only be used inside setup() or functional components.")}function Go(i,a){return $i(i,null,a)}function Va(i,a){return $i(i,null,Object.assign(Object.assign({},a),{flush:"post"}))}function wa(i,a){return $i(i,null,Object.assign(Object.assign({},a),{flush:"sync"}))}var ao={};function ei(i,a,f){return u.isFunction(a)||A("`watch(fn, options?)` signature has been moved to a separate API. Use `watchEffect(fn, options?)` instead. `watch` now only supports `watch(source, cb, options?) signature."),$i(i,a,f)}function $i(i,a){var{immediate:f,deep:p,flush:w,onTrack:E,onTrigger:I}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:u.EMPTY_OBJ;a||(f!==void 0&&A('watch() "immediate" option is only respected when using the watch(source, callback, options?) signature.'),p!==void 0&&A('watch() "deep" option is only respected when using the watch(source, callback, options?) signature.'));var D=ve=>{A("Invalid watch source: ",ve,"A watch source can only be a getter/effect function, a ref, a reactive object, or an array of these types.")},x=Pn,K,ue=!1,oe=!1;if(P.isRef(i)?(K=()=>i.value,ue=P.isShallow(i)):P.isReactive(i)?(K=()=>i,p=!0):u.isArray(i)?(oe=!0,ue=i.some(ve=>P.isReactive(ve)||P.isShallow(ve)),K=()=>i.map(ve=>{if(P.isRef(ve))return ve.value;if(P.isReactive(ve))return Ei(ve);if(u.isFunction(ve))return gn(ve,x,2);D(ve)})):u.isFunction(i)?a?K=()=>gn(i,x,2):K=()=>{if(!(x&&x.isUnmounted))return Ee&&Ee(),Dt(i,x,3,[He])}:(K=u.NOOP,D(i)),a&&p){var ne=K;K=()=>Ei(ne())}var Ee,He=ve=>{Ee=ae.onStop=()=>{gn(ve,x,4)}};if(S.isInSSRComponentSetup)return He=u.NOOP,a?f&&Dt(a,x,3,[K(),oe?[]:void 0,He]):K(),u.NOOP;var it=oe?[]:ao,dt=()=>{if(!!ae.active)if(a){var ve=ae.run();(p||ue||(oe?ve.some((Ze,Oe)=>u.hasChanged(Ze,it[Oe])):u.hasChanged(ve,it)))&&(Ee&&Ee(),Dt(a,x,3,[ve,it===ao?void 0:it,He]),it=ve)}else ae.run()};dt.allowRecurse=!!a;var _e;w==="sync"?_e=dt:w==="post"?_e=()=>wr(dt,x&&x.suspense):_e=()=>Mi(dt);var ae=new P.ReactiveEffect(K,_e);return ae.onTrack=E,ae.onTrigger=I,a?f?dt():it=ae.run():w==="post"?wr(ae.run.bind(ae),x&&x.suspense):ae.run(),()=>{ae.stop(),x&&x.scope&&u.remove(x.scope.effects,ae)}}function Yo(i,a,f){var p=this.proxy,w=u.isString(i)?i.includes(".")?li(p,i):()=>p[i]:i.bind(p,p),E;u.isFunction(a)?E=a:(E=a.handler,f=a);var I=Pn;hi(this);var D=$i(w,E.bind(p),f);return I?hi(I):fa(),D}function li(i,a){var f=a.split(".");return()=>{for(var p=i,w=0;w<f.length&&p;w++)p=p[f[w]];return p}}function Ei(i,a){if(!u.isObject(i)||i.__v_skip||(a=a||new Set,a.has(i)))return i;if(a.add(i),P.isRef(i))Ei(i.value,a);else if(u.isArray(i))for(var f=0;f<i.length;f++)Ei(i[f],a);else if(u.isSet(i)||u.isMap(i))i.forEach(w=>{Ei(w,a)});else if(u.isPlainObject(i))for(var p in i)Ei(i[p],a);return i}function tr(){var i={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return nr(()=>{i.isMounted=!0}),aa(()=>{i.isUnmounting=!0}),i}var Pr=[Function,Array],F={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Pr,onEnter:Pr,onAfterEnter:Pr,onEnterCancelled:Pr,onBeforeLeave:Pr,onLeave:Pr,onAfterLeave:Pr,onLeaveCancelled:Pr,onBeforeAppear:Pr,onAppear:Pr,onAfterAppear:Pr,onAppearCancelled:Pr},setup(i,a){var{slots:f}=a,p=Pi(),w=tr(),E;return()=>{var I=f.default&&ge(f.default(),!0);if(!(!I||!I.length)){var D=I[0];if(I.length>1){var x=!1;for(var K of I)if(K.type!==on){if(x){A("<transition> can only be used on a single element or component. Use <transition-group> for lists.");break}D=K,x=!0}}var ue=P.toRaw(i),{mode:oe}=ue;if(oe&&oe!=="in-out"&&oe!=="out-in"&&oe!=="default"&&A("invalid <transition> mode: ".concat(oe)),w.isLeaving)return V(D);var ne=J(D);if(!ne)return V(D);var Ee=G(ne,ue,w,p);Z(ne,Ee);var He=p.subTree,it=He&&J(He),dt=!1,{getTransitionKey:_e}=ne.type;if(_e){var ae=_e();E===void 0?E=ae:ae!==E&&(E=ae,dt=!0)}if(it&&it.type!==on&&(!co(ne,it)||dt)){var ve=G(it,ue,w,p);if(Z(it,ve),oe==="out-in")return w.isLeaving=!0,ve.afterLeave=()=>{w.isLeaving=!1,p.update()},V(D);oe==="in-out"&&ne.type!==on&&(ve.delayLeave=(Ze,Oe,rt)=>{var st=ye(w,it);st[String(it.key)]=it,Ze._leaveCb=()=>{Oe(),Ze._leaveCb=void 0,delete Ee.delayedLeave},Ee.delayedLeave=rt})}return D}}}},ie=F;function ye(i,a){var{leavingVNodes:f}=i,p=f.get(a.type);return p||(p=Object.create(null),f.set(a.type,p)),p}function G(i,a,f,p){var{appear:w,mode:E,persisted:I=!1,onBeforeEnter:D,onEnter:x,onAfterEnter:K,onEnterCancelled:ue,onBeforeLeave:oe,onLeave:ne,onAfterLeave:Ee,onLeaveCancelled:He,onBeforeAppear:it,onAppear:dt,onAfterAppear:_e,onAppearCancelled:ae}=a,ve=String(i.key),Ze=ye(f,i),Oe=(Ge,St)=>{Ge&&Dt(Ge,p,9,St)},rt=(Ge,St)=>{var Ot=St[1];Oe(Ge,St),u.isArray(Ge)?Ge.every(Tt=>Tt.length<=1)&&Ot():Ge.length<=1&&Ot()},st={mode:E,persisted:I,beforeEnter(Ge){var St=D;if(!f.isMounted)if(w)St=it||D;else return;Ge._leaveCb&&Ge._leaveCb(!0);var Ot=Ze[ve];Ot&&co(i,Ot)&&Ot.el._leaveCb&&Ot.el._leaveCb(),Oe(St,[Ge])},enter(Ge){var St=x,Ot=K,Tt=ue;if(!f.isMounted)if(w)St=dt||x,Ot=_e||K,Tt=ae||ue;else return;var Zt=!1,R=Ge._enterCb=U=>{Zt||(Zt=!0,U?Oe(Tt,[Ge]):Oe(Ot,[Ge]),st.delayedLeave&&st.delayedLeave(),Ge._enterCb=void 0)};St?rt(St,[Ge,R]):R()},leave(Ge,St){var Ot=String(i.key);if(Ge._enterCb&&Ge._enterCb(!0),f.isUnmounting)return St();Oe(oe,[Ge]);var Tt=!1,Zt=Ge._leaveCb=R=>{Tt||(Tt=!0,St(),R?Oe(He,[Ge]):Oe(Ee,[Ge]),Ge._leaveCb=void 0,Ze[Ot]===i&&delete Ze[Ot])};Ze[Ot]=i,ne?rt(ne,[Ge,Zt]):Zt()},clone(Ge){return G(Ge,a,f,p)}};return st}function V(i){if(Kn(i))return i=di(i),i.children=null,i}function J(i){return Kn(i)?i.children?i.children[0]:void 0:i}function Z(i,a){i.shapeFlag&6&&i.component?Z(i.component.subTree,a):i.shapeFlag&128?(i.ssContent.transition=a.clone(i.ssContent),i.ssFallback.transition=a.clone(i.ssFallback)):i.transition=a}function ge(i){for(var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,f=arguments.length>2?arguments[2]:void 0,p=[],w=0,E=0;E<i.length;E++){var I=i[E],D=f==null?I.key:String(f)+String(I.key!=null?I.key:E);I.type===Ht?(I.patchFlag&128&&w++,p=p.concat(ge(I.children,a,D))):(a||I.type!==on)&&p.push(D!=null?di(I,{key:D}):I)}if(w>1)for(var x=0;x<p.length;x++)p[x].patchFlag=-2;return p}function zt(i){return u.isFunction(i)?{setup:i,name:i.name}:i}var On=i=>!!i.type.__asyncLoader;function En(i){u.isFunction(i)&&(i={loader:i});var{loader:a,loadingComponent:f,errorComponent:p,delay:w=200,timeout:E,suspensible:I=!0,onError:D}=i,x=null,K,ue=0,oe=()=>(ue++,x=null,ne()),ne=()=>{var Ee;return x||(Ee=x=a().catch(He=>{if(He=He instanceof Error?He:new Error(String(He)),D)return new Promise((it,dt)=>{var _e=()=>it(oe()),ae=()=>dt(He);D(He,_e,ae,ue+1)});throw He}).then(He=>{if(Ee!==x&&x)return x;if(He||A("Async component loader resolved to undefined. If you are using retry(), make sure to return its return value."),He&&(He.__esModule||He[Symbol.toStringTag]==="Module")&&(He=He.default),He&&!u.isObject(He)&&!u.isFunction(He))throw new Error("Invalid async component load result: ".concat(He));return K=He,He}))};return zt({name:"AsyncComponentWrapper",__asyncLoader:ne,get __asyncResolved(){return K},setup(){var Ee=Pn;if(K)return()=>yr(K,Ee);var He=ae=>{x=null,Vt(ae,Ee,13,!p)};if(I&&Ee.suspense||S.isInSSRComponentSetup)return ne().then(ae=>()=>yr(ae,Ee)).catch(ae=>(He(ae),()=>p?kn(p,{error:ae}):null));var it=P.ref(!1),dt=P.ref(),_e=P.ref(!!w);return w&&setTimeout(()=>{_e.value=!1},w),E!=null&&setTimeout(()=>{if(!it.value&&!dt.value){var ae=new Error("Async component timed out after ".concat(E,"ms."));He(ae),dt.value=ae}},E),ne().then(()=>{it.value=!0,Ee.parent&&Kn(Ee.parent.vnode)&&Bi(Ee.parent.update)}).catch(ae=>{He(ae),dt.value=ae}),()=>{if(it.value&&K)return yr(K,Ee);if(dt.value&&p)return kn(p,{error:dt.value});if(f&&!_e.value)return kn(f)}}})}function yr(i,a){var{vnode:{ref:f,props:p,children:w,shapeFlag:E},parent:I}=a,D=kn(i,p,w);return D.ref=f,D}var Kn=i=>i.type.__isKeepAlive,$a={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(i,a){var{slots:f}=a,p=Pi(),w=p.ctx;if(!w.renderer)return()=>{var ve=f.default&&f.default();return ve&&ve.length===1?ve[0]:ve};var E=new Map,I=new Set,D=null;p.__v_cache=E;var x=p.suspense,{renderer:{p:K,m:ue,um:oe,o:{createElement:ne}}}=w,Ee=ne("div",null);w.activate=(ve,Ze,Oe,rt,st)=>{var Ge=ve.component;ue(ve,Ze,Oe,0,x),K(Ge.vnode,ve,Ze,Oe,Ge,x,rt,ve.slotScopeIds,st),wr(()=>{Ge.isDeactivated=!1,Ge.a&&u.invokeArrayFns(Ge.a);var St=ve.props&&ve.props.onVnodeMounted;St&&or(St,Ge.parent,ve)},x),er(Ge)},w.deactivate=ve=>{var Ze=ve.component;ue(ve,Ee,null,1,x),wr(()=>{Ze.da&&u.invokeArrayFns(Ze.da);var Oe=ve.props&&ve.props.onVnodeUnmounted;Oe&&or(Oe,Ze.parent,ve),Ze.isDeactivated=!0},x),er(Ze)};function He(ve){oa(ve),oe(ve,p,x,!0)}function it(ve){E.forEach((Ze,Oe)=>{var rt=Ra(Ze.type);rt&&(!ve||!ve(rt))&&dt(Oe)})}function dt(ve){var Ze=E.get(ve);!D||Ze.type!==D.type?He(Ze):D&&oa(D),E.delete(ve),I.delete(ve)}ei(()=>[i.include,i.exclude],ve=>{var[Ze,Oe]=ve;Ze&&it(rt=>Bo(Ze,rt)),Oe&&it(rt=>!Bo(Oe,rt))},{flush:"post",deep:!0});var _e=null,ae=()=>{_e!=null&&E.set(_e,qo(p.subTree))};return nr(ae),Mo(ae),aa(()=>{E.forEach(ve=>{var{subTree:Ze,suspense:Oe}=p,rt=qo(Ze);if(ve.type===rt.type){oa(rt);var st=rt.component.da;st&&wr(st,Oe);return}He(ve)})}),()=>{if(_e=null,!f.default)return null;var ve=f.default(),Ze=ve[0];if(ve.length>1)return A("KeepAlive should contain exactly one component child."),D=null,ve;if(!$r(Ze)||!(Ze.shapeFlag&4)&&!(Ze.shapeFlag&128))return D=null,Ze;var Oe=qo(Ze),rt=Oe.type,st=Ra(On(Oe)?Oe.type.__asyncResolved||{}:rt),{include:Ge,exclude:St,max:Ot}=i;if(Ge&&(!st||!Bo(Ge,st))||St&&st&&Bo(St,st))return D=Oe,Ze;var Tt=Oe.key==null?rt:Oe.key,Zt=E.get(Tt);return Oe.el&&(Oe=di(Oe),Ze.shapeFlag&128&&(Ze.ssContent=Oe)),_e=Tt,Zt?(Oe.el=Zt.el,Oe.component=Zt.component,Oe.transition&&Z(Oe,Oe.transition),Oe.shapeFlag|=512,I.delete(Tt),I.add(Tt)):(I.add(Tt),Ot&&I.size>parseInt(Ot,10)&&dt(I.values().next().value)),Oe.shapeFlag|=256,D=Oe,Qr(Ze.type)?Ze:Oe}}},xo=$a;function Bo(i,a){return u.isArray(i)?i.some(f=>Bo(f,a)):u.isString(i)?i.split(",").includes(a):i.test?i.test(a):!1}function ia(i,a){Ha(i,"a",a)}function Ua(i,a){Ha(i,"da",a)}function Ha(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Pn,p=i.__wdc||(i.__wdc=()=>{for(var E=f;E;){if(E.isDeactivated)return;E=E.parent}return i()});if(ci(a,p,f),f)for(var w=f.parent;w&&w.parent;)Kn(w.parent.vnode)&&_s(p,a,f,w),w=w.parent}function _s(i,a,f,p){var w=ci(a,i,p,!0);Lr(()=>{u.remove(p[a],w)},f)}function oa(i){var a=i.shapeFlag;a&256&&(a-=256),a&512&&(a-=512),i.shapeFlag=a}function qo(i){return i.shapeFlag&128?i.ssContent:i}function ci(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Pn,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(f){if(k.isRootHook(i)&&f!==f.root&&(f=f.root,k.isRootImmediateHook(i))){var w=f.proxy;Dt(a.bind(w),f,i,k.ON_LOAD===i?[w.$page.options]:[])}var{__page_container__:E}=f.root.vnode;E&&E.onInjectHook(i);var I=f[i]||(f[i]=[]),D=a.__weh||(a.__weh=function(){if(!f.isUnmounted){P.pauseTracking(),hi(f);for(var K=arguments.length,ue=new Array(K),oe=0;oe<K;oe++)ue[oe]=arguments[oe];var ne=Dt(a,f,i,ue);return fa(),P.resetTracking(),ne}});return p?I.unshift(D):I.push(D),D}else{var x=u.toHandlerKey((se[i]||i.replace(/^on/,"")).replace(/ hook$/,""));A("".concat(x," is called when there is no active component instance to be ")+"associated with. Lifecycle injection APIs can only be used during execution of setup(). If you are using async setup(), make sure to register lifecycle hooks before the first await statement.")}}var wi=i=>function(a){var f=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Pn;return(!S.isInSSRComponentSetup||i==="sp")&&ci(i,a,f)},Sa=wi("bm"),nr=wi("m"),Fr=wi("bu"),Mo=wi("u"),aa=wi("bum"),Lr=wi("um"),bs=wi("sp"),ys=wi("rtg"),Es=wi("rtc");function ws(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Pn;ci("ec",i,a)}function il(i){u.isBuiltInDirective(i)&&A("Do not use built-in directive ids as custom directive id: "+i)}function ti(i,a){var f=An;if(f===null)return A("withDirectives can only be used inside render functions."),i;for(var p=hl(f)||f.proxy,w=i.dirs||(i.dirs=[]),E=0;E<a.length;E++){var[I,D,x,K=u.EMPTY_OBJ]=a[E];u.isFunction(I)&&(I={mounted:I,updated:I}),I.deep&&Ei(D),w.push({dir:I,instance:p,value:D,oldValue:void 0,arg:x,modifiers:K})}return i}function Si(i,a,f,p){for(var w=i.dirs,E=a&&a.dirs,I=0;I<w.length;I++){var D=w[I];E&&(D.oldValue=E[I].value);var x=D.dir[p];x&&(P.pauseTracking(),Dt(x,f,8,[i.el,D,i,a]),P.resetTracking())}}var Gn="components",Tl="directives";function ja(i,a){return mo(Gn,i,!0,a)||i}var vo=Symbol();function ol(i){return u.isString(i)?mo(Gn,i,!1)||i:i||vo}function Ss(i){return mo(Tl,i)}function mo(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,w=An||Pn;if(w){var E=w.type;if(i===Gn){var I=Ra(E,!1);if(I&&(I===a||I===u.camelize(a)||I===u.capitalize(u.camelize(a))))return E}var D=Cs(w[i]||E[i],a)||Cs(w.appContext[i],a);if(!D&&p)return E;if(f&&!D){var x=i===Gn?`
If this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement.`:"";A("Failed to resolve ".concat(i.slice(0,-1),": ").concat(a).concat(x))}return D}else A("resolve".concat(u.capitalize(i.slice(0,-1))," ")+"can only be used in render() or setup().")}function Cs(i,a){return i&&(i[a]||i[u.camelize(a)]||i[u.capitalize(u.camelize(a))])}function Ca(i,a,f,p){var w,E=f&&f[p];if(u.isArray(i)||u.isString(i)){w=new Array(i.length);for(var I=0,D=i.length;I<D;I++)w[I]=a(i[I],I,void 0,E&&E[I])}else if(typeof i=="number"){Number.isInteger(i)||A("The v-for range expect an integer value but got ".concat(i,".")),w=new Array(i);for(var x=0;x<i;x++)w[x]=a(x+1,x,void 0,E&&E[x])}else if(u.isObject(i))if(i[Symbol.iterator])w=Array.from(i,(Ee,He)=>a(Ee,He,void 0,E&&E[He]));else{var K=Object.keys(i);w=new Array(K.length);for(var ue=0,oe=K.length;ue<oe;ue++){var ne=K[ue];w[ue]=a(i[ne],ne,ue,E&&E[ue])}}else w=[];return f&&(f[p]=w),w}function Do(i,a){for(var f=0;f<a.length;f++){var p=a[f];if(u.isArray(p))for(var w=0;w<p.length;w++)i[p[w].name]=p[w].fn;else p&&(i[p.name]=p.fn)}return i}function As(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},p=arguments.length>3?arguments[3]:void 0,w=arguments.length>4?arguments[4]:void 0;if(An.isCE||An.parent&&On(An.parent)&&An.parent.isCE)return kn("slot",a==="default"?null:{name:a},p&&p());var E=i[a];E&&E.length>1&&(A("SSR-optimized slot function detected in a non-SSR-optimized render function. You need to mark this component with $dynamic-slots in the parent template."),E=()=>[]),E&&E._c&&(E._d=!1),ca();var I=E&&za(E(f)),D=Lo(Ht,{key:f.key||"_".concat(a)},I||(p?p():[]),I&&i._===1?64:-2);return!w&&D.scopeId&&(D.slotScopeIds=[D.scopeId+"-s"]),E&&E._c&&(E._d=!0),D}function za(i){return i.some(a=>$r(a)?!(a.type===on||a.type===Ht&&!za(a.children)):!0)?i:null}function Aa(i){var a={};if(!u.isObject(i))return A("v-on with no argument expects an object value."),a;for(var f in i)a[u.toHandlerKey(f)]=i[f];return a}var so=i=>i?dl(i)?hl(i)||i.proxy:so(i.parent):null,_o=u.extend(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>P.shallowReadonly(i.props),$attrs:i=>P.shallowReadonly(i.attrs),$slots:i=>P.shallowReadonly(i.slots),$refs:i=>P.shallowReadonly(i.refs),$parent:i=>so(i.parent),$root:i=>so(i.root),$emit:i=>i.emit,$options:i=>he(i),$forceUpdate:i=>i.f||(i.f=()=>Bi(i.update)),$nextTick:i=>i.n||(i.n=Or.bind(i.proxy)),$watch:i=>Yo.bind(i)}),sa=i=>i==="_"||i==="$",bo={get(i,a){var{_:f}=i,{ctx:p,setupState:w,data:E,props:I,accessCache:D,type:x,appContext:K}=f;if(a==="__isVue")return!0;if(w!==u.EMPTY_OBJ&&w.__isScriptSetup&&u.hasOwn(w,a))return w[a];var ue;if(a[0]!=="$"){var oe=D[a];if(oe!==void 0)switch(oe){case 1:return w[a];case 2:return E[a];case 4:return p[a];case 3:return I[a]}else{if(w!==u.EMPTY_OBJ&&u.hasOwn(w,a))return D[a]=1,w[a];if(E!==u.EMPTY_OBJ&&u.hasOwn(E,a))return D[a]=2,E[a];if((ue=f.propsOptions[0])&&u.hasOwn(ue,a))return D[a]=3,I[a];if(p!==u.EMPTY_OBJ&&u.hasOwn(p,a))return D[a]=4,p[a];L&&(D[a]=0)}}var ne=_o[a],Ee,He;if(ne)return a==="$attrs"&&(P.track(f,"get",a),Di()),ne(f);if((Ee=x.__cssModules)&&(Ee=Ee[a]))return Ee;if(p!==u.EMPTY_OBJ&&u.hasOwn(p,a))return D[a]=4,p[a];if(He=K.config.globalProperties,u.hasOwn(He,a))return He[a];An&&(!u.isString(a)||a.indexOf("__v")!==0)&&(E!==u.EMPTY_OBJ&&sa(a[0])&&u.hasOwn(E,a)?A("Property ".concat(JSON.stringify(a)," must be accessed via $data because it starts with a reserved ")+'character ("$" or "_") and is not proxied on the render context.'):f===An&&A("Property ".concat(JSON.stringify(a)," was accessed during render ")+"but is not defined on instance."))},set(i,a,f){var{_:p}=i,{data:w,setupState:E,ctx:I}=p;return E!==u.EMPTY_OBJ&&u.hasOwn(E,a)?(E[a]=f,!0):w!==u.EMPTY_OBJ&&u.hasOwn(w,a)?(w[a]=f,!0):u.hasOwn(p.props,a)?(A('Attempting to mutate prop "'.concat(a,'". Props are readonly.'),p),!1):a[0]==="$"&&a.slice(1)in p?(A('Attempting to mutate public property "'.concat(a,'". ')+"Properties starting with $ are reserved and readonly.",p),!1):(a in p.appContext.config.globalProperties?Object.defineProperty(I,a,{enumerable:!0,configurable:!0,value:f}):I[a]=f,!0)},has(i,a){var{_:{data:f,setupState:p,accessCache:w,ctx:E,appContext:I,propsOptions:D}}=i,x;return!!w[a]||f!==u.EMPTY_OBJ&&u.hasOwn(f,a)||p!==u.EMPTY_OBJ&&u.hasOwn(p,a)||(x=D[0])&&u.hasOwn(x,a)||u.hasOwn(E,a)||u.hasOwn(_o,a)||u.hasOwn(I.config.globalProperties,a)},defineProperty(i,a,f){return f.get!=null?i._.accessCache[a]=0:u.hasOwn(f,"value")&&this.set(i,a,f.value,null),Reflect.defineProperty(i,a,f)}};bo.ownKeys=i=>(A("Avoid app logic that relies on enumerating keys on a component instance. The keys will be empty in production mode to avoid performance overhead."),Reflect.ownKeys(i));var Os=u.extend({},bo,{get(i,a){if(a!==Symbol.unscopables)return bo.get(i,a,i)},has(i,a){var f=a[0]!=="_"&&!u.isGloballyWhitelisted(a);return!f&&bo.has(i,a)&&A("Property ".concat(JSON.stringify(a)," should not start with _ which is a reserved prefix for Vue internals.")),f}});function Pl(i){var a={};return Object.defineProperty(a,"_",{configurable:!0,enumerable:!1,get:()=>i}),Object.keys(_o).forEach(f=>{Object.defineProperty(a,f,{configurable:!0,enumerable:!1,get:()=>_o[f](i),set:u.NOOP})}),a}function Ts(i){var{ctx:a,propsOptions:[f]}=i;f&&Object.keys(f).forEach(p=>{Object.defineProperty(a,p,{enumerable:!0,configurable:!0,get:()=>i.props[p],set:u.NOOP})})}function al(i){var{ctx:a,setupState:f}=i;Object.keys(P.toRaw(f)).forEach(p=>{if(!f.__isScriptSetup){if(sa(p[0])){A("setup() return property ".concat(JSON.stringify(p),' should not start with "$" or "_" ')+"which are reserved prefixes for Vue internals.");return}Object.defineProperty(a,p,{enumerable:!0,configurable:!0,get:()=>f[p],set:u.NOOP})}})}function _(){var i=Object.create(null);return(a,f)=>{i[f]?A("".concat(a,' property "').concat(f,'" is already defined in ').concat(i[f],".")):i[f]=a}}var L=!0;function q(i){var a=he(i),f=i.proxy,p=i.ctx;L=!1,a.beforeCreate&&Q(a.beforeCreate,i,"bc");var{data:w,computed:E,methods:I,watch:D,provide:x,inject:K,created:ue,beforeMount:oe,mounted:ne,beforeUpdate:Ee,updated:He,activated:it,deactivated:dt,beforeDestroy:_e,beforeUnmount:ae,destroyed:ve,unmounted:Ze,render:Oe,renderTracked:rt,renderTriggered:st,errorCaptured:Ge,serverPrefetch:St,expose:Ot,inheritAttrs:Tt,components:Zt,directives:R,filters:U}=a,de=_();{var[Pe]=i.propsOptions;if(Pe)for(var Re in Pe)de("Props",Re)}if(K&&z(K,p,de,i.appContext.config.unwrapInjectedRef),I)for(var Je in I){var ct=I[Je];u.isFunction(ct)?(Object.defineProperty(p,Je,{value:ct.bind(f),configurable:!0,enumerable:!0,writable:!0}),de("Methods",Je)):A('Method "'.concat(Je,'" has type "').concat(typeof ct,'" in the component definition. ')+"Did you reference the function correctly?")}if(w&&function(){u.isFunction(w)||A("The data option must be a function. Plain object usage is no longer supported.");var nn=w.call(f,f);if(u.isPromise(nn)&&A("data() returned a Promise - note data() cannot be async; If you intend to perform data fetching before component renders, use async setup() + <Suspense>."),!u.isObject(nn))A("data() should return an object.");else{i.data=P.reactive(nn);{var jt=function(Hn){de("Data",Hn),sa(Hn[0])||Object.defineProperty(p,Hn,{configurable:!0,enumerable:!0,get:()=>nn[Hn],set:u.NOOP})};for(var pn in nn)jt(pn)}}}(),L=!0,E){var Xe=function(nn){var jt=E[nn],pn=u.isFunction(jt)?jt.bind(f,f):u.isFunction(jt.get)?jt.get.bind(f,f):u.NOOP;pn===u.NOOP&&A('Computed property "'.concat(nn,'" has no getter.'));var Hn=!u.isFunction(jt)&&u.isFunction(jt.set)?jt.set.bind(f):()=>{A('Write operation failed: computed property "'.concat(nn,'" is readonly.'))},Uo=Vs({get:pn,set:Hn});Object.defineProperty(p,nn,{enumerable:!0,configurable:!0,get:()=>Uo.value,set:uo=>Uo.value=uo}),de("Computed",nn)};for(var tt in E)Xe(tt)}if(D)for(var je in D)re(D[je],p,f,je);if(x){var Rt=u.isFunction(x)?x.call(f):x;Reflect.ownKeys(Rt).forEach(nn=>{br(nn,Rt[nn])})}ue&&Q(ue,i,"c");function ht(nn,jt){u.isArray(jt)?jt.forEach(pn=>nn(pn.bind(f))):jt&&nn(jt.bind(f))}if(ht(Sa,oe),ht(nr,ne),ht(Fr,Ee),ht(Mo,He),ht(ia,it),ht(Ua,dt),ht(ws,Ge),ht(Es,rt),ht(ys,st),ht(aa,ae),ht(Lr,Ze),ht(bs,St),u.isArray(Ot))if(Ot.length){var Et=i.exposed||(i.exposed={});Ot.forEach(nn=>{Object.defineProperty(Et,nn,{get:()=>f[nn],set:jt=>f[nn]=jt})})}else i.exposed||(i.exposed={});Oe&&i.render===u.NOOP&&(i.render=Oe),Tt!=null&&(i.inheritAttrs=Tt),Zt&&(i.components=Zt),R&&(i.directives=R);var en=i.appContext.config.globalProperties.$applyOptions;en&&en(a,i,f)}function z(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:u.NOOP,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;u.isArray(i)&&(i=Ie(i));var w=function(I){var D=i[I],x=void 0;u.isObject(D)?"default"in D?x=oo(D.from||I,D.default,!0):x=oo(D.from||I):x=oo(D),P.isRef(x)?p?Object.defineProperty(a,I,{enumerable:!0,configurable:!0,get:()=>x.value,set:K=>x.value=K}):(A('injected property "'.concat(I,'" is a ref and will be auto-unwrapped ')+"and no longer needs `.value` in the next minor release. To opt-in to the new behavior now, set `app.config.unwrapInjectedRef = true` (this config is temporary and will not be needed in the future.)"),a[I]=x):a[I]=x,f("Inject",I)};for(var E in i)w(E)}function Q(i,a,f){Dt(u.isArray(i)?i.map(p=>p.bind(a.proxy)):i.bind(a.proxy),a,f)}function re(i,a,f,p){var w=p.includes(".")?li(f,p):()=>f[p];if(u.isString(i)){var E=a[i];u.isFunction(E)?ei(w,E):A('Invalid watch handler specified by key "'.concat(i,'"'),E)}else if(u.isFunction(i))ei(w,i.bind(f));else if(u.isObject(i))if(u.isArray(i))i.forEach(D=>re(D,a,f,p));else{var I=u.isFunction(i.handler)?i.handler.bind(f):a[i.handler];u.isFunction(I)?ei(w,I,i):A('Invalid watch handler specified by key "'.concat(i.handler,'"'),I)}else A('Invalid watch option: "'.concat(p,'"'),i)}function he(i){var a=i.type,{mixins:f,extends:p}=a,{mixins:w,optionsCache:E,config:{optionMergeStrategies:I}}=i.appContext,D=E.get(a),x;return D?x=D:!w.length&&!f&&!p?x=a:(x={},w.length&&w.forEach(K=>Se(x,K,I,!0)),Se(x,a,I)),E.set(a,x),x}function Se(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:w,extends:E}=a;E&&Se(i,E,f,!0),w&&w.forEach(x=>Se(i,x,f,!0));for(var I in a)if(p&&I==="expose")A('"expose" option is ignored when declared in mixins or extends. It should only be declared in the base component itself.');else{var D=Me[I]||f&&f[I];i[I]=D?D(i[I],a[I]):a[I]}return i}var Me={data:Ue,props:gt,emits:gt,methods:gt,computed:gt,beforeCreate:qe,created:qe,beforeMount:qe,mounted:qe,beforeUpdate:qe,updated:qe,beforeDestroy:qe,beforeUnmount:qe,destroyed:qe,unmounted:qe,activated:qe,deactivated:qe,errorCaptured:qe,serverPrefetch:qe,components:gt,directives:gt,watch:Kt,provide:Ue,inject:Ae};function Ue(i,a){return a?i?function(){return u.extend(u.isFunction(i)?i.call(this,this):i,u.isFunction(a)?a.call(this,this):a)}:a:i}function Ae(i,a){return gt(Ie(i),Ie(a))}function Ie(i){if(u.isArray(i)){for(var a={},f=0;f<i.length;f++)a[i[f]]=i[f];return a}return i}function qe(i,a){return i?[...new Set([].concat(i,a))]:a}function gt(i,a){return i?u.extend(u.extend(Object.create(null),i),a):a}function Kt(i,a){if(!i)return a;if(!a)return i;var f=u.extend(Object.create(null),i);for(var p in a)f[p]=qe(i[p],a[p]);return f}function pt(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,w={},E={};u.def(E,os,1),i.propsDefaults=Object.create(null),It(i,a,w,E);for(var I in i.propsOptions[0])I in w||(w[I]=void 0);Dn(a||{},w,i),f?i.props=p?w:P.shallowReactive(w):i.type.props?i.props=w:i.props=E,i.attrs=E}function lt(i,a,f,p){var{props:w,attrs:E,vnode:{patchFlag:I}}=i,D=P.toRaw(w),[x]=i.propsOptions,K=!1;if(!(i.type.__hmrId||i.parent&&i.parent.type.__hmrId)&&(p||I>0)&&!(I&16)){if(I&8)for(var ue=i.vnode.dynamicProps,oe=0;oe<ue.length;oe++){var ne=ue[oe];if(!Cn(i.emitsOptions,ne)){var Ee=a[ne];if(x)if(u.hasOwn(E,ne))Ee!==E[ne]&&(E[ne]=Ee,K=!0);else{var He=u.camelize(ne);w[He]=vn(x,D,He,Ee,i,!1)}else Ee!==E[ne]&&(E[ne]=Ee,K=!0)}}}else{It(i,a,w,E)&&(K=!0);var it;for(var dt in D)(!a||!u.hasOwn(a,dt)&&((it=u.hyphenate(dt))===dt||!u.hasOwn(a,it)))&&(x?f&&(f[dt]!==void 0||f[it]!==void 0)&&(w[dt]=vn(x,D,dt,void 0,i,!0)):delete w[dt]);if(E!==D)for(var _e in E)(!a||!u.hasOwn(a,_e)&&!0)&&(delete E[_e],K=!0)}K&&P.trigger(i,"set","$attrs"),Dn(a||{},w,i)}function It(i,a,f,p){var[w,E]=i.propsOptions,I=!1,D;if(a){for(var x in a)if(!u.isReservedProp(x)){var K=a[x],ue=void 0;w&&u.hasOwn(w,ue=u.camelize(x))?!E||!E.includes(ue)?f[ue]=K:(D||(D={}))[ue]=K:Cn(i.emitsOptions,x)||(!(x in p)||K!==p[x])&&(p[x]=K,I=!0)}}if(E)for(var oe=P.toRaw(f),ne=D||u.EMPTY_OBJ,Ee=0;Ee<E.length;Ee++){var He=E[Ee];f[He]=vn(w,oe,He,ne[He],i,!u.hasOwn(ne,He))}return I}function vn(i,a,f,p,w,E){var I=i[f];if(I!=null){var D=u.hasOwn(I,"default");if(D&&p===void 0){var x=I.default;if(I.type!==Function&&u.isFunction(x)){var{propsDefaults:K}=w;f in K?p=K[f]:(hi(w),p=K[f]=x.call(null,a),fa())}else p=x}I[0]&&(E&&!D?p=!1:I[1]&&(p===""||p===u.hyphenate(f))&&(p=!0))}return p}function wt(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=a.propsCache,w=p.get(i);if(w)return w;var E=i.props,I={},D=[],x=!1;if(!u.isFunction(i)){var K=ve=>{x=!0;var[Ze,Oe]=wt(ve,a,!0);u.extend(I,Ze),Oe&&D.push(...Oe)};!f&&a.mixins.length&&a.mixins.forEach(K),i.extends&&K(i.extends),i.mixins&&i.mixins.forEach(K)}if(!E&&!x)return p.set(i,u.EMPTY_ARR),u.EMPTY_ARR;if(u.isArray(E))for(var ue=0;ue<E.length;ue++){u.isString(E[ue])||A("props must be strings when using array syntax.",E[ue]);var oe=u.camelize(E[ue]);ft(oe)&&(I[oe]=u.EMPTY_OBJ)}else if(E){u.isObject(E)||A("invalid props options",E);for(var ne in E){var Ee=u.camelize(ne);if(ft(Ee)){var He=E[ne],it=I[Ee]=u.isArray(He)||u.isFunction(He)?{type:He}:He;if(it){var dt=Mn(Boolean,it.type),_e=Mn(String,it.type);it[0]=dt>-1,it[1]=_e<0||dt<_e,(dt>-1||u.hasOwn(it,"default"))&&D.push(Ee)}}}}var ae=[I,D];return p.set(i,ae),ae}function ft(i){return i[0]!=="$"?!0:(A('Invalid prop name: "'.concat(i,'" is a reserved property.')),!1)}function Lt(i){var a=i&&i.toString().match(/^\s*function (\w+)/);return a?a[1]:i===null?"null":""}function Bn(i,a){return Lt(i)===Lt(a)}function Mn(i,a){return u.isArray(a)?a.findIndex(f=>Bn(f,i)):u.isFunction(a)&&Bn(a,i)?0:-1}function Dn(i,a,f){var p=P.toRaw(a),w=f.propsOptions[0];for(var E in w){var I=w[E];I!=null&&$n(E,p[E],I,!u.hasOwn(i,E)&&!u.hasOwn(i,u.hyphenate(E)))}}function $n(i,a,f,p){var{type:w,required:E,validator:I}=f;if(E&&p){A('Missing required prop: "'+i+'"');return}if(!(a==null&&!f.required)){if(w!=null&&w!==!0){for(var D=!1,x=u.isArray(w)?w:[w],K=[],ue=0;ue<x.length&&!D;ue++){var{valid:oe,expectedType:ne}=Jn(a,x[ue]);K.push(ne||""),D=oe}if(!D){A(Wa(i,a,K));return}}I&&!I(a)&&A('Invalid prop: custom validator check failed for prop "'+i+'".')}}var Gt=u.makeMap("String,Number,Boolean,Function,Symbol,BigInt");function Jn(i,a){var f,p=Lt(a);if(Gt(p)){var w=typeof i;f=w===p.toLowerCase(),!f&&w==="object"&&(f=i instanceof a)}else p==="Object"?f=u.isObject(i):p==="Array"?f=u.isArray(i):p==="null"?f=i===null:f=i instanceof a;return{valid:f,expectedType:p}}function Wa(i,a,f){var p='Invalid prop: type check failed for prop "'.concat(i,'".')+" Expected ".concat(f.map(u.capitalize).join(" | ")),w=f[0],E=u.toRawType(a),I=Ga(a,w),D=Ga(a,E);return f.length===1&&Fo(w)&&!Ya(w,E)&&(p+=" with value ".concat(I)),p+=", got ".concat(E," "),Fo(E)&&(p+="with value ".concat(D,".")),p}function Ga(i,a){return a==="String"?'"'.concat(i,'"'):a==="Number"?"".concat(Number(i)):"".concat(i)}function Fo(i){var a=["string","number","boolean"];return a.some(f=>i.toLowerCase()===f)}function Ya(){for(var i=arguments.length,a=new Array(i),f=0;f<i;f++)a[f]=arguments[f];return a.some(p=>p.toLowerCase()==="boolean")}var Ko=i=>i[0]==="_"||i==="$stable",Ci=i=>u.isArray(i)?i.map(ir):[ir(i)],Ps=(i,a,f)=>{if(a._n)return a;var p=ro(function(){return Pn&&A('Slot "'.concat(i,'" invoked outside of the render function: ')+"this will not track dependencies used in the slot. Invoke the slot function inside the render function instead."),Ci(a(...arguments))},f);return p._c=!1,p},Er=(i,a,f)=>{var p=i._ctx;for(var w in i)if(!Ko(w)){var E=i[w];u.isFunction(E)?a[w]=Ps(w,E,p):E!=null&&function(){A('Non-function value encountered for slot "'.concat(w,'". ')+"Prefer function slots for better performance.");var I=Ci(E);a[w]=()=>I}()}},Oa=(i,a)=>{Kn(i.vnode)||A("Non-function value encountered for default slot. Prefer function slots for better performance.");var f=Ci(a);i.slots.default=()=>f},sl=(i,a)=>{if(i.vnode.shapeFlag&32){var f=a._;f?(i.slots=P.toRaw(a),u.def(a,"_",f)):Er(a,i.slots={})}else i.slots={},a&&Oa(i,a);u.def(i.slots,os,1)},Is=(i,a,f)=>{var{vnode:p,slots:w}=i,E=!0,I=u.EMPTY_OBJ;if(p.shapeFlag&32){var D=a._;D?ur?u.extend(w,a):f&&D===1?E=!1:(u.extend(w,a),!f&&D===1&&delete w._):(E=!a.$stable,Er(a,w)),I=a}else a&&(Oa(i,a),I={default:1});if(E)for(var x in w)!Ko(x)&&!(x in I)&&delete w[x]};function rs(){return{app:null,config:{isNativeTag:u.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var qa=0;function Jo(i,a){return function(p){var w=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;u.isFunction(p)||(p=Object.assign({},p)),w!=null&&!u.isObject(w)&&(A("root props passed to app.mount() must be an object."),w=null);var E=rs(),I=new Set,D=!1,x=E.app={_uid:qa++,_component:p,_props:w,_container:null,_context:E,_instance:null,version:wo,get config(){return E.config},set config(K){A("app.config cannot be replaced. Modify individual options instead.")},use(K){for(var ue=arguments.length,oe=new Array(ue>1?ue-1:0),ne=1;ne<ue;ne++)oe[ne-1]=arguments[ne];return I.has(K)?A("Plugin has already been applied to target app."):K&&u.isFunction(K.install)?(I.add(K),K.install(x,...oe)):u.isFunction(K)?(I.add(K),K(x,...oe)):A('A plugin must either be a function or an object with an "install" function.'),x},mixin(K){return E.mixins.includes(K)?A("Mixin has already been applied to target app"+(K.name?": ".concat(K.name):"")):E.mixins.push(K),x},component(K,ue){return Ms(K,E.config),ue?(E.components[K]&&A('Component "'.concat(K,'" has already been registered in target app.')),E.components[K]=ue,x):E.components[K]},directive(K,ue){return il(K),ue?(E.directives[K]&&A('Directive "'.concat(K,'" has already been registered in target app.')),E.directives[K]=ue,x):E.directives[K]},mount(K,ue,oe){if(D)A("App has already been mounted.\nIf you want to remount the same app, move your app creation logic into a factory function and create fresh app instances for each mount - e.g. `const createMyApp = () => createApp(App)`");else{K.__vue_app__&&A("There is already an app instance mounted on the host container.\n If you want to mount another app on the same host container, you need to unmount the previous app by calling `app.unmount()` first.");var ne=kn(p,w);return ne.appContext=E,E.reload=()=>{i(di(ne),K,oe)},ue&&a?a(ne,K):i(ne,K,oe),D=!0,x._container=K,K.__vue_app__=x,x._instance=ne.component,Jr(x,wo),hl(ne.component)||ne.component.proxy}},unmount(){D?(i(null,x._container),x._instance=null,Zr(x),delete x._container.__vue_app__):A("Cannot unmount an app that is not mounted.")},provide(K,ue){return K in E.provides&&A('App already provides property with key "'.concat(String(K),'". ')+"It will be overwritten with the new value."),E.provides[K]=ue,x}};return x}}function Yn(i,a,f,p){var w=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(u.isArray(i)){i.forEach((it,dt)=>Yn(it,a&&(u.isArray(a)?a[dt]:a),f,p,w));return}if(!(On(p)&&!w)){var E=p.shapeFlag&4?hl(p.component)||p.component.proxy:p.el,I=w?null:E,{i:D,r:x}=i;if(!D){A("Missing ref owner context. ref cannot be used on hoisted vnodes. A vnode with ref must be created inside the render function.");return}var K=a&&a.r,ue=D.refs===u.EMPTY_OBJ?D.refs={}:D.refs,oe=D.setupState;if(K!=null&&K!==x&&(u.isString(K)?(ue[K]=null,u.hasOwn(oe,K)&&(oe[K]=null)):P.isRef(K)&&(K.value=null)),u.isFunction(x))gn(x,D,12,[I,ue]);else{var ne=u.isString(x),Ee=P.isRef(x);if(ne||Ee){var He=()=>{if(i.f){var it=ne?ue[x]:x.value;w?u.isArray(it)&&u.remove(it,E):u.isArray(it)?it.includes(E)||it.push(E):ne?(ue[x]=[E],u.hasOwn(oe,x)&&(oe[x]=ue[x])):(x.value=[E],i.k&&(ue[i.k]=x.value))}else ne?(ue[x]=I,u.hasOwn(oe,x)&&(oe[x]=I)):Ee?(x.value=I,i.k&&(ue[i.k]=I)):A("Invalid template ref type:",x,"(".concat(typeof x,")"))};I?(He.id=-1,wr(He,f)):He()}else A("Invalid template ref type:",x,"(".concat(typeof x,")"))}}}var Ir=!1,Ui=i=>/svg/.test(i.namespaceURI)&&i.tagName!=="foreignObject",ni=i=>i.nodeType===8;function Ta(i){var{mt:a,p:f,o:{patchProp:p,createText:w,nextSibling:E,parentNode:I,remove:D,insert:x,createComment:K}}=i,ue=(_e,ae)=>{if(!ae.hasChildNodes()){A("Attempting to hydrate existing markup but container is empty. Performing full mount instead."),f(null,_e,ae),gi(),ae._vnode=_e;return}Ir=!1,oe(ae.firstChild,_e,null,null,null),gi(),ae._vnode=_e,Ir&&console.error("Hydration completed but contains mismatches.")},oe=function(_e,ae,ve,Ze,Oe){var rt=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,st=ni(_e)&&_e.data==="[",Ge=()=>it(_e,ae,ve,Ze,Oe,st),{type:St,ref:Ot,shapeFlag:Tt,patchFlag:Zt}=ae,R=_e.nodeType;ae.el=_e,Zt===-2&&(rt=!1,ae.dynamicChildren=null);var U=null;switch(St){case Jt:R!==3?ae.children===""?(x(ae.el=w("",_e.parentNode),I(_e),_e),U=_e):U=Ge():(_e.data!==ae.children&&(Ir=!0,A("Hydration text mismatch:"+`
- Client: `.concat(JSON.stringify(_e.data))+`
- Server: `.concat(JSON.stringify(ae.children))),_e.data=ae.children),U=E(_e));break;case on:R!==8||st?U=Ge():U=E(_e);break;case gr:if(R!==1&&R!==3)U=Ge();else{U=_e;for(var de=!ae.children.length,Pe=0;Pe<ae.staticCount;Pe++)de&&(ae.children+=U.nodeType===1?U.outerHTML:U.data),Pe===ae.staticCount-1&&(ae.anchor=U),U=E(U);return U}break;case Ht:st?U=He(_e,ae,ve,Ze,Oe,rt):U=Ge();break;default:if(Tt&1)R!==1||ae.type.toLowerCase()!==_e.tagName.toLowerCase()?U=Ge():U=ne(_e,ae,ve,Ze,Oe,rt);else if(Tt&6){ae.slotScopeIds=Oe;var Re=I(_e);if(a(ae,Re,null,ve,Ze,Ui(Re),rt),U=st?dt(_e):E(_e),U&&ni(U)&&U.data==="teleport end"&&(U=E(U)),On(ae)){var Je;st?(Je=kn(Ht),Je.anchor=U?U.previousSibling:Re.lastChild):Je=_e.nodeType===3?fl(""):kn("div"),Je.el=_e,ae.component.subTree=Je}}else Tt&64?R!==8?U=Ge():U=ae.type.hydrate(_e,ae,ve,Ze,Oe,rt,i,Ee):Tt&128?U=ae.type.hydrate(_e,ae,ve,Ze,Ui(I(_e)),Oe,rt,i,oe):A("Invalid HostVNode type:",St,"(".concat(typeof St,")"))}return Ot!=null&&Yn(Ot,null,Ze,ae),U},ne=(_e,ae,ve,Ze,Oe,rt)=>{rt=rt||!!ae.dynamicChildren;var{type:st,props:Ge,patchFlag:St,shapeFlag:Ot,dirs:Tt}=ae,Zt=st==="input"&&Tt||st==="option";{if(Tt&&Si(ae,null,ve,"created"),Ge)if(Zt||!rt||St&(16|32))for(var R in Ge)(Zt&&R.endsWith("value")||u.isOn(R)&&!u.isReservedProp(R))&&p(_e,R,null,Ge[R],!1,void 0,ve);else Ge.onClick&&p(_e,"onClick",null,Ge.onClick,!1,void 0,ve);var U;if((U=Ge&&Ge.onVnodeBeforeMount)&&or(U,ve,ae),Tt&&Si(ae,null,ve,"beforeMount"),((U=Ge&&Ge.onVnodeMounted)||Tt)&&xn(()=>{U&&or(U,ve,ae),Tt&&Si(ae,null,ve,"mounted")},Ze),Ot&16&&!(Ge&&(Ge.innerHTML||Ge.textContent)))for(var de=Ee(_e.firstChild,ae,_e,ve,Ze,Oe,rt),Pe=!1;de;){Ir=!0,Pe||(A("Hydration children mismatch in <".concat(ae.type,">: ")+"server rendered element contains more child nodes than client vdom."),Pe=!0);var Re=de;de=de.nextSibling,D(Re)}else Ot&8&&_e.textContent!==ae.children&&(Ir=!0,A("Hydration text content mismatch in <".concat(ae.type,`>:
`)+"- Client: ".concat(_e.textContent,`
`)+"- Server: ".concat(ae.children)),_e.textContent=ae.children)}return _e.nextSibling},Ee=(_e,ae,ve,Ze,Oe,rt,st)=>{st=st||!!ae.dynamicChildren;for(var Ge=ae.children,St=Ge.length,Ot=!1,Tt=0;Tt<St;Tt++){var Zt=st?Ge[Tt]:Ge[Tt]=ir(Ge[Tt]);if(_e)_e=oe(_e,Zt,Ze,Oe,rt,st);else{if(Zt.type===Jt&&!Zt.children)continue;Ir=!0,Ot||(A("Hydration children mismatch in <".concat(ve.tagName.toLowerCase(),">: ")+"server rendered element contains fewer child nodes than client vdom."),Ot=!0),f(null,Zt,ve,null,Ze,Oe,Ui(ve),rt)}}return _e},He=(_e,ae,ve,Ze,Oe,rt)=>{var{slotScopeIds:st}=ae;st&&(Oe=Oe?Oe.concat(st):st);var Ge=I(_e),St=Ee(E(_e),ae,Ge,ve,Ze,Oe,rt);return St&&ni(St)&&St.data==="]"?E(ae.anchor=St):(Ir=!0,x(ae.anchor=K("]",Ge),Ge,St),St)},it=(_e,ae,ve,Ze,Oe,rt)=>{if(Ir=!0,A(`Hydration node mismatch:
- Client vnode:`,ae.type,`
- Server rendered DOM:`,_e,_e.nodeType===3?"(text)":ni(_e)&&_e.data==="["?"(start of fragment)":""),ae.el=null,rt)for(var st=dt(_e);;){var Ge=E(_e);if(Ge&&Ge!==st)D(Ge);else break}var St=E(_e),Ot=I(_e);return D(_e),f(null,ae,Ot,St,ve,Ze,Ui(Ot),Oe),St},dt=_e=>{for(var ae=0;_e;)if(_e=E(_e),_e&&ni(_e)&&(_e.data==="["&&ae++,_e.data==="]")){if(ae===0)return E(_e);ae--}return _e};return[ue,oe]}var Ai,Vr;function rr(i,a){i.appContext.config.performance&&la()&&Vr.mark("vue-".concat(a,"-").concat(i.uid)),yi(i,a,la()?Vr.now():Date.now())}function ui(i,a){if(i.appContext.config.performance&&la()){var f="vue-".concat(a,"-").concat(i.uid),p=f+":end";Vr.mark(p),Vr.measure("<".concat(Ls(i,i.type),"> ").concat(a),f,p),Vr.clearMarks(f),Vr.clearMarks(p)}Io(i,a,la()?Vr.now():Date.now())}function la(){return Ai!==void 0||(typeof window!="undefined"&&window.performance?(Ai=!0,Vr=window.performance):Ai=!1),Ai}function pr(){var i=[];if(i.length){var a=i.length>1;console.warn("Feature flag".concat(a?"s":""," ").concat(i.join(", ")," ").concat(a?"are":"is"," not explicitly defined. You are running the esm-bundler build of Vue, ")+`which expects these compile-time feature flags to be globally injected via the bundler config in order to get better tree-shaking in the production bundle.

For more details, see https://link.vuejs.org/feature-flags.`)}}var wr=xn;function Ns(i){return yo(i)}function ks(i){return yo(i,Ta)}function yo(i,a){pr();var f=u.getGlobalThis();f.__VUE__=!0,Br(f.__VUE_DEVTOOLS_GLOBAL_HOOK__,f);var{insert:p,remove:w,patchProp:E,forcePatchProp:I,createElement:D,createText:x,createComment:K,setText:ue,setElementText:oe,parentNode:ne,nextSibling:Ee,setScopeId:He=u.NOOP,cloneNode:it,insertStaticContent:dt}=i,_e=function(W,X,be){var Le=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,De=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,et=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,ot=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,Ke=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,Qe=arguments.length>8&&arguments[8]!==void 0?arguments[8]:ur?!1:!!X.dynamicChildren;if(W!==X){W&&!co(W,X)&&(Le=Hn(W),Et(W,De,et,!0),W=null),X.patchFlag===-2&&(Qe=!1,X.dynamicChildren=null);var{type:$e,ref:kt,shapeFlag:Bt}=X;switch($e){case Jt:ae(W,X,be,Le);break;case on:ve(W,X,be,Le);break;case gr:W==null?Ze(X,be,Le,ot):Oe(W,X,be,ot);break;case Ht:de(W,X,be,Le,De,et,ot,Ke,Qe);break;default:Bt&1?Ge(W,X,be,Le,De,et,ot,Ke,Qe):Bt&6?Pe(W,X,be,Le,De,et,ot,Ke,Qe):Bt&64||Bt&128?$e.process(W,X,be,Le,De,et,ot,Ke,Qe,uo):A("Invalid VNode type:",$e,"(".concat(typeof $e,")"))}kt!=null&&De&&Yn(kt,W&&W.ref,et,X||W,!X)}},ae=(W,X,be,Le)=>{if(W==null)p(X.el=x(X.children,be),be,Le);else{var De=X.el=W.el;X.children!==W.children&&ue(De,X.children)}},ve=(W,X,be,Le)=>{W==null?p(X.el=K(X.children||"",be),be,Le):X.el=W.el},Ze=(W,X,be,Le)=>{[W.el,W.anchor]=dt(W.children,X,be,Le,W.el,W.anchor)},Oe=(W,X,be,Le)=>{if(X.children!==W.children){var De=Ee(W.anchor);st(W),[X.el,X.anchor]=dt(X.children,be,De,Le)}else X.el=W.el,X.anchor=W.anchor},rt=(W,X,be)=>{for(var{el:Le,anchor:De}=W,et;Le&&Le!==De;)et=Ee(Le),p(Le,X,be),Le=et;p(De,X,be)},st=W=>{for(var{el:X,anchor:be}=W,Le;X&&X!==be;)Le=Ee(X),w(X),X=Le;w(be)},Ge=(W,X,be,Le,De,et,ot,Ke,Qe)=>{ot=ot||X.type==="svg",W==null?St(X,be,Le,De,et,ot,Ke,Qe):Zt(W,X,De,et,ot,Ke,Qe)},St=(W,X,be,Le,De,et,ot,Ke)=>{var Qe,$e,{type:kt,props:Bt,shapeFlag:Ct,transition:_n,patchFlag:zi,dirs:sr}=W;{if(Qe=W.el=D(W.type,X),Ct&8?oe(Qe,W.children):Ct&16&&Tt(W.children,Qe,null,Le,De,et&&kt!=="foreignObject",ot,Ke),sr&&Si(W,null,Le,"created"),Bt){for(var ri in Bt)ri!=="value"&&!u.isReservedProp(ri)&&E(Qe,ri,null,Bt[ri],et,W.children,Le,De,pn);"value"in Bt&&E(Qe,"value",null,Bt.value),($e=Bt.onVnodeBeforeMount)&&or($e,Le,W)}Ot(Qe,W,W.scopeId,ot,Le)}Object.defineProperty(Qe,"__vnode",{value:W,enumerable:!1}),Object.defineProperty(Qe,"__vueParentComponent",{value:Le,enumerable:!1}),sr&&Si(W,null,Le,"beforeMount");var Wi=(!De||De&&!De.pendingBranch)&&_n&&!_n.persisted;Wi&&_n.beforeEnter(Qe),p(Qe,X,be),(($e=Bt&&Bt.onVnodeMounted)||Wi||sr)&&wr(()=>{$e&&or($e,Le,W),Wi&&_n.enter(Qe),sr&&Si(W,null,Le,"mounted")},De)},Ot=(W,X,be,Le,De)=>{if(be&&He(W,be),Le)for(var et=0;et<Le.length;et++)He(W,Le[et]);if(De){var ot=De.subTree;if(ot.patchFlag>0&&ot.patchFlag&2048&&(ot=Xr(ot.children)||ot),X===ot){var Ke=De.vnode;Ot(W,Ke,Ke.scopeId,Ke.slotScopeIds,De.parent)}}},Tt=function(W,X,be,Le,De,et,ot,Ke){for(var Qe=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,$e=Qe;$e<W.length;$e++){var kt=W[$e]=Ke?Vo(W[$e]):ir(W[$e]);_e(null,kt,X,be,Le,De,et,ot,Ke)}},Zt=(W,X,be,Le,De,et,ot)=>{var Ke=X.el=W.el,{patchFlag:Qe,dynamicChildren:$e,dirs:kt}=X;Qe|=W.patchFlag&16;var Bt=W.props||u.EMPTY_OBJ,Ct=X.props||u.EMPTY_OBJ,_n;be&&fi(be,!1),(_n=Ct.onVnodeBeforeUpdate)&&or(_n,be,X,W),kt&&Si(X,W,be,"beforeUpdate"),be&&fi(be,!0),ur&&(Qe=0,ot=!1,$e=null);var zi=De&&X.type!=="foreignObject";if($e?(R(W.dynamicChildren,$e,Ke,be,Le,zi,et),be&&be.type.__hmrId&&Zo(W,X)):ot||tt(W,X,Ke,null,be,Le,zi,et,!1),Qe>0){if(Qe&16)U(Ke,X,Bt,Ct,be,Le,De);else if(Qe&2&&Bt.class!==Ct.class&&E(Ke,"class",null,Ct.class,De),Qe&4&&E(Ke,"style",Bt.style,Ct.style,De),Qe&8)for(var sr=X.dynamicProps,ri=0;ri<sr.length;ri++){var Wi=sr[ri],fs=Bt[Wi],Js=Ct[Wi];(Js!==fs||Wi==="value"||I&&I(Ke,Wi))&&E(Ke,Wi,fs,Js,De,W.children,be,Le,pn)}Qe&1&&W.children!==X.children&&oe(Ke,X.children)}else!ot&&$e==null&&U(Ke,X,Bt,Ct,be,Le,De);((_n=Ct.onVnodeUpdated)||kt)&&wr(()=>{_n&&or(_n,be,X,W),kt&&Si(X,W,be,"updated")},Le)},R=(W,X,be,Le,De,et,ot)=>{for(var Ke=0;Ke<X.length;Ke++){var Qe=W[Ke],$e=X[Ke],kt=Qe.el&&(Qe.type===Ht||!co(Qe,$e)||Qe.shapeFlag&(6|64))?ne(Qe.el):be;_e(Qe,$e,kt,null,Le,De,et,ot,!0)}},U=(W,X,be,Le,De,et,ot)=>{if(be!==Le){for(var Ke in Le)if(!u.isReservedProp(Ke)){var Qe=Le[Ke],$e=be[Ke];(Qe!==$e&&Ke!=="value"||I&&I(W,Ke))&&E(W,Ke,$e,Qe,ot,X.children,De,et,pn)}if(be!==u.EMPTY_OBJ)for(var kt in be)!u.isReservedProp(kt)&&!(kt in Le)&&E(W,kt,be[kt],null,ot,X.children,De,et,pn);"value"in Le&&E(W,"value",be.value,Le.value)}},de=(W,X,be,Le,De,et,ot,Ke,Qe)=>{var $e=X.el=W?W.el:x("",be),kt=X.anchor=W?W.anchor:x("",be),{patchFlag:Bt,dynamicChildren:Ct,slotScopeIds:_n}=X;(ur||Bt&2048)&&(Bt=0,Qe=!1,Ct=null),_n&&(Ke=Ke?Ke.concat(_n):_n),W==null?(p($e,be,Le),p(kt,be,Le),Tt(X.children,be,kt,De,et,ot,Ke,Qe)):Bt>0&&Bt&64&&Ct&&W.dynamicChildren?(R(W.dynamicChildren,Ct,be,De,et,ot,Ke),De&&De.type.__hmrId?Zo(W,X):(X.key!=null||De&&X===De.subTree)&&Zo(W,X,!0)):tt(W,X,be,kt,De,et,ot,Ke,Qe)},Pe=(W,X,be,Le,De,et,ot,Ke,Qe)=>{X.slotScopeIds=Ke,W==null?X.shapeFlag&512?De.ctx.activate(X,be,Le,ot,Qe):Re(X,be,Le,De,et,ot,Qe):Je(W,X,Qe)},Re=(W,X,be,Le,De,et,ot)=>{var Ke=W.component=ar(W,Le,De);if(Ke.type.__hmrId&&To(Ke),At(W),rr(Ke,"mount"),Kn(W)&&(Ke.ctx.renderer=uo),rr(Ke,"init"),Nl(Ke),ui(Ke,"init"),Ke.asyncDep){if(De&&De.registerDep(Ke,ct),!W.el){var Qe=Ke.subTree=kn(on);ve(null,Qe,X,be)}return}if(ct(Ke,W,X,be,De,et,ot),Ke.$wxsModules){var $e=k.resolveOwnerEl(Ke);if($e){$e.setAttribute(k.ATTR_V_OWNER_ID,Ke.uid);var{$renderjsModules:kt}=Ke.type;kt&&$e.setAttribute(k.ATTR_V_RENDERJS,kt)}}rn(),ui(Ke,"mount")},Je=(W,X,be)=>{var Le=X.component=W.component;if(ya(W,X,be))if(Le.asyncDep&&!Le.asyncResolved){At(X),Xe(Le,X,be),rn();return}else Le.next=X,Ki(Le.update),Le.update();else X.el=W.el,Le.vnode=X},ct=(W,X,be,Le,De,et,ot)=>{var Ke=()=>{if(W.isMounted){var{next:Ur,bu:Zs,u:ds,parent:Ao,vnode:hs}=W,Xs=Ur,Za;At(Ur||W.vnode),fi(W,!1),Ur?(Ur.el=hs.el,Xe(W,Ur,ot)):Ur=hs,Zs&&u.invokeArrayFns(Zs),(Za=Ur.props&&Ur.props.onVnodeBeforeUpdate)&&or(Za,Ao,Ur,hs),fi(W,!0),rr(W,"render");var Fa=io(W);ui(W,"render");var Ni=W.subTree;W.subTree=Fa,rr(W,"patch"),_e(Ni,Fa,ne(Ni.el),Hn(Ni),W,De,et),ui(W,"patch"),Ur.el=Fa.el,Xs===null&&hn(W,Fa.el),ds&&wr(ds,De),(Za=Ur.props&&Ur.props.onVnodeUpdated)&&wr(()=>or(Za,Ao,Ur,hs),De),eo(W),rn()}else{var kt,{el:Bt,props:Ct}=X,{bm:_n,m:zi,parent:sr}=W,ri=On(X);if(fi(W,!1),_n&&u.invokeArrayFns(_n),!ri&&(kt=Ct&&Ct.onVnodeBeforeMount)&&or(kt,sr,X),fi(W,!0),Bt&&Da){var Wi=()=>{rr(W,"render"),W.subTree=io(W),ui(W,"render"),rr(W,"hydrate"),Da(Bt,W.subTree,W,De,null),ui(W,"hydrate")};ri?X.type.__asyncLoader().then(()=>!W.isUnmounted&&Wi()):Wi()}else{rr(W,"render");var fs=W.subTree=io(W);ui(W,"render"),rr(W,"patch"),_e(null,fs,be,Le,W,De,et),ui(W,"patch"),X.el=fs.el}if(zi&&wr(zi,De),!ri&&(kt=Ct&&Ct.onVnodeMounted)){var Js=X;wr(()=>or(kt,sr,Js),De)}(X.shapeFlag&256||sr&&On(sr.vnode)&&sr.vnode.shapeFlag&256)&&W.a&&wr(W.a,De),W.isMounted=!0,er(W),X=be=Le=null}},Qe=W.effect=new P.ReactiveEffect(Ke,()=>Bi($e),W.scope),$e=W.update=()=>Qe.run();$e.id=W.uid,fi(W,!0),Qe.onTrack=W.rtc?kt=>u.invokeArrayFns(W.rtc,kt):void 0,Qe.onTrigger=W.rtg?kt=>u.invokeArrayFns(W.rtg,kt):void 0,$e.ownerInstance=W,$e()},Xe=(W,X,be)=>{X.component=W;var Le=W.vnode.props;W.vnode=X,W.next=null,lt(W,X.props,Le,be),Is(W,X.children,be),P.pauseTracking(),Zi(void 0,W.update),P.resetTracking()},tt=function(W,X,be,Le,De,et,ot,Ke){var Qe=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,$e=W&&W.children,kt=W?W.shapeFlag:0,Bt=X.children,{patchFlag:Ct,shapeFlag:_n}=X;if(Ct>0){if(Ct&128){Rt($e,Bt,be,Le,De,et,ot,Ke,Qe);return}else if(Ct&256){je($e,Bt,be,Le,De,et,ot,Ke,Qe);return}}_n&8?(kt&16&&pn($e,De,et),Bt!==$e&&oe(be,Bt)):kt&16?_n&16?Rt($e,Bt,be,Le,De,et,ot,Ke,Qe):pn($e,De,et,!0):(kt&8&&oe(be,""),_n&16&&Tt(Bt,be,Le,De,et,ot,Ke,Qe))},je=(W,X,be,Le,De,et,ot,Ke,Qe)=>{W=W||u.EMPTY_ARR,X=X||u.EMPTY_ARR;var $e=W.length,kt=X.length,Bt=Math.min($e,kt),Ct;for(Ct=0;Ct<Bt;Ct++){var _n=X[Ct]=Qe?Vo(X[Ct]):ir(X[Ct]);_e(W[Ct],_n,be,null,De,et,ot,Ke,Qe)}$e>kt?pn(W,De,et,!0,!1,Bt):Tt(X,be,Le,De,et,ot,Ke,Qe,Bt)},Rt=(W,X,be,Le,De,et,ot,Ke,Qe)=>{for(var $e=0,kt=X.length,Bt=W.length-1,Ct=kt-1;$e<=Bt&&$e<=Ct;){var _n=W[$e],zi=X[$e]=Qe?Vo(X[$e]):ir(X[$e]);if(co(_n,zi))_e(_n,zi,be,null,De,et,ot,Ke,Qe);else break;$e++}for(;$e<=Bt&&$e<=Ct;){var sr=W[Bt],ri=X[Ct]=Qe?Vo(X[Ct]):ir(X[Ct]);if(co(sr,ri))_e(sr,ri,be,null,De,et,ot,Ke,Qe);else break;Bt--,Ct--}if($e>Bt){if($e<=Ct)for(var Wi=Ct+1,fs=Wi<kt?X[Wi].el:Le;$e<=Ct;)_e(null,X[$e]=Qe?Vo(X[$e]):ir(X[$e]),be,fs,De,et,ot,Ke,Qe),$e++}else if($e>Ct)for(;$e<=Bt;)Et(W[$e],De,et,!0),$e++;else{var Js=$e,Ur=$e,Zs=new Map;for($e=Ur;$e<=Ct;$e++){var ds=X[$e]=Qe?Vo(X[$e]):ir(X[$e]);ds.key!=null&&(Zs.has(ds.key)&&A("Duplicate keys found during update:",JSON.stringify(ds.key),"Make sure keys are unique."),Zs.set(ds.key,$e))}var Ao,hs=0,Xs=Ct-Ur+1,Za=!1,Fa=0,Ni=new Array(Xs);for($e=0;$e<Xs;$e++)Ni[$e]=0;for($e=Js;$e<=Bt;$e++){var ps=W[$e];if(hs>=Xs){Et(ps,De,et,!0);continue}var gs=void 0;if(ps.key!=null)gs=Zs.get(ps.key);else for(Ao=Ur;Ao<=Ct;Ao++)if(Ni[Ao-Ur]===0&&co(ps,X[Ao])){gs=Ao;break}gs===void 0?Et(ps,De,et,!0):(Ni[gs-Ur]=$e+1,gs>=Fa?Fa=gs:Za=!0,_e(ps,X[gs],be,null,De,et,ot,Ke,Qe),hs++)}var vc=Za?Ft(Ni):u.EMPTY_ARR;for(Ao=vc.length-1,$e=Xs-1;$e>=0;$e--){var mc=Ur+$e,Zc=X[mc],Xc=mc+1<kt?X[mc+1].el:Le;Ni[$e]===0?_e(null,Zc,be,Xc,De,et,ot,Ke,Qe):Za&&(Ao<0||$e!==vc[Ao]?ht(Zc,be,Xc,2):Ao--)}}},ht=function(W,X,be,Le){var De=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:et,type:ot,transition:Ke,children:Qe,shapeFlag:$e}=W;if($e&6){ht(W.component.subTree,X,be,Le);return}if($e&128){W.suspense.move(X,be,Le);return}if($e&64){ot.move(W,X,be,uo);return}if(ot===Ht){p(et,X,be);for(var kt=0;kt<Qe.length;kt++)ht(Qe[kt],X,be,Le);p(W.anchor,X,be);return}if(ot===gr){rt(W,X,be);return}var Bt=Le!==2&&$e&1&&Ke;if(Bt)if(Le===0)Ke.beforeEnter(et),p(et,X,be),wr(()=>Ke.enter(et),De);else{var{leave:Ct,delayLeave:_n,afterLeave:zi}=Ke,sr=()=>p(et,X,be),ri=()=>{Ct(et,()=>{sr(),zi&&zi()})};_n?_n(et,sr,ri):ri()}else p(et,X,be)},Et=function(W,X,be){var Le=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,De=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:et,props:ot,ref:Ke,children:Qe,dynamicChildren:$e,shapeFlag:kt,patchFlag:Bt,dirs:Ct}=W;if(Ke!=null&&Yn(Ke,null,be,W,!0),kt&256){X.ctx.deactivate(W);return}var _n=kt&1&&Ct,zi=!On(W),sr;if(zi&&(sr=ot&&ot.onVnodeBeforeUnmount)&&or(sr,X,W),kt&6)jt(W.component,be,Le);else{if(kt&128){W.suspense.unmount(be,Le);return}_n&&Si(W,null,X,"beforeUnmount"),kt&64?W.type.remove(W,X,be,De,uo,Le):$e&&(et!==Ht||Bt>0&&Bt&64)?pn($e,X,be,!1,!0):(et===Ht&&Bt&(128|256)||!De&&kt&16)&&pn(Qe,X,be),Le&&en(W)}(zi&&(sr=ot&&ot.onVnodeUnmounted)||_n)&&wr(()=>{sr&&or(sr,X,W),_n&&Si(W,null,X,"unmounted")},be)},en=W=>{var{type:X,el:be,anchor:Le,transition:De}=W;if(X===Ht){W.patchFlag>0&&W.patchFlag&2048&&De&&!De.persisted?W.children.forEach($e=>{$e.type===on?w($e.el):en($e)}):nn(be,Le);return}if(X===gr){st(W);return}var et=()=>{w(be),De&&!De.persisted&&De.afterLeave&&De.afterLeave()};if(W.shapeFlag&1&&De&&!De.persisted){var{leave:ot,delayLeave:Ke}=De,Qe=()=>ot(be,et);Ke?Ke(W.el,et,Qe):Qe()}else et()},nn=(W,X)=>{for(var be;W!==X;)be=Ee(W),w(W),W=be;w(X)},jt=(W,X,be)=>{W.type.__hmrId&&Po(W);var{bum:Le,scope:De,update:et,subTree:ot,um:Ke}=W;Le&&u.invokeArrayFns(Le),De.stop(),et&&(et.active=!1,Et(ot,W,X,be)),Ke&&wr(Ke,X),wr(()=>{W.isUnmounted=!0},X),X&&X.pendingBranch&&!X.isUnmounted&&W.asyncDep&&!W.asyncResolved&&W.suspenseId===X.pendingId&&(X.deps--,X.deps===0&&X.resolve()),to(W)},pn=function(W,X,be){for(var Le=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,De=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,et=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,ot=et;ot<W.length;ot++)Et(W[ot],X,be,Le,De)},Hn=W=>W.shapeFlag&6?Hn(W.component.subTree):W.shapeFlag&128?W.suspense.next():Ee(W.anchor||W.el),Uo=(W,X,be)=>{W==null?X._vnode&&Et(X._vnode,null,null,!0):_e(X._vnode||null,W,X,null,null,null,be),gi(),X._vnode=W},uo={p:_e,um:Et,m:ht,r:en,mt:Re,mc:Tt,pc:tt,pbc:R,n:Hn,o:i},vr,Da;return a&&([vr,Da]=a(uo)),{render:Uo,hydrate:vr,createApp:Jo(Uo,vr)}}function fi(i,a){var{effect:f,update:p}=i;f.allowRecurse=p.allowRecurse=a}function Zo(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=i.children,w=a.children;if(u.isArray(p)&&u.isArray(w))for(var E=0;E<p.length;E++){var I=p[E],D=w[E];D.shapeFlag&1&&!D.dynamicChildren&&((D.patchFlag<=0||D.patchFlag===32)&&(D=w[E]=Vo(w[E]),D.el=I.el),f||Zo(I,D)),D.type===on&&!D.el&&(D.el=I.el)}}function Ft(i){var a=i.slice(),f=[0],p,w,E,I,D,x=i.length;for(p=0;p<x;p++){var K=i[p];if(K!==0){if(w=f[f.length-1],i[w]<K){a[p]=w,f.push(p);continue}for(E=0,I=f.length-1;E<I;)D=E+I>>1,i[f[D]]<K?E=D+1:I=D;K<i[f[E]]&&(E>0&&(a[p]=f[E-1]),f[E]=p)}}for(E=f.length,I=f[E-1];E-- >0;)f[E]=I,I=a[I];return f}var lo=i=>i.__isTeleport,Xo=i=>i&&(i.disabled||i.disabled===""),Pa=i=>typeof SVGElement!="undefined"&&i instanceof SVGElement,ll=(i,a)=>{var f=i&&i.to;if(u.isString(f))if(a){var p=a(f);return p||A('Failed to locate Teleport target with selector "'.concat(f,'". ')+"Note the target element must exist before the component is mounted - i.e. the target cannot be rendered by the component itself, and ideally should be outside of the entire Vue component tree."),p}else return A("Current renderer does not support string target for Teleports. (missing querySelector renderer option)"),null;else return!f&&!Xo(i)&&A("Invalid Teleport target: ".concat(f)),f},xe={__isTeleport:!0,process(i,a,f,p,w,E,I,D,x,K){var{mc:ue,pc:oe,pbc:ne,o:{insert:Ee,querySelector:He,createText:it,createComment:dt}}=K,_e=Xo(a.props),{shapeFlag:ae,children:ve,dynamicChildren:Ze}=a;if(ur&&(x=!1,Ze=null),i==null){var Oe=a.el=dt("teleport start",f),rt=a.anchor=dt("teleport end",f);Ee(Oe,f,p),Ee(rt,f,p);var st=a.target=ll(a.props,He),Ge=a.targetAnchor=it("",f);st?(Ee(Ge,st),I=I||Pa(st)):_e||A("Invalid Teleport target on mount:",st,"(".concat(typeof st,")"));var St=(Re,Je)=>{ae&16&&ue(ve,Re,Je,w,E,I,D,x)};_e?St(f,rt):st&&St(st,Ge)}else{a.el=i.el;var Ot=a.anchor=i.anchor,Tt=a.target=i.target,Zt=a.targetAnchor=i.targetAnchor,R=Xo(i.props),U=R?f:Tt,de=R?Ot:Zt;if(I=I||Pa(Tt),Ze?(ne(i.dynamicChildren,Ze,U,w,E,I,D),Zo(i,a,!0)):x||oe(i,a,U,de,w,E,I,D,!1),_e)R||Pt(a,f,Ot,K,1);else if((a.props&&a.props.to)!==(i.props&&i.props.to)){var Pe=a.target=ll(a.props,He);Pe?Pt(a,Pe,null,K,0):A("Invalid Teleport target on update:",Tt,"(".concat(typeof Tt,")"))}else R&&Pt(a,Tt,Zt,K,1)}},remove(i,a,f,p,w,E){var{um:I,o:{remove:D}}=w,{shapeFlag:x,children:K,anchor:ue,targetAnchor:oe,target:ne,props:Ee}=i;if(ne&&D(oe),(E||!Xo(Ee))&&(D(ue),x&16))for(var He=0;He<K.length;He++){var it=K[He];I(it,a,f,!0,!!it.dynamicChildren)}},move:Pt,hydrate:xt};function Pt(i,a,f,p){var{o:{insert:w},m:E}=p,I=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;I===0&&w(i.targetAnchor,a,f);var{el:D,anchor:x,shapeFlag:K,children:ue,props:oe}=i,ne=I===2;if(ne&&w(D,a,f),(!ne||Xo(oe))&&K&16)for(var Ee=0;Ee<ue.length;Ee++)E(ue[Ee],a,f,2);ne&&w(x,a,f)}function xt(i,a,f,p,w,E,I,D){var{o:{nextSibling:x,parentNode:K,querySelector:ue}}=I,oe=a.target=ll(a.props,ue);if(oe){var ne=oe._lpa||oe.firstChild;if(a.shapeFlag&16)if(Xo(a.props))a.anchor=D(x(i),a,K(i),f,p,w,E),a.targetAnchor=ne;else{a.anchor=x(i);for(var Ee=ne;Ee;)if(Ee=x(Ee),Ee&&Ee.nodeType===8&&Ee.data==="teleport anchor"){a.targetAnchor=Ee,oe._lpa=a.targetAnchor&&x(a.targetAnchor);break}D(ne,a,oe,f,p,w,E)}}return a.anchor&&x(a.anchor)}var Ut=xe,Ht=Symbol("Fragment"),Jt=Symbol("Text"),on=Symbol("Comment"),gr=Symbol("Static"),Un=[],Zn=null;function ca(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;Un.push(Zn=i?null:[])}function ua(){Un.pop(),Zn=Un[Un.length-1]||null}var Oi=1;function is(i){Oi+=i}function ec(i){return i.dynamicChildren=Oi>0?Zn||u.EMPTY_ARR:null,ua(),Oi>0&&Zn&&Zn.push(i),i}function Rs(i,a,f,p,w,E){return ec(Tn(i,a,f,p,w,E,!0))}function Lo(i,a,f,p,w){return ec(kn(i,a,f,p,w,!0))}function $r(i){return i?i.__v_isVNode===!0:!1}function co(i,a){return a.shapeFlag&6&&xr.has(a.type)?!1:i.type===a.type&&i.key===a.key}var xs;function cl(i){xs=i}var ul=function(){for(var i=arguments.length,a=new Array(i),f=0;f<i;f++)a[f]=arguments[f];return as(...xs?xs(a,An):a)},os="__vInternal",Bs=i=>{var{key:a}=i;return a!=null?a:null},Hi=i=>{var{ref:a,ref_key:f,ref_for:p}=i;return a!=null?u.isString(a)||P.isRef(a)||u.isFunction(a)?{i:An,r:a,k:f,f:!!p}:a:null};function Tn(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,w=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,E=arguments.length>5&&arguments[5]!==void 0?arguments[5]:i===Ht?0:1,I=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,D=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,x={__v_isVNode:!0,__v_skip:!0,type:i,props:a,key:a&&Bs(a),ref:a&&Hi(a),scopeId:Nn,slotScopeIds:null,children:f,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:E,patchFlag:p,dynamicProps:w,dynamicChildren:null,appContext:null};return D?(Ia(x,f),E&128&&i.normalize(x)):f&&(x.shapeFlag|=u.isString(f)?8:16),x.key!==x.key&&A("VNode created with invalid key (NaN). VNode type:",x.type),Oi>0&&!I&&Zn&&(x.patchFlag>0||E&6)&&x.patchFlag!==32&&Zn.push(x),x}var kn=ul;function as(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,w=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,E=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!i||i===vo)&&(i||A("Invalid vnode type when creating vnode: ".concat(i,".")),i=on),$r(i)){var I=di(i,a,!0);return f&&Ia(I,f),Oi>0&&!E&&Zn&&(I.shapeFlag&6?Zn[Zn.indexOf(i)]=I:Zn.push(I)),I.patchFlag|=-2,I}if(Bl(i)&&(i=i.__vccOpts),a){a=Ti(a);var{class:D,style:x}=a;D&&!u.isString(D)&&(a.class=u.normalizeClass(D)),u.isObject(x)&&(P.isProxy(x)&&!u.isArray(x)&&(x=u.extend({},x)),a.style=u.normalizeStyle(x))}var K=u.isString(i)?1:Qr(i)?128:lo(i)?64:u.isObject(i)?4:u.isFunction(i)?2:0;return K&4&&P.isProxy(i)&&(i=P.toRaw(i),A("Vue received a Component which was made a reactive object. This can lead to unnecessary performance overhead, and should be avoided by marking the component with `markRaw` or using `shallowRef` instead of `ref`.",`
Component that was made reactive: `,i)),Tn(i,a,f,p,w,K,E,!0)}function Ti(i){return i?P.isProxy(i)||os in i?u.extend({},i):i:null}function di(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:p,ref:w,patchFlag:E,children:I}=i,D=a?Rn(p||{},a):p,x={__v_isVNode:!0,__v_skip:!0,type:i.type,props:D,key:D&&Bs(D),ref:a&&a.ref?f&&w?u.isArray(w)?w.concat(Hi(a)):[w,Hi(a)]:Hi(a):w,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:E===-1&&u.isArray(I)?I.map(ss):I,target:i.target,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:a&&i.type!==Ht?E===-1?16:E|16:E,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:i.transition,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&di(i.ssContent),ssFallback:i.ssFallback&&di(i.ssFallback),el:i.el,anchor:i.anchor};return x}function ss(i){var a=di(i);return u.isArray(i.children)&&(a.children=i.children.map(ss)),a}function fl(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return kn(Jt,null,i,a)}function tc(i,a){var f=kn(gr,null,i);return f.staticCount=a,f}function ji(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return a?(ca(),Lo(on,null,i)):kn(on,null,i)}function ir(i){return i==null||typeof i=="boolean"?kn(on):u.isArray(i)?kn(Ht,null,i.slice()):typeof i=="object"?Vo(i):kn(Jt,null,String(i))}function Vo(i){return i.el===null||i.memo?i:di(i)}function Ia(i,a){var f=0,{shapeFlag:p}=i;if(a==null)a=null;else if(u.isArray(a))f=16;else if(typeof a=="object")if(p&(1|64)){var w=a.default;w&&(w._c&&(w._d=!1),Ia(i,w()),w._c&&(w._d=!0));return}else{f=32;var E=a._;!E&&!(os in a)?a._ctx=An:E===3&&An&&(An.slots._===1?a._=1:(a._=2,i.patchFlag|=1024))}else u.isFunction(a)?(a={default:a,_ctx:An},f=32):(a=String(a),p&64?(f=16,a=[fl(a)]):f=8);i.children=a,i.shapeFlag|=f}function Rn(){for(var i={},a=0;a<arguments.length;a++){var f=a<0||arguments.length<=a?void 0:arguments[a];for(var p in f)if(p==="class")i.class!==f.class&&(i.class=u.normalizeClass([i.class,f.class]));else if(p==="style")i.style=u.normalizeStyle([i.style,f.style]);else if(u.isOn(p)){var w=i[p],E=f[p];E&&w!==E&&!(u.isArray(w)&&w.includes(E))&&(i[p]=w?[].concat(w,E):E)}else p!==""&&(i[p]=f[p])}return i}function or(i,a,f){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;Dt(i,a,7,[f,p])}var nc=rs(),Dc=0;function ar(i,a,f){var p=i.type,w=(a?a.appContext:i.appContext)||nc,E={uid:Dc++,vnode:i,type:p,parent:a,appContext:w,root:null,next:null,subTree:null,effect:null,update:null,scope:new P.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:a?a.provides:Object.create(w.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:wt(p,w),emitsOptions:no(p,w),emit:null,emitted:null,propsDefaults:u.EMPTY_OBJ,inheritAttrs:p.inheritAttrs,ctx:u.EMPTY_OBJ,data:u.EMPTY_OBJ,props:u.EMPTY_OBJ,attrs:u.EMPTY_OBJ,slots:u.EMPTY_OBJ,refs:u.EMPTY_OBJ,setupState:u.EMPTY_OBJ,setupContext:null,suspense:f,suspenseId:f?f.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return E.ctx=Pl(E),E.root=a?a.root:E,E.emit=zo.bind(null,E),i.ce&&i.ce(E),E}var Pn=null,Pi=()=>Pn||An,hi=i=>{Pn=i,i.scope.on()},fa=()=>{Pn&&Pn.scope.off(),Pn=null},Il=u.makeMap("slot,component");function Ms(i,a){var f=a.isNativeTag||u.NO;(Il(i)||f(i))&&A("Do not use built-in or reserved HTML elements as component id: "+i)}function dl(i){return i.vnode.shapeFlag&4}S.isInSSRComponentSetup=!1;function Nl(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;S.isInSSRComponentSetup=a;var{props:f,children:p}=i.vnode,w=dl(i);pt(i,f,w,a),sl(i,p);var E=w?Ds(i,a):void 0;return S.isInSSRComponentSetup=!1,E}function Ds(i,a){var f,p=i.type;{if(p.name&&Ms(p.name,i.appContext.config),p.components)for(var w=Object.keys(p.components),E=0;E<w.length;E++)Ms(w[E],i.appContext.config);if(p.directives)for(var I=Object.keys(p.directives),D=0;D<I.length;D++)il(I[D]);p.compilerOptions&&Rl()&&A('"compilerOptions" is only supported when using a build of Vue that includes the runtime compiler. Since you are using a runtime-only build, the options should be passed via your build tool config instead.')}i.accessCache=Object.create(null),i.proxy=P.markRaw(new Proxy(i.ctx,bo)),Ts(i);var{setup:x}=p;if(x){var K=i.setupContext=x.length>1?ls(i):null;hi(i),P.pauseTracking();var ue=gn(x,i,0,[P.shallowReadonly(i.props),K]);if(P.resetTracking(),fa(),u.isPromise(ue)){if(ue.then(fa,fa),a)return ue.then(ne=>{Na(i,ne,a)}).catch(ne=>{Vt(ne,i,0)});if(i.asyncDep=ue,!i.suspense){var oe=(f=p.name)!==null&&f!==void 0?f:"Anonymous";A("Component <".concat(oe,">: setup function returned a promise, but no ")+"<Suspense> boundary was found in the parent component tree. A component with async setup() must be nested in a <Suspense> in order to be rendered.")}}else Na(i,ue,a)}else xl(i,a)}function Na(i,a,f){u.isFunction(a)?i.type.__ssrInlineRender?i.ssrRender=a:i.render=a:u.isObject(a)?($r(a)&&A("setup() should not return VNodes directly - return a render function instead."),i.devtoolsRawSetupState=a,i.setupState=P.proxyRefs(a),al(i)):a!==void 0&&A("setup() should return an object. Received: ".concat(a===null?"null":typeof a)),xl(i,f)}var ka,kl;function rc(i){ka=i,kl=a=>{a.render._rc&&(a.withProxy=new Proxy(a.ctx,Os))}}var Rl=()=>!ka;function xl(i,a,f){var p=i.type;if(!i.render){if(!a&&ka&&!p.render){var w=p.template;if(w){rr(i,"compile");var{isCustomElement:E,compilerOptions:I}=i.appContext.config,{delimiters:D,compilerOptions:x}=p,K=u.extend(u.extend({isCustomElement:E,delimiters:D},I),x);p.render=ka(w,K),ui(i,"compile")}}i.render=p.render||u.NOOP,kl&&kl(i)}hi(i),P.pauseTracking(),q(i),P.resetTracking(),fa(),!p.render&&i.render===u.NOOP&&!a&&(!ka&&p.template?A('Component provided template option but runtime compilation is not supported in this build of Vue. Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".'):A("Component is missing template or render function."))}function ic(i){return new Proxy(i.attrs,{get(a,f){return Di(),P.track(i,"get","$attrs"),a[f]},set(){return A("setupContext.attrs is readonly."),!1},deleteProperty(){return A("setupContext.attrs is readonly."),!1}})}function ls(i){var a=p=>{i.exposed&&A("expose() should be called only once per setup()."),i.exposed=p||{}},f;return Object.freeze({get attrs(){return f||(f=ic(i))},get slots(){return P.shallowReadonly(i.slots)},get emit(){return function(p){for(var w=arguments.length,E=new Array(w>1?w-1:0),I=1;I<w;I++)E[I-1]=arguments[I];return i.emit(p,...E)}},expose:a})}function hl(i){if(i.exposed)return i.exposeProxy||(i.exposeProxy=new Proxy(P.proxyRefs(P.markRaw(i.exposed)),{get(a,f){if(f in a)return a[f];if(f in _o)return _o[f](i)}}))}var Fc=/(?:^|[-_])(\w)/g,Fs=i=>i.replace(Fc,a=>a.toUpperCase()).replace(/[-_]/g,"");function Ra(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return u.isFunction(i)?i.displayName||i.name:i.name||a&&i.__name}function Ls(i,a){var f=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,p=Ra(a);if(!p&&a.__file){var w=a.__file.match(/([^/\\]+)\.\w+$/);w&&(p=w[1])}if(!p&&i&&i.parent){var E=I=>{for(var D in I)if(I[D]===a)return D};p=E(i.components||i.parent.type.components)||E(i.appContext.components)}return p?Fs(p):f?"App":"Anonymous"}function Bl(i){return u.isFunction(i)&&"__vccOpts"in i}var Vs=(i,a)=>P.computed(i,a,S.isInSSRComponentSetup),pl=i=>A("".concat(i,"() is a compiler-hint helper that is only usable inside ")+"<script setup> of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.");function Lc(){return pl("defineProps"),null}function Vc(){return pl("defineEmits"),null}function $c(i){pl("defineExpose")}function Uc(i,a){return pl("withDefaults"),null}function Hc(){return ac().slots}function oc(){return ac().attrs}function ac(){var i=Pi();return i||A("useContext() called without active instance."),i.setupContext||(i.setupContext=ls(i))}function jc(i,a){var f=u.isArray(i)?i.reduce((E,I)=>(E[I]={},E),{}):i;for(var p in a){var w=f[p];w?u.isArray(w)||u.isFunction(w)?f[p]={type:w,default:a[p]}:w.default=a[p]:w===null?f[p]={default:a[p]}:A('props default key "'.concat(p,'" has no corresponding declaration.'))}return f}function Eo(i,a){var f={},p=function(E){a.includes(E)||Object.defineProperty(f,E,{enumerable:!0,get:()=>i[E]})};for(var w in i)p(w);return f}function $s(i){var a=Pi();a||A("withAsyncContext called without active current instance. This is likely a bug.");var f=i();return fa(),u.isPromise(f)&&(f=f.catch(p=>{throw hi(a),p})),[f,()=>hi(a)]}function Nr(i,a,f){var p=arguments.length;return p===2?u.isObject(a)&&!u.isArray(a)?$r(a)?kn(i,null,[a]):kn(i,a):kn(i,null,a):(p>3?f=Array.prototype.slice.call(arguments,2):p===3&&$r(f)&&(f=[f]),kn(i,a,f))}var xa=Symbol("ssrContext"),da=()=>{{var i=oo(xa);return i||A("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),i}};function Ml(i){return!!(i&&i.__v_isShallow)}function zc(){if(typeof window=="undefined")return;var i={style:"color:#3ba776"},a={style:"color:#0b1bc9"},f={style:"color:#b62e24"},p={style:"color:#9d288c"},w={header(oe){return u.isObject(oe)?oe.__isVue?["div",i,"VueInstance"]:P.isRef(oe)?["div",{},["span",i,ue(oe)],"<",D(oe.value),">"]:P.isReactive(oe)?["div",{},["span",i,Ml(oe)?"ShallowReactive":"Reactive"],"<",D(oe),">".concat(P.isReadonly(oe)?" (readonly)":"")]:P.isReadonly(oe)?["div",{},["span",i,Ml(oe)?"ShallowReadonly":"Readonly"],"<",D(oe),">"]:null:null},hasBody(oe){return oe&&oe.__isVue},body(oe){if(oe&&oe.__isVue)return["div",{},...E(oe.$)]}};function E(oe){var ne=[];oe.type.props&&oe.props&&ne.push(I("props",P.toRaw(oe.props))),oe.setupState!==u.EMPTY_OBJ&&ne.push(I("setup",oe.setupState)),oe.data!==u.EMPTY_OBJ&&ne.push(I("data",P.toRaw(oe.data)));var Ee=x(oe,"computed");Ee&&ne.push(I("computed",Ee));var He=x(oe,"inject");return He&&ne.push(I("injected",He)),ne.push(["div",{},["span",{style:p.style+";opacity:0.66"},"$ (internal): "],["object",{object:oe}]]),ne}function I(oe,ne){return ne=u.extend({},ne),Object.keys(ne).length?["div",{style:"line-height:1.25em;margin-bottom:0.6em"},["div",{style:"color:#476582"},oe],["div",{style:"padding-left:1.25em"},...Object.keys(ne).map(Ee=>["div",{},["span",p,Ee+": "],D(ne[Ee],!1)])]]:["span",{}]}function D(oe){var ne=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return typeof oe=="number"?["span",a,oe]:typeof oe=="string"?["span",f,JSON.stringify(oe)]:typeof oe=="boolean"?["span",p,oe]:u.isObject(oe)?["object",{object:ne?P.toRaw(oe):oe}]:["span",f,String(oe)]}function x(oe,ne){var Ee=oe.type;if(!u.isFunction(Ee)){var He={};for(var it in oe.ctx)K(Ee,it,ne)&&(He[it]=oe.ctx[it]);return He}}function K(oe,ne,Ee){var He=oe[Ee];if(u.isArray(He)&&He.includes(ne)||u.isObject(He)&&ne in He||oe.extends&&K(oe.extends,ne,Ee)||oe.mixins&&oe.mixins.some(it=>K(it,ne,Ee)))return!0}function ue(oe){return Ml(oe)?"ShallowRef":oe.effect?"ComputedRef":"Ref"}window.devtoolsFormatters?window.devtoolsFormatters.push(w):window.devtoolsFormatters=[w]}function ha(i,a,f,p){var w=f[p];if(w&&Us(w,i))return w;var E=a();return E.memo=i.slice(),f[p]=E}function Us(i,a){var f=i.memo;if(f.length!=a.length)return!1;for(var p=0;p<f.length;p++)if(u.hasChanged(f[p],a[p]))return!1;return Oi>0&&Zn&&Zn.push(i),!0}var wo="3.2.37",sc={createComponentInstance:ar,setupComponent:Nl,renderComponentRoot:io,setCurrentRenderingInstance:dr,isVNode:$r,normalizeVNode:ir},So=sc,Hs=null,js=null;function gl(i,a){return i==="input"?new k.UniInputElement(i,a):i==="textarea"?new k.UniTextAreaElement(i,a):new k.UniElement(i,a)}function lc(i,a){return new k.UniTextNode(i,a)}function Ka(i,a){return new k.UniCommentNode(i,a)}var Dl,cc={insert:(i,a,f)=>{a.insertBefore(i,f||null)},remove:i=>{var a=i.parentNode;a&&a.removeChild(i)},createElement:(i,a)=>gl(i,a),createText:(i,a)=>lc(i,a),createComment:(i,a)=>Ka(i,a),setText:(i,a)=>{i.nodeValue=a},setElementText:(i,a)=>{i.textContent=a},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,setScopeId(i,a){i.setAttribute(a,"")},cloneNode(i){var a=i.cloneNode(!0);return"_value"in i&&(a._value=i._value),a},insertStaticContent(i,a,f){var p=Dl||(Dl=gl("div"));p.innerHTML=i;for(var w=p.firstChild,E=w,I=E;E;)I=E,cc.insert(E,a,f),E=p.firstChild;return[w,I]}};function Wc(i,a){a==null&&(a=""),i.setAttribute("class",a)}function Gc(i,a,f){if(!f)i.removeAttribute("style");else if(u.isString(f))a!==f&&i.setAttribute("style",f);else{var p={},w=a&&!u.isString(a);if(w){for(var E in a)f[E]==null&&(p[E]="");for(var I in f){var D=f[I];D!==a[I]&&(p[I]=D)}}else for(var x in f)p[x]=f[x];Object.keys(p).length&&i.setAttribute("style",p)}}function zs(i,a,f){f==null?i.removeAttribute(a):i.setAttribute(a,f)}function uc(i,a,f,p){i.addEventListener(a,f,p)}function fc(i,a,f,p){i.removeEventListener(a,f,p)}function dc(i,a,f,p){var w=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,E=i._vei||(i._vei={}),I=E[a];if(p&&I)I.value=p;else{var[D,x]=Fl(a);if(p){var K=E[a]=vl(p,w);uc(i,D,K,x)}else I&&(fc(i,D,I,x),E[a]=void 0)}}var hc=/(?:Once|Passive|Capture)$/;function Fl(i){var a;if(hc.test(i)){a={};for(var f;f=i.match(hc);)i=i.slice(0,i.length-f[0].length),a[f[0].toLowerCase()]=!0}return[u.hyphenate(i.slice(2)),a]}function vl(i,a){var f=w=>{Dt(f.value,a,5,[w])};f.value=i;var p=new Set;return u.isArray(f.value)?f.value.forEach(w=>{w.modifiers&&w.modifiers.forEach(E=>{p.add(E)})}):(f.value.modifiers&&f.value.modifiers.forEach(w=>{p.add(w)}),pc(f,a)),f.modifiers=[...p],f}function pc(i,a){if(!!a){var{$wxsModules:f}=a;if(!!f){var p=i.value.toString();!f.find(w=>p.indexOf("."+w+".")>-1)||(i.wxsEvent=i.value())}}}var Yc=function(i,a,f,p){var w=arguments.length>6?arguments[6]:void 0;switch(a){case"class":Wc(i,p);break;case"style":Gc(i,f,p);break;default:if(u.isOn(a))u.isModelListener(a)||dc(i,a,f,p,w);else{if(u.isObject(p)){var E=f===p;if(p=k.JSON_PROTOCOL+JSON.stringify(p),E&&i.getAttribute(a)===p)return}else if(f===p)return;zs(i,a,p)}break}};function qc(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var a=Pi();if(!a)return A("useCssModule must be called inside setup()"),u.EMPTY_OBJ;var f=a.type.__cssModules;if(!f)return A("Current instance does not have CSS modules injected."),u.EMPTY_OBJ;var p=f[i];return p||(A('Current instance does not have CSS module named "'.concat(i,'".')),u.EMPTY_OBJ)}}function Kc(i){var a=Pi();if(!a){A("useCssVars is called without current active component instance.");return}var f=()=>an(a.subTree,i(a.proxy));nr(()=>Go(f,{flush:"post"})),Mo(f)}function an(i,a){if(i.shapeFlag&128){var f=i.suspense;i=f.activeBranch,f.pendingBranch&&!f.isHydrating&&f.effects.push(()=>{an(f.activeBranch,a)})}for(;i.component;)i=i.component.subTree;if(i.shapeFlag&1&&i.el)pa(i.el,a);else if(i.type===Ht)i.children.forEach(E=>an(E,a));else if(i.type===gr)for(var{el:p,anchor:w}=i;p&&(pa(p,a),p!==w);)p=p.nextSibling}function pa(i,a){if(i.nodeType===1)for(var f in a)i.setAttribute("--".concat(f),a[f])}var Wr="transition",Ws="animation",cs=(i,a)=>{var{slots:f}=a;return Nr(ie,Ba(i),f)};cs.displayName="Transition";var ml={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},_l=cs.props=u.extend({},ie.props,ml),$o=function(i){var a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];u.isArray(i)?i.forEach(f=>f(...a)):i&&i(...a)},Gs=i=>i?u.isArray(i)?i.some(a=>a.length>1):i.length>1:!1;function Ba(i){var a={};for(var f in i)f in ml||(a[f]=i[f]);if(i.css===!1)return a;var{name:p="v",type:w,duration:E,enterFromClass:I="".concat(p,"-enter-from"),enterActiveClass:D="".concat(p,"-enter-active"),enterToClass:x="".concat(p,"-enter-to"),appearFromClass:K=I,appearActiveClass:ue=D,appearToClass:oe=x,leaveFromClass:ne="".concat(p,"-leave-from"),leaveActiveClass:Ee="".concat(p,"-leave-active"),leaveToClass:He="".concat(p,"-leave-to")}=i,it=Ys(E),dt=it&&it[0],_e=it&&it[1],{onBeforeEnter:ae,onEnter:ve,onEnterCancelled:Ze,onLeave:Oe,onLeaveCancelled:rt,onBeforeAppear:st=ae,onAppear:Ge=ve,onAppearCancelled:St=Ze}=a,Ot=(R,U,de)=>{Co(R,U?oe:x),Co(R,U?ue:D),de&&de()},Tt=(R,U)=>{Co(R,He),Co(R,Ee),U&&U()},Zt=R=>(U,de)=>{var Pe=R?Ge:ve,Re=()=>Ot(U,R,de);$o(Pe,[U,Re]),gc(()=>{Co(U,R?K:I),Ii(U,R?oe:x),Gs(Pe)||Ks(U,w,dt,Re)})};return u.extend(a,{onBeforeEnter(R){$o(ae,[R]),Ii(R,I),Ii(R,D)},onBeforeAppear(R){$o(st,[R]),Ii(R,K),Ii(R,ue)},onEnter:Zt(!1),onAppear:Zt(!0),onLeave(R,U){var de=()=>Tt(R,U);Ii(R,ne),mn(),Ii(R,Ee),gc(()=>{Co(R,ne),Ii(R,He),Gs(Oe)||Ks(R,w,_e,de)}),$o(Oe,[R,de])},onEnterCancelled(R){Ot(R,!1),$o(Ze,[R])},onAppearCancelled(R){Ot(R,!0),$o(St,[R])},onLeaveCancelled(R){Tt(R),$o(rt,[R])}})}function Ys(i){if(i==null)return null;if(u.isObject(i))return[Sr(i.enter),Sr(i.leave)];var a=Sr(i);return[a,a]}function Sr(i){var a=u.toNumber(i);return qs(a),a}function qs(i){typeof i!="number"?A("<transition> explicit duration is not a valid number - "+"got ".concat(JSON.stringify(i),".")):isNaN(i)&&A("<transition> explicit duration is NaN - the duration expression might be incorrect.")}function Ii(i,a){a.split(/\s+/).forEach(f=>f&&i.classList.add(f)),(i._vtc||(i._vtc=new Set)).add(a)}function Co(i,a){a.split(/\s+/).forEach(p=>p&&i.classList.remove(p));var{_vtc:f}=i;f&&(f.delete(a),f.size||(i._vtc=void 0))}function gc(i){requestAnimationFrame(()=>{requestAnimationFrame(i)})}var Ma=0;function Ks(i,a,f,p){var w=i._endId=++Ma,E=()=>{w===i._endId&&p()};if(f)return setTimeout(E,f);var{type:I,timeout:D,propCount:x}=ga(i,a);if(!I)return p();var K=I+"end",ue=0,oe=()=>{i.removeEventListener(K,ne),E()},ne=Ee=>{Ee.target===i&&++ue>=x&&oe()};setTimeout(()=>{ue<x&&oe()},D+1),i.addEventListener(K,ne)}function ga(i,a){var f=window.getComputedStyle(i),p=He=>(f[He]||"").split(", "),w=p(Wr+"Delay"),E=p(Wr+"Duration"),I=va(w,E),D=p(Ws+"Delay"),x=p(Ws+"Duration"),K=va(D,x),ue=null,oe=0,ne=0;a===Wr?I>0&&(ue=Wr,oe=I,ne=E.length):a===Ws?K>0&&(ue=Ws,oe=K,ne=x.length):(oe=Math.max(I,K),ue=oe>0?I>K?Wr:Ws:null,ne=ue?ue===Wr?E.length:x.length:0);var Ee=ue===Wr&&/\b(transform|all)(,|$)/.test(f[Wr+"Property"]);return{type:ue,timeout:oe,propCount:ne,hasTransform:Ee}}function va(i,a){for(;i.length<a.length;)i=i.concat(i);return Math.max(...a.map((f,p)=>Gr(f)+Gr(i[p])))}function Gr(i){return Number(i.slice(0,-1).replace(",","."))*1e3}function mn(){return document.body.offsetHeight}var us=new WeakMap,Ll=new WeakMap,Vl={name:"TransitionGroup",props:u.extend({},_l,{tag:String,moveClass:String}),setup(i,a){var{slots:f}=a,p=Pi(),w=tr(),E,I;return Mo(()=>{if(!!E.length){var D=i.moveClass||"".concat(i.name||"v","-move");if(!!h(E[0].el,p.vnode.el,D)){E.forEach(Jc),E.forEach(o);var x=E.filter(l);mn(),x.forEach(K=>{var ue=K.el,oe=ue.style;Ii(ue,D),oe.transform=oe.webkitTransform=oe.transitionDuration="";var ne=ue._moveCb=Ee=>{Ee&&Ee.target!==ue||(!Ee||/transform$/.test(Ee.propertyName))&&(ue.removeEventListener("transitionend",ne),ue._moveCb=null,Co(ue,D))};ue.addEventListener("transitionend",ne)})}}}),()=>{var D=P.toRaw(i),x=Ba(D),K=D.tag||Ht;E=I,I=f.default?ge(f.default()):[];for(var ue=0;ue<I.length;ue++){var oe=I[ue];oe.key!=null?Z(oe,G(oe,x,w,p)):A("<TransitionGroup> children must be keyed.")}if(E)for(var ne=0;ne<E.length;ne++){var Ee=E[ne];Z(Ee,G(Ee,x,w,p)),us.set(Ee,Ee.el.getBoundingClientRect())}return kn(K,null,I)}}},Ja=Vl;function Jc(i){var a=i.el;a._moveCb&&a._moveCb(),a._enterCb&&a._enterCb()}function o(i){Ll.set(i,i.el.getBoundingClientRect())}function l(i){var a=us.get(i),f=Ll.get(i),p=a.left-f.left,w=a.top-f.top;if(p||w){var E=i.el.style;return E.transform=E.webkitTransform="translate(".concat(p,"px,").concat(w,"px)"),E.transitionDuration="0s",i}}function h(i,a,f){var p=i.cloneNode();i._vtc&&i._vtc.forEach(I=>{I.split(/\s+/).forEach(D=>D&&p.classList.remove(D))}),f.split(/\s+/).forEach(I=>I&&p.classList.add(I)),p.style.display="none";var w=a.nodeType===1?a:a.parentNode;w.appendChild(p);var{hasTransform:E}=ga(p);return w.removeChild(p),E}var m=i=>{var a=i.props["onUpdate:modelValue"];return u.isArray(a)?f=>u.invokeArrayFns(a,f):a},C={created(i,a,f){var{value:p,modifiers:{trim:w,number:E}}=a;i.value=p==null?"":p,i._assign=m(f),uc(i,"input",I=>{var D=I.detail.value,x=i.pageNode;i.pageNode=null,i.value=D,i.pageNode=x,w?D=D.trim():E&&(D=u.toNumber(D)),i._assign(D)})},beforeUpdate(i,a,f){var{value:p}=a;i._assign=m(f);var w=p==null?"":p;i.value!==w&&(i.value=w)}},O=C,M=["ctrl","shift","alt","meta"],Y={stop:i=>i.stopPropagation(),prevent:i=>i.preventDefault(),self:i=>i.target!==i.currentTarget,ctrl:i=>!i.ctrlKey,shift:i=>!i.shiftKey,alt:i=>!i.altKey,meta:i=>!i.metaKey,left:i=>"button"in i&&i.button!==0,middle:i=>"button"in i&&i.button!==1,right:i=>"button"in i&&i.button!==2,exact:(i,a)=>M.some(f=>i["".concat(f,"Key")]&&!a.includes(f))},H=(i,a)=>{var f=function(p){for(var w=0;w<a.length;w++){var E=Y[a[w]];if(E&&E(p,a))return}for(var I=arguments.length,D=new Array(I>1?I-1:0),x=1;x<I;x++)D[x-1]=arguments[x];return i(p,...D)};return f.modifiers=a,f},te={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},Ne=(i,a)=>f=>{if("key"in f){var p=u.hyphenate(f.key);if(a.some(w=>w===p||te[w]===p))return i(f)}},pe={beforeMount(i,a){var{value:f}=a;ce(i,f)},updated(i,a){var{value:f,oldValue:p}=a;!f!=!p&&ce(i,f)},beforeUnmount(i,a){var{value:f}=a;ce(i,f)}};function ce(i,a){i.setAttribute(".vShow",!!a)}var Fe=u.extend({patchProp:Yc,forcePatchProp:k.forcePatchProp},cc),Ye;function ut(){return Ye||(Ye=Ns(Fe))}var vt=function(){ut().render(...arguments)},we=function(){var i=ut().createApp(...arguments);Ce(i);var{mount:a}=i;return i.mount=f=>(u.isString(f)&&(f=Ka(f)),f&&a(f,!1,!1)),i},fe=we;function Ce(i){Object.defineProperty(i.config,"isNativeTag",{value:a=>u.isHTMLTag(a)||u.isSVGTag(a),writable:!1})}function nt(){}function We(){}return Object.defineProperty(S,"camelize",{enumerable:!0,get:function(){return u.camelize}}),Object.defineProperty(S,"capitalize",{enumerable:!0,get:function(){return u.capitalize}}),Object.defineProperty(S,"normalizeClass",{enumerable:!0,get:function(){return u.normalizeClass}}),Object.defineProperty(S,"normalizeProps",{enumerable:!0,get:function(){return u.normalizeProps}}),Object.defineProperty(S,"normalizeStyle",{enumerable:!0,get:function(){return u.normalizeStyle}}),Object.defineProperty(S,"toDisplayString",{enumerable:!0,get:function(){return u.toDisplayString}}),Object.defineProperty(S,"toHandlerKey",{enumerable:!0,get:function(){return u.toHandlerKey}}),Object.defineProperty(S,"EffectScope",{enumerable:!0,get:function(){return P.EffectScope}}),Object.defineProperty(S,"ReactiveEffect",{enumerable:!0,get:function(){return P.ReactiveEffect}}),Object.defineProperty(S,"customRef",{enumerable:!0,get:function(){return P.customRef}}),Object.defineProperty(S,"effect",{enumerable:!0,get:function(){return P.effect}}),Object.defineProperty(S,"effectScope",{enumerable:!0,get:function(){return P.effectScope}}),Object.defineProperty(S,"getCurrentScope",{enumerable:!0,get:function(){return P.getCurrentScope}}),Object.defineProperty(S,"isProxy",{enumerable:!0,get:function(){return P.isProxy}}),Object.defineProperty(S,"isReactive",{enumerable:!0,get:function(){return P.isReactive}}),Object.defineProperty(S,"isReadonly",{enumerable:!0,get:function(){return P.isReadonly}}),Object.defineProperty(S,"isRef",{enumerable:!0,get:function(){return P.isRef}}),Object.defineProperty(S,"isShallow",{enumerable:!0,get:function(){return P.isShallow}}),Object.defineProperty(S,"markRaw",{enumerable:!0,get:function(){return P.markRaw}}),Object.defineProperty(S,"onScopeDispose",{enumerable:!0,get:function(){return P.onScopeDispose}}),Object.defineProperty(S,"proxyRefs",{enumerable:!0,get:function(){return P.proxyRefs}}),Object.defineProperty(S,"reactive",{enumerable:!0,get:function(){return P.reactive}}),Object.defineProperty(S,"readonly",{enumerable:!0,get:function(){return P.readonly}}),Object.defineProperty(S,"ref",{enumerable:!0,get:function(){return P.ref}}),Object.defineProperty(S,"shallowReactive",{enumerable:!0,get:function(){return P.shallowReactive}}),Object.defineProperty(S,"shallowReadonly",{enumerable:!0,get:function(){return P.shallowReadonly}}),Object.defineProperty(S,"shallowRef",{enumerable:!0,get:function(){return P.shallowRef}}),Object.defineProperty(S,"stop",{enumerable:!0,get:function(){return P.stop}}),Object.defineProperty(S,"toRaw",{enumerable:!0,get:function(){return P.toRaw}}),Object.defineProperty(S,"toRef",{enumerable:!0,get:function(){return P.toRef}}),Object.defineProperty(S,"toRefs",{enumerable:!0,get:function(){return P.toRefs}}),Object.defineProperty(S,"triggerRef",{enumerable:!0,get:function(){return P.triggerRef}}),Object.defineProperty(S,"unref",{enumerable:!0,get:function(){return P.unref}}),S.BaseTransition=ie,S.Comment=on,S.Fragment=Ht,S.KeepAlive=xo,S.Static=gr,S.Suspense=qn,S.Teleport=Ut,S.Text=Jt,S.Transition=cs,S.TransitionGroup=Ja,S.callWithAsyncErrorHandling=Dt,S.callWithErrorHandling=gn,S.cloneVNode=di,S.compatUtils=js,S.computed=Vs,S.createApp=we,S.createBlock=Lo,S.createComment=Ka,S.createCommentVNode=ji,S.createElement=gl,S.createElementBlock=Rs,S.createElementVNode=Tn,S.createHydrationRenderer=ks,S.createPropsRestProxy=Eo,S.createRenderer=Ns,S.createSSRApp=fe,S.createSlots=Do,S.createStaticVNode=tc,S.createTextNode=lc,S.createTextVNode=fl,S.createVNode=kn,S.createVueApp=we,S.defineAsyncComponent=En,S.defineComponent=zt,S.defineEmits=Vc,S.defineExpose=$c,S.defineProps=Lc,S.getCurrentInstance=Pi,S.getTransitionRawChildren=ge,S.guardReactiveProps=Ti,S.h=Nr,S.handleError=Vt,S.initCustomFormatter=zc,S.inject=oo,S.injectHook=ci,S.isMemoSame=Us,S.isRuntimeOnly=Rl,S.isVNode=$r,S.mergeDefaults=jc,S.mergeProps=Rn,S.nextTick=Or,S.onActivated=ia,S.onBeforeActivate=nt,S.onBeforeDeactivate=We,S.onBeforeMount=Sa,S.onBeforeUnmount=aa,S.onBeforeUpdate=Fr,S.onDeactivated=Ua,S.onErrorCaptured=ws,S.onMounted=nr,S.onRenderTracked=Es,S.onRenderTriggered=ys,S.onServerPrefetch=bs,S.onUnmounted=Lr,S.onUpdated=Mo,S.openBlock=ca,S.popScopeId=Mt,S.provide=br,S.pushScopeId=No,S.queuePostFlushCb=Ji,S.registerRuntimeCompiler=rc,S.render=vt,S.renderList=Ca,S.renderSlot=As,S.resolveComponent=ja,S.resolveDirective=Ss,S.resolveDynamicComponent=ol,S.resolveFilter=Hs,S.resolveTransitionHooks=G,S.setBlockTracking=is,S.setDevtoolsHook=Br,S.setTransitionHooks=Z,S.ssrContextKey=xa,S.ssrUtils=So,S.toHandlers=Aa,S.transformVNodeArgs=cl,S.useAttrs=oc,S.useCssModule=qc,S.useCssVars=Kc,S.useSSRContext=da,S.useSlots=Hc,S.useTransitionState=tr,S.vModelDynamic=O,S.vModelText=C,S.vShow=pe,S.version=wo,S.warn=A,S.watch=ei,S.watchEffect=Go,S.watchPostEffect=Va,S.watchSyncEffect=wa,S.withAsyncContext=$s,S.withCtx=ro,S.withDefaults=Uc,S.withDirectives=ti,S.withKeys=Ne,S.withMemo=ha,S.withModifiers=H,S.withScopeId=ke,Object.defineProperty(S,"__esModule",{value:!0}),S}({},c,b,T);return B.__TYPE__="vue",B}function tv(v,c,b){let T=b.Vue,B=b.setTimeout,S=b.clearTimeout,k=b.setInterval,u=b.clearInterval,P=b.__uniConfig,ze=b.__uniRoutes,At=b.VueShared,rn=b.UniShared;var A=function(ee,se,gn){"use strict";var Dt="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Vt=function(){let e=new Uint8Array(256);for(var t=0;t<Dt.length;t++)e[Dt.charCodeAt(t)]=t;return e}();function Kr(e){var t=new Uint8Array(e),n,r=t.length,s="";for(n=0;n<r;n+=3)s+=Dt[t[n]>>2],s+=Dt[(t[n]&3)<<4|t[n+1]>>4],s+=Dt[(t[n+1]&15)<<2|t[n+2]>>6],s+=Dt[t[n+2]&63];return r%3===2?s=s.substring(0,s.length-1)+"=":r%3===1&&(s=s.substring(0,s.length-2)+"=="),s}function ii(e){var t=e.length*.75,n=e.length,r,s=0,d,g,y,j;e[e.length-1]==="="&&(t--,e[e.length-2]==="="&&t--);var N=new ArrayBuffer(t),$=new Uint8Array(N);for(r=0;r<n;r+=4)d=Vt[e.charCodeAt(r)],g=Vt[e.charCodeAt(r+1)],y=Vt[e.charCodeAt(r+2)],j=Vt[e.charCodeAt(r+3)],$[s++]=d<<2|g>>4,$[s++]=(g&15)<<4|y>>2,$[s++]=(y&3)<<6|j&63;return N}let Rr=["original","compressed"],yn=["album","camera"],Wt=["GET","OPTIONS","HEAD","POST","PUT","DELETE","TRACE","CONNECT","PATCH"];function cn(e,t){return!e||t.indexOf(e)===-1?t[0]:e}function In(e,t){return!ee.isArray(e)||e.length===0||e.find(n=>t.indexOf(n)===-1)?t:e}function Wn(e,t){console.warn(`${e}: ${t}`)}function lr(e,t,n,r){r||(r=Wn);for(let s in n){let d=Be(s,t[s],n[s],!ee.hasOwn(t,s));ee.isString(d)&&r(e,d)}}function Vn(e,t,n,r){if(!n)return;if(!ee.isArray(n))return lr(e,t[0]||Object.create(null),n,r);let s=n.length,d=t.length;for(let g=0;g<s;g++){let y=n[g],j=Object.create(null);d>g&&(j[y.name]=t[g]),lr(e,j,{[y.name]:y},r)}}function Be(e,t,n,r){ee.isPlainObject(n)||(n={type:n});let{type:s,required:d,validator:g}=n;if(d&&r)return'Missing required args: "'+e+'"';if(!(t==null&&!d)){if(s!=null){let y=!1,j=ee.isArray(s)?s:[s],N=[];for(let $=0;$<j.length&&!y;$++){let{valid:me,expectedType:Te}=_t(t,j[$]);N.push(Te||""),y=me}if(!y)return Xt(e,t,N)}if(g)return g(t)}}let at=ee.makeMap("String,Number,Boolean,Function,Symbol");function _t(e,t){let n,r=un(t);if(at(r)){let s=typeof e;n=s===r.toLowerCase(),!n&&s==="object"&&(n=e instanceof t)}else r==="Object"?n=ee.isObject(e):r==="Array"?n=ee.isArray(e):n=e instanceof t||ee.toRawType(e)===un(t);return{valid:n,expectedType:r}}function Xt(e,t,n){let r=`Invalid args: type check failed for args "${e}". Expected ${n.map(ee.capitalize).join(", ")}`,s=n[0],d=ee.toRawType(t),g=dn(t,s),y=dn(t,d);return n.length===1&&_r(s)&&!Or(s,d)&&(r+=` with value ${g}`),r+=`, got ${d} `,_r(d)&&(r+=`with value ${y}.`),r}function un(e){let t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function dn(e,t){return t==="String"?`"${e}"`:t==="Number"?`${Number(e)}`:`${e}`}function _r(e){return["string","number","boolean"].some(n=>e.toLowerCase()===n)}function Or(...e){return e.some(t=>t.toLowerCase()==="boolean")}function xi(e){return function(){try{return e.apply(e,arguments)}catch(t){console.error(t)}}}let Bi=1,cr={};function Ki(e,t,n,r=!1){return cr[e]={name:t,keepAlive:r,callback:n},e}function Ho(e,t,n){if(typeof e=="number"){let r=cr[e];if(r)return r.keepAlive||delete cr[e],r.callback(t,n)}return t}function Mi(e){for(let t in cr)if(cr[t].name===e)return!0;return!1}function Ji(e,t){for(let n in cr){let r=cr[n];r.callback===t&&r.name===e&&delete cr[n]}}function Zi(e){bt.off("api."+e)}function gi(e){bt.on("api."+e,t=>{for(let n in cr){let r=cr[n];r.name===e&&r.callback(t)}})}function Xi(e,t){return Ki(Bi++,e,t,!0)}let jr="success",zr="fail",ur="complete";function xr(e){let t={};for(let n in e){let r=e[n];ee.isFunction(r)&&(t[n]=xi(r),delete e[n])}return t}function Qi(e,t){return!e||e.indexOf(":fail")===-1?t+":ok":t+e.substring(e.indexOf(":fail"))}function To(e,t={},{beforeAll:n,beforeSuccess:r}={}){ee.isPlainObject(t)||(t={});let{success:s,fail:d,complete:g}=xr(t),y=ee.isFunction(s),j=ee.isFunction(d),N=ee.isFunction(g),$=Bi++;return Ki($,e,me=>{me=me||{},me.errMsg=Qi(me.errMsg,e),ee.isFunction(n)&&n(me),me.errMsg===e+":ok"?(ee.isFunction(r)&&r(me,t),y&&s(me)):j&&d(me),N&&g(me)}),$}let Po="success",oi="fail",Qn="complete",vi={},ai={};function fr(e){return function(t){return e(t)||t}}function mi(e,t){let n=!1;for(let r=0;r<e.length;r++){let s=e[r];if(n)n=Promise.resolve(fr(s));else{let d=s(t);if(ee.isPromise(d)&&(n=Promise.resolve(d)),d===!1)return{then(){},catch(){}}}}return n||{then(r){return r(t)},catch(){}}}function _i(e,t={}){return[Po,oi,Qn].forEach(n=>{let r=e[n];if(!ee.isArray(r))return;let s=t[n];t[n]=function(g){mi(r,g).then(y=>ee.isFunction(s)&&s(y)||y)}}),t}function bi(e,t){let n=[];ee.isArray(vi.returnValue)&&n.push(...vi.returnValue);let r=ai[e];return r&&ee.isArray(r.returnValue)&&n.push(...r.returnValue),n.forEach(s=>{t=s(t)||t}),t}function Tr(e){let t=Object.create(null);Object.keys(vi).forEach(r=>{r!=="returnValue"&&(t[r]=vi[r].slice())});let n=ai[e];return n&&Object.keys(n).forEach(r=>{r!=="returnValue"&&(t[r]=(t[r]||[]).concat(n[r]))}),t}function Br(e,t,n,r){let s=Tr(e);return s&&Object.keys(s).length?ee.isArray(s.invoke)?mi(s.invoke,n).then(g=>t(_i(s,g),...r)):t(_i(s,n),...r):t(n,...r)}function Jr(e){return!!(ee.isPlainObject(e)&&[jr,zr,ur].find(t=>ee.isFunction(e[t])))}function Zr(e){return e}function er(e,t){return(n={},...r)=>Jr(n)?bi(e,Br(e,t,n,r)):bi(e,new Promise((s,d)=>{Br(e,t,ee.extend(n,{success:s,fail:d}),r)}))}function eo(e,t){let n=e[0];if(!t||!ee.isPlainObject(t.formatArgs)&&ee.isPlainObject(n))return;let r=t.formatArgs,s=Object.keys(r);for(let d=0;d<s.length;d++){let g=s[d],y=r[g];if(ee.isFunction(y)){let j=y(e[0][g],n);if(ee.isString(j))return j}else ee.hasOwn(n,g)||(n[g]=y)}}function to(e,t,n){return Ho(e,ee.extend(n||{},{errMsg:t+":ok"}))}function go(e,t,n,r){return Ho(e,ee.extend({errMsg:t+":fail"+(n?" "+n:"")},r))}function yi(e,t,n,r){if(r&&r.beforeInvoke){let d=r.beforeInvoke(t);if(ee.isString(d))return d}let s=eo(t,r);if(s)return s}function Io(e){if(!ee.isFunction(e))throw new Error('Invalid args: type check failed for args "callback". Expected Function')}function jo(e,t,n){return r=>{Io(r);let s=yi(e,[r],void 0,n);if(s)throw new Error(s);let d=!Mi(e);Xi(e,r),d&&(gi(e),t())}}function ba(e,t,n){return r=>{Io(r);let s=yi(e,[r],void 0,n);if(s)throw new Error(s);e=e.replace("off","on"),Ji(e,r),Mi(e)||(Zi(e),t())}}function zo(e){return!e||ee.isString(e)?e:e.stack?(console.error(e.message+se.LINEFEED+e.stack),e.message):e}function no(e,t,n,r){return s=>{let d=To(e,s,r),g=yi(e,[s],n,r);return g?go(d,e,g):t(s,{resolve:y=>to(d,e,y),reject:(y,j)=>go(d,e,zo(y),j)})}}function Cn(e,t,n,r){return(...s)=>{let d=yi(e,s,n,r);if(d)throw new Error(d);return t.apply(null,s)}}function An(e,t,n,r){return no(e,t,n,r)}function Nn(e,t,n){return jo(e,t,n)}function dr(e,t,n){return ba(e,t,n)}function No(e,t,n,r){return er(e,no(e,t,void 0,r))}function Mt(e,t,n,r){return Cn(e,t,void 0,r)}function ke(e,t,n,r){return er(e,An(e,t,void 0,r))}let ro="base64ToArrayBuffer",si=[{name:"base64",type:String,required:!0}],Di="arrayBufferToBase64",io=[{name:"arrayBuffer",type:[ArrayBuffer,Uint8Array],required:!0}],Fi=Mt(ro,e=>ii(e),si),Xr=Mt(Di,e=>Kr(e),io);function ta(){if(typeof __SYSTEM_INFO__!="undefined")return window.__SYSTEM_INFO__;let{resolutionWidth:e}=c.screen.getCurrentSize()||{resolutionWidth:0};return{platform:(c.os.name||"").toLowerCase(),pixelRatio:c.screen.scale,windowWidth:Math.round(e)}}function ko(e,t,n){e.$page.meta.isNVue?ya(e,t,n):Qt(e,t,n)}function Qt(e,t,n){bt.invokeViewMethod("requestComponentInfo",{reqs:t.map(r=>(r.component&&(r.component=r.component.$el.nodeId),r))},e.$page.id,n)}function ya(e,t,n){let r=Li(t),s=new Array(r.length);hn(r,e.$el,s),Qr(e.$requireNativePlugin("dom"),s,0,[],d=>{n(d)})}function Li(e){let t=[];for(let n=0;n<e.length;n++){let r=e[n].selector;r.indexOf("#")===0&&t.push(r.substring(1))}return t}function hn(e,t,n){let r=t.children;if(!ee.isArray(r))return!1;for(let s=0;s<r.length;s++){let d=r[s];if(d.attr){let g=e.indexOf(d.attr.id);if(g>=0&&(n[g]={id:e[g],ref:d.ref,dataset:se.parseNVueDataset(d.attr)},e.length===1))break}d.children&&hn(e,d,n)}}function Qr(e,t,n,r,s){let d=t[n];e.getComponentRect(d.ref,g=>{g.size.id=d.id,g.size.dataset=d.dataset,r.push(g.size),n+=1,n<t.length?Qr(e,t,n,r,s):s(r)})}function Vi(e,t){bt.invokeViewMethod("setPageMeta",t,e.$page.id)}let qn=e=>e!==null&&typeof e=="object",Ro=["{","}"];class La{constructor(){this._caches=Object.create(null)}interpolate(t,n,r=Ro){if(!n)return[t];let s=this._caches[t];return s||(s=ra(t,r),this._caches[t]=s),Ea(s,n)}}let na=/^(?:\d)+/,Wo=/^(?:\w)+/;function ra(e,[t,n]){let r=[],s=0,d="";for(;s<e.length;){let g=e[s++];if(g===t){d&&r.push({type:"text",value:d}),d="";let y="";for(g=e[s++];g!==void 0&&g!==n;)y+=g,g=e[s++];let j=g===n,N=na.test(y)?"list":j&&Wo.test(y)?"named":"unknown";r.push({value:y,type:N})}else d+=g}return d&&r.push({type:"text",value:d}),r}function Ea(e,t){let n=[],r=0,s=Array.isArray(t)?"list":qn(t)?"named":"unknown";if(s==="unknown")return n;for(;r<e.length;){let d=e[r];switch(d.type){case"text":n.push(d.value);break;case"list":n.push(t[parseInt(d.value,10)]);break;case"named":s==="named"&&n.push(t[d.value]);break;case"unknown":break}r++}return n}let Mr="zh-Hans",Dr="zh-Hant",xn="en",hr="fr",br="es",oo=Object.prototype.hasOwnProperty,Go=(e,t)=>oo.call(e,t),Va=new La;function wa(e,t){return!!t.find(n=>e.indexOf(n)!==-1)}function ao(e,t){return t.find(n=>e.indexOf(n)===0)}function ei(e,t){if(!e)return;if(e=e.trim().replace(/_/g,"-"),t&&t[e])return e;if(e=e.toLowerCase(),e==="chinese")return Mr;if(e.indexOf("zh")===0)return e.indexOf("-hans")>-1?Mr:e.indexOf("-hant")>-1||wa(e,["-tw","-hk","-mo","-cht"])?Dr:Mr;let n=ao(e,[xn,hr,br]);if(n)return n}class $i{constructor({locale:t,fallbackLocale:n,messages:r,watcher:s,formater:d}){this.locale=xn,this.fallbackLocale=xn,this.message={},this.messages={},this.watchers=[],n&&(this.fallbackLocale=n),this.formater=d||Va,this.messages=r||{},this.setLocale(t||xn),s&&this.watchLocale(s)}setLocale(t){let n=this.locale;this.locale=ei(t,this.messages)||this.fallbackLocale,this.messages[this.locale]||(this.messages[this.locale]={}),this.message=this.messages[this.locale],n!==this.locale&&this.watchers.forEach(r=>{r(this.locale,n)})}getLocale(){return this.locale}watchLocale(t){let n=this.watchers.push(t)-1;return()=>{this.watchers.splice(n,1)}}add(t,n,r=!0){let s=this.messages[t];s?r?Object.assign(s,n):Object.keys(n).forEach(d=>{Go(s,d)||(s[d]=n[d])}):this.messages[t]=n}f(t,n,r){return this.formater.interpolate(t,n,r).join("")}t(t,n,r){let s=this.message;return typeof n=="string"?(n=ei(n,this.messages),n&&(s=this.messages[n])):r=n,Go(s,t)?this.formater.interpolate(s[t],r).join(""):(console.warn(`Cannot translate the value of keypath ${t}. Use the value of keypath as default.`),t)}}function Yo(e,t){e.$watchLocale?e.$watchLocale(n=>{t.setLocale(n)}):e.$watch(()=>e.$locale,n=>{t.setLocale(n)})}function li(){return typeof le!="undefined"&&le.getLocale?le.getLocale():typeof global!="undefined"&&global.getLocale?global.getLocale():xn}function Ei(e,t={},n,r){typeof e!="string"&&([e,t]=[t,e]),typeof e!="string"&&(e=li()),typeof n!="string"&&(n=typeof P!="undefined"&&P.fallbackLocale||xn);let s=new $i({locale:e,fallbackLocale:n,messages:t,watcher:r}),d=(g,y)=>{if(typeof Sn!="function")d=function(j,N){return s.t(j,N)};else{let j=!1;d=function(N,$){let me=Sn().$vm;return me&&(me.$locale,j||(j=!0,Yo(me,s))),s.t(N,$)}}return d(g,y)};return{i18n:s,f(g,y,j){return s.f(g,y,j)},t(g,y){return d(g,y)},add(g,y,j=!0){return s.add(g,y,j)},watch(g){return s.watchLocale(g)},getLocale(){return s.getLocale()},setLocale(g){return s.setLocale(g)}}}function tr(e,t){return e.indexOf(t[0])>-1}let Pr=se.once(()=>typeof P!="undefined"&&P.locales&&!!Object.keys(P.locales).length),F;function ie(){let e=le.getLocale(),t=P.locales;return t[e]||t[P.fallbackLocale]||t.en||{}}function ye(e){return tr(e,se.I18N_JSON_DELIMITERS)?Z().f(e,ie(),se.I18N_JSON_DELIMITERS):e}function G(e,t){if(t.length===1){if(e){let r=e[t[0]];if(ee.isString(r)&&tr(r,se.I18N_JSON_DELIMITERS))return e}return}let n=t.shift();return G(e&&e[n],t)}function V(e,t){return t.map(n=>J(e,n))}function J(e,t){let n=G(e,t);if(!n)return!1;let r=t[t.length-1],s=n[r];return Object.defineProperty(n,r,{get(){return ye(s)},set(d){s=d}}),!0}function Z(){if(!F){let e;if(typeof Sn=="function"?e=v.requireModule("plus").getLanguage():e=c.webview.currentWebview().getStyle().locale,F=Ei(e),Pr()){let t=Object.keys(P.locales||{});t.length&&t.forEach(n=>F.add(n,P.locales[n])),F.setLocale(e)}}return F}function ge(e,t,n){return t.reduce((r,s,d)=>(r[e+s]=n[d],r),{})}let zt=se.once(()=>{let e="uni.app.",t=["quit"];Z().add(xn,ge(e,t,["Press back button again to exit"]),!1),Z().add(br,ge(e,t,["Pulse otra vez para salir"]),!1),Z().add(hr,ge(e,t,["Appuyez \xE0 nouveau pour quitter l'application"]),!1),Z().add(Mr,ge(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u5E94\u7528"]),!1),Z().add(Dr,ge(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u61C9\u7528"]),!1)}),On=se.once(()=>{let e="uni.showActionSheet.",t=["cancel"];Z().add(xn,ge(e,t,["Cancel"]),!1),Z().add(br,ge(e,t,["Cancelar"]),!1),Z().add(hr,ge(e,t,["Annuler"]),!1),Z().add(Mr,ge(e,t,["\u53D6\u6D88"]),!1),Z().add(Dr,ge(e,t,["\u53D6\u6D88"]),!1)}),En=se.once(()=>{let e="uni.showModal.",t=["cancel","confirm"];Z().add(xn,ge(e,t,["Cancel","OK"]),!1),Z().add(br,ge(e,t,["Cancelar","OK"]),!1),Z().add(hr,ge(e,t,["Annuler","OK"]),!1),Z().add(Mr,ge(e,t,["\u53D6\u6D88","\u786E\u5B9A"]),!1),Z().add(Dr,ge(e,t,["\u53D6\u6D88","\u78BA\u5B9A"]),!1)}),yr=se.once(()=>{let e="uni.chooseImage.",t=["cancel","sourceType.album","sourceType.camera"];Z().add(xn,ge(e,t,["Cancel","Album","Camera"]),!1),Z().add(br,ge(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),Z().add(hr,ge(e,t,["Annuler","Album","Cam\xE9ra"]),!1),Z().add(Mr,ge(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),Z().add(Dr,ge(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),Kn=se.once(()=>{let e="uni.chooseVideo.",t=["cancel","sourceType.album","sourceType.camera"];Z().add(xn,ge(e,t,["Cancel","Album","Camera"]),!1),Z().add(br,ge(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),Z().add(hr,ge(e,t,["Annuler","Album","Cam\xE9ra"]),!1),Z().add(Mr,ge(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),Z().add(Dr,ge(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),$a=se.once(()=>{let e="uni.previewImage.",t=["cancel","button.save","save.success","save.fail"];Z().add(xn,ge(e,t,["Cancel","Save Image","Saved successfully","Save failed"]),!1),Z().add(br,ge(e,t,["Cancelar","Guardar imagen","Guardado exitosamente","Error al guardar"]),!1),Z().add(hr,ge(e,t,["Annuler","Guardar imagen","Enregistr\xE9 avec succ\xE8s","\xC9chec de la sauvegarde"]),!1),Z().add(Mr,ge(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u56FE\u50CF","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u6210\u529F","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u5931\u8D25"]),!1),Z().add(Dr,ge(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u5716\u50CF","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u6210\u529F","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u5931\u6557"]),!1)}),xo=se.once(()=>{let e="uni.setClipboardData.",t=["success","fail"];Z().add(xn,ge(e,t,["Content copied","Copy failed, please copy manually"]),!1),Z().add(br,ge(e,t,["Contenido copiado","Error al copiar, copie manualmente"]),!1),Z().add(hr,ge(e,t,["Contenu copi\xE9","\xC9chec de la copie, copiez manuellement"]),!1),Z().add(Mr,ge(e,t,["\u5185\u5BB9\u5DF2\u590D\u5236","\u590D\u5236\u5931\u8D25\uFF0C\u8BF7\u624B\u52A8\u590D\u5236"]),!1),Z().add(Dr,ge(e,t,["\u5167\u5BB9\u5DF2\u5FA9\u5236","\u5FA9\u5236\u5931\u6557\uFF0C\u8ACB\u624B\u52D5\u5FA9\u88FD"]),!1)}),Bo=se.once(()=>{let e="uni.scanCode.",t=["title","album","fail","flash.on","flash.off"];Z().add(xn,ge(e,t,["Scan code","Album","Recognition failure","Tap to turn light on","Tap to turn light off"]),!1),Z().add(br,ge(e,t,["C\xF3digo de escaneo","\xC1lbum","\xC9chec de la reconnaissance","Toque para encender la luz","Toque para apagar la luz"]),!1),Z().add(hr,ge(e,t,["Code d\u2019analyse","Album","Fallo de reconocimiento","Appuyez pour activer l'\xE9clairage","Appuyez pour d\xE9sactiver l'\xE9clairage"]),!1),Z().add(Mr,ge(e,t,["\u626B\u7801","\u76F8\u518C","\u8BC6\u522B\u5931\u8D25","\u8F7B\u89E6\u7167\u4EAE","\u8F7B\u89E6\u5173\u95ED"]),!1),Z().add(Dr,ge(e,t,["\u6383\u78BC","\u76F8\u518A","\u8B58\u5225\u5931\u6557","\u8F15\u89F8\u7167\u4EAE","\u8F15\u89F8\u95DC\u9589"]),!1)}),ia=se.once(()=>{let e="uni.startSoterAuthentication.",t=["authContent"];Z().add(xn,ge(e,t,["Fingerprint recognition"]),!1),Z().add(br,ge(e,t,["Reconocimiento de huellas dactilares"]),!1),Z().add(hr,ge(e,t,["Reconnaissance de l'empreinte digitale"]),!1),Z().add(Mr,ge(e,t,["\u6307\u7EB9\u8BC6\u522B\u4E2D..."]),!1),Z().add(Dr,ge(e,t,["\u6307\u7D0B\u8B58\u5225\u4E2D..."]),!1)});function Ua(e){if(Pr())return V(e,[["titleText"],["searchInput","placeholder"]])}function Ha(e){if(Pr()){let t="caption";return V(e,[["contentdown",t],["contentover",t],["contentrefresh",t]])}}function _s(e){let t=new se.Emitter;return{on(n,r){return t.on(n,r)},once(n,r){return t.once(n,r)},off(n,r){return t.off(n,r)},emit(n,...r){return t.emit(n,...r)},subscribe(n,r,s=!1){t[s?"once":"on"](`${e}.${n}`,r)},unsubscribe(n,r){t.off(`${e}.${n}`,r)},subscribeHandler(n,r,s){t.emit(`${e}.${n}`,r,s)}}}let oa="invokeViewApi",qo="invokeServiceApi";function ci(e){return e=e+"",e.indexOf("rpx")!==-1||e.indexOf("upx")!==-1}function wi(e,t=!1){if(t)return Sa(e);if(ee.isString(e)){let n=parseInt(e)||0;return ci(e)?le.upx2px(n):n}return e}function Sa(e){return ci(e)?e.replace(/(\d+(\.\d+)?)[ru]px/g,(t,n)=>le.upx2px(parseFloat(n))+"px"):e}function nr(e){let t=se.resolveComponentInstance(e);if(t.$page)return t.$page.id;if(!t.$)return;let n=t.$.root.proxy;if(n&&n.$page)return n.$page.id}function Fr(){let e=Ln(),t=e.length;if(t)return e[t-1]}function Mo(){let e=Fr();if(e)return e.$page.meta}function aa(){let e=Mo();return e?e.id:-1}function Lr(){let e=Fr();if(e)return e.$vm}let bs=["navigationBar","pullToRefresh"];function ys(){return JSON.parse(JSON.stringify(P.globalStyle||{}))}function Es(e,t){let n=ys(),r=ee.extend({id:t},n,e);bs.forEach(d=>{r[d]=ee.extend({},n[d],e[d])});let{navigationBar:s}=r;return s.titleText&&s.titleImage&&(s.titleText=""),r}function ws(e){return JSON.parse(wi(JSON.stringify(e),!0))}function il(e){return e.offset&&(e.offset=wi(e.offset)),e.height&&(e.height=wi(e.height)),e.range&&(e.range=wi(e.range)),e}function ti(e,t,n,r,s){let{id:d,route:g}=r;return{id:d,path:se.addLeadingSlash(g),route:g,fullPath:t,options:n,meta:r,openType:e,eventChannel:s,statusBarStyle:r.navigationBar.titleColor==="#000000"?"dark":"light"}}function Si(e,t,n){let r=e.$[t];!ee.isArray(r)||n.__weh&&ee.remove(r,n.__weh)}function Gn(e,t,n){if(ee.isString(e))n=t,t=e,e=Lr();else if(typeof e=="number"){let s=Ln().find(d=>d.$page.id===e);s?e=s.$vm:e=Lr()}if(!e)return;if(e.__call_hook)return e.__call_hook(t,n);let r=e.$[t];return r&&se.invokeArrayFns(r,n)}function Tl(e){if(e.indexOf("/")===0)return e;let t="",n=Ln();return n.length&&(t=n[n.length-1].$page.route),ja(t,e)}function ja(e,t){if(t.indexOf("/")===0)return t;if(t.indexOf("./")===0)return ja(e,t.slice(2));let n=t.split("/"),r=n.length,s=0;for(;s<r&&n[s]==="..";s++);n.splice(0,s),t=n.join("/");let d=e.length>0?e.split("/"):[];return d.splice(d.length-s-1,s+1),se.addLeadingSlash(d.concat(n).join("/"))}function vo(e,t=!1){return t?ze.find(n=>n.path===e||n.alias===e):ze.find(n=>n.path===e)}function ol(e){let t=vo(e);if(t)return t.meta}function Ss(e,t,n){let r=vo(se.addLeadingSlash(t));if(r){let{meta:d}=r;delete d.tabBarIndex,d.isQuit=d.isTabBar=!1}let s=vo(se.addLeadingSlash(n));if(s){let{meta:d}=s;d.tabBarIndex=e,d.isQuit=d.isTabBar=!0;let g=P.tabBar;g&&g.list&&g.list[e]&&(g.list[e].pagePath=se.removeLeadingSlash(n))}}let mo,Cs,Ca;function Do(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function As(){return mo.webview.currentWebview().id}let za,Aa,so={};function _o(e){let t=e.data&&e.data.__message;if(!t||!t.__page)return;let n=t.__page,r=so[n];r&&r(t),t.keep||delete so[n]}function sa(e,t){Do()==="v8"?Ca?(za&&za.close(),za=new Ca(As()),za.onmessage=_o):Aa||(Aa=Cs.requireModule("globalEvent"),Aa.addEventListener("plusMessage",_o)):window.__plusMessage=_o,so[e]=t}class bo{constructor(t){this.webview=t}sendMessage(t){let n=JSON.parse(JSON.stringify({__message:{data:t}})),r=this.webview.id;Ca?new Ca(r).postMessage(n):mo.webview.postMessageToUniNView&&mo.webview.postMessageToUniNView(n,r)}close(){this.webview.close()}}function Os({context:e={},url:t,data:n={},style:r={},onMessage:s,onClose:d}){mo=e.plus||c,Cs=e.weex||(typeof v=="object"?v:null),Ca=e.BroadcastChannel||(typeof BroadcastChannel=="object"?BroadcastChannel:null);let g={autoBackButton:!0,titleSize:"17px"},y=`page${Date.now()}`;r=ee.extend({},r),r.titleNView!==!1&&r.titleNView!=="none"&&(r.titleNView=ee.extend(g,r.titleNView));let j={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${t}.js`,defaultFontSize:16,viewport:mo.screen.resolutionWidth}};r=ee.extend(j,r);let N=mo.webview.create("",y,r,{extras:{from:As(),runtime:Do(),data:n,useGlobalEvent:!Ca}});return N.addEventListener("close",d),sa(y,$=>{ee.isFunction(s)&&s($.data),$.keep||N.close("auto")}),N.show(r.animationType,r.animationDuration),new bo(N)}let Pl=(e,t)=>bt.emit("api."+e,t),Ts=1;function al(){return aa()+"."+oa}let _=(e,t,n,r)=>{let{subscribe:s,publishHandler:d}=bt,g=r?Ts++:0;r&&s(oa+"."+g,r,!0),d(al(),{id:g,name:e,args:t},n)},L=(e,t,n,r)=>{let{subscribe:s,unsubscribe:d,publishHandler:g}=bt,y=Ts++,j=oa+"."+y;return s(j,n),g(al(),{id:y,name:e,args:t},r),()=>{d(j)}},q=Object.create(null);function z(){bt.subscribe(qo,re)}function Q(e,t){q[e]||(q[e]=t)}function re({id:e,name:t,args:n},r){let s=g=>{e&&bt.publishHandler(qo+"."+e,g,r)},d=q[t];d?d(n,s):s({})}let he=ee.extend(_s("view"),{invokeOnCallback:Pl,invokeViewMethod:_,invokeViewMethodKeepAlive:L});function Se(){let{on:e}=bt;e(se.ON_RESIZE,Me),e(se.ON_APP_ENTER_FOREGROUND,Ue),e(se.ON_APP_ENTER_BACKGROUND,Ae)}function Me(e){Gn(Fr(),se.ON_RESIZE,e),bt.invokeOnCallback("onWindowResize",e)}function Ue(e){let t=Fr();Gn(Sn(),se.ON_SHOW,e),Gn(t,se.ON_SHOW)}function Ae(){Gn(Sn(),se.ON_HIDE),Gn(Fr(),se.ON_HIDE)}let Ie=[se.ON_PAGE_SCROLL,se.ON_REACH_BOTTOM];function qe(){Ie.forEach(e=>bt.subscribe(e,gt(e)))}function gt(e){return(t,n)=>{Gn(parseInt(n),e,t)}}function Kt(){Se(),qe()}function pt(e){e.$vm=e,e.$mpType="app";let t=gn.ref(Z().getLocale());Object.defineProperty(e,"$locale",{get(){return t.value},set(n){t.value=n}})}function lt(e,t){e.route=t.route,e.$vm=e,e.$page=t,e.$mpType="page",t.meta.isTabBar&&(e.$.__isTabBar=!0,e.$.__isActive=!0)}function It(){return{path:"",query:{},scene:1001,referrerInfo:{appId:"",extraData:{}}}}function vn(e,t){let n=e.$options||{};n.globalData=ee.extend(n.globalData||{},t),Object.defineProperty(e,"globalData",{get(){return n.globalData},set(r){n.globalData=r}})}function wt(e){if(e.indexOf("//")===0)return"https:"+e;if(se.SCHEME_RE.test(e)||se.DATA_RE.test(e))return e;if(Lt(e))return"file://"+ft(e);let t="file://"+ft("_www");if(e.indexOf("/")===0)return e.startsWith("/storage/")||e.startsWith("/sdcard/")||e.includes("/Containers/Data/Application/")?"file://"+e:t+e;if(e.indexOf("../")===0||e.indexOf("./")===0){if(typeof __id__=="string")return t+ja(se.addLeadingSlash(__id__),e);{let n=Fr();if(n)return t+ja(se.addLeadingSlash(n.route),e)}}return e}let ft=se.cacheStringFunction(e=>c.io.convertLocalFileSystemURL(e).replace(/^\/?apps\//,"/android_asset/apps/").replace(/\/$/,""));function Lt(e){return e.indexOf("_www")===0||e.indexOf("_doc")===0||e.indexOf("_documents")===0||e.indexOf("_downloads")===0}let Bn="success",Mn="fail",$n=[Bn,Mn,"complete"];function Gt(e,t,n,r){if(!e)return;if(typeof n=="undefined")return e[t]();let[,s]=Fo(n,r);return Object.keys(s).length?e[t](Ya(t,s)):e[t]()}function Jn(e,t,n,r){if(!e)return;let[s,d]=Fo(n,r);return Object.keys(d).length?e[t](s,Ya(t,d)):e[t](s)}function Wa(e,t){let n=Ga(e,t.$el);return n||console.error("Can not find `"+e+"`")}function Ga(e,t){if(!e||!t)return;if(t.attr&&t.attr.id===e)return t;let n=t.children;if(!!n)for(let r=0,s=n.length;r<s;r++){let d=Ga(e,n[r]);if(d)return d}}function Fo(e={},t){let n=Object.create(null),r=function(d){let g=e[d];ee.isFunction(g)&&(n[d]=g,delete e[d])};return $n.forEach(r),t&&t.forEach(r),[e,n]}function Ya(e,t){return function(r){let s=r.type;delete r.type;let d=t[s];if(s===Bn?r.errMsg=`${e}:ok`:s===Mn&&(r.errMsg=e+":fail "+(r.msg?" "+r.msg:"")),delete r.code,delete r.msg,ee.isFunction(d)&&d(r),s===Bn||s===Mn){let g=t.complete;ee.isFunction(g)&&g(r)}}}let Ko={play(e){return Gt(e,"play")},pause(e){return Gt(e,"pause")},seek(e,t){return Jn(e,"seek",t.position)},stop(e){return Gt(e,"stop")},sendDanmu(e,t){return Jn(e,"sendDanmu",t)},playbackRate(e,t){return Jn(e,"playbackRate",t.rate)},requestFullScreen(e,t={}){return Jn(e,"requestFullScreen",t)},exitFullScreen(e){return Gt(e,"exitFullScreen")},showStatusBar(e){return Gt(e,"showStatusBar")},hideStatusBar(e){return Gt(e,"hideStatusBar")}};function Ci(e,t,n,r){let s=Ln().find(d=>d.$page.id===t);if(s==null?void 0:s.$page.meta.isNVue){let d=s.$vm;return Ko[n](Wa(e,d),r)}bt.invokeViewMethod("video."+e,{videoId:e,type:n,data:r},t)}let Ps={getCenterLocation(e,t){return Gt(e,"getCenterLocation",t)},moveToLocation(e,t){return Jn(e,"moveToLocation",t)},translateMarker(e,t){return Jn(e,"translateMarker",t,["animationEnd"])},includePoints(e,t){return Jn(e,"includePoints",t)},getRegion(e,t){return Gt(e,"getRegion",t)},getScale(e,t){return Gt(e,"getScale",t)},addCustomLayer(e,t){return Jn(e,"addCustomLayer",t)},removeCustomLayer(e,t){return Jn(e,"removeCustomLayer",t)},addGroundOverlay(e,t){return Jn(e,"addGroundOverlay",t)},removeGroundOverlay(e,t){return Jn(e,"removeGroundOverlay",t)},updateGroundOverlay(e,t){return Jn(e,"updateGroundOverlay",t)},initMarkerCluster(e,t){return Jn(e,"initMarkerCluster",t)},addMarkers(e,t){return Jn(e,"addMarkers",t)},removeMarkers(e,t){return Jn(e,"removeMarkers",t)},moveAlong(e,t){return Jn(e,"moveAlong",t)},openMapApp(e,t){return Jn(e,"openMapApp",t)},on(e,t){return e.on(t.name,t.callback)}};function Er(e,t,n,r,s){let d=Ln().find(g=>g.$page.id===t);if(d==null?void 0:d.$page.meta.isNVue){let g=d.$vm;return Ps[n](Wa(e,g),r)}bt.invokeViewMethod("map."+e,{type:n,data:r},t,s)}function Oa(e){return`IntersectionObserver.${e}`}function sl({reqId:e,component:t,options:n,callback:r},s){let d=Oa(e);bt.invokeViewMethod("addIntersectionObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:d},s),bt.subscribe(d,r)}function Is({reqId:e,component:t},n){bt.invokeViewMethod("removeIntersectionObserver",{reqId:e,component:t.$el.nodeId},n),bt.unsubscribe(Oa(e))}function rs(e){return`MediaQueryObserver.${e}`}function qa({reqId:e,component:t,options:n,callback:r},s){let d=rs(e);bt.invokeViewMethod("addMediaQueryObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:d},s),bt.subscribe(d,r)}function Jo({reqId:e,component:t},n){bt.invokeViewMethod("removeMediaQueryObserver",{reqId:e,component:t.$el.nodeId},n),bt.unsubscribe(rs(e))}let Yn=200,Ir=["unknown","none","ethernet","wifi","2g","3g","4g","5g"],Ui="_doc/uniapp_temp",ni=`${Ui}_${Date.now()}`;function Ta(e){let t=e.split("/");return t[t.length-1]}function Ai(e){let t=e.split(".");return t.length>1?"."+t[t.length-1]:""}let Vr="backbutton";function rr(){le.navigateBack({from:"backbutton",success(){}})}let ui=It(),la=It();function pr(){return ee.extend({},la)}function wr(){return ee.extend({},ui)}function Ns({path:e,query:t,referrerInfo:n}){ee.extend(ui,{path:e,query:t?se.parseQuery(t):{},referrerInfo:n||{}})}function ks({path:e,query:t,referrerInfo:n}){return ee.extend(la,{path:e,query:t?se.parseQuery(t):{},referrerInfo:n||{},channel:c.runtime.channel,launcher:c.runtime.launcher}),ee.extend(ui,la),ee.extend({},la)}function yo(){let e=v.requireModule("plus");if(e.getRedirectInfo){let{path:t,query:n,extraData:r,userAction:s,fromAppid:d}=e.getRedirectInfo()||{},g={appId:d,extraData:{}};return r&&(g.extraData=r),{path:t||"",query:n?"?"+n:"",referrerInfo:g,userAction:s}}}function fi(e){var t={exports:{}};return e(t,t.exports),t.exports}var Zo=fi(function(e,t){var n=typeof Uint8Array!="undefined"&&typeof Uint16Array!="undefined"&&typeof Int32Array!="undefined";function r(g,y){return Object.prototype.hasOwnProperty.call(g,y)}t.assign=function(g){for(var y=Array.prototype.slice.call(arguments,1);y.length;){var j=y.shift();if(!!j){if(typeof j!="object")throw new TypeError(j+"must be non-object");for(var N in j)r(j,N)&&(g[N]=j[N])}}return g},t.shrinkBuf=function(g,y){return g.length===y?g:g.subarray?g.subarray(0,y):(g.length=y,g)};var s={arraySet:function(g,y,j,N,$){if(y.subarray&&g.subarray){g.set(y.subarray(j,j+N),$);return}for(var me=0;me<N;me++)g[$+me]=y[j+me]},flattenChunks:function(g){var y,j,N,$,me,Te;for(N=0,y=0,j=g.length;y<j;y++)N+=g[y].length;for(Te=new Uint8Array(N),$=0,y=0,j=g.length;y<j;y++)me=g[y],Te.set(me,$),$+=me.length;return Te}},d={arraySet:function(g,y,j,N,$){for(var me=0;me<N;me++)g[$+me]=y[j+me]},flattenChunks:function(g){return[].concat.apply([],g)}};t.setTyped=function(g){g?(t.Buf8=Uint8Array,t.Buf16=Uint16Array,t.Buf32=Int32Array,t.assign(t,s)):(t.Buf8=Array,t.Buf16=Array,t.Buf32=Array,t.assign(t,d))},t.setTyped(n)}),Ft=Zo,lo=4,Xo=0,Pa=1,ll=2;function xe(e){for(var t=e.length;--t>=0;)e[t]=0}var Pt=0,xt=1,Ut=2,Ht=3,Jt=258,on=29,gr=256,Un=gr+1+on,Zn=30,ca=19,ua=2*Un+1,Oi=15,is=16,ec=7,Rs=256,Lo=16,$r=17,co=18,xs=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],cl=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],ul=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],os=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],Bs=512,Hi=new Array((Un+2)*2);xe(Hi);var Tn=new Array(Zn*2);xe(Tn);var kn=new Array(Bs);xe(kn);var as=new Array(Jt-Ht+1);xe(as);var Ti=new Array(on);xe(Ti);var di=new Array(Zn);xe(di);function ss(e,t,n,r,s){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=s,this.has_stree=e&&e.length}var fl,tc,ji;function ir(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function Vo(e){return e<256?kn[e]:kn[256+(e>>>7)]}function Ia(e,t){e.pending_buf[e.pending++]=t&255,e.pending_buf[e.pending++]=t>>>8&255}function Rn(e,t,n){e.bi_valid>is-n?(e.bi_buf|=t<<e.bi_valid&65535,Ia(e,e.bi_buf),e.bi_buf=t>>is-e.bi_valid,e.bi_valid+=n-is):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)}function or(e,t,n){Rn(e,n[t*2],n[t*2+1])}function nc(e,t){var n=0;do n|=e&1,e>>>=1,n<<=1;while(--t>0);return n>>>1}function Dc(e){e.bi_valid===16?(Ia(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=e.bi_buf&255,e.bi_buf>>=8,e.bi_valid-=8)}function ar(e,t){var n=t.dyn_tree,r=t.max_code,s=t.stat_desc.static_tree,d=t.stat_desc.has_stree,g=t.stat_desc.extra_bits,y=t.stat_desc.extra_base,j=t.stat_desc.max_length,N,$,me,Te,Ve,yt,Nt=0;for(Te=0;Te<=Oi;Te++)e.bl_count[Te]=0;for(n[e.heap[e.heap_max]*2+1]=0,N=e.heap_max+1;N<ua;N++)$=e.heap[N],Te=n[n[$*2+1]*2+1]+1,Te>j&&(Te=j,Nt++),n[$*2+1]=Te,!($>r)&&(e.bl_count[Te]++,Ve=0,$>=y&&(Ve=g[$-y]),yt=n[$*2],e.opt_len+=yt*(Te+Ve),d&&(e.static_len+=yt*(s[$*2+1]+Ve)));if(Nt!==0){do{for(Te=j-1;e.bl_count[Te]===0;)Te--;e.bl_count[Te]--,e.bl_count[Te+1]+=2,e.bl_count[j]--,Nt-=2}while(Nt>0);for(Te=j;Te!==0;Te--)for($=e.bl_count[Te];$!==0;)me=e.heap[--N],!(me>r)&&(n[me*2+1]!==Te&&(e.opt_len+=(Te-n[me*2+1])*n[me*2],n[me*2+1]=Te),$--)}}function Pn(e,t,n){var r=new Array(Oi+1),s=0,d,g;for(d=1;d<=Oi;d++)r[d]=s=s+n[d-1]<<1;for(g=0;g<=t;g++){var y=e[g*2+1];y!==0&&(e[g*2]=nc(r[y]++,y))}}function Pi(){var e,t,n,r,s,d=new Array(Oi+1);for(n=0,r=0;r<on-1;r++)for(Ti[r]=n,e=0;e<1<<xs[r];e++)as[n++]=r;for(as[n-1]=r,s=0,r=0;r<16;r++)for(di[r]=s,e=0;e<1<<cl[r];e++)kn[s++]=r;for(s>>=7;r<Zn;r++)for(di[r]=s<<7,e=0;e<1<<cl[r]-7;e++)kn[256+s++]=r;for(t=0;t<=Oi;t++)d[t]=0;for(e=0;e<=143;)Hi[e*2+1]=8,e++,d[8]++;for(;e<=255;)Hi[e*2+1]=9,e++,d[9]++;for(;e<=279;)Hi[e*2+1]=7,e++,d[7]++;for(;e<=287;)Hi[e*2+1]=8,e++,d[8]++;for(Pn(Hi,Un+1,d),e=0;e<Zn;e++)Tn[e*2+1]=5,Tn[e*2]=nc(e,5);fl=new ss(Hi,xs,gr+1,Un,Oi),tc=new ss(Tn,cl,0,Zn,Oi),ji=new ss(new Array(0),ul,0,ca,ec)}function hi(e){var t;for(t=0;t<Un;t++)e.dyn_ltree[t*2]=0;for(t=0;t<Zn;t++)e.dyn_dtree[t*2]=0;for(t=0;t<ca;t++)e.bl_tree[t*2]=0;e.dyn_ltree[Rs*2]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function fa(e){e.bi_valid>8?Ia(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function Il(e,t,n,r){fa(e),r&&(Ia(e,n),Ia(e,~n)),Ft.arraySet(e.pending_buf,e.window,t,n,e.pending),e.pending+=n}function Ms(e,t,n,r){var s=t*2,d=n*2;return e[s]<e[d]||e[s]===e[d]&&r[t]<=r[n]}function dl(e,t,n){for(var r=e.heap[n],s=n<<1;s<=e.heap_len&&(s<e.heap_len&&Ms(t,e.heap[s+1],e.heap[s],e.depth)&&s++,!Ms(t,r,e.heap[s],e.depth));)e.heap[n]=e.heap[s],n=s,s<<=1;e.heap[n]=r}function Nl(e,t,n){var r,s,d=0,g,y;if(e.last_lit!==0)do r=e.pending_buf[e.d_buf+d*2]<<8|e.pending_buf[e.d_buf+d*2+1],s=e.pending_buf[e.l_buf+d],d++,r===0?or(e,s,t):(g=as[s],or(e,g+gr+1,t),y=xs[g],y!==0&&(s-=Ti[g],Rn(e,s,y)),r--,g=Vo(r),or(e,g,n),y=cl[g],y!==0&&(r-=di[g],Rn(e,r,y)));while(d<e.last_lit);or(e,Rs,t)}function Ds(e,t){var n=t.dyn_tree,r=t.stat_desc.static_tree,s=t.stat_desc.has_stree,d=t.stat_desc.elems,g,y,j=-1,N;for(e.heap_len=0,e.heap_max=ua,g=0;g<d;g++)n[g*2]!==0?(e.heap[++e.heap_len]=j=g,e.depth[g]=0):n[g*2+1]=0;for(;e.heap_len<2;)N=e.heap[++e.heap_len]=j<2?++j:0,n[N*2]=1,e.depth[N]=0,e.opt_len--,s&&(e.static_len-=r[N*2+1]);for(t.max_code=j,g=e.heap_len>>1;g>=1;g--)dl(e,n,g);N=d;do g=e.heap[1],e.heap[1]=e.heap[e.heap_len--],dl(e,n,1),y=e.heap[1],e.heap[--e.heap_max]=g,e.heap[--e.heap_max]=y,n[N*2]=n[g*2]+n[y*2],e.depth[N]=(e.depth[g]>=e.depth[y]?e.depth[g]:e.depth[y])+1,n[g*2+1]=n[y*2+1]=N,e.heap[1]=N++,dl(e,n,1);while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],ar(e,t),Pn(n,j,e.bl_count)}function Na(e,t,n){var r,s=-1,d,g=t[0*2+1],y=0,j=7,N=4;for(g===0&&(j=138,N=3),t[(n+1)*2+1]=65535,r=0;r<=n;r++)d=g,g=t[(r+1)*2+1],!(++y<j&&d===g)&&(y<N?e.bl_tree[d*2]+=y:d!==0?(d!==s&&e.bl_tree[d*2]++,e.bl_tree[Lo*2]++):y<=10?e.bl_tree[$r*2]++:e.bl_tree[co*2]++,y=0,s=d,g===0?(j=138,N=3):d===g?(j=6,N=3):(j=7,N=4))}function ka(e,t,n){var r,s=-1,d,g=t[0*2+1],y=0,j=7,N=4;for(g===0&&(j=138,N=3),r=0;r<=n;r++)if(d=g,g=t[(r+1)*2+1],!(++y<j&&d===g)){if(y<N)do or(e,d,e.bl_tree);while(--y!==0);else d!==0?(d!==s&&(or(e,d,e.bl_tree),y--),or(e,Lo,e.bl_tree),Rn(e,y-3,2)):y<=10?(or(e,$r,e.bl_tree),Rn(e,y-3,3)):(or(e,co,e.bl_tree),Rn(e,y-11,7));y=0,s=d,g===0?(j=138,N=3):d===g?(j=6,N=3):(j=7,N=4)}}function kl(e){var t;for(Na(e,e.dyn_ltree,e.l_desc.max_code),Na(e,e.dyn_dtree,e.d_desc.max_code),Ds(e,e.bl_desc),t=ca-1;t>=3&&e.bl_tree[os[t]*2+1]===0;t--);return e.opt_len+=3*(t+1)+5+5+4,t}function rc(e,t,n,r){var s;for(Rn(e,t-257,5),Rn(e,n-1,5),Rn(e,r-4,4),s=0;s<r;s++)Rn(e,e.bl_tree[os[s]*2+1],3);ka(e,e.dyn_ltree,t-1),ka(e,e.dyn_dtree,n-1)}function Rl(e){var t=4093624447,n;for(n=0;n<=31;n++,t>>>=1)if(t&1&&e.dyn_ltree[n*2]!==0)return Xo;if(e.dyn_ltree[9*2]!==0||e.dyn_ltree[10*2]!==0||e.dyn_ltree[13*2]!==0)return Pa;for(n=32;n<gr;n++)if(e.dyn_ltree[n*2]!==0)return Pa;return Xo}var xl=!1;function ic(e){xl||(Pi(),xl=!0),e.l_desc=new ir(e.dyn_ltree,fl),e.d_desc=new ir(e.dyn_dtree,tc),e.bl_desc=new ir(e.bl_tree,ji),e.bi_buf=0,e.bi_valid=0,hi(e)}function ls(e,t,n,r){Rn(e,(Pt<<1)+(r?1:0),3),Il(e,t,n,!0)}function hl(e){Rn(e,xt<<1,3),or(e,Rs,Hi),Dc(e)}function Fc(e,t,n,r){var s,d,g=0;e.level>0?(e.strm.data_type===ll&&(e.strm.data_type=Rl(e)),Ds(e,e.l_desc),Ds(e,e.d_desc),g=kl(e),s=e.opt_len+3+7>>>3,d=e.static_len+3+7>>>3,d<=s&&(s=d)):s=d=n+5,n+4<=s&&t!==-1?ls(e,t,n,r):e.strategy===lo||d===s?(Rn(e,(xt<<1)+(r?1:0),3),Nl(e,Hi,Tn)):(Rn(e,(Ut<<1)+(r?1:0),3),rc(e,e.l_desc.max_code+1,e.d_desc.max_code+1,g+1),Nl(e,e.dyn_ltree,e.dyn_dtree)),hi(e),r&&fa(e)}function Fs(e,t,n){return e.pending_buf[e.d_buf+e.last_lit*2]=t>>>8&255,e.pending_buf[e.d_buf+e.last_lit*2+1]=t&255,e.pending_buf[e.l_buf+e.last_lit]=n&255,e.last_lit++,t===0?e.dyn_ltree[n*2]++:(e.matches++,t--,e.dyn_ltree[(as[n]+gr+1)*2]++,e.dyn_dtree[Vo(t)*2]++),e.last_lit===e.lit_bufsize-1}var Ra=ic,Ls=ls,Bl=Fc,Vs=Fs,pl=hl,Lc={_tr_init:Ra,_tr_stored_block:Ls,_tr_flush_block:Bl,_tr_tally:Vs,_tr_align:pl};function Vc(e,t,n,r){for(var s=e&65535|0,d=e>>>16&65535|0,g=0;n!==0;){g=n>2e3?2e3:n,n-=g;do s=s+t[r++]|0,d=d+s|0;while(--g);s%=65521,d%=65521}return s|d<<16|0}var $c=Vc;function Uc(){for(var e,t=[],n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=e&1?3988292384^e>>>1:e>>>1;t[n]=e}return t}var Hc=Uc();function oc(e,t,n,r){var s=Hc,d=r+n;e^=-1;for(var g=r;g<d;g++)e=e>>>8^s[(e^t[g])&255];return e^-1}var ac=oc,jc={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},Eo=Lc,$s=$c,Nr=ac,xa=jc,da=0,Ml=1,zc=3,ha=4,Us=5,wo=0,sc=1,So=-2,Hs=-3,js=-5,gl=-1,lc=1,Ka=2,Dl=3,cc=4,Wc=0,Gc=2,zs=8,uc=9,fc=15,dc=8,hc=29,Fl=256,vl=Fl+1+hc,pc=30,Yc=19,qc=2*vl+1,Kc=15,an=3,pa=258,Wr=pa+an+1,Ws=32,cs=42,ml=69,_l=73,$o=91,Gs=103,Ba=113,Ys=666,Sr=1,qs=2,Ii=3,Co=4,gc=3;function Ma(e,t){return e.msg=xa[t],t}function Ks(e){return(e<<1)-(e>4?9:0)}function ga(e){for(var t=e.length;--t>=0;)e[t]=0}function va(e){var t=e.state,n=t.pending;n>e.avail_out&&(n=e.avail_out),n!==0&&(Ft.arraySet(e.output,t.pending_buf,t.pending_out,n,e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,t.pending===0&&(t.pending_out=0))}function Gr(e,t){Eo._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,va(e.strm)}function mn(e,t){e.pending_buf[e.pending++]=t}function us(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=t&255}function Ll(e,t,n,r){var s=e.avail_in;return s>r&&(s=r),s===0?0:(e.avail_in-=s,Ft.arraySet(t,e.input,e.next_in,s,n),e.state.wrap===1?e.adler=$s(e.adler,t,s,n):e.state.wrap===2&&(e.adler=Nr(e.adler,t,s,n)),e.next_in+=s,e.total_in+=s,s)}function Vl(e,t){var n=e.max_chain_length,r=e.strstart,s,d,g=e.prev_length,y=e.nice_match,j=e.strstart>e.w_size-Wr?e.strstart-(e.w_size-Wr):0,N=e.window,$=e.w_mask,me=e.prev,Te=e.strstart+pa,Ve=N[r+g-1],yt=N[r+g];e.prev_length>=e.good_match&&(n>>=2),y>e.lookahead&&(y=e.lookahead);do if(s=t,!(N[s+g]!==yt||N[s+g-1]!==Ve||N[s]!==N[r]||N[++s]!==N[r+1])){r+=2,s++;do;while(N[++r]===N[++s]&&N[++r]===N[++s]&&N[++r]===N[++s]&&N[++r]===N[++s]&&N[++r]===N[++s]&&N[++r]===N[++s]&&N[++r]===N[++s]&&N[++r]===N[++s]&&r<Te);if(d=pa-(Te-r),r=Te-pa,d>g){if(e.match_start=t,g=d,d>=y)break;Ve=N[r+g-1],yt=N[r+g]}}while((t=me[t&$])>j&&--n!==0);return g<=e.lookahead?g:e.lookahead}function Ja(e){var t=e.w_size,n,r,s,d,g;do{if(d=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-Wr)){Ft.arraySet(e.window,e.window,t,t,0),e.match_start-=t,e.strstart-=t,e.block_start-=t,r=e.hash_size,n=r;do s=e.head[--n],e.head[n]=s>=t?s-t:0;while(--r);r=t,n=r;do s=e.prev[--n],e.prev[n]=s>=t?s-t:0;while(--r);d+=t}if(e.strm.avail_in===0)break;if(r=Ll(e.strm,e.window,e.strstart+e.lookahead,d),e.lookahead+=r,e.lookahead+e.insert>=an)for(g=e.strstart-e.insert,e.ins_h=e.window[g],e.ins_h=(e.ins_h<<e.hash_shift^e.window[g+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[g+an-1])&e.hash_mask,e.prev[g&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=g,g++,e.insert--,!(e.lookahead+e.insert<an)););}while(e.lookahead<Wr&&e.strm.avail_in!==0)}function Jc(e,t){var n=65535;for(n>e.pending_buf_size-5&&(n=e.pending_buf_size-5);;){if(e.lookahead<=1){if(Ja(e),e.lookahead===0&&t===da)return Sr;if(e.lookahead===0)break}e.strstart+=e.lookahead,e.lookahead=0;var r=e.block_start+n;if((e.strstart===0||e.strstart>=r)&&(e.lookahead=e.strstart-r,e.strstart=r,Gr(e,!1),e.strm.avail_out===0)||e.strstart-e.block_start>=e.w_size-Wr&&(Gr(e,!1),e.strm.avail_out===0))return Sr}return e.insert=0,t===ha?(Gr(e,!0),e.strm.avail_out===0?Ii:Co):(e.strstart>e.block_start&&(Gr(e,!1),e.strm.avail_out===0),Sr)}function o(e,t){for(var n,r;;){if(e.lookahead<Wr){if(Ja(e),e.lookahead<Wr&&t===da)return Sr;if(e.lookahead===0)break}if(n=0,e.lookahead>=an&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+an-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),n!==0&&e.strstart-n<=e.w_size-Wr&&(e.match_length=Vl(e,n)),e.match_length>=an)if(r=Eo._tr_tally(e,e.strstart-e.match_start,e.match_length-an),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=an){e.match_length--;do e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+an-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart;while(--e.match_length!==0);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else r=Eo._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(Gr(e,!1),e.strm.avail_out===0))return Sr}return e.insert=e.strstart<an-1?e.strstart:an-1,t===ha?(Gr(e,!0),e.strm.avail_out===0?Ii:Co):e.last_lit&&(Gr(e,!1),e.strm.avail_out===0)?Sr:qs}function l(e,t){for(var n,r,s;;){if(e.lookahead<Wr){if(Ja(e),e.lookahead<Wr&&t===da)return Sr;if(e.lookahead===0)break}if(n=0,e.lookahead>=an&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+an-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=an-1,n!==0&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-Wr&&(e.match_length=Vl(e,n),e.match_length<=5&&(e.strategy===lc||e.match_length===an&&e.strstart-e.match_start>4096)&&(e.match_length=an-1)),e.prev_length>=an&&e.match_length<=e.prev_length){s=e.strstart+e.lookahead-an,r=Eo._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-an),e.lookahead-=e.prev_length-1,e.prev_length-=2;do++e.strstart<=s&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+an-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart);while(--e.prev_length!==0);if(e.match_available=0,e.match_length=an-1,e.strstart++,r&&(Gr(e,!1),e.strm.avail_out===0))return Sr}else if(e.match_available){if(r=Eo._tr_tally(e,0,e.window[e.strstart-1]),r&&Gr(e,!1),e.strstart++,e.lookahead--,e.strm.avail_out===0)return Sr}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=Eo._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<an-1?e.strstart:an-1,t===ha?(Gr(e,!0),e.strm.avail_out===0?Ii:Co):e.last_lit&&(Gr(e,!1),e.strm.avail_out===0)?Sr:qs}function h(e,t){for(var n,r,s,d,g=e.window;;){if(e.lookahead<=pa){if(Ja(e),e.lookahead<=pa&&t===da)return Sr;if(e.lookahead===0)break}if(e.match_length=0,e.lookahead>=an&&e.strstart>0&&(s=e.strstart-1,r=g[s],r===g[++s]&&r===g[++s]&&r===g[++s])){d=e.strstart+pa;do;while(r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&r===g[++s]&&s<d);e.match_length=pa-(d-s),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=an?(n=Eo._tr_tally(e,1,e.match_length-an),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=Eo._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(Gr(e,!1),e.strm.avail_out===0))return Sr}return e.insert=0,t===ha?(Gr(e,!0),e.strm.avail_out===0?Ii:Co):e.last_lit&&(Gr(e,!1),e.strm.avail_out===0)?Sr:qs}function m(e,t){for(var n;;){if(e.lookahead===0&&(Ja(e),e.lookahead===0)){if(t===da)return Sr;break}if(e.match_length=0,n=Eo._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(Gr(e,!1),e.strm.avail_out===0))return Sr}return e.insert=0,t===ha?(Gr(e,!0),e.strm.avail_out===0?Ii:Co):e.last_lit&&(Gr(e,!1),e.strm.avail_out===0)?Sr:qs}function C(e,t,n,r,s){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=s}var O;O=[new C(0,0,0,0,Jc),new C(4,4,8,4,o),new C(4,5,16,8,o),new C(4,6,32,32,o),new C(4,4,16,16,l),new C(8,16,32,32,l),new C(8,16,128,128,l),new C(8,32,128,256,l),new C(32,128,258,1024,l),new C(32,258,258,4096,l)];function M(e){e.window_size=2*e.w_size,ga(e.head),e.max_lazy_match=O[e.level].max_lazy,e.good_match=O[e.level].good_length,e.nice_match=O[e.level].nice_length,e.max_chain_length=O[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=an-1,e.match_available=0,e.ins_h=0}function Y(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=zs,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Ft.Buf16(qc*2),this.dyn_dtree=new Ft.Buf16((2*pc+1)*2),this.bl_tree=new Ft.Buf16((2*Yc+1)*2),ga(this.dyn_ltree),ga(this.dyn_dtree),ga(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Ft.Buf16(Kc+1),this.heap=new Ft.Buf16(2*vl+1),ga(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Ft.Buf16(2*vl+1),ga(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function H(e){var t;return!e||!e.state?Ma(e,So):(e.total_in=e.total_out=0,e.data_type=Gc,t=e.state,t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?cs:Ba,e.adler=t.wrap===2?0:1,t.last_flush=da,Eo._tr_init(t),wo)}function te(e){var t=H(e);return t===wo&&M(e.state),t}function Ne(e,t){return!e||!e.state||e.state.wrap!==2?So:(e.state.gzhead=t,wo)}function pe(e,t,n,r,s,d){if(!e)return So;var g=1;if(t===gl&&(t=6),r<0?(g=0,r=-r):r>15&&(g=2,r-=16),s<1||s>uc||n!==zs||r<8||r>15||t<0||t>9||d<0||d>cc)return Ma(e,So);r===8&&(r=9);var y=new Y;return e.state=y,y.strm=e,y.wrap=g,y.gzhead=null,y.w_bits=r,y.w_size=1<<y.w_bits,y.w_mask=y.w_size-1,y.hash_bits=s+7,y.hash_size=1<<y.hash_bits,y.hash_mask=y.hash_size-1,y.hash_shift=~~((y.hash_bits+an-1)/an),y.window=new Ft.Buf8(y.w_size*2),y.head=new Ft.Buf16(y.hash_size),y.prev=new Ft.Buf16(y.w_size),y.lit_bufsize=1<<s+6,y.pending_buf_size=y.lit_bufsize*4,y.pending_buf=new Ft.Buf8(y.pending_buf_size),y.d_buf=1*y.lit_bufsize,y.l_buf=(1+2)*y.lit_bufsize,y.level=t,y.strategy=d,y.method=n,te(e)}function ce(e,t){return pe(e,t,zs,fc,dc,Wc)}function Fe(e,t){var n,r,s,d;if(!e||!e.state||t>Us||t<0)return e?Ma(e,So):So;if(r=e.state,!e.output||!e.input&&e.avail_in!==0||r.status===Ys&&t!==ha)return Ma(e,e.avail_out===0?js:So);if(r.strm=e,n=r.last_flush,r.last_flush=t,r.status===cs)if(r.wrap===2)e.adler=0,mn(r,31),mn(r,139),mn(r,8),r.gzhead?(mn(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),mn(r,r.gzhead.time&255),mn(r,r.gzhead.time>>8&255),mn(r,r.gzhead.time>>16&255),mn(r,r.gzhead.time>>24&255),mn(r,r.level===9?2:r.strategy>=Ka||r.level<2?4:0),mn(r,r.gzhead.os&255),r.gzhead.extra&&r.gzhead.extra.length&&(mn(r,r.gzhead.extra.length&255),mn(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=Nr(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=ml):(mn(r,0),mn(r,0),mn(r,0),mn(r,0),mn(r,0),mn(r,r.level===9?2:r.strategy>=Ka||r.level<2?4:0),mn(r,gc),r.status=Ba);else{var g=zs+(r.w_bits-8<<4)<<8,y=-1;r.strategy>=Ka||r.level<2?y=0:r.level<6?y=1:r.level===6?y=2:y=3,g|=y<<6,r.strstart!==0&&(g|=Ws),g+=31-g%31,r.status=Ba,us(r,g),r.strstart!==0&&(us(r,e.adler>>>16),us(r,e.adler&65535)),e.adler=1}if(r.status===ml)if(r.gzhead.extra){for(s=r.pending;r.gzindex<(r.gzhead.extra.length&65535)&&!(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>s&&(e.adler=Nr(e.adler,r.pending_buf,r.pending-s,s)),va(e),s=r.pending,r.pending===r.pending_buf_size));)mn(r,r.gzhead.extra[r.gzindex]&255),r.gzindex++;r.gzhead.hcrc&&r.pending>s&&(e.adler=Nr(e.adler,r.pending_buf,r.pending-s,s)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=_l)}else r.status=_l;if(r.status===_l)if(r.gzhead.name){s=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>s&&(e.adler=Nr(e.adler,r.pending_buf,r.pending-s,s)),va(e),s=r.pending,r.pending===r.pending_buf_size)){d=1;break}r.gzindex<r.gzhead.name.length?d=r.gzhead.name.charCodeAt(r.gzindex++)&255:d=0,mn(r,d)}while(d!==0);r.gzhead.hcrc&&r.pending>s&&(e.adler=Nr(e.adler,r.pending_buf,r.pending-s,s)),d===0&&(r.gzindex=0,r.status=$o)}else r.status=$o;if(r.status===$o)if(r.gzhead.comment){s=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>s&&(e.adler=Nr(e.adler,r.pending_buf,r.pending-s,s)),va(e),s=r.pending,r.pending===r.pending_buf_size)){d=1;break}r.gzindex<r.gzhead.comment.length?d=r.gzhead.comment.charCodeAt(r.gzindex++)&255:d=0,mn(r,d)}while(d!==0);r.gzhead.hcrc&&r.pending>s&&(e.adler=Nr(e.adler,r.pending_buf,r.pending-s,s)),d===0&&(r.status=Gs)}else r.status=Gs;if(r.status===Gs&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&va(e),r.pending+2<=r.pending_buf_size&&(mn(r,e.adler&255),mn(r,e.adler>>8&255),e.adler=0,r.status=Ba)):r.status=Ba),r.pending!==0){if(va(e),e.avail_out===0)return r.last_flush=-1,wo}else if(e.avail_in===0&&Ks(t)<=Ks(n)&&t!==ha)return Ma(e,js);if(r.status===Ys&&e.avail_in!==0)return Ma(e,js);if(e.avail_in!==0||r.lookahead!==0||t!==da&&r.status!==Ys){var j=r.strategy===Ka?m(r,t):r.strategy===Dl?h(r,t):O[r.level].func(r,t);if((j===Ii||j===Co)&&(r.status=Ys),j===Sr||j===Ii)return e.avail_out===0&&(r.last_flush=-1),wo;if(j===qs&&(t===Ml?Eo._tr_align(r):t!==Us&&(Eo._tr_stored_block(r,0,0,!1),t===zc&&(ga(r.head),r.lookahead===0&&(r.strstart=0,r.block_start=0,r.insert=0))),va(e),e.avail_out===0))return r.last_flush=-1,wo}return t!==ha?wo:r.wrap<=0?sc:(r.wrap===2?(mn(r,e.adler&255),mn(r,e.adler>>8&255),mn(r,e.adler>>16&255),mn(r,e.adler>>24&255),mn(r,e.total_in&255),mn(r,e.total_in>>8&255),mn(r,e.total_in>>16&255),mn(r,e.total_in>>24&255)):(us(r,e.adler>>>16),us(r,e.adler&65535)),va(e),r.wrap>0&&(r.wrap=-r.wrap),r.pending!==0?wo:sc)}function Ye(e){var t;return!e||!e.state?So:(t=e.state.status,t!==cs&&t!==ml&&t!==_l&&t!==$o&&t!==Gs&&t!==Ba&&t!==Ys?Ma(e,So):(e.state=null,t===Ba?Ma(e,Hs):wo))}function ut(e,t){var n=t.length,r,s,d,g,y,j,N,$;if(!e||!e.state||(r=e.state,g=r.wrap,g===2||g===1&&r.status!==cs||r.lookahead))return So;for(g===1&&(e.adler=$s(e.adler,t,n,0)),r.wrap=0,n>=r.w_size&&(g===0&&(ga(r.head),r.strstart=0,r.block_start=0,r.insert=0),$=new Ft.Buf8(r.w_size),Ft.arraySet($,t,n-r.w_size,r.w_size,0),t=$,n=r.w_size),y=e.avail_in,j=e.next_in,N=e.input,e.avail_in=n,e.next_in=0,e.input=t,Ja(r);r.lookahead>=an;){s=r.strstart,d=r.lookahead-(an-1);do r.ins_h=(r.ins_h<<r.hash_shift^r.window[s+an-1])&r.hash_mask,r.prev[s&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=s,s++;while(--d);r.strstart=s,r.lookahead=an-1,Ja(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=an-1,r.match_available=0,e.next_in=j,e.input=N,e.avail_in=y,r.wrap=g,wo}var vt=ce,we=pe,fe=te,Ce=H,nt=Ne,We=Fe,i=Ye,a=ut,f="pako deflate (from Nodeca project)",p={deflateInit:vt,deflateInit2:we,deflateReset:fe,deflateResetKeep:Ce,deflateSetHeader:nt,deflate:We,deflateEnd:i,deflateSetDictionary:a,deflateInfo:f},w=!0,E=!0;try{String.fromCharCode.apply(null,[0])}catch(e){w=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){E=!1}for(var I=new Ft.Buf8(256),D=0;D<256;D++)I[D]=D>=252?6:D>=248?5:D>=240?4:D>=224?3:D>=192?2:1;I[254]=I[254]=1;var x=function(e){var t,n,r,s,d,g=e.length,y=0;for(s=0;s<g;s++)n=e.charCodeAt(s),(n&64512)===55296&&s+1<g&&(r=e.charCodeAt(s+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),s++)),y+=n<128?1:n<2048?2:n<65536?3:4;for(t=new Ft.Buf8(y),d=0,s=0;d<y;s++)n=e.charCodeAt(s),(n&64512)===55296&&s+1<g&&(r=e.charCodeAt(s+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),s++)),n<128?t[d++]=n:n<2048?(t[d++]=192|n>>>6,t[d++]=128|n&63):n<65536?(t[d++]=224|n>>>12,t[d++]=128|n>>>6&63,t[d++]=128|n&63):(t[d++]=240|n>>>18,t[d++]=128|n>>>12&63,t[d++]=128|n>>>6&63,t[d++]=128|n&63);return t};function K(e,t){if(t<65534&&(e.subarray&&E||!e.subarray&&w))return String.fromCharCode.apply(null,Ft.shrinkBuf(e,t));for(var n="",r=0;r<t;r++)n+=String.fromCharCode(e[r]);return n}var ue=function(e){return K(e,e.length)},oe=function(e){for(var t=new Ft.Buf8(e.length),n=0,r=t.length;n<r;n++)t[n]=e.charCodeAt(n);return t},ne=function(e,t){var n,r,s,d,g=t||e.length,y=new Array(g*2);for(r=0,n=0;n<g;){if(s=e[n++],s<128){y[r++]=s;continue}if(d=I[s],d>4){y[r++]=65533,n+=d-1;continue}for(s&=d===2?31:d===3?15:7;d>1&&n<g;)s=s<<6|e[n++]&63,d--;if(d>1){y[r++]=65533;continue}s<65536?y[r++]=s:(s-=65536,y[r++]=55296|s>>10&1023,y[r++]=56320|s&1023)}return K(y,r)},Ee=function(e,t){var n;for(t=t||e.length,t>e.length&&(t=e.length),n=t-1;n>=0&&(e[n]&192)===128;)n--;return n<0||n===0?t:n+I[e[n]]>t?n:t},He={string2buf:x,buf2binstring:ue,binstring2buf:oe,buf2string:ne,utf8border:Ee};function it(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var dt=it,_e=p,ae=He,ve=dt,Ze=Object.prototype.toString,Oe=0,rt=4,st=0,Ge=1,St=2,Ot=-1,Tt=0,Zt=8;function R(e){if(!(this instanceof R))return new R(e);this.options=Ft.assign({level:Ot,method:Zt,chunkSize:16384,windowBits:15,memLevel:8,strategy:Tt,to:""},e||{});var t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new ve,this.strm.avail_out=0;var n=_e.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==st)throw new Error(xa[n]);if(t.header&&_e.deflateSetHeader(this.strm,t.header),t.dictionary){var r;if(typeof t.dictionary=="string"?r=ae.string2buf(t.dictionary):Ze.call(t.dictionary)==="[object ArrayBuffer]"?r=new Uint8Array(t.dictionary):r=t.dictionary,n=_e.deflateSetDictionary(this.strm,r),n!==st)throw new Error(xa[n]);this._dict_set=!0}}R.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,s,d;if(this.ended)return!1;d=t===~~t?t:t===!0?rt:Oe,typeof e=="string"?n.input=ae.string2buf(e):Ze.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new Ft.Buf8(r),n.next_out=0,n.avail_out=r),s=_e.deflate(n,d),s!==Ge&&s!==st)return this.onEnd(s),this.ended=!0,!1;(n.avail_out===0||n.avail_in===0&&(d===rt||d===St))&&(this.options.to==="string"?this.onData(ae.buf2binstring(Ft.shrinkBuf(n.output,n.next_out))):this.onData(Ft.shrinkBuf(n.output,n.next_out)))}while((n.avail_in>0||n.avail_out===0)&&s!==Ge);return d===rt?(s=_e.deflateEnd(this.strm),this.onEnd(s),this.ended=!0,s===st):(d===St&&(this.onEnd(st),n.avail_out=0),!0)},R.prototype.onData=function(e){this.chunks.push(e)},R.prototype.onEnd=function(e){e===st&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=Ft.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function U(e,t){var n=new R(t);if(n.push(e,!0),n.err)throw n.msg||xa[n.err];return n.result}function de(e,t){return t=t||{},t.raw=!0,U(e,t)}function Pe(e,t){return t=t||{},t.gzip=!0,U(e,t)}var Re=R,Je=U,ct=de,Xe=Pe,tt={Deflate:Re,deflate:Je,deflateRaw:ct,gzip:Xe},je=30,Rt=12,ht=function(t,n){var r,s,d,g,y,j,N,$,me,Te,Ve,yt,Nt,sn,$t,Fn,jn,fn,mt,bn,ln,Yt,wn,Ar,qt;r=t.state,s=t.next_in,Ar=t.input,d=s+(t.avail_in-5),g=t.next_out,qt=t.output,y=g-(n-t.avail_out),j=g+(t.avail_out-257),N=r.dmax,$=r.wsize,me=r.whave,Te=r.wnext,Ve=r.window,yt=r.hold,Nt=r.bits,sn=r.lencode,$t=r.distcode,Fn=(1<<r.lenbits)-1,jn=(1<<r.distbits)-1;e:do{Nt<15&&(yt+=Ar[s++]<<Nt,Nt+=8,yt+=Ar[s++]<<Nt,Nt+=8),fn=sn[yt&Fn];t:for(;;){if(mt=fn>>>24,yt>>>=mt,Nt-=mt,mt=fn>>>16&255,mt===0)qt[g++]=fn&65535;else if(mt&16){bn=fn&65535,mt&=15,mt&&(Nt<mt&&(yt+=Ar[s++]<<Nt,Nt+=8),bn+=yt&(1<<mt)-1,yt>>>=mt,Nt-=mt),Nt<15&&(yt+=Ar[s++]<<Nt,Nt+=8,yt+=Ar[s++]<<Nt,Nt+=8),fn=$t[yt&jn];n:for(;;){if(mt=fn>>>24,yt>>>=mt,Nt-=mt,mt=fn>>>16&255,mt&16){if(ln=fn&65535,mt&=15,Nt<mt&&(yt+=Ar[s++]<<Nt,Nt+=8,Nt<mt&&(yt+=Ar[s++]<<Nt,Nt+=8)),ln+=yt&(1<<mt)-1,ln>N){t.msg="invalid distance too far back",r.mode=je;break e}if(yt>>>=mt,Nt-=mt,mt=g-y,ln>mt){if(mt=ln-mt,mt>me&&r.sane){t.msg="invalid distance too far back",r.mode=je;break e}if(Yt=0,wn=Ve,Te===0){if(Yt+=$-mt,mt<bn){bn-=mt;do qt[g++]=Ve[Yt++];while(--mt);Yt=g-ln,wn=qt}}else if(Te<mt){if(Yt+=$+Te-mt,mt-=Te,mt<bn){bn-=mt;do qt[g++]=Ve[Yt++];while(--mt);if(Yt=0,Te<bn){mt=Te,bn-=mt;do qt[g++]=Ve[Yt++];while(--mt);Yt=g-ln,wn=qt}}}else if(Yt+=Te-mt,mt<bn){bn-=mt;do qt[g++]=Ve[Yt++];while(--mt);Yt=g-ln,wn=qt}for(;bn>2;)qt[g++]=wn[Yt++],qt[g++]=wn[Yt++],qt[g++]=wn[Yt++],bn-=3;bn&&(qt[g++]=wn[Yt++],bn>1&&(qt[g++]=wn[Yt++]))}else{Yt=g-ln;do qt[g++]=qt[Yt++],qt[g++]=qt[Yt++],qt[g++]=qt[Yt++],bn-=3;while(bn>2);bn&&(qt[g++]=qt[Yt++],bn>1&&(qt[g++]=qt[Yt++]))}}else if((mt&64)===0){fn=$t[(fn&65535)+(yt&(1<<mt)-1)];continue n}else{t.msg="invalid distance code",r.mode=je;break e}break}}else if((mt&64)===0){fn=sn[(fn&65535)+(yt&(1<<mt)-1)];continue t}else if(mt&32){r.mode=Rt;break e}else{t.msg="invalid literal/length code",r.mode=je;break e}break}}while(s<d&&g<j);bn=Nt>>3,s-=bn,Nt-=bn<<3,yt&=(1<<Nt)-1,t.next_in=s,t.next_out=g,t.avail_in=s<d?5+(d-s):5-(s-d),t.avail_out=g<j?257+(j-g):257-(g-j),r.hold=yt,r.bits=Nt},Et=15,en=852,nn=592,jt=0,pn=1,Hn=2,Uo=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],uo=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],vr=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],Da=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64],W=function(t,n,r,s,d,g,y,j){var N=j.bits,$=0,me=0,Te=0,Ve=0,yt=0,Nt=0,sn=0,$t=0,Fn=0,jn=0,fn,mt,bn,ln,Yt,wn=null,Ar=0,qt,ts=new Ft.Buf16(Et+1),Gu=new Ft.Buf16(Et+1),Yu=null,Eg=0,wg,qu,Ku;for($=0;$<=Et;$++)ts[$]=0;for(me=0;me<s;me++)ts[n[r+me]]++;for(yt=N,Ve=Et;Ve>=1&&ts[Ve]===0;Ve--);if(yt>Ve&&(yt=Ve),Ve===0)return d[g++]=1<<24|64<<16|0,d[g++]=1<<24|64<<16|0,j.bits=1,0;for(Te=1;Te<Ve&&ts[Te]===0;Te++);for(yt<Te&&(yt=Te),$t=1,$=1;$<=Et;$++)if($t<<=1,$t-=ts[$],$t<0)return-1;if($t>0&&(t===jt||Ve!==1))return-1;for(Gu[1]=0,$=1;$<Et;$++)Gu[$+1]=Gu[$]+ts[$];for(me=0;me<s;me++)n[r+me]!==0&&(y[Gu[n[r+me]]++]=me);if(t===jt?(wn=Yu=y,qt=19):t===pn?(wn=Uo,Ar-=257,Yu=uo,Eg-=257,qt=256):(wn=vr,Yu=Da,qt=-1),jn=0,me=0,$=Te,Yt=g,Nt=yt,sn=0,bn=-1,Fn=1<<yt,ln=Fn-1,t===pn&&Fn>en||t===Hn&&Fn>nn)return 1;for(;;){wg=$-sn,y[me]<qt?(qu=0,Ku=y[me]):y[me]>qt?(qu=Yu[Eg+y[me]],Ku=wn[Ar+y[me]]):(qu=32+64,Ku=0),fn=1<<$-sn,mt=1<<Nt,Te=mt;do mt-=fn,d[Yt+(jn>>sn)+mt]=wg<<24|qu<<16|Ku|0;while(mt!==0);for(fn=1<<$-1;jn&fn;)fn>>=1;if(fn!==0?(jn&=fn-1,jn+=fn):jn=0,me++,--ts[$]===0){if($===Ve)break;$=n[r+y[me]]}if($>yt&&(jn&ln)!==bn){for(sn===0&&(sn=yt),Yt+=Te,Nt=$-sn,$t=1<<Nt;Nt+sn<Ve&&($t-=ts[Nt+sn],!($t<=0));)Nt++,$t<<=1;if(Fn+=1<<Nt,t===pn&&Fn>en||t===Hn&&Fn>nn)return 1;bn=jn&ln,d[bn]=yt<<24|Nt<<16|Yt-g|0}}return jn!==0&&(d[Yt+jn]=$-sn<<24|64<<16|0),j.bits=yt,0},X=ht,be=W,Le=0,De=1,et=2,ot=4,Ke=5,Qe=6,$e=0,kt=1,Bt=2,Ct=-2,_n=-3,zi=-4,sr=-5,ri=8,Wi=1,fs=2,Js=3,Ur=4,Zs=5,ds=6,Ao=7,hs=8,Xs=9,Za=10,Fa=11,Ni=12,ps=13,gs=14,vc=15,mc=16,Zc=17,Xc=18,Cd=19,wu=20,Su=21,Ad=22,Od=23,Td=24,Pd=25,Id=26,df=27,Nd=28,kd=29,kr=30,Rd=31,wv=32,Sv=852,Cv=592,Av=15,Ov=Av;function xd(e){return(e>>>24&255)+(e>>>8&65280)+((e&65280)<<8)+((e&255)<<24)}function Tv(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Ft.Buf16(320),this.work=new Ft.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function Bd(e){var t;return!e||!e.state?Ct:(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=t.wrap&1),t.mode=Wi,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Ft.Buf32(Sv),t.distcode=t.distdyn=new Ft.Buf32(Cv),t.sane=1,t.back=-1,$e)}function Md(e){var t;return!e||!e.state?Ct:(t=e.state,t.wsize=0,t.whave=0,t.wnext=0,Bd(e))}function Dd(e,t){var n,r;return!e||!e.state||(r=e.state,t<0?(n=0,t=-t):(n=(t>>4)+1,t<48&&(t&=15)),t&&(t<8||t>15))?Ct:(r.window!==null&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,Md(e))}function Fd(e,t){var n,r;return e?(r=new Tv,e.state=r,r.window=null,n=Dd(e,t),n!==$e&&(e.state=null),n):Ct}function Pv(e){return Fd(e,Ov)}var Ld=!0,hf,pf;function Iv(e){if(Ld){var t;for(hf=new Ft.Buf32(512),pf=new Ft.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(be(De,e.lens,0,288,hf,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;be(et,e.lens,0,32,pf,0,e.work,{bits:5}),Ld=!1}e.lencode=hf,e.lenbits=9,e.distcode=pf,e.distbits=5}function Vd(e,t,n,r){var s,d=e.state;return d.window===null&&(d.wsize=1<<d.wbits,d.wnext=0,d.whave=0,d.window=new Ft.Buf8(d.wsize)),r>=d.wsize?(Ft.arraySet(d.window,t,n-d.wsize,d.wsize,0),d.wnext=0,d.whave=d.wsize):(s=d.wsize-d.wnext,s>r&&(s=r),Ft.arraySet(d.window,t,n-r,s,d.wnext),r-=s,r?(Ft.arraySet(d.window,t,n-r,r,0),d.wnext=r,d.whave=d.wsize):(d.wnext+=s,d.wnext===d.wsize&&(d.wnext=0),d.whave<d.wsize&&(d.whave+=s))),0}function Nv(e,t){var n,r,s,d,g,y,j,N,$,me,Te,Ve,yt,Nt,sn=0,$t,Fn,jn,fn,mt,bn,ln,Yt,wn=new Ft.Buf8(4),Ar,qt,ts=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&e.avail_in!==0)return Ct;n=e.state,n.mode===Ni&&(n.mode=ps),g=e.next_out,s=e.output,j=e.avail_out,d=e.next_in,r=e.input,y=e.avail_in,N=n.hold,$=n.bits,me=y,Te=j,Yt=$e;e:for(;;)switch(n.mode){case Wi:if(n.wrap===0){n.mode=ps;break}for(;$<16;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}if(n.wrap&2&&N===35615){n.check=0,wn[0]=N&255,wn[1]=N>>>8&255,n.check=Nr(n.check,wn,2,0),N=0,$=0,n.mode=fs;break}if(n.flags=0,n.head&&(n.head.done=!1),!(n.wrap&1)||(((N&255)<<8)+(N>>8))%31){e.msg="incorrect header check",n.mode=kr;break}if((N&15)!==ri){e.msg="unknown compression method",n.mode=kr;break}if(N>>>=4,$-=4,ln=(N&15)+8,n.wbits===0)n.wbits=ln;else if(ln>n.wbits){e.msg="invalid window size",n.mode=kr;break}n.dmax=1<<ln,e.adler=n.check=1,n.mode=N&512?Za:Ni,N=0,$=0;break;case fs:for(;$<16;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}if(n.flags=N,(n.flags&255)!==ri){e.msg="unknown compression method",n.mode=kr;break}if(n.flags&57344){e.msg="unknown header flags set",n.mode=kr;break}n.head&&(n.head.text=N>>8&1),n.flags&512&&(wn[0]=N&255,wn[1]=N>>>8&255,n.check=Nr(n.check,wn,2,0)),N=0,$=0,n.mode=Js;case Js:for(;$<32;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}n.head&&(n.head.time=N),n.flags&512&&(wn[0]=N&255,wn[1]=N>>>8&255,wn[2]=N>>>16&255,wn[3]=N>>>24&255,n.check=Nr(n.check,wn,4,0)),N=0,$=0,n.mode=Ur;case Ur:for(;$<16;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}n.head&&(n.head.xflags=N&255,n.head.os=N>>8),n.flags&512&&(wn[0]=N&255,wn[1]=N>>>8&255,n.check=Nr(n.check,wn,2,0)),N=0,$=0,n.mode=Zs;case Zs:if(n.flags&1024){for(;$<16;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}n.length=N,n.head&&(n.head.extra_len=N),n.flags&512&&(wn[0]=N&255,wn[1]=N>>>8&255,n.check=Nr(n.check,wn,2,0)),N=0,$=0}else n.head&&(n.head.extra=null);n.mode=ds;case ds:if(n.flags&1024&&(Ve=n.length,Ve>y&&(Ve=y),Ve&&(n.head&&(ln=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),Ft.arraySet(n.head.extra,r,d,Ve,ln)),n.flags&512&&(n.check=Nr(n.check,r,Ve,d)),y-=Ve,d+=Ve,n.length-=Ve),n.length))break e;n.length=0,n.mode=Ao;case Ao:if(n.flags&2048){if(y===0)break e;Ve=0;do ln=r[d+Ve++],n.head&&ln&&n.length<65536&&(n.head.name+=String.fromCharCode(ln));while(ln&&Ve<y);if(n.flags&512&&(n.check=Nr(n.check,r,Ve,d)),y-=Ve,d+=Ve,ln)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=hs;case hs:if(n.flags&4096){if(y===0)break e;Ve=0;do ln=r[d+Ve++],n.head&&ln&&n.length<65536&&(n.head.comment+=String.fromCharCode(ln));while(ln&&Ve<y);if(n.flags&512&&(n.check=Nr(n.check,r,Ve,d)),y-=Ve,d+=Ve,ln)break e}else n.head&&(n.head.comment=null);n.mode=Xs;case Xs:if(n.flags&512){for(;$<16;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}if(N!==(n.check&65535)){e.msg="header crc mismatch",n.mode=kr;break}N=0,$=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=Ni;break;case Za:for(;$<32;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}e.adler=n.check=xd(N),N=0,$=0,n.mode=Fa;case Fa:if(n.havedict===0)return e.next_out=g,e.avail_out=j,e.next_in=d,e.avail_in=y,n.hold=N,n.bits=$,Bt;e.adler=n.check=1,n.mode=Ni;case Ni:if(t===Ke||t===Qe)break e;case ps:if(n.last){N>>>=$&7,$-=$&7,n.mode=df;break}for(;$<3;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}switch(n.last=N&1,N>>>=1,$-=1,N&3){case 0:n.mode=gs;break;case 1:if(Iv(n),n.mode=wu,t===Qe){N>>>=2,$-=2;break e}break;case 2:n.mode=Zc;break;case 3:e.msg="invalid block type",n.mode=kr}N>>>=2,$-=2;break;case gs:for(N>>>=$&7,$-=$&7;$<32;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}if((N&65535)!==(N>>>16^65535)){e.msg="invalid stored block lengths",n.mode=kr;break}if(n.length=N&65535,N=0,$=0,n.mode=vc,t===Qe)break e;case vc:n.mode=mc;case mc:if(Ve=n.length,Ve){if(Ve>y&&(Ve=y),Ve>j&&(Ve=j),Ve===0)break e;Ft.arraySet(s,r,d,Ve,g),y-=Ve,d+=Ve,j-=Ve,g+=Ve,n.length-=Ve;break}n.mode=Ni;break;case Zc:for(;$<14;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}if(n.nlen=(N&31)+257,N>>>=5,$-=5,n.ndist=(N&31)+1,N>>>=5,$-=5,n.ncode=(N&15)+4,N>>>=4,$-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=kr;break}n.have=0,n.mode=Xc;case Xc:for(;n.have<n.ncode;){for(;$<3;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}n.lens[ts[n.have++]]=N&7,N>>>=3,$-=3}for(;n.have<19;)n.lens[ts[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,Ar={bits:n.lenbits},Yt=be(Le,n.lens,0,19,n.lencode,0,n.work,Ar),n.lenbits=Ar.bits,Yt){e.msg="invalid code lengths set",n.mode=kr;break}n.have=0,n.mode=Cd;case Cd:for(;n.have<n.nlen+n.ndist;){for(;sn=n.lencode[N&(1<<n.lenbits)-1],$t=sn>>>24,Fn=sn>>>16&255,jn=sn&65535,!($t<=$);){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}if(jn<16)N>>>=$t,$-=$t,n.lens[n.have++]=jn;else{if(jn===16){for(qt=$t+2;$<qt;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}if(N>>>=$t,$-=$t,n.have===0){e.msg="invalid bit length repeat",n.mode=kr;break}ln=n.lens[n.have-1],Ve=3+(N&3),N>>>=2,$-=2}else if(jn===17){for(qt=$t+3;$<qt;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}N>>>=$t,$-=$t,ln=0,Ve=3+(N&7),N>>>=3,$-=3}else{for(qt=$t+7;$<qt;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}N>>>=$t,$-=$t,ln=0,Ve=11+(N&127),N>>>=7,$-=7}if(n.have+Ve>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=kr;break}for(;Ve--;)n.lens[n.have++]=ln}}if(n.mode===kr)break;if(n.lens[256]===0){e.msg="invalid code -- missing end-of-block",n.mode=kr;break}if(n.lenbits=9,Ar={bits:n.lenbits},Yt=be(De,n.lens,0,n.nlen,n.lencode,0,n.work,Ar),n.lenbits=Ar.bits,Yt){e.msg="invalid literal/lengths set",n.mode=kr;break}if(n.distbits=6,n.distcode=n.distdyn,Ar={bits:n.distbits},Yt=be(et,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,Ar),n.distbits=Ar.bits,Yt){e.msg="invalid distances set",n.mode=kr;break}if(n.mode=wu,t===Qe)break e;case wu:n.mode=Su;case Su:if(y>=6&&j>=258){e.next_out=g,e.avail_out=j,e.next_in=d,e.avail_in=y,n.hold=N,n.bits=$,X(e,Te),g=e.next_out,s=e.output,j=e.avail_out,d=e.next_in,r=e.input,y=e.avail_in,N=n.hold,$=n.bits,n.mode===Ni&&(n.back=-1);break}for(n.back=0;sn=n.lencode[N&(1<<n.lenbits)-1],$t=sn>>>24,Fn=sn>>>16&255,jn=sn&65535,!($t<=$);){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}if(Fn&&(Fn&240)===0){for(fn=$t,mt=Fn,bn=jn;sn=n.lencode[bn+((N&(1<<fn+mt)-1)>>fn)],$t=sn>>>24,Fn=sn>>>16&255,jn=sn&65535,!(fn+$t<=$);){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}N>>>=fn,$-=fn,n.back+=fn}if(N>>>=$t,$-=$t,n.back+=$t,n.length=jn,Fn===0){n.mode=Id;break}if(Fn&32){n.back=-1,n.mode=Ni;break}if(Fn&64){e.msg="invalid literal/length code",n.mode=kr;break}n.extra=Fn&15,n.mode=Ad;case Ad:if(n.extra){for(qt=n.extra;$<qt;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}n.length+=N&(1<<n.extra)-1,N>>>=n.extra,$-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=Od;case Od:for(;sn=n.distcode[N&(1<<n.distbits)-1],$t=sn>>>24,Fn=sn>>>16&255,jn=sn&65535,!($t<=$);){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}if((Fn&240)===0){for(fn=$t,mt=Fn,bn=jn;sn=n.distcode[bn+((N&(1<<fn+mt)-1)>>fn)],$t=sn>>>24,Fn=sn>>>16&255,jn=sn&65535,!(fn+$t<=$);){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}N>>>=fn,$-=fn,n.back+=fn}if(N>>>=$t,$-=$t,n.back+=$t,Fn&64){e.msg="invalid distance code",n.mode=kr;break}n.offset=jn,n.extra=Fn&15,n.mode=Td;case Td:if(n.extra){for(qt=n.extra;$<qt;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}n.offset+=N&(1<<n.extra)-1,N>>>=n.extra,$-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=kr;break}n.mode=Pd;case Pd:if(j===0)break e;if(Ve=Te-j,n.offset>Ve){if(Ve=n.offset-Ve,Ve>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=kr;break}Ve>n.wnext?(Ve-=n.wnext,yt=n.wsize-Ve):yt=n.wnext-Ve,Ve>n.length&&(Ve=n.length),Nt=n.window}else Nt=s,yt=g-n.offset,Ve=n.length;Ve>j&&(Ve=j),j-=Ve,n.length-=Ve;do s[g++]=Nt[yt++];while(--Ve);n.length===0&&(n.mode=Su);break;case Id:if(j===0)break e;s[g++]=n.length,j--,n.mode=Su;break;case df:if(n.wrap){for(;$<32;){if(y===0)break e;y--,N|=r[d++]<<$,$+=8}if(Te-=j,e.total_out+=Te,n.total+=Te,Te&&(e.adler=n.check=n.flags?Nr(n.check,s,Te,g-Te):$s(n.check,s,Te,g-Te)),Te=j,(n.flags?N:xd(N))!==n.check){e.msg="incorrect data check",n.mode=kr;break}N=0,$=0}n.mode=Nd;case Nd:if(n.wrap&&n.flags){for(;$<32;){if(y===0)break e;y--,N+=r[d++]<<$,$+=8}if(N!==(n.total&4294967295)){e.msg="incorrect length check",n.mode=kr;break}N=0,$=0}n.mode=kd;case kd:Yt=kt;break e;case kr:Yt=_n;break e;case Rd:return zi;case wv:default:return Ct}return e.next_out=g,e.avail_out=j,e.next_in=d,e.avail_in=y,n.hold=N,n.bits=$,(n.wsize||Te!==e.avail_out&&n.mode<kr&&(n.mode<df||t!==ot))&&Vd(e,e.output,e.next_out,Te-e.avail_out),me-=e.avail_in,Te-=e.avail_out,e.total_in+=me,e.total_out+=Te,n.total+=Te,n.wrap&&Te&&(e.adler=n.check=n.flags?Nr(n.check,s,Te,e.next_out-Te):$s(n.check,s,Te,e.next_out-Te)),e.data_type=n.bits+(n.last?64:0)+(n.mode===Ni?128:0)+(n.mode===wu||n.mode===vc?256:0),(me===0&&Te===0||t===ot)&&Yt===$e&&(Yt=sr),Yt}function kv(e){if(!e||!e.state)return Ct;var t=e.state;return t.window&&(t.window=null),e.state=null,$e}function Rv(e,t){var n;return!e||!e.state||(n=e.state,(n.wrap&2)===0)?Ct:(n.head=t,t.done=!1,$e)}function xv(e,t){var n=t.length,r,s,d;return!e||!e.state||(r=e.state,r.wrap!==0&&r.mode!==Fa)?Ct:r.mode===Fa&&(s=1,s=$s(s,t,n,0),s!==r.check)?_n:(d=Vd(e,t,n,n),d?(r.mode=Rd,zi):(r.havedict=1,$e))}var Bv=Md,Mv=Dd,Dv=Bd,Fv=Pv,Lv=Fd,Vv=Nv,$v=kv,Uv=Rv,Hv=xv,jv="pako inflate (from Nodeca project)",zv={inflateReset:Bv,inflateReset2:Mv,inflateResetKeep:Dv,inflateInit:Fv,inflateInit2:Lv,inflate:Vv,inflateEnd:$v,inflateGetHeader:Uv,inflateSetDictionary:Hv,inflateInfo:jv},Wv={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};function Gv(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var Yv=Gv,_c=zv,Yr=Wv,qv=Yv,$d=Object.prototype.toString;function $l(e){if(!(this instanceof $l))return new $l(e);this.options=Ft.assign({chunkSize:16384,windowBits:0,to:""},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,t.windowBits===0&&(t.windowBits=-15)),t.windowBits>=0&&t.windowBits<16&&!(e&&e.windowBits)&&(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&(t.windowBits&15)===0&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new ve,this.strm.avail_out=0;var n=_c.inflateInit2(this.strm,t.windowBits);if(n!==Yr.Z_OK)throw new Error(xa[n]);if(this.header=new qv,_c.inflateGetHeader(this.strm,this.header),t.dictionary&&(typeof t.dictionary=="string"?t.dictionary=ae.string2buf(t.dictionary):$d.call(t.dictionary)==="[object ArrayBuffer]"&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=_c.inflateSetDictionary(this.strm,t.dictionary),n!==Yr.Z_OK)))throw new Error(xa[n])}$l.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,s=this.options.dictionary,d,g,y,j,N,$=!1;if(this.ended)return!1;g=t===~~t?t:t===!0?Yr.Z_FINISH:Yr.Z_NO_FLUSH,typeof e=="string"?n.input=ae.binstring2buf(e):$d.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new Ft.Buf8(r),n.next_out=0,n.avail_out=r),d=_c.inflate(n,Yr.Z_NO_FLUSH),d===Yr.Z_NEED_DICT&&s&&(d=_c.inflateSetDictionary(this.strm,s)),d===Yr.Z_BUF_ERROR&&$===!0&&(d=Yr.Z_OK,$=!1),d!==Yr.Z_STREAM_END&&d!==Yr.Z_OK)return this.onEnd(d),this.ended=!0,!1;n.next_out&&(n.avail_out===0||d===Yr.Z_STREAM_END||n.avail_in===0&&(g===Yr.Z_FINISH||g===Yr.Z_SYNC_FLUSH))&&(this.options.to==="string"?(y=ae.utf8border(n.output,n.next_out),j=n.next_out-y,N=ae.buf2string(n.output,y),n.next_out=j,n.avail_out=r-j,j&&Ft.arraySet(n.output,n.output,y,j,0),this.onData(N)):this.onData(Ft.shrinkBuf(n.output,n.next_out))),n.avail_in===0&&n.avail_out===0&&($=!0)}while((n.avail_in>0||n.avail_out===0)&&d!==Yr.Z_STREAM_END);return d===Yr.Z_STREAM_END&&(g=Yr.Z_FINISH),g===Yr.Z_FINISH?(d=_c.inflateEnd(this.strm),this.onEnd(d),this.ended=!0,d===Yr.Z_OK):(g===Yr.Z_SYNC_FLUSH&&(this.onEnd(Yr.Z_OK),n.avail_out=0),!0)},$l.prototype.onData=function(e){this.chunks.push(e)},$l.prototype.onEnd=function(e){e===Yr.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=Ft.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function gf(e,t){var n=new $l(t);if(n.push(e,!0),n.err)throw n.msg||xa[n.err];return n.result}function Kv(e,t){return t=t||{},t.raw=!0,gf(e,t)}var Jv=$l,Zv=gf,Xv=Kv,Qv=gf,em={Inflate:Jv,inflate:Zv,inflateRaw:Xv,ungzip:Qv},tm=tt,nm=em,rm=Ft.assign,Ud={};rm(Ud,tm,nm,Yr);var Hd=Ud;let im="upx2px",om=[{name:"upx",type:[Number,String],required:!0}],am=1e-4,sm=750,jd=!1,vf=0,zd=0,Wd=960,Gd=375;function lm(){let{platform:e,pixelRatio:t,windowWidth:n}=ta();vf=n,zd=t,jd=e==="ios"}function Yd(e,t){let n=Number(e);return isNaN(n)?t:n}function cm(){let e=P.globalStyle||{};Wd=Yd(e.rpxCalcMaxDeviceWidth,960),Gd=Yd(e.rpxCalcBaseDeviceWidth,375)}let um=Mt(im,(e,t)=>{if(vf===0&&(lm(),cm()),e=Number(e),e===0)return 0;let n=t||vf;n=n<=Wd?n:Gd;let r=e/sm*n;return r<0&&(r=-r),r=Math.floor(r+am),r===0&&(zd===1||!jd?r=1:r=.5),e<0?-r:r},om),fm="addInterceptor",dm="removeInterceptor",qd=[{name:"method",type:[String,Object],required:!0}],hm=qd;function Kd(e,t){Object.keys(t).forEach(n=>{ee.isFunction(t[n])&&(e[n]=pm(e[n],t[n]))})}function Jd(e,t){!e||!t||Object.keys(t).forEach(n=>{let r=e[n],s=t[n];ee.isArray(r)&&ee.isFunction(s)&&ee.remove(r,s)})}function pm(e,t){let n=t?e?e.concat(t):ee.isArray(t)?t:[t]:e;return n&&gm(n)}function gm(e){let t=[];for(let n=0;n<e.length;n++)t.indexOf(e[n])===-1&&t.push(e[n]);return t}let vm=Mt(fm,(e,t)=>{ee.isString(e)&&ee.isPlainObject(t)?Kd(ai[e]||(ai[e]={}),t):ee.isPlainObject(e)&&Kd(vi,e)},qd),mm=Mt(dm,(e,t)=>{ee.isString(e)?ee.isPlainObject(t)?Jd(ai[e],t):delete ai[e]:ee.isPlainObject(e)&&Jd(vi,e)},hm),_m={},bm="$on",Zd=[{name:"event",type:String,required:!0},{name:"callback",type:Function,required:!0}],ym="$once",Em=Zd,wm="$off",Sm=[{name:"event",type:[String,Array]},{name:"callback",type:Function}],Cm="$emit",Am=[{name:"event",type:String,required:!0}],Ul=new se.Emitter,Om=Mt(bm,(e,t)=>(Ul.on(e,t),()=>Ul.off(e,t)),Zd),Tm=Mt(ym,(e,t)=>(Ul.once(e,t),()=>Ul.off(e,t)),Em),Pm=Mt(wm,(e,t)=>{if(!e){Ul.e={};return}ee.isArray(e)||(e=[e]),e.forEach(n=>Ul.off(n,t))},Sm),Im=Mt(Cm,(e,...t)=>{Ul.emit(e,...t)},Am),Xd=[{name:"id",type:String,required:!0}],Nm="createVideoContext",km="createMapContext",Rm=Xd,xm="createCanvasContext",Bm=[{name:"canvasId",type:String,required:!0},{name:"componentInstance",type:Object}],Mm="createInnerAudioContext",Dm="createLivePusherContext",Fm=Xd.concat({name:"componentInstance",type:Object}),Lm=[.5,.8,1,1.25,1.5,2];class mf{constructor(t,n){this.id=t,this.pageId=n}play(){Ci(this.id,this.pageId,"play")}pause(){Ci(this.id,this.pageId,"pause")}stop(){Ci(this.id,this.pageId,"stop")}seek(t){Ci(this.id,this.pageId,"seek",{position:t})}sendDanmu(t){Ci(this.id,this.pageId,"sendDanmu",t)}playbackRate(t){~Lm.indexOf(t)||(t=1),Ci(this.id,this.pageId,"playbackRate",{rate:t})}requestFullScreen(t={}){Ci(this.id,this.pageId,"requestFullScreen",t)}exitFullScreen(){Ci(this.id,this.pageId,"exitFullScreen")}showStatusBar(){Ci(this.id,this.pageId,"showStatusBar")}hideStatusBar(){Ci(this.id,this.pageId,"hideStatusBar")}}let Vm=Mt(Nm,(e,t)=>t?new mf(e,nr(t)):new mf(e,nr(Lr()))),$m=(e,t)=>{let n=t.errMsg||"";new RegExp("\\:\\s*fail").test(n)?e.fail&&e.fail(t):e.success&&e.success(t),e.complete&&e.complete(t)},fo=(e,t,n,r)=>{Er(e,t,n,r,s=>{r&&$m(r,s)})};class _f{constructor(t,n){this.id=t,this.pageId=n}getCenterLocation(t){fo(this.id,this.pageId,"getCenterLocation",t)}moveToLocation(t){fo(this.id,this.pageId,"moveToLocation",t)}getScale(t){fo(this.id,this.pageId,"getScale",t)}getRegion(t){fo(this.id,this.pageId,"getRegion",t)}includePoints(t){fo(this.id,this.pageId,"includePoints",t)}translateMarker(t){fo(this.id,this.pageId,"translateMarker",t)}$getAppMap(){return c.maps.getMapById(this.pageId+"-map-"+this.id)}addCustomLayer(t){fo(this.id,this.pageId,"addCustomLayer",t)}removeCustomLayer(t){fo(this.id,this.pageId,"removeCustomLayer",t)}addGroundOverlay(t){fo(this.id,this.pageId,"addGroundOverlay",t)}removeGroundOverlay(t){fo(this.id,this.pageId,"removeGroundOverlay",t)}updateGroundOverlay(t){fo(this.id,this.pageId,"updateGroundOverlay",t)}initMarkerCluster(t){fo(this.id,this.pageId,"initMarkerCluster",t)}addMarkers(t){fo(this.id,this.pageId,"addMarkers",t)}removeMarkers(t){fo(this.id,this.pageId,"removeMarkers",t)}moveAlong(t){fo(this.id,this.pageId,"moveAlong",t)}openMapApp(t){fo(this.id,this.pageId,"openMapApp",t)}on(t){fo(this.id,this.pageId,"on",t)}}let Um=Mt(km,(e,t)=>t?new _f(e,nr(t)):new _f(e,nr(Lr())),Rm);function bl(e,t){return function(n,r){n?r[e]=Math.round(n):typeof t!="undefined"&&(r[e]=t)}}let Qd=bl("width"),eh=bl("height"),Hm="canvasGetImageData",th={formatArgs:{x:bl("x"),y:bl("y"),width:Qd,height:eh}},nh={canvasId:{type:String,required:!0},x:{type:Number,required:!0},y:{type:Number,required:!0},width:{type:Number,required:!0},height:{type:Number,required:!0}},jm="canvasPutImageData",zm=th,Wm=ee.extend({data:{type:Uint8ClampedArray,required:!0}},nh,{height:{type:Number}}),rh={PNG:"png",JPG:"jpg",JPEG:"jpg"},Gm="canvasToTempFilePath",Ym={formatArgs:{x:bl("x",0),y:bl("y",0),width:Qd,height:eh,destWidth:bl("destWidth"),destHeight:bl("destHeight"),fileType(e,t){e=(e||"").toUpperCase();let n=rh[e];n||(n=rh.PNG),t.fileType=n},quality(e,t){t.quality=e&&e>0&&e<1?e:1}}},qm={x:Number,y:Number,width:Number,height:Number,destWidth:Number,destHeight:Number,canvasId:{type:String,required:!0},fileType:String,quality:Number};function Cu(e,t,n,r,s){bt.invokeViewMethod(`canvas.${e}`,{type:n,data:r},t,d=>{s&&s(d)})}var Km=["scale","rotate","translate","setTransform","transform"],Jm=["drawImage","fillText","fill","stroke","fillRect","strokeRect","clearRect","strokeText"],Zm=["setFillStyle","setTextAlign","setStrokeStyle","setGlobalAlpha","setShadow","setFontSize","setLineCap","setLineJoin","setLineWidth","setMiterLimit","setTextBaseline","setLineDash"];function Xm(e,t){let r=document.createElement("canvas").getContext("2d");return r.font=t,r.measureText(e).width||0}let ih={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgrey:"#a9a9a9",darkgreen:"#006400",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",grey:"#808080",green:"#008000",greenyellow:"#adff2f",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgrey:"#d3d3d3",lightgreen:"#90ee90",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32",transparent:"#00000000"};function bf(e){e=e||"#000000";var t=null;if((t=/^#([0-9|A-F|a-f]{6})$/.exec(e))!=null){let r=parseInt(t[1].slice(0,2),16),s=parseInt(t[1].slice(2,4),16),d=parseInt(t[1].slice(4),16);return[r,s,d,255]}if((t=/^#([0-9|A-F|a-f]{3})$/.exec(e))!=null){let r=t[1].slice(0,1),s=t[1].slice(1,2),d=t[1].slice(2,3);return r=parseInt(r+r,16),s=parseInt(s+s,16),d=parseInt(d+d,16),[r,s,d,255]}if((t=/^rgb\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r){return Math.min(255,parseInt(r.trim()))}).concat(255);if((t=/^rgba\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r,s){return s===3?Math.floor(255*parseFloat(r.trim())):Math.min(255,parseInt(r.trim()))});var n=e.toLowerCase();if(ee.hasOwn(ih,n)){t=/^#([0-9|A-F|a-f]{6,8})$/.exec(ih[n]);let r=parseInt(t[1].slice(0,2),16),s=parseInt(t[1].slice(2,4),16),d=parseInt(t[1].slice(4,6),16),g=parseInt(t[1].slice(6,8),16);return g=g>=0?g:255,[r,s,d,g]}return console.error("unsupported color:"+e),[0,0,0,255]}class oh{constructor(t,n){this.type=t,this.data=n,this.colorStop=[]}addColorStop(t,n){this.colorStop.push([t,bf(n)])}}class Qm{constructor(t,n){this.type="pattern",this.data=t,this.colorStop=n}}class e_{constructor(t){this.width=t}}class Qc{constructor(t,n){this.id=t,this.pageId=n,this.actions=[],this.path=[],this.subpath=[],this.drawingState=[],this.state={lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}draw(t=!1,n){var r=[...this.actions];this.actions=[],this.path=[],Cu(this.id,this.pageId,"actionsChanged",{actions:r,reserve:t},n)}createLinearGradient(t,n,r,s){return new oh("linear",[t,n,r,s])}createCircularGradient(t,n,r){return new oh("radial",[t,n,r])}createPattern(t,n){if(n===void 0)console.error("Failed to execute 'createPattern' on 'CanvasContext': 2 arguments required, but only 1 present.");else if(["repeat","repeat-x","repeat-y","no-repeat"].indexOf(n)<0)console.error("Failed to execute 'createPattern' on 'CanvasContext': The provided type ('"+n+"') is not one of 'repeat', 'no-repeat', 'repeat-x', or 'repeat-y'.");else return new Qm(t,n)}measureText(t){let n=this.state.font,r=0;{let s=c.webview.all().find(d=>d.getURL().endsWith("www/__uniappview.html"));s&&(r=Number(s.evalJSSync(`(${Xm.toString()})(${JSON.stringify(t)},${JSON.stringify(n)})`)))}return new e_(r)}save(){this.actions.push({method:"save",data:[]}),this.drawingState.push(this.state)}restore(){this.actions.push({method:"restore",data:[]}),this.state=this.drawingState.pop()||{lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}beginPath(){this.path=[],this.subpath=[],this.path.push({method:"beginPath",data:[]})}moveTo(t,n){this.path.push({method:"moveTo",data:[t,n]}),this.subpath=[[t,n]]}lineTo(t,n){this.path.length===0&&this.subpath.length===0?this.path.push({method:"moveTo",data:[t,n]}):this.path.push({method:"lineTo",data:[t,n]}),this.subpath.push([t,n])}quadraticCurveTo(t,n,r,s){this.path.push({method:"quadraticCurveTo",data:[t,n,r,s]}),this.subpath.push([r,s])}bezierCurveTo(t,n,r,s,d,g){this.path.push({method:"bezierCurveTo",data:[t,n,r,s,d,g]}),this.subpath.push([d,g])}arc(t,n,r,s,d,g=!1){this.path.push({method:"arc",data:[t,n,r,s,d,g]}),this.subpath.push([t,n])}rect(t,n,r,s){this.path.push({method:"rect",data:[t,n,r,s]}),this.subpath=[[t,n]]}arcTo(t,n,r,s,d){this.path.push({method:"arcTo",data:[t,n,r,s,d]}),this.subpath.push([r,s])}clip(){this.actions.push({method:"clip",data:[...this.path]})}closePath(){this.path.push({method:"closePath",data:[]}),this.subpath.length&&(this.subpath=[this.subpath.shift()])}clearActions(){this.actions=[],this.path=[],this.subpath=[]}getActions(){var t=[...this.actions];return this.clearActions(),t}set lineDashOffset(t){this.actions.push({method:"setLineDashOffset",data:[t]})}set globalCompositeOperation(t){this.actions.push({method:"setGlobalCompositeOperation",data:[t]})}set shadowBlur(t){this.actions.push({method:"setShadowBlur",data:[t]})}set shadowColor(t){this.actions.push({method:"setShadowColor",data:[t]})}set shadowOffsetX(t){this.actions.push({method:"setShadowOffsetX",data:[t]})}set shadowOffsetY(t){this.actions.push({method:"setShadowOffsetY",data:[t]})}set font(t){var n=this;this.state.font=t;var r=t.match(/^(([\w\-]+\s)*)(\d+r?px)(\/(\d+\.?\d*(r?px)?))?\s+(.*)/);if(r){var s=r[1].trim().split(/\s/),d=parseFloat(r[3]),g=r[7],y=[];s.forEach(function(N,$){["italic","oblique","normal"].indexOf(N)>-1?(y.push({method:"setFontStyle",data:[N]}),n.state.fontStyle=N):["bold","normal"].indexOf(N)>-1?(y.push({method:"setFontWeight",data:[N]}),n.state.fontWeight=N):$===0?(y.push({method:"setFontStyle",data:["normal"]}),n.state.fontStyle="normal"):$===1&&j()}),s.length===1&&j(),s=y.map(function(N){return N.data[0]}).join(" "),this.state.fontSize=d,this.state.fontFamily=g,this.actions.push({method:"setFont",data:[`${s} ${d}px ${g}`]})}else console.warn("Failed to set 'font' on 'CanvasContext': invalid format.");function j(){y.push({method:"setFontWeight",data:["normal"]}),n.state.fontWeight="normal"}}get font(){return this.state.font}set fillStyle(t){this.setFillStyle(t)}set strokeStyle(t){this.setStrokeStyle(t)}set globalAlpha(t){t=Math.floor(255*parseFloat(t)),this.actions.push({method:"setGlobalAlpha",data:[t]})}set textAlign(t){this.actions.push({method:"setTextAlign",data:[t]})}set lineCap(t){this.actions.push({method:"setLineCap",data:[t]})}set lineJoin(t){this.actions.push({method:"setLineJoin",data:[t]})}set lineWidth(t){this.actions.push({method:"setLineWidth",data:[t]})}set miterLimit(t){this.actions.push({method:"setMiterLimit",data:[t]})}set textBaseline(t){this.actions.push({method:"setTextBaseline",data:[t]})}}let t_=se.once(()=>{[...Km,...Jm].forEach(function(e){function t(n){switch(n){case"fill":case"stroke":return function(){this.actions.push({method:n+"Path",data:[...this.path]})};case"fillRect":return function(r,s,d,g){this.actions.push({method:"fillPath",data:[{method:"rect",data:[r,s,d,g]}]})};case"strokeRect":return function(r,s,d,g){this.actions.push({method:"strokePath",data:[{method:"rect",data:[r,s,d,g]}]})};case"fillText":case"strokeText":return function(r,s,d,g){var y=[r.toString(),s,d];typeof g=="number"&&y.push(g),this.actions.push({method:n,data:y})};case"drawImage":return function(r,s,d,g,y,j,N,$,me){me===void 0&&(j=s,N=d,$=g,me=y,s=void 0,d=void 0,g=void 0,y=void 0);var Te;function Ve(yt){return typeof yt=="number"}Te=Ve(s)&&Ve(d)&&Ve(g)&&Ve(y)?[r,j,N,$,me,s,d,g,y]:Ve($)&&Ve(me)?[r,j,N,$,me]:[r,j,N],this.actions.push({method:n,data:Te})};default:return function(...r){this.actions.push({method:n,data:r})}}}Qc.prototype[e]=t(e)}),Zm.forEach(function(e){function t(n){switch(n){case"setFillStyle":case"setStrokeStyle":return function(r){typeof r!="object"?this.actions.push({method:n,data:["normal",bf(r)]}):this.actions.push({method:n,data:[r.type,r.data,r.colorStop]})};case"setGlobalAlpha":return function(r){r=Math.floor(255*parseFloat(r)),this.actions.push({method:n,data:[r]})};case"setShadow":return function(r,s,d,g){g=bf(g),this.actions.push({method:n,data:[r,s,d,g]}),this.state.shadowBlur=d,this.state.shadowColor=g,this.state.shadowOffsetX=r,this.state.shadowOffsetY=s};case"setLineDash":return function(r,s){r=r||[0,0],s=s||0,this.actions.push({method:n,data:[r,s]}),this.state.lineDash=r};case"setFontSize":return function(r){this.state.font=this.state.font.replace(/\d+\.?\d*px/,r+"px"),this.state.fontSize=r,this.actions.push({method:n,data:[r]})};default:return function(...r){this.actions.push({method:n,data:r})}}}Qc.prototype[e]=t(e)})}),n_=Mt(xm,(e,t)=>{if(t_(),t)return new Qc(e,nr(t));let n=nr(Lr());if(n)return new Qc(e,n);bt.emit(se.ON_ERROR,"createCanvasContext:fail")},Bm),r_=ke(Hm,({canvasId:e,x:t,y:n,width:r,height:s},{resolve:d,reject:g})=>{let y=nr(Lr());if(!y){g();return}function j(N){if(N.errMsg&&N.errMsg.indexOf("fail")!==-1){g("",N);return}let $=N.data;$&&$.length&&(N.compressed&&($=Hd.inflateRaw($)),N.data=new Uint8ClampedArray($)),delete N.compressed,d(N)}Cu(e,y,"getImageData",{x:t,y:n,width:r,height:s},j)},nh,th),i_=ke(jm,({canvasId:e,data:t,x:n,y:r,width:s,height:d},{resolve:g,reject:y})=>{var j=nr(Lr());if(!j){y();return}let N,$=()=>{Cu(e,j,"putImageData",{data:t,x:n,y:r,width:s,height:d,compressed:N},me=>{if(me.errMsg&&me.errMsg.indexOf("fail")!==-1){y();return}g(me)})};c.os.name!=="iOS"||typeof __WEEX_DEVTOOL__=="boolean"?(t=Hd.deflateRaw(t,{to:"string"}),N=!0):t=Array.prototype.slice.call(t),$()},Wm,zm),o_=ke(Gm,({x:e=0,y:t=0,width:n,height:r,destWidth:s,destHeight:d,canvasId:g,fileType:y,quality:j},{resolve:N,reject:$})=>{var me=nr(Lr());if(!me){$();return}let Te=`${ni}/canvas`;Cu(g,me,"toTempFilePath",{x:e,y:t,width:n,height:r,destWidth:s,destHeight:d,fileType:y,quality:j,dirname:Te},Ve=>{if(Ve.errMsg&&Ve.errMsg.indexOf("fail")!==-1){$("",Ve);return}N(Ve)})},qm,Ym),ah=["onCanplay","onPlay","onPause","onStop","onEnded","onTimeUpdate","onError","onWaiting","onSeeking","onSeeked"],a_=["offCanplay","offPlay","offPause","offStop","offEnded","offTimeUpdate","offError","offWaiting","offSeeking","offSeeked"],s_={thresholds:[0],initialRatio:0,observeAll:!1},l_=["top","right","bottom","left"],c_=1;function sh(e={}){return l_.map(t=>`${Number(e[t])||0}px`).join(" ")}class lh{constructor(t,n){this._pageId=nr(t),this._component=t,this._options=ee.extend({},s_,n)}relativeTo(t,n){return this._options.relativeToSelector=t,this._options.rootMargin=sh(n),this}relativeToViewport(t){return this._options.relativeToSelector=void 0,this._options.rootMargin=sh(t),this}observe(t,n){!ee.isFunction(n)||(this._options.selector=t,this._reqId=c_++,sl({reqId:this._reqId,component:this._component,options:this._options,callback:n},this._pageId))}disconnect(){this._reqId&&Is({reqId:this._reqId,component:this._component},this._pageId)}}let u_=Mt("createIntersectionObserver",(e,t)=>(e=se.resolveComponentInstance(e),e&&!nr(e)&&(t=e,e=null),e?new lh(e,t):new lh(Lr(),t))),f_=1;class ch{constructor(t){this._pageId=t.$page&&t.$page.id,this._component=t}observe(t,n){!ee.isFunction(n)||(this._reqId=f_++,qa({reqId:this._reqId,component:this._component,options:t,callback:n},this._pageId))}disconnect(){this._reqId&&Jo({reqId:this._reqId,component:this._component},this._pageId)}}let d_=Mt("createMediaQueryObserver",e=>(e=se.resolveComponentInstance(e),e&&!nr(e)&&(e=null),e?new ch(e):new ch(Lr()))),h_=0,yf={};function p_(e,t,n,r){let s={options:r},d=r&&("success"in r||"fail"in r||"complete"in r);if(d){let g=String(h_++);s.callbackId=g,yf[g]=r}bt.invokeViewMethod(`editor.${e}`,{type:n,data:s},t,({callbackId:g,data:y})=>{d&&(se.callOptions(yf[g],y),delete yf[g])})}class g_{constructor(t,n){this.id=t,this.pageId=n}format(t,n){this._exec("format",{name:t,value:n})}insertDivider(){this._exec("insertDivider")}insertImage(t){this._exec("insertImage",t)}insertText(t){this._exec("insertText",t)}setContents(t){this._exec("setContents",t)}getContents(t){this._exec("getContents",t)}clear(t){this._exec("clear",t)}removeFormat(t){this._exec("removeFormat",t)}undo(t){this._exec("undo",t)}redo(t){this._exec("redo",t)}blur(t){this._exec("blur",t)}getSelectionText(t){this._exec("getSelectionText",t)}scrollIntoView(t){this._exec("scrollIntoView",t)}_exec(t,n){p_(this.id,this.pageId,t,n)}}let v_={canvas:Qc,map:_f,video:mf,editor:g_};function uh(e){if(e&&e.contextInfo){let{id:t,type:n,page:r}=e.contextInfo,s=v_[n];e.context=new s(t,r),delete e.contextInfo}}class Ef{constructor(t,n,r,s){this._selectorQuery=t,this._component=n,this._selector=r,this._single=s}boundingClientRect(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,rect:!0,size:!0},t),this._selectorQuery}fields(t,n){return this._selectorQuery._push(this._selector,this._component,this._single,t,n),this._selectorQuery}scrollOffset(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,scrollOffset:!0},t),this._selectorQuery}context(t){return this._selectorQuery._push(this._selector,this._component,this._single,{context:!0},t),this._selectorQuery}node(t){return this._selectorQuery}}class m_{constructor(t){this._component=void 0,this._page=t,this._queue=[],this._queueCb=[]}exec(t){return ko(this._page,this._queue,n=>{let r=this._queueCb;n.forEach((s,d)=>{ee.isArray(s)?s.forEach(uh):uh(s);let g=r[d];ee.isFunction(g)&&g.call(this,s)}),ee.isFunction(t)&&t.call(this,n)}),this._nodesRef}in(t){return this._component=se.resolveComponentInstance(t),this}select(t){return this._nodesRef=new Ef(this,this._component,t,!0)}selectAll(t){return this._nodesRef=new Ef(this,this._component,t,!1)}selectViewport(){return this._nodesRef=new Ef(this,null,"",!0)}_push(t,n,r,s,d){this._queue.push({component:n,selector:t,single:r,fields:s}),this._queueCb.push(d)}}let __=Mt("createSelectorQuery",e=>(e=se.resolveComponentInstance(e),e&&!nr(e)&&(e=null),new m_(e||Lr()))),b_="createAnimation",y_={formatArgs:{}},E_={duration:Number,timingFunction:String,delay:Number,transformOrigin:String},w_={duration:400,timingFunction:"linear",delay:0,transformOrigin:"50% 50% 0"};class fh{constructor(t){this.actions=[],this.currentTransform={},this.currentStepAnimates=[],this.option=ee.extend({},w_,t)}_getOption(t){let n={transition:ee.extend({},this.option,t),transformOrigin:""};return n.transformOrigin=n.transition.transformOrigin,delete n.transition.transformOrigin,n}_pushAnimates(t,n){this.currentStepAnimates.push({type:t,args:n})}_converType(t){return t.replace(/[A-Z]/g,n=>`-${n.toLowerCase()}`)}_getValue(t){return typeof t=="number"?`${t}px`:t}export(){let t=this.actions;return this.actions=[],{actions:t}}step(t){return this.currentStepAnimates.forEach(n=>{n.type!=="style"?this.currentTransform[n.type]=n:this.currentTransform[`${n.type}.${n.args[0]}`]=n}),this.actions.push({animates:Object.values(this.currentTransform),option:this._getOption(t)}),this.currentStepAnimates=[],this}}let S_=se.once(()=>{let e=["matrix","matrix3d","rotate","rotate3d","rotateX","rotateY","rotateZ","scale","scale3d","scaleX","scaleY","scaleZ","skew","skewX","skewY","translate","translate3d","translateX","translateY","translateZ"],t=["opacity","backgroundColor"],n=["width","height","left","right","top","bottom"];e.concat(t,n).forEach(r=>{fh.prototype[r]=function(...s){return t.concat(n).includes(r)?this._pushAnimates("style",[this._converType(r),n.includes(r)?this._getValue(s[0]):s[0]]):this._pushAnimates(r,s),this}})}),C_=Mt(b_,e=>(S_(),new fh(e)),E_,y_),dh="onTabBarMidButtonTap",A_=Nn(dh,()=>{}),O_="onWindowResize",T_="offWindowResize",P_=Nn(O_,()=>{}),I_=dr(T_,()=>{}),hh="setLocale",N_="getLocale",ph="onLocaleChange",wf=Mt(N_,()=>{let e=Sn({allowDefault:!0});return e&&e.$vm?e.$vm.$locale:Z().getLocale()}),k_=Nn(ph,()=>{}),R_=Mt(hh,e=>{let t=Sn();return t&&t.$vm.$locale!==e?(t.$vm.$locale=e,Ln().forEach(s=>{bt.publishHandler(hh,e,s.$page.id)}),v.requireModule("plus").setLanguage(e),bt.invokeOnCallback(ph,{locale:e}),!0):!1}),x_=ke("setPageMeta",(e,{resolve:t})=>{t(Vi(Lr(),e))}),gh="getSelectedTextRange",B_=ke(gh,(e,{resolve:t,reject:n})=>{bt.invokeViewMethod(gh,{},aa(),r=>{typeof r.end=="undefined"&&typeof r.start=="undefined"?n("no focused"):t(r)})}),Au={[se.ON_UNHANDLE_REJECTION]:[],[se.ON_PAGE_NOT_FOUND]:[],[se.ON_ERROR]:[],[se.ON_SHOW]:[],[se.ON_HIDE]:[]};function eu(e,t){let n=Sn({allowDefault:!0});if(n&&n.$vm)return gn.injectHook(e,t,n.$vm.$);Au[e].push(t)}function M_(e){Object.keys(Au).forEach(t=>{Au[t].forEach(n=>{gn.injectHook(t,n,e)})})}function tu(e,t){let n=Sn({allowDefault:!0});if(n&&n.$vm)return Si(n.$vm,e,t);ee.remove(Au[e],t)}function D_(e){eu(se.ON_UNHANDLE_REJECTION,e)}function F_(e){tu(se.ON_UNHANDLE_REJECTION,e)}function L_(e){eu(se.ON_PAGE_NOT_FOUND,e)}function V_(e){tu(se.ON_PAGE_NOT_FOUND,e)}function $_(e){eu(se.ON_ERROR,e)}function U_(e){tu(se.ON_ERROR,e)}function H_(e){eu(se.ON_SHOW,e)}function j_(e){tu(se.ON_SHOW,e)}function z_(e){eu(se.ON_HIDE,e)}function W_(e){tu(se.ON_HIDE,e)}let G_=Mt("getEnterOptionsSync",()=>wr()),Y_=Mt("getLaunchOptionsSync",()=>pr()),nu,Sf,Cf;function vh(e){try{return JSON.parse(e)}catch(t){}return e}function q_(e){if(e.type==="enabled")Cf=!0;else if(e.type==="clientId")nu=e.cid,Sf=e.errMsg,mh(nu,e.errMsg);else if(e.type==="pushMsg"){let t={type:"receive",data:vh(e.message)};for(let n=0;n<yl.length&&(yl[n](t),!t.stopped);n++);}else e.type==="click"&&yl.forEach(t=>{t({type:"click",data:vh(e.message)})})}let Af=[];function mh(e,t){Af.forEach(n=>{n(e,t)}),Af.length=0}let K_=ke("getPushClientId",(e,{resolve:t,reject:n})=>{Promise.resolve().then(()=>{typeof Cf=="undefined"&&(Cf=!1,nu="",Sf="unipush is not enabled"),Af.push((r,s)=>{r?t({cid:r}):n(s)}),typeof nu!="undefined"&&mh(nu,Sf)})}),yl=[],J_=e=>{yl.indexOf(e)===-1&&yl.push(e)},Z_=e=>{if(!e)yl.length=0;else{let t=yl.indexOf(e);t>-1&&yl.splice(t,1)}},X_="canIUse",Q_=[{name:"schema",type:String,required:!0}],eb="getBackgroundAudioManager",tb="makePhoneCall",nb={phoneNumber:String},rb="addPhoneContact",ib={formatArgs:{firstName(e){if(!e)return"addPhoneContact:fail parameter error: parameter.firstName should not be empty;"}}},ob={firstName:{type:String,required:!0},photoFilePath:String,nickName:String,lastName:String,middleName:String,remark:String,mobilePhoneNumber:String,weChatNumber:String,addressCountry:String,addressState:String,addressCity:String,addressStreet:String,addressPostalCode:String,organization:String,title:String,workFaxNumber:String,workPhoneNumber:String,hostNumber:String,email:String,url:String,workAddressCountry:String,workAddressState:String,workAddressCity:String,workAddressStreet:String,workAddressPostalCode:String,homeFaxNumber:String,homePhoneNumber:String,homeAddressCountry:String,homeAddressState:String,homeAddressCity:String,homeAddressStreet:String,homeAddressPostalCode:String},ab="getClipboardData",sb="setClipboardData",lb={formatArgs:{showToast:!0},beforeInvoke(){xo()},beforeSuccess(e,t){if(!t.showToast)return;let{t:n}=Z(),r=n("uni.setClipboardData.success");r&&le.showToast({title:r,icon:"success",mask:!1})}},cb={data:{type:String,required:!0},showToast:{type:Boolean}},_h="onAccelerometer",ub="offAccelerometer",fb="startAccelerometer",db="stopAccelerometer",bh="onCompass",hb="offCompass",pb="startCompass",gb="stopCompass",vb="vibrateShort",mb="vibrateLong",yh="onBluetoothDeviceFound",Eh="onBluetoothAdapterStateChange",wh="onBLEConnectionStateChange",Sh="onBLECharacteristicValueChange",_b="startBluetoothDevicesDiscovery",bb={services:Array,allowDuplicatesKey:Boolean,interval:Number},yb="getConnectedBluetoothDevices",Eb={services:{type:Array,required:!0}},wb="createBLEConnection",Sb={deviceId:{type:String,required:!0}},Cb="closeBLEConnection",Ab={deviceId:{type:String,required:!0}},Ob="getBLEDeviceServices",Tb={deviceId:{type:String,required:!0}},Pb="getBLEDeviceCharacteristics",Ib={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0}},Nb="notifyBLECharacteristicValueChange",kb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},state:{type:Boolean,required:!0}},Rb="readBLECharacteristicValue",xb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0}},Bb="writeBLECharacteristicValue",Mb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},value:{type:Array,required:!0}},Db="setBLEMTU",Fb={deviceId:{type:String,required:!0},mtu:{type:Number,required:!0}},Lb="getBLEDeviceRSSI",Vb={deviceId:{type:String,required:!0}},Ch="onBeaconUpdate",Ah="onBeaconServiceChange",$b="getBeacons",Ub="startBeaconDiscovery",Hb={uuids:{type:Array,required:!0}},jb="stopBeaconDiscovery",zb="getScreenBrightness",Wb="setScreenBrightness",Gb="setKeepScreenOn",Yb="soterAuthentication",qb="checkIsSoterEnrolledInDevice",Kb=["fingerPrint","facial","speech"],Jb={formatArgs:{checkAuthMode(e,t){if(!e||!Kb.includes(e))return"checkAuthMode \u586B\u5199\u9519\u8BEF"}}},Zb={checkAuthMode:String},Xb="checkIsSoterEnrolledInDevice",Qb={formatArgs:{requestAuthModes(e,t){if(!e.includes("fingerPrint")&&!e.includes("facial"))return"requestAuthModes \u586B\u5199\u9519\u8BEF"}}},e0={requestAuthModes:{type:Array,required:!0},challenge:String,authContent:String},t0="scanCode",n0={onlyFromCamera:Boolean,scanType:Array,autoDecodeCharSet:Boolean,sound:String},r0=["default","none"],i0={formatArgs:{sound(e,t){r0.includes(e)||(t.sound="none")}}},o0="getSystemSetting",a0="getAppAuthorizeSetting",s0="openAppAuthorizeSetting",l0="getStorage",Oh={key:{type:String,required:!0}},c0="getStorageSync",Th=[{name:"key",type:String,required:!0}],u0="setStorage",f0={key:{type:String,required:!0},data:{required:!0}},d0="setStorageSync",h0=[{name:"key",type:String,required:!0},{name:"data",required:!0}],Ph="removeStorage",p0=Oh,g0=Th,v0="saveFile",m0={formatArgs:{tempFilePath(e,t){t.tempFilePath=wt(e)}}},_0={tempFilePath:{type:String,required:!0}},b0="getSavedFileList",y0="removeSavedFile",E0={formatArgs:{filePath(e,t){t.filePath=wt(e)}}},w0={filePath:{type:String,required:!0}},S0="getFileInfo",C0={formatArgs:{filePath(e,t){t.filePath=wt(e)}}},A0={filePath:{type:String,required:!0}},O0="getSavedFileInfo",T0={formatArgs:{filePath(e,t){t.filePath=wt(e)}}},P0={filePath:{type:String,required:!0}},I0="openDocument",N0={formatArgs:{filePath(e,t){t.filePath=wt(e)}}},k0={filePath:{type:String,required:!0},fileType:String},R0="hideKeyboard",x0="showKeyboard",B0="chooseLocation",M0={keyword:String,latitude:Number,longitude:Number},D0="getLocation",Ih=["wgs84","gcj02"],F0={formatArgs:{type(e,t){e=(e||"").toLowerCase(),Ih.indexOf(e)===-1?t.type=Ih[0]:t.type=e},altitude(e,t){t.altitude=e||!1}}},L0={type:String,altitude:Boolean},V0="openLocation",Nh=(e,t)=>{if(t===void 0)return`${e} should not be empty.`;if(typeof t!="number"){let n=typeof t;return n=n[0].toUpperCase()+n.substring(1),`Expected Number, got ${n} with value ${JSON.stringify(t)}.`}},$0={formatArgs:{latitude(e,t){let n=Nh("latitude",e);if(n)return n;t.latitude=e},longitude(e,t){let n=Nh("longitude",e);if(n)return n;t.longitude=e},scale(e,t){e=Math.floor(e),t.scale=e>=5&&e<=18?e:18}}},U0={latitude:Number,longitude:Number,scale:Number,name:String,address:String},H0="chooseImage",j0={formatArgs:{count(e,t){(!e||e<=0)&&(t.count=9)},sizeType(e,t){t.sizeType=In(e,Rr)},sourceType(e,t){t.sourceType=In(e,yn)},extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},z0={count:Number,sizeType:[Array,String],sourceType:Array,extension:Array},W0="chooseVideo",G0={formatArgs:{sourceType(e,t){t.sourceType=In(e,yn)},compressed:!0,maxDuration:60,camera:"back",extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},Y0={sourceType:Array,compressed:Boolean,maxDuration:Number,camera:String,extension:Array},q0="getImageInfo",K0={formatArgs:{src(e,t){t.src=wt(e)}}},J0={src:{type:String,required:!0}},Z0="previewImage",X0={formatArgs:{urls(e,t){t.urls=e.map(n=>ee.isString(n)&&n?wt(n):"")},current(e,t){typeof e=="number"?t.current=e>0&&e<t.urls.length?e:0:ee.isString(e)&&e&&(t.current=wt(e))}}},Q0={urls:{type:Array,required:!0},current:{type:[Number,String]}},ey="closePreviewImage",ty="getVideoInfo",ny={formatArgs:{src(e,t){t.src=wt(e)}}},ry={src:{type:String,required:!0}},iy="saveImageToPhotosAlbum",oy={formatArgs:{filePath(e,t){t.filePath=wt(e)}}},ay={filePath:{type:String,required:!0}},sy="saveVideoToPhotosAlbum",ly={formatArgs:{filePath(e,t){t.filePath=wt(e)}}},cy={filePath:{type:String,required:!0}},uy="getRecorderManager",fy="compressImage",dy={formatArgs:{src(e,t){t.src=wt(e)}}},hy={src:{type:String,required:!0}},py="compressVideo",gy={formatArgs:{src(e,t){t.src=wt(e)}}},vy={src:{type:String,required:!0},quality:String,bitrate:Number,fps:Number,resolution:Number},my="request",_y={JSON:"json"},by=["text","arraybuffer"],yy="text",kh=encodeURIComponent;function Ey(e,t){let n=e.split("#"),r=n[1]||"";n=n[0].split("?");let s=n[1]||"";e=n[0];let d=s.split("&").filter(y=>y),g={};d.forEach(y=>{let j=y.split("=");g[j[0]]=j[1]});for(let y in t)if(ee.hasOwn(t,y)){let j=t[y];typeof j=="undefined"||j===null?j="":ee.isPlainObject(j)&&(j=JSON.stringify(j)),g[kh(y)]=kh(j)}return s=Object.keys(g).map(y=>`${y}=${g[y]}`).join("&"),e+(s?"?"+s:"")+(r?"#"+r:"")}let wy={method:String,data:[Object,String,Array,ArrayBuffer],url:{type:String,required:!0},header:Object,dataType:String,responseType:String,withCredentials:Boolean},Sy={formatArgs:{method(e,t){t.method=cn((e||"").toUpperCase(),Wt)},data(e,t){t.data=e||""},url(e,t){t.method===Wt[0]&&ee.isPlainObject(t.data)&&Object.keys(t.data).length&&(t.url=Ey(e,t.data))},header(e,t){let n=t.header=e||{};t.method!==Wt[0]&&(Object.keys(n).find(r=>r.toLowerCase()==="content-type")||(n["Content-Type"]="application/json"))},dataType(e,t){t.dataType=(e||_y.JSON).toLowerCase()},responseType(e,t){t.responseType=(e||"").toLowerCase(),by.indexOf(t.responseType)===-1&&(t.responseType=yy)}}},Cy="configMTLS",Ay={certificates:{type:Array,required:!0}},Oy={formatArgs:{certificates(e){if(e.some(t=>ee.toRawType(t.host)!=="String"))return"\u53C2\u6570\u914D\u7F6E\u9519\u8BEF\uFF0C\u8BF7\u786E\u8BA4\u540E\u91CD\u8BD5"}}},Ty="downloadFile",Py={formatArgs:{header(e,t){t.header=e||{}}}},Iy={url:{type:String,required:!0},header:Object,timeout:Number},Ny="uploadFile",ky={formatArgs:{filePath(e,t){e&&(t.filePath=wt(e))},header(e,t){t.header=e||{}},formData(e,t){t.formData=e||{}}}},Ry={url:{type:String,required:!0},files:Array,filePath:String,name:String,header:Object,formData:Object,timeout:Number},xy="connectSocket",By={formatArgs:{header(e,t){t.header=e||{}},method(e,t){t.method=cn((e||"").toUpperCase(),Wt)},protocols(e,t){ee.isString(e)&&(t.protocols=[e])}}},My={url:{type:String,required:!0},header:{type:Object},method:String,protocols:[Array,String]},Dy="sendSocketMessage",Fy={data:[String,ArrayBuffer]},Ly="closeSocket",Vy={code:Number,reason:String};function $y(e){if(!ee.isString(e))return e;let t=e.indexOf("?");if(t===-1)return e;let n=e.slice(t+1).trim().replace(/^(\?|#|&)/,"");if(!n)return e;e=e.slice(0,t);let r=[];return n.split("&").forEach(s=>{let d=s.replace(/\+/g," ").split("="),g=d.shift(),y=d.length>0?d.join("="):"";r.push(g+"="+encodeURIComponent(y))}),r.length?e+"?"+r.join("&"):e}let Uy=["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"],Hy=["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"],bc={url:{type:String,required:!0}},Of="navigateTo",Tf="redirectTo",Rh="reLaunch",Ou="switchTab",jy="navigateBack",Pf="preloadPage",xh="unPreloadPage",zy=ee.extend({},bc,Bh(Uy)),Wy=ee.extend({delta:{type:Number}},Bh(Hy)),Gy=bc,Yy=bc,qy=bc,Ky=bc,Jy=bc,Zy=Pu(Of),Xy=Pu(Tf),Qy=Pu(Rh),eE=Pu(Ou),tE={formatArgs:{delta(e,t){e=parseInt(e+"")||1,t.delta=Math.min(Ln().length-1,e)}}};function Bh(e){return{animationType:{type:String,validator(t){if(t&&e.indexOf(t)===-1)return"`"+t+"` is not supported for `animationType` (supported values are: `"+e.join("`|`")+"`)"}},animationDuration:{type:Number}}}let Tu;function nE(){Tu=""}function Pu(e){return{formatArgs:{url:rE(e)},beforeAll:nE}}function rE(e){return function(n,r){if(!n)return'Missing required args: "url"';n=Tl(n);let s=n.split("?")[0],d=vo(s,!0);if(!d)return"page `"+n+"` is not found";if(e===Of||e===Tf){if(d.meta.isTabBar)return`can not ${e} a tabbar page`}else if(e===Ou&&!d.meta.isTabBar)return"can not switch to no-tabBar page";if((e===Ou||e===Pf)&&d.meta.isTabBar&&r.openType!=="appLaunch"&&(n=s),d.meta.isEntry&&(n=n.replace(d.alias,"/")),r.url=$y(n),e!==xh){if(e===Pf){if(!d.meta.isNVue)return"can not preload vue page";if(d.meta.isTabBar){let g=Ln(),y=d.path.slice(1);if(g.find(j=>j.route===y))return"tabBar page `"+y+"` already exists"}return}if(Tu===n&&r.openType!=="appLaunch")return`${Tu} locked`;P.ready&&(Tu=n)}}}let iE="hideLoading",oE="hideToast",Mh="loadFontFace",aE={family:{type:String,required:!0},source:{type:String,required:!0},desc:Object},sE=["#ffffff","#000000"],lE="setNavigationBarColor",cE={formatArgs:{animation(e,t){e||(e={duration:0,timingFunc:"linear"}),t.animation={duration:e.duration||0,timingFunc:e.timingFunc||"linear"}}}},uE={frontColor:{type:String,required:!0,validator(e){if(sE.indexOf(e)===-1)return`invalid frontColor "${e}"`}},backgroundColor:{type:String,required:!0},animation:Object},fE="setNavigationBarTitle",dE={title:{type:String,required:!0}},hE="showNavigationBarLoading",pE="hideNavigationBarLoading",Dh="pageScrollTo",gE={scrollTop:Number,selector:String,duration:Number},vE={formatArgs:{duration:300}},mE="showActionSheet",_E={itemList:{type:Array,required:!0},title:String,itemColor:String,popover:Object},bE={formatArgs:{itemColor:"#000"}},yE="showLoading",EE={title:String,mask:Boolean},wE={formatArgs:{title:"",mask:!1}},SE="showModal",CE={title:String,content:String,showCancel:Boolean,cancelText:String,cancelColor:String,confirmText:String,confirmColor:String},AE={beforeInvoke(){En()},formatArgs:{title:"",content:"",showCancel:!0,cancelText(e,t){if(!ee.hasOwn(t,"cancelText")){let{t:n}=Z();t.cancelText=n("uni.showModal.cancel")}},cancelColor:"#000",confirmText(e,t){if(!ee.hasOwn(t,"confirmText")){let{t:n}=Z();t.confirmText=n("uni.showModal.confirm")}},confirmColor:se.PRIMARY_COLOR}},OE="showToast",TE=["success","loading","none","error"],PE={title:String,icon:String,image:String,duration:Number,mask:Boolean},IE={formatArgs:{title:"",icon(e,t){t.icon=cn(e,TE)},image(e,t){e?t.image=wt(e):t.image=""},duration:1500,mask:!1}},NE="startPullDownRefresh",kE="stopPullDownRefresh",ru={index:{type:Number,required:!0}},El={beforeInvoke(){let e=Mo();if(e&&!e.isTabBar)return"not TabBar page"},formatArgs:{index(e){if(!P.tabBar.list[e])return"tabbar item not found"}}},RE="setTabBarItem",xE=ee.extend({text:String,iconPath:String,selectedIconPath:String,pagePath:String},ru),BE={beforeInvoke:El.beforeInvoke,formatArgs:ee.extend({pagePath(e,t){e&&(t.pagePath=se.removeLeadingSlash(e))}},El.formatArgs)},ME="setTabBarStyle",DE={color:String,selectedColor:String,backgroundColor:String,backgroundImage:String,backgroundRepeat:String,borderStyle:String},FE=/^(linear|radial)-gradient\(.+?\);?$/,LE={beforeInvoke:El.beforeInvoke,formatArgs:{backgroundImage(e,t){e&&!FE.test(e)&&(t.backgroundImage=wt(e))},borderStyle(e,t){e&&(t.borderStyle=e==="white"?"white":"black")}}},VE="hideTabBar",Fh={animation:Boolean},$E="showTabBar",UE=Fh,HE="hideTabBarRedDot",jE=ru,zE=El,WE="showTabBarRedDot",GE=ru,YE=El,qE="removeTabBarBadge",KE=ru,JE=El,ZE="setTabBarBadge",XE=ee.extend({text:{type:String,required:!0}},ru),QE={beforeInvoke:El.beforeInvoke,formatArgs:ee.extend({text(e,t){se.getLen(e)>=4&&(t.text="...")}},El.formatArgs)},ew="getProvider",tw={service:{type:String,required:!0}},nw="login",rw={provider:String,scopes:[String,Array],timeout:Number,univerifyStyle:Object,onlyAuthorize:Boolean},iw="getUserInfo",ow={provider:String,withCredentials:Boolean,timeout:Number,lang:String},aw="ggetUserProfilegetUserProfile",sw={provider:String,withCredentials:Boolean,timeout:Number,lang:String},lw="preLogin",cw={UNIVERIFY:"univerify"},uw={formatArgs:{provider(e,t){if(Object.values(cw).indexOf(String(e))<0)return"provider error"}}},fw={provider:{type:String,required:!0}},dw="closeAuthView",hw="getCheckBoxState",pw="getUniverifyManager",gw="share",Lh=["WXSceneSession","WXSceneTimeline","WXSceneFavorite"],vw={formatArgs:{scene(e,t){let{provider:n,openCustomerServiceChat:r}=t;if(n==="weixin"&&!r&&(!e||!Lh.includes(e)))return`\u5206\u4EAB\u5230\u5FAE\u4FE1\u65F6\uFF0Cscene\u5FC5\u987B\u4E3A\u4EE5\u4E0B\u5176\u4E2D\u4E00\u4E2A\uFF1A${Lh.join("\u3001")}`},summary(e,t){if(t.type===1&&!e)return"\u5206\u4EAB\u7EAF\u6587\u672C\u65F6\uFF0Csummary\u5FC5\u586B"},href(e,t){if(t.type===0&&!e)return"\u5206\u4EAB\u56FE\u6587\u65F6\uFF0Chref\u5FC5\u586B"},imageUrl(e,t){if([0,2,5].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u56FE\u6587\u3001\u7EAF\u56FE\u7247\u3001\u5C0F\u7A0B\u5E8F\u65F6\uFF0CimageUrl\u5FC5\u586B\uFF0C\u63A8\u8350\u4F7F\u7528\u5C0F\u4E8E20Kb\u7684\u56FE\u7247"},mediaUrl(e,t){if([3,4].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u97F3\u4E50\u3001\u89C6\u9891\u65F6\uFF0CmediaUrl\u5FC5\u586B"},miniProgram(e,t){if(t.type===5&&!e)return"\u5206\u4EAB\u5C0F\u7A0B\u5E8F\u65F6\uFF0CminiProgram\u5FC5\u586B"},corpid(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 corpid \u5FC5\u586B"},customerUrl(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 customerUrl \u5FC5\u586B"}}},mw={provider:{type:String,required:!0},type:Number,title:String,scene:String,summary:String,href:String,imageUrl:String,mediaUrl:String,miniProgram:Object},_w="shareWithSystem",Vh=["text","image"],bw={formatArgs:{type(e,t){if(e&&!Vh.includes(e))return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E\u3002\u53EA\u652F\u6301text\u3001image";t.type=cn(e,Vh)}}},yw={type:String,summary:String,href:String,imageUrl:String},Ew="requestPayment",ww={provider:{type:String,required:!0},orderInfo:{type:[String,Object],required:!0},timeStamp:String,nonceStr:String,package:String,signType:String,paySign:String},Sw="createPushMessage",Cw={formatArgs:{content(e){if(!e)return"content is required"}}},Aw="createRewardedVideoAd",Ow={formatArgs:{adpid:"",adUnitId:""}},Tw={adpid:String,adUnitId:String},Pw="createFullScreenVideoAd",Iw={formatArgs:{adpid:""}},Nw={adpid:String},kw="createInterstitialAd",Rw={formatArgs:{adpid:"",adUnitId:""}},xw={adpid:String,adUnitId:String},Bw="createInteractiveAd",Mw={formatArgs:{adpid(e,t){if(!e)return"adpid should not be empty.";e&&(t.adpid=e)},provider(e,t){if(!e)return"provider should not be empty.";e&&(t.provider=e)}}},Dw={adpid:{type:String,required:!0},provider:{type:String,required:!0}};function Hl(e,t){return function(r){delete r.code,delete r.message,ee.isFunction(t)&&(r=t(r)),e(r)}}function Cr(e,t){return function(r){r=r||{},t=r.message||t||"",delete r.message,e(t,ee.extend({code:0},r))}}function yc(e,t){return function(){e()(function(r){r&&(delete r.code,delete r.message),bt.invokeOnCallback(t,r)})}}function ki(e,t,n){return function(r,{resolve:s,reject:d}){e()(ee.extend({},ee.isFunction(t)?t(r):r,{success:Hl(s,n),fail:Cr(d)}))}}function iu(e=""){if(!(P.tabBar&&ee.isArray(P.tabBar.list)))return!1;try{if(!e){let n=Ln();if(!n.length)return!1;let r=n[n.length-1];return r?r.$page.meta.isTabBar:!1}/^\//.test(e)||(e=se.addLeadingSlash(e));let t=vo(e);return t&&t.meta.isTabBar}catch(t){}return!1}let Xa="__TYPE",Fw="uni-storage-keys";function If(e){let t=["object","string","number","boolean","undefined"];try{let n=ee.isString(e)?JSON.parse(e):e,r=n.type;if(t.indexOf(r)>=0){let s=Object.keys(n);if(s.length===2&&"data"in n){if(typeof n.data===r)return n.data;if(r==="object"&&/^\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z$/.test(n.data))return new Date(n.data)}else if(s.length===1)return""}}catch(n){}}let Lw=Mt(d0,(e,t)=>{let n=typeof t,r=n==="string"?t:JSON.stringify({type:n,data:t});try{n==="string"&&If(r)!==void 0?c.storage.setItem(e+Xa,n):c.storage.removeItem(e+Xa),c.storage.setItem(e,r)}catch(s){}},h0),Vw=ke(u0,({key:e,data:t},{resolve:n,reject:r})=>{let s=typeof t,d=s==="string"?t:JSON.stringify({type:s,data:t});try{let g=c.storage;s==="string"&&If(d)!==void 0?g.setItemAsync(e+Xa,s):g.removeItemAsync(e+Xa),g.setItemAsync(e,d,n,Cr(r))}catch(g){r(g.message)}},f0);function Nf(e,t){let n=t;if(e!=="string"||e==="string"&&t==='{"type":"undefined"}')try{let r=JSON.parse(t),s=If(r);if(s!==void 0)n=s;else if(e&&(n=r,ee.isString(r))){r=JSON.parse(r);let d=typeof r;d==="number"&&e==="date"?n=new Date(r):d===(["null","array"].indexOf(e)<0?e:"object")&&(n=r)}}catch(r){}return n}let $w=Mt(c0,(e,t)=>{let n=c.storage.getItem(e),s=(c.storage.getItem(e+Xa)||"").toLowerCase();return ee.isString(n)?Nf(s,n):""},Th),Uw=ke(l0,({key:e},{resolve:t,reject:n})=>{let r=c.storage;r.getItemAsync(e,function(s){r.getItemAsync(e+Xa,function(d){let y=(d.data||"").toLowerCase();t({data:Nf(y,s.data)})},function(){t({data:Nf("",s.data)})})},Cr(n))},Oh),Hw=Mt(Ph,e=>{c.storage.removeItem(e+Xa),c.storage.removeItem(e)},g0),jw=ke(Ph,({key:e},{resolve:t,reject:n})=>{c.storage.removeItemAsync(e+Xa),c.storage.removeItemAsync(e,t,Cr(n))},p0),zw=Mt("clearStorageSync",()=>{c.storage.clear()}),Ww=ke("clearStorage",(e,{resolve:t,reject:n})=>{c.storage.clearAsync(t,Cr(n))}),$h=Mt("getStorageInfoSync",()=>{let e=c.storage.getLength()||0,t=[],n=0;for(let r=0;r<e;r++){let s=c.storage.key(r);if(s!==Fw&&(s.indexOf(Xa)<0||s.indexOf(Xa)+Xa.length!==s.length)){let d=c.storage.getItem(s);n+=s.length+d.length,t.push(s)}}return{keys:t,currentSize:Math.ceil(n*2/1024),limitSize:Number.MAX_VALUE}}),Gw=ke("getStorageInfo",(e,{resolve:t})=>{t($h())}),Yw=ke(S0,(e,{resolve:t,reject:n})=>{c.io.getFileInfo(ee.extend(e,{success:Hl(t),fail:Cr(n)}))},A0,C0),qw=0,Uh="uniapp_save",Kw=`_doc/${Uh}`;function Jw(e,t){t=t||function(){},c.io.requestFileSystem(c.io.PRIVATE_DOC,n=>{n.root.getDirectory(Uh,{create:!0},e,t)},t)}let Zw=ke(v0,({tempFilePath:e},{resolve:t,reject:n})=>{let r=Cr(n),s=`${Date.now()}${qw++}${Ai(e)}`;c.io.resolveLocalFileSystemURL(e,d=>{Jw(g=>{d.copyTo(g,s,()=>{let y=Kw+"/"+s;t({savedFilePath:y})},r)},r)},r)},_0,m0),Xw="uniapp_save";function Qw(e,t){t=t||function(){},c.io.requestFileSystem(c.io.PRIVATE_DOC,n=>{n.root.getDirectory(Xw,{create:!0},e,t)},t)}let eS=ke(b0,(e,{resolve:t,reject:n})=>{let r=Cr(n);Qw(s=>{var d=s.createReader(),g=[];d.readEntries(y=>{y&&y.length?y.forEach(j=>{j.getMetadata(N=>{g.push({filePath:c.io.convertAbsoluteFileSystem(j.fullPath),createTime:N.modificationTime.getTime(),size:N.size}),g.length===y.length&&t({fileList:g})},r,!1)}):t({fileList:g})},r)},r)}),tS=ke(O0,({filePath:e},{resolve:t,reject:n})=>{let r=Cr(n);c.io.resolveLocalFileSystemURL(e,s=>{s.getMetadata(d=>{t({createTime:d.modificationTime.getTime(),size:d.size})},r,!1)},r)},P0,T0),nS=ke(y0,({filePath:e},{resolve:t,reject:n})=>{let r=Cr(n);c.io.resolveLocalFileSystemURL(e,s=>{s.remove(()=>{t()},r)},r)},w0,E0),rS=ke(I0,({filePath:e,fileType:t},{resolve:n,reject:r})=>{let s=Cr(r);c.runtime.openDocument(wt(e),void 0,n,s)},k0,N0),iS=Mt(X_,e=>!!ee.hasOwn(le,e),Q_),kf;function oS(){return kf=kf||c.device.uuid,kf}let ou,Rf=!0,mr;function aS(e,t,n){!mr||(e==="none"?(mr.hideTabBarRedDot({index:t}),mr.removeTabBarBadge({index:t})):e==="text"?mr.setTabBarBadge({index:t,text:n}):e==="redDot"&&mr.showTabBarRedDot({index:t}))}function sS(e,t,n,r,s,d){let g={index:e};if(t!==void 0&&(g.text=t),n&&(g.iconPath=wt(n)),r&&(g.selectedIconPath=wt(r)),d!==void 0&&(g.iconfont=d),s!==void 0){g.visible=ou.list[e].visible=s,delete g.index;let y=ou.list.map(j=>({visible:j.visible}));y[e]=g,mr&&mr.setTabBarItems({list:y})}else mr&&mr.setTabBarItem(g)}function lS(e){mr&&mr.setTabBarStyle(e)}function cS(e){Rf=!1,mr&&mr.hideTabBar({animation:e})}function uS(e){Rf=!0,mr&&mr.showTabBar({animation:e})}let Iu=[];var Ri={id:"0",init(e,t){e&&e.list.length&&(ou=e);try{mr=v.requireModule("uni-tabview")}catch(n){console.log(`uni.requireNativePlugin("uni-tabview") error ${n}`)}mr.onMaskClick(()=>{Iu.forEach(n=>{n()})}),mr&&mr.onClick(({index:n})=>{t(ou.list[n],n)}),mr&&mr.onMidButtonClick(()=>bt.invokeOnCallback(dh))},indexOf(e){let t=this.config,n=t&&t.list&&t.list.length;if(n){for(let r=0;r<n;r++)if(t.list[r].pagePath===e||t.list[r].pagePath===`${e}.html`)return r}return-1},switchTab(e){let t=this.indexOf(e);return t>=0?(mr&&mr.switchSelect({index:t}),!0):!1},setTabBarBadge:aS,setTabBarItem:sS,setTabBarStyle:lS,hideTabBar:cS,showTabBar:uS,append(e){mr&&mr.append({id:e.id},({code:t})=>{t!==0&&B(()=>{this.append(e)},20)})},get config(){return ou||P.tabBar},get visible(){return Rf},get height(){let e=this.config;return(e&&e.height?parseFloat(e.height):se.TABBAR_HEIGHT)+c.navigator.getSafeAreaInsets().deviceBottom},get cover(){let e=this.config;return e&&["extralight","light","dark"].indexOf(e.blurEffect)>=0},setStyle({mask:e}){mr.setMask({color:e})},addEventListener(e,t){Iu.push(t)},removeEventListener(e,t){let n=Iu.indexOf(t);Iu.splice(n,1)}};function Nu(){let e=Fr();return e?e.$getAppWebview():null}function Hh(e){return e?e.$getAppWebview():Nu()}let jh=null;function zh(){return jh}function xf(e){jh=e}function Bf(){return c.navigator.isImmersedStatusbar()?Math.round(c.os.name==="iOS"?c.navigator.getSafeAreaInsets().top:c.navigator.getStatusbarHeight()):0}function Wh(){let e=c.navigator.getStatusBarStyle();return e==="UIStatusBarStyleBlackTranslucent"||e==="UIStatusBarStyleBlackOpaque"||e==="null"?e="light":e==="UIStatusBarStyleDefault"&&(e="dark"),e}function fS(){let{resolutionWidth:e,resolutionHeight:t}=c.screen.getCurrentSize()||{resolutionWidth:0,resolutionHeight:0};return{screenWidth:Math.round(e),screenHeight:Math.round(t)}}let Gh=Mt("getWindowInfo",()=>{let e=c.os.name.toLowerCase()==="ios",{screenWidth:t,screenHeight:n}=fS(),r=Bf(),s,d={height:0,cover:!1},g=Nu();if(g){let yt=g.getStyle(),Nt=yt&&yt.titleNView;Nt&&Nt.type&&Nt.type!=="none"&&(d.height=Nt.type==="transparent"?0:r+se.NAVBAR_HEIGHT,d.cover=Nt.type==="transparent"||Nt.type==="float"),s=g.getSafeAreaInsets()}else s=c.navigator.getSafeAreaInsets();let y={height:0,cover:!1};iu()&&(y.height=Ri.visible?Ri.height:0,y.cover=Ri.cover);let j=d.cover?d.height:0,N=y.cover?y.height:0,$=n-d.height-y.height,me=n-(d.cover?0:d.height)-(y.cover?0:y.height),Te=t;(!y.height||y.cover)&&!s.bottom&&s.deviceBottom&&($-=s.deviceBottom,me-=s.deviceBottom),s=e?s:{left:0,right:0,top:d.height&&!d.cover?0:r,bottom:0};let Ve={left:s.left,right:Te-s.right,top:s.top,bottom:me-s.bottom,width:Te-s.left-s.right,height:me-s.top-s.bottom};return{pixelRatio:c.screen.scale,screenWidth:t,screenHeight:n,windowWidth:Te,windowHeight:$,statusBarHeight:r,safeArea:Ve,safeAreaInsets:{top:s.top,right:s.right,bottom:s.bottom,left:s.left},windowTop:j,windowBottom:N,screenTop:n-$}}),vs,ku=!0;function Mf(){if(!ku)return;let{getSystemInfoSync:e}=v.requireModule("plus");if(vs=e(),ee.isString(vs))try{vs=JSON.parse(vs)}catch(t){}}let Yh=Mt("getDeviceInfo",()=>{Mf();let{deviceBrand:e="",deviceModel:t,osName:n,osVersion:r,deviceOrientation:s,deviceType:d}=vs,g=e.toLowerCase(),y=n.toLowerCase();return{brand:g,deviceBrand:g,deviceModel:t,devicePixelRatio:c.screen.scale,deviceId:oS(),deviceOrientation:s,deviceType:d,model:t,platform:y,system:`${y==="ios"?"iOS":"Android"} ${r}`}}),qh=Mt("getAppBaseInfo",()=>{Mf();let{hostPackageName:e,hostName:t,hostVersion:n,hostLanguage:r,osLanguage:s,hostTheme:d,appId:g,appName:y,appVersion:j,appVersionCode:N}=vs;return{appId:g,appName:y,appVersion:j,appVersionCode:N,appLanguage:wf?wf():s,enableDebug:!1,hostPackageName:e,hostName:t,hostVersion:n,hostLanguage:r,hostTheme:d,hostFontSizeSetting:void 0,hostSDKVersion:void 0,language:s,SDKVersion:"",theme:void 0,version:c.runtime.innerVersion}}),Kh=Mt("getSystemInfoSync",()=>{ku=!0,Mf(),ku=!1;let e=Gh(),t=Yh(),n=qh();ku=!0;let r={fontSizeSetting:n.hostFontSizeSetting,osName:vs.osName.toLowerCase()};vs.hostName&&(r.hostSDKVersion=vs.uniRuntimeVersion);let s=ee.extend(vs,e,t,n,r);return delete s.screenTop,delete s.enableDebug,delete s.theme,se.sortObject(s)}),dS=ke("getSystemInfo",(e,{resolve:t})=>t(Kh())),Ec=null,hS=Nn(bh,()=>{Jh()}),pS=dr(hb,()=>{Zh()}),Jh=ke(pb,(e,{resolve:t,reject:n})=>{Ec||(Ec=c.orientation.watchOrientation(r=>{bt.invokeOnCallback(bh,{direction:r.magneticHeading})},r=>{n(r.message),Ec=null},{frequency:Yn})),B(t,Yn)}),Zh=ke(gb,(e,{resolve:t})=>{Ec&&(c.orientation.clearWatch(Ec),Ec=null),t()}),gS=ke(vb,(e,{resolve:t})=>{c.device.vibrate(15),t()}),vS=ke(mb,(e,{resolve:t})=>{c.device.vibrate(400),t()}),wc=null,mS=Nn(_h,()=>{Xh()}),_S=dr(ub,()=>{Qh()}),Xh=ke(fb,(e,{resolve:t,reject:n})=>{wc||(wc=c.accelerometer.watchAcceleration(r=>{bt.invokeOnCallback(_h,{x:r&&r.xAxis||0,y:r&&r.yAxis||0,z:r&&r.zAxis||0})},r=>{wc=null,n(`startAccelerometer:fail ${r.message}`)},{frequency:Yn})),B(t,Yn)}),Qh=ke(db,(e,{resolve:t})=>{wc&&(c.accelerometer.clearWatch(wc),wc=null),t()}),bS=Nn(yh,yc(()=>c.bluetooth.onBluetoothDeviceFound.bind(c.bluetooth),yh)),yS=Nn(Eh,yc(()=>c.bluetooth.onBluetoothAdapterStateChange.bind(c.bluetooth),Eh)),ES=Nn(wh,yc(()=>c.bluetooth.onBLEConnectionStateChange.bind(c.bluetooth),wh)),wS=Nn(Sh,yc(()=>c.bluetooth.onBLECharacteristicValueChange.bind(c.bluetooth),Sh)),SS=ke("openBluetoothAdapter",ki(()=>c.bluetooth.openBluetoothAdapter.bind(c.bluetooth))),CS=ke("closeBluetoothAdapter",ki(()=>c.bluetooth.closeBluetoothAdapter.bind(c.bluetooth))),AS=ke("getBluetoothAdapterState",ki(()=>c.bluetooth.getBluetoothAdapterState.bind(c.bluetooth))),OS=ke(_b,ki(()=>c.bluetooth.startBluetoothDevicesDiscovery.bind(c.bluetooth)),bb),TS=ke("stopBluetoothDevicesDiscovery",ki(()=>c.bluetooth.stopBluetoothDevicesDiscovery.bind(c.bluetooth))),PS=ke("getBluetoothDevices",ki(()=>c.bluetooth.getBluetoothDevices.bind(c.bluetooth))),IS=ke(yb,ki(()=>c.bluetooth.getConnectedBluetoothDevices.bind(c.bluetooth)),Eb),NS=ke(wb,ki(()=>c.bluetooth.createBLEConnection.bind(c.bluetooth)),Sb),kS=ke(Cb,ki(()=>c.bluetooth.closeBLEConnection.bind(c.bluetooth)),Ab),RS=ke(Ob,ki(()=>c.bluetooth.getBLEDeviceServices.bind(c.bluetooth)),Tb),xS=ke(Pb,ki(()=>c.bluetooth.getBLEDeviceCharacteristics.bind(c.bluetooth)),Ib),BS=ke(Nb,ki(()=>c.bluetooth.notifyBLECharacteristicValueChange.bind(c.bluetooth)),kb),MS=ke(Rb,ki(()=>c.bluetooth.readBLECharacteristicValue.bind(c.bluetooth)),xb),DS=ke(Bb,ki(()=>c.bluetooth.writeBLECharacteristicValue.bind(c.bluetooth)),Mb),FS=ke(Db,ki(()=>c.bluetooth.setBLEMTU.bind(c.bluetooth)),Fb),LS=ke(Lb,ki(()=>c.bluetooth.getBLEDeviceRSSI.bind(c.bluetooth)),Vb),VS=Nn(Ch,yc(()=>c.ibeacon.onBeaconUpdate.bind(c.ibeacon),Ch)),$S=Nn(Ah,yc(()=>c.ibeacon.onBeaconServiceChange.bind(c.ibeacon),Ah)),US=ke($b,ki(()=>c.ibeacon.getBeacons.bind(c.ibeacon))),HS=ke(Ub,ki(()=>c.ibeacon.startBeaconDiscovery.bind(c.ibeacon)),Hb),jS=ke(jb,ki(()=>c.ibeacon.stopBeaconDiscovery.bind(c.ibeacon))),zS=ke(tb,({phoneNumber:e},{resolve:t})=>(c.device.dial(e),t()),nb),WS={name:{givenName:"firstName",middleName:"middleName",familyName:"lastName"},nickname:"nickName",photos:{type:"url",value:"photoFilePath"},note:"remark",phoneNumbers:[{type:"mobile",value:"mobilePhoneNumber"},{type:"work",value:"workPhoneNumber"},{type:"company",value:"hostNumber"},{type:"home fax",value:"homeFaxNumber"},{type:"work fax",value:"workFaxNumber"}],emails:[{type:"home",value:"email"}],urls:[{type:"other",value:"url"}],organizations:[{type:"company",name:"organization",title:"title"}],ims:[{type:"other",value:"weChatNumber"}],addresses:[{type:"other",preferred:!0,country:"addressCountry",region:"addressState",locality:"addressCity",streetAddress:"addressStreet",postalCode:"addressPostalCode"},{type:"home",country:"homeAddressCountry",region:"homeAddressState",locality:"homeAddressCity",streetAddress:"homeAddressStreet",postalCode:"homeAddressPostalCode"},{type:"company",country:"workAddressCountry",region:"workAddressState",locality:"workAddressCity",streetAddress:"workAddressStreet",postalCode:"workAddressPostalCode"}]},GS=["type","preferred"];function Df(e,t,n){let r=0;return Object.keys(n).forEach(s=>{let d=n[s];typeof d!=="object"?GS.indexOf(s)!==-1?e[s]=n[s]:typeof t[d]!="undefined"?(r++,e[s]=t[d]):delete e[s]:d instanceof Array?(e[s]=[],d.forEach(y=>{let j={};Df(j,t,y)&&e[s].push(j)}),e[s].length?r++:delete e[s]):(e[s]={},Df(e[s],t,d)?r++:delete e[s])}),r}let YS=ke(rb,(e,{resolve:t,reject:n})=>{!e.photoFilePath&&(e.photoFilePath=""),c.contacts.getAddressBook(c.contacts.ADDRESSBOOK_PHONE,r=>{let s=r.create();Df(s,e,WS),s.save(()=>t(),d=>n())},r=>n())},ob,ib);function ma(e){return typeof v!="undefined"?v.requireModule(e):__requireNativePlugin__(e)}function ep(e,t,n){return ma("plus").sendNativeEvent(e,t,n)}let qS=ke(ab,(e,{resolve:t,reject:n})=>{ma("clipboard").getString(s=>{s.result==="success"?t({data:s.data}):n("getClipboardData:fail")})}),KS=ke(sb,(e,{resolve:t})=>{ma("clipboard").setString(e.data),t()},cb,lb),tp="onNetworkStatusChange";function np(){rp().then(({networkType:e})=>{bt.invokeOnCallback(tp,{isConnected:e!=="none",networkType:e})})}let JS=Nn(tp,()=>{c.globalEvent.addEventListener("netchange",np)}),ZS=dr("offNetworkStatusChange",()=>{c.globalEvent.removeEventListener("netchange",np)}),rp=ke("getNetworkType",(e,{resolve:t})=>{let n=Ir[c.networkinfo.getCurrentType()]||"unknown";return t({networkType:n})});function ip(){if(c.os.name.toLowerCase()!=="ios")return!1;let t=ma("faceID");return!!(t&&t.isSupport())}function op(){return!!(c.fingerprint&&c.fingerprint.isSupport())}let ap=e=>{let t=[];return op()&&t.push("fingerPrint"),ip()&&t.push("facial"),e&&e({supportMode:t}),{supportMode:t,errMsg:"checkIsSupportSoterAuthentication:ok"}},XS=ke(Yb,(e,{resolve:t,reject:n})=>{ap(t)}),sp=({checkAuthMode:e,resolve:t,reject:n})=>{let r=(d,g)=>n&&n(d,g),s=d=>t&&t(d);if(e==="fingerPrint"){if(op()){let d=c.fingerprint.isKeyguardSecure()&&c.fingerprint.isEnrolledFingerprints();return s({isEnrolled:d}),{isEnrolled:d,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}else if(e==="facial"){if(ip()){let d=ma("faceID"),g=d&&d.isKeyguardSecure()&&d.isEnrolledFaceID();return s({isEnrolled:g}),{isEnrolled:g,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}},QS=ke(qb,({checkAuthMode:e},{resolve:t,reject:n})=>{sp({checkAuthMode:e,resolve:t,reject:n})},Zb,Jb),eC=ke(Xb,({requestAuthModes:e,challenge:t=!1,authContent:n},{resolve:r,reject:s})=>{ia();let{t:d}=Z(),g=ap().supportMode;if(g.length===0)return{authMode:"fingerPrint",errCode:90001,errMsg:"startSoterAuthentication:fail"};let y=[];if(e.map(($,me)=>{g.indexOf($)>-1&&y.push($)}),y.length===0)return{authMode:"fingerPrint",errCode:90003,errMsg:"startSoterAuthentication:fail no corresponding mode"};let j=[];if(y.map(($,me)=>{sp({checkAuthMode:$}).isEnrolled&&j.push($)}),j.length===0)return{authMode:y[0],errCode:90011,errMsg:`startSoterAuthentication:fail no ${y[0]} enrolled`};let N=j[0];N==="fingerPrint"?(c.os.name.toLowerCase()==="android"&&(c.nativeUI.showWaiting(n||d("uni.startSoterAuthentication.authContent")).onclose=function(){c.fingerprint.cancel()}),c.fingerprint.authenticate(()=>{c.nativeUI.closeWaiting(),r({authMode:N,errCode:0})},$=>{let me={authMode:N};switch($.code){case $.AUTHENTICATE_MISMATCH:break;case $.AUTHENTICATE_OVERLIMIT:c.nativeUI.closeWaiting(),s("authenticate freeze. please try again later",ee.extend(me,{errCode:90010}));break;case $.CANCEL:c.nativeUI.closeWaiting(),s("cancel",ee.extend(me,{errCode:90008}));break;default:c.nativeUI.closeWaiting(),s("",ee.extend(me,{errCode:90007}));break}},{message:n})):N==="facial"&&ma("faceID").authenticate({message:n},me=>{let Te={authMode:N};if(me.type==="success"&&me.code===0)r({authMode:N,errCode:0});else switch(me.code){case 4:s("",ee.extend(Te,{errCode:90009}));break;case 5:s("authenticate freeze. please try again later",ee.extend(Te,{errCode:90010}));break;case 6:s("",ee.extend(Te,{errCode:90008}));break;default:s("",ee.extend(Te,{errCode:90007}));break}})},e0,Qb),tC=ke(t0,(e,{resolve:t,reject:n})=>{Bo();let{t:r}=Z(),d=Wh()!=="light",g,y=!1,j=Os({url:"__uniappscan",data:Object.assign({},e,{messages:{fail:r("uni.scanCode.fail"),"flash.on":r("uni.scanCode.flash.on"),"flash.off":r("uni.scanCode.flash.off")}}),style:{animationType:e.animationType||"pop-in",titleNView:{autoBackButton:!0,type:"float",titleText:e.titleText||r("uni.scanCode.title"),titleColor:"#ffffff",backgroundColor:"rgba(0,0,0,0)",buttons:e.onlyFromCamera?[]:[{text:e.albumText||r("uni.scanCode.album"),fontSize:"17px",width:"60px",onclick:()=>{j.sendMessage({type:"gallery"})}}]},popGesture:"close",background:"#000000",backButtonAutoControl:"close"},onMessage({event:N,detail:$}){g=$,y=N==="marked"},onClose(){d&&c.navigator.setStatusBarStyle("dark"),g?y?(delete g.message,t(g)):n(g.message):n("cancel")}});d&&(c.navigator.setStatusBarStyle("light"),j.webview.addEventListener("popGesture",({type:N,result:$})=>{N==="start"?c.navigator.setStatusBarStyle("dark"):N==="end"&&!$&&c.navigator.setStatusBarStyle("light")}))},n0,i0),nC=Nn(se.ON_THEME_CHANGE,()=>{bt.on(se.ON_THEME_CHANGE,e=>{bt.invokeOnCallback(se.ON_THEME_CHANGE,e)})}),rC=ke(zb,(e,{resolve:t})=>{let n=c.screen.getBrightness(!1);t({value:n})}),iC=ke(Wb,(e,{resolve:t})=>{c.screen.setBrightness(e.value,!1),t()}),oC=ke(Gb,(e,{resolve:t})=>{c.device.setWakelock(!!e.keepScreenOn),t()}),aC=Mt(o0,()=>{let{getSystemSetting:e}=v.requireModule("plus"),t=e();try{typeof t=="string"&&(t=JSON.parse(t))}catch(n){}return t}),lp=Mt(a0,()=>{let{getAppAuthorizeSetting:e}=v.requireModule("plus"),t=e();try{typeof t=="string"&&(t=JSON.parse(t))}catch(n){}for(let n in t)ee.hasOwn(t,n)&&t[n]==="undefined"&&(t[n]=void 0);return t}),sC=ke(s0,(e,{resolve:t,reject:n})=>{let{openAppAuthorizeSetting:r}=v.requireModule("plus");r(d=>{d.type==="success"?t():n()})}),lC=ke(q0,(e,{resolve:t,reject:n})=>{let r=ni+"/download/";c.io.getImageInfo(ee.extend(e,{savePath:r,filename:r,success:Hl(t),fail:Cr(n)}))},J0,K0),cC=ke(ty,(e,{resolve:t,reject:n})=>{c.io.getVideoInfo({filePath:e.src,success:r=>{t({orientation:r.orientation,type:r.type,duration:r.duration,size:r.size,height:r.height,width:r.width,fps:r.fps||30,bitrate:r.bitrate})},fail:Cr(n)})},ry,ny),uC=ke(Z0,({current:e=0,indicator:t="number",loop:n=!1,urls:r,longPressActions:s},{resolve:d,reject:g})=>{$a();let{t:y}=Z();r=r.map(N=>wt(N));let j=Number(e);isNaN(j)?(e=r.indexOf(wt(e)),e=e<0?0:e):e=j,c.nativeUI.previewImage(r,{current:e,indicator:t,loop:n,onLongPress:function(N){let $=[],me="",Te=s&&ee.isPlainObject(s);Te?($=s.itemList?s.itemList:[],me=s.itemColor?s.itemColor:"#000000"):($=[y("uni.previewImage.button.save")],me="#000000");let Ve={buttons:$.map(yt=>({title:yt,color:me})),cancel:y("uni.previewImage.cancel")};c.nativeUI.actionSheet(Ve,yt=>{if(yt.index>0){if(Te){ee.isFunction(s.success)&&s.success({tapIndex:yt.index-1,index:N.index});return}c.gallery.save(N.url,()=>{c.nativeUI.toast(y("uni.previewImage.save.success"))},function(){c.nativeUI.toast(y("uni.previewImage.save.fail"))})}else Te&&ee.isFunction(s.fail)&&s.fail({errMsg:"showActionSheet:fail cancel"})})}}),d()},Q0,X0),fC=ke(ey,(e,{resolve:t,reject:n})=>{try{c.nativeUI.closePreviewImage(),t()}catch(r){n()}}),Ff,Sc=!1,Lf,Cc=(e,t={})=>{dC(ee.extend({state:e},t))},au={start({duration:e=6e4,sampleRate:t,numberOfChannels:n,encodeBitRate:r,format:s="mp3",frameSize:d}={}){if(Sc)return Cc("start");Ff=c.audio.getRecorder(),Ff.record({format:s,samplerate:t?String(t):"",filename:ni+"/recorder/"},g=>Cc("stop",{tempFilePath:g}),g=>Cc("error",{errMsg:g.message})),Lf=B(()=>{au.stop()},e),Cc("start"),Sc=!0},stop(){Sc&&(Ff.stop(),Sc=!1,Lf&&S(Lf))},pause(){Sc&&Cc("error",{errMsg:"Unsupported operation: pause"})},resume(){Sc&&Cc("error",{errMsg:"Unsupported operation: resume"})}},jl={pause:null,resume:null,start:null,stop:null,error:null};function dC(e){let t=e.state;delete e.state,delete e.errMsg,t&&ee.isFunction(jl[t])&&jl[t](e)}class hC{constructor(){}onError(t){jl.error=t}onFrameRecorded(t){}onInterruptionBegin(t){}onInterruptionEnd(t){}onPause(t){jl.pause=t}onResume(t){jl.resume=t}onStart(t){jl.start=t}onStop(t){jl.stop=t}pause(){au.pause()}resume(){au.resume()}start(t={}){au.start(t)}stop(){au.stop()}}let cp,pC=Mt(uy,()=>cp||(cp=new hC)),gC=ke(sy,(e,{resolve:t,reject:n})=>{c.gallery.save(e.filePath,Hl(t),Cr(n))},cy,ly),vC=ke(iy,(e,{resolve:t,reject:n})=>{c.gallery.save(e.filePath,Hl(t),Cr(n))},ay,oy),mC=ke(fy,(e,{resolve:t,reject:n})=>{let r=`${ni}/compressed/${Date.now()}_${Ta(e.src)}`;c.zip.compressImage(ee.extend({},e,{dst:r}),()=>{t({tempFilePath:r})},n)},hy,dy),_C=ke(py,(e,{resolve:t,reject:n})=>{let r=`${ni}/compressed/${Date.now()}_${Ta(e.src)}`;c.zip.compressVideo(ee.extend({},e,{filename:r}),()=>{t({tempFilePath:r})},n)},vy,gy);function bC(e){return new Promise((t,n)=>{c.io.resolveLocalFileSystemURL(e,function(r){r.getMetadata(t,n,!1)},n)})}let yC=ke(H0,({count:e,sizeType:t,sourceType:n,crop:r}={},{resolve:s,reject:d})=>{yr();let{t:g}=Z(),y=Cr(d);function j(me){let Te=[],Ve=[];Promise.all(me.map(yt=>bC(yt))).then(yt=>{yt.forEach((Nt,sn)=>{let $t=me[sn];Ve.push($t),Te.push({path:$t,size:Nt.size})}),s({tempFilePaths:Ve,tempFiles:Te})}).catch(y)}function N(){c.camera.getCamera().captureImage(Te=>j([Te]),y,{filename:ni+"/camera/",resolution:"high",crop:r,sizeType:t})}function $(){c.gallery.pick(({files:me})=>j(me),y,{maximum:e,multiple:!0,system:!1,filename:ni+"/gallery/",permissionAlert:!0,crop:r,sizeType:t})}if(n.length===1){if(n.includes("album")){$();return}else if(n.includes("camera")){N();return}}c.nativeUI.actionSheet({cancel:g("uni.chooseImage.cancel"),buttons:[{title:g("uni.chooseImage.sourceType.camera")},{title:g("uni.chooseImage.sourceType.album")}]},me=>{switch(me.index){case 1:N();break;case 2:$();break;default:y();break}})},z0,j0),EC=ke(W0,({sourceType:e,compressed:t,maxDuration:n,camera:r},{resolve:s,reject:d})=>{Kn();let{t:g}=Z(),y=Cr(d);function j(me){c.io.getVideoInfo({filePath:me,success(Te){let Ve={errMsg:"chooseVideo:ok",tempFilePath:me,size:Te.size,duration:Te.duration,width:Te.width,height:Te.height};s(Ve)},fail:y})}function N(){c.gallery.pick(({files:me})=>j(me[0]),y,{filter:"video",system:!1,multiple:!0,maximum:1,filename:ni+"/gallery/",permissionAlert:!0,videoCompress:t})}function $(){c.camera.getCamera().startVideoCapture(j,y,{index:r==="front"?"2":"1",videoMaximumDuration:n,filename:ni+"/camera/",videoCompress:t})}if(e.length===1){if(e.includes("album")){N();return}else if(e.includes("camera")){$();return}}c.nativeUI.actionSheet({cancel:g("uni.chooseVideo.cancel"),buttons:[{title:g("uni.chooseVideo.sourceType.camera")},{title:g("uni.chooseVideo.sourceType.album")}]},me=>{switch(me.index){case 1:$();break;case 2:N();break;default:y();break}})},Y0,G0),wC=ke(x0,(e,{resolve:t})=>{c.key.showSoftKeybord(),t()}),SC=ke(R0,(e,{resolve:t})=>{c.key.hideSoftKeybord(),t()});function up(e){bt.invokeOnCallback(se.ON_KEYBOARD_HEIGHT_CHANGE,e)}let CC=Nn(se.ON_KEYBOARD_HEIGHT_CHANGE,()=>{bt.on(se.ON_KEYBOARD_HEIGHT_CHANGE,up)}),AC=dr(se.ON_KEYBOARD_HEIGHT_CHANGE,()=>{bt.off(se.ON_KEYBOARD_HEIGHT_CHANGE,up)});class OC{constructor(t){this._callbacks=[],this._downloader=t,t.addEventListener("statechanged",(n,r)=>{n.downloadedSize&&n.totalSize&&this._callbacks.forEach(s=>{s({progress:Math.round(n.downloadedSize/n.totalSize*100),totalBytesWritten:n.downloadedSize,totalBytesExpectedToWrite:n.totalSize})})})}abort(){this._downloader.abort()}onProgressUpdate(t){!ee.isFunction(t)||this._callbacks.push(t)}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}onHeadersReceived(t){throw new Error("Method not implemented.")}offHeadersReceived(t){throw new Error("Method not implemented.")}}let TC=No(Ty,({url:e,header:t,timeout:n},{resolve:r,reject:s})=>{n=(n||P.networkTimeout&&P.networkTimeout.request||60*1e3)/1e3;let d=c.downloader.createDownload(e,{timeout:n,filename:ni+"/download/",retry:0,retryInterval:0},(y,j)=>{j?r({tempFilePath:y.filename,statusCode:j}):s(`statusCode: ${j}`)}),g=new OC(d);for(let y in t)ee.hasOwn(t,y)&&d.setRequestHeader(y,t[y]);return d.start(),g},Iy,Py),PC=e=>{let t=e["Set-Cookie"]||e["set-cookie"],n=[];if(!t)return[];t[0]==="["&&t[t.length-1]==="]"&&(t=t.slice(1,-1));let r=t.split(";");for(let s=0;s<r.length;s++)r[s].indexOf("Expires=")!==-1||r[s].indexOf("expires=")!==-1?n.push(r[s].replace(",","")):n.push(r[s]);return n=n.join(";").split(","),n};function IC(e,t){if(ee.isString(e.data)&&e.data.charCodeAt(0)===65279&&(e.data=e.data.slice(1)),e.statusCode=parseInt(String(e.statusCode),10),ee.isPlainObject(e.header)&&(e.header=Object.keys(e.header).reduce(function(n,r){let s=e.header[r];return ee.isArray(s)?n[r]=s.join(","):ee.isString(s)&&(n[r]=s),n},{})),t.dataType&&t.dataType.toLowerCase()==="json")try{e.data=JSON.parse(e.data)}catch(n){}return e}class NC{constructor(t){this._requestTask=t}abort(){this._requestTask.abort()}offHeadersReceived(){}onHeadersReceived(){}}let kC=No(my,(e,{resolve:t,reject:n})=>{let{header:r,method:s,data:d,timeout:g,url:y,responseType:j,sslVerify:N,firstIpv4:$,tls:me}=e,Te;for(let mt in r)if(mt.toLowerCase()==="content-type"){Te=r[mt];break}s!=="GET"&&Te.indexOf("application/json")===0&&ee.isPlainObject(d)&&(d=JSON.stringify(d));let Ve=ma("stream"),yt={},Nt,sn,$t=!1;for(let mt in r)if(!$t&&mt.toLowerCase()==="content-type"){if($t=!0,yt["Content-Type"]=r[mt],s!=="GET"&&r[mt].indexOf("application/x-www-form-urlencoded")===0&&!ee.isString(d)&&!(d instanceof ArrayBuffer)){let bn=[];for(let ln in d)ee.hasOwn(d,ln)&&bn.push(encodeURIComponent(ln)+"="+encodeURIComponent(d[ln]));d=bn.join("&")}}else yt[mt]=r[mt];!$t&&s==="POST"&&(yt["Content-Type"]="application/x-www-form-urlencoded; charset=UTF-8"),g&&(Nt=B(()=>{sn=!0,n("timeout")},g+200));let Fn={method:s,url:y.trim(),headers:yt,type:j==="arraybuffer"?"base64":"text",timeout:g||6e5,sslVerify:!N,firstIpv4:$,tls:me},jn=!1;s!=="GET"&&(toString.call(d)==="[object ArrayBuffer]"?jn=!0:Fn.body=ee.isString(d)?d:JSON.stringify(d));let fn=({ok:mt,status:bn,data:ln,headers:Yt,errorMsg:wn})=>{if(sn)return;Nt&&S(Nt);let Ar=bn;if(Ar>0)t(IC({data:mt&&j==="arraybuffer"?Fi(ln):ln,statusCode:Ar,header:Yt,cookies:PC(Yt)},e));else{let qt="abort statusCode:"+Ar;wn&&(qt=qt+" "+wn),n(qt)}};return jn?Ve.fetchWithArrayBuffer({"@type":"binary",base64:Xr(d)},Fn,fn):Ve.fetch(Fn,fn),new NC({abort(){sn=!0,Nt&&S(Nt),n("abort")}})},wy,Sy),RC=ke(Cy,({certificates:e},{resolve:t,reject:n})=>{ma("stream").configMTLS(e,({type:s,code:d,message:g})=>{switch(s){case"success":t({code:d});break;case"fail":n(g,{code:d});break}})},Ay,Oy),Ac=[],Oc={},Vf={open:"",close:"",error:"",message:""},su;function xC(e){let t=String(Date.now()),n;try{su||(su=ma("uni-webSocket"),BC(su)),su.WebSocket({id:t,url:e.url,protocol:ee.isArray(e.protocols)?e.protocols.join(","):e.protocols,header:e.header})}catch(r){n=r}return{socket:su,socketId:t,errMsg:n}}function BC(e){e.onopen(t=>{let n=Oc[t.id];!n||n._socketOnOpen()}),e.onmessage(t=>{let n=Oc[t.id];!n||n._socketOnMessage(t)}),e.onerror(t=>{let n=Oc[t.id];!n||n._socketOnError()}),e.onclose(t=>{let n=Oc[t.id];!n||n._socketOnClose()})}class MC{constructor(t,n){this.id=n,this._socket=t,this._callbacks={open:[],close:[],error:[],message:[]},this.CLOSED=3,this.CLOSING=2,this.CONNECTING=0,this.OPEN=1,this.readyState=this.CLOSED,!!this._socket}_socketOnOpen(){this.readyState=this.OPEN,this.socketStateChange("open")}_socketOnMessage(t){this.socketStateChange("message",{data:typeof t.data=="object"?Fi(t.data.base64):t.data})}_socketOnError(){this.socketStateChange("error"),this.onErrorOrClose()}_socketOnClose(){this.socketStateChange("close"),this.onErrorOrClose()}onErrorOrClose(){this.readyState=this.CLOSED,delete Oc[this.id];let t=Ac.indexOf(this);t>=0&&Ac.splice(t,1)}socketStateChange(t,n={}){let r=t==="message"?n:{};this===Ac[0]&&Vf[t]&&bt.invokeOnCallback(Vf[t],r),this._callbacks[t].forEach(s=>{ee.isFunction(s)&&s(r)})}send(t,n=!0){this.readyState!==this.OPEN&&se.callOptions(t,"sendSocketMessage:fail WebSocket is not connected");try{this._socket.send({id:this.id,data:typeof t.data=="object"?{"@type":"binary",base64:Xr(t.data)}:t.data}),n&&se.callOptions(t,"sendSocketMessage:ok")}catch(r){n&&se.callOptions(t,`sendSocketMessage:fail ${r}`)}}close(t,n=!0){this.readyState=this.CLOSING;try{this._socket.close(ee.extend({id:this.id,args:t})),n&&se.callOptions(t,"closeSocket:ok")}catch(r){n&&se.callOptions(t,`closeSocket:fail ${r}`)}}onOpen(t){this._callbacks.open.push(t)}onClose(t){this._callbacks.close.push(t)}onError(t){this._callbacks.error.push(t)}onMessage(t){this._callbacks.message.push(t)}}let DC=No(xy,({url:e,protocols:t,header:n,method:r},{resolve:s,reject:d})=>{let{socket:g,socketId:y,errMsg:j}=xC({url:e,protocols:t,header:n,method:r}),N=new MC(g,y);return j?B(()=>{d(j)},0):(Ac.push(N),Oc[y]=N),B(()=>{s()},0),N},My,By),FC=ke(Dy,(e,{resolve:t,reject:n})=>{let r=Ac[0];if(!r||r.readyState!==r.OPEN){n("WebSocket is not connected");return}r.send({data:e.data},!1),t()},Fy),LC=ke(Ly,(e,{resolve:t,reject:n})=>{let r=Ac[0];if(!r){n("WebSocket is not connected");return}r.readyState=r.CLOSING,r.close(e,!1),t()},Vy);function Ru(e){let t=`onSocket${ee.capitalize(e)}`;return Nn(t,()=>{Vf[e]=t})}let VC=Ru("open"),$C=Ru("error"),UC=Ru("message"),HC=Ru("close");class jC{constructor(t){this._callbacks=[],this._uploader=t,t.addEventListener("statechanged",(n,r)=>{n.uploadedSize&&n.totalSize&&this._callbacks.forEach(s=>{s({progress:parseInt(String(n.uploadedSize/n.totalSize*100)),totalBytesSent:n.uploadedSize,totalBytesExpectedToSend:n.totalSize})})})}abort(){this._uploader.abort()}onProgressUpdate(t){!ee.isFunction(t)||this._callbacks.push(t)}onHeadersReceived(){}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}offHeadersReceived(){}}let zC=No(Ny,({url:e,timeout:t,header:n,formData:r,files:s,filePath:d,name:g},{resolve:y,reject:j})=>{let N=c.uploader.createUpload(e,{timeout:t,retry:0,retryInterval:0},(me,Te)=>{Te?y({data:me.responseText,statusCode:Te}):j(`statusCode: ${Te}`)});for(let me in n)ee.hasOwn(n,me)&&N.setRequestHeader(me,String(n[me]));for(let me in r)ee.hasOwn(r,me)&&N.addData(me,String(r[me]));s&&s.length?s.forEach(me=>{N.addFile(wt(me.uri),{key:me.name||"file"})}):N.addFile(wt(d),{key:g});let $=new jC(N);return N.start(),$},Ry,ky),wl={},WC=["play","canplay","ended","stop","waiting","seeking","seeked","pause"],fp="playback",GC=e=>{let t=wl[e];!t||t.initStateChage||(t.initStateChage=!0,t.addEventListener("error",n=>{dp({state:"error",audioId:e,errMsg:"MediaError",errCode:n.code})}),WC.forEach(n=>{t.addEventListener(n,()=>{n==="play"?t.isStopped=!1:n==="stop"&&(t.isStopped=!0),dp({state:n,audioId:e})})}))};function YC(){let e=`${Date.now()}${Math.random()}`,t=wl[e]=c.audio.createPlayer("");return t.src="",t.volume=1,t.startTime=0,t.setSessionCategory(fp),{errMsg:"createAudioInstance:ok",audioId:e}}function qC({audioId:e,src:t,startTime:n,autoplay:r=!1,loop:s=!1,obeyMuteSwitch:d,volume:g,sessionCategory:y=fp,playbackRate:j}){let N=wl[e];if(N){let $={loop:s,autoplay:r};if(t){let me=wt(t);N.src!==me&&(N.src=$.src=me)}n&&(N.startTime=$.startTime=n),typeof g=="number"&&(N.volume=$.volume=g),N.setStyles($),y&&N.setSessionCategory(y),j&&N.playbackRate&&N.playbackRate(j),GC(e)}return{errMsg:"setAudioState:ok"}}function KC({audioId:e}){let t=wl[e];if(!t)return{errMsg:"getAudioState:fail"};let{src:n,startTime:r,volume:s}=t;return{errMsg:"getAudioState:ok",duration:1e3*(t.getDuration()||0),currentTime:t.isStopped?0:1e3*t.getPosition(),paused:t.isPaused(),src:n,volume:s,startTime:1e3*r,buffered:1e3*t.getBuffered()}}function JC({operationType:e,audioId:t,currentTime:n}){let r=wl[t];switch(e){case"play":case"pause":case"stop":r[e==="play"&&r.isPaused()?"resume":e]();break;case"seek":typeof n!="undefined"&&r.seekTo(n/1e3);break}return{errMsg:"operateAudio:ok"}}let $f=Object.create(null),dp=({state:e,audioId:t,errMsg:n,errCode:r})=>{let s=$f[t];if(s)if(hp(s,e,n,r),e==="play"){let d=s.currentTime;s.__timing=k(()=>{s.currentTime!==d&&hp(s,"timeUpdate")},200)}else(e==="pause"||e==="stop"||e==="error")&&u(s.__timing)},ZC=[{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"autoplay",default:!1,cache:!0},{name:"loop",default:!1,cache:!0},{name:"obeyMuteSwitch",default:!0,readonly:!0,cache:!0},{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"buffered",readonly:!0},{name:"volume"},{name:"playbackRate",cache:!0}];class Uf{constructor(t){this.id=t,this._callbacks={},this._options={},ah.forEach(n=>{this._callbacks[n]=[]}),ZC.forEach(n=>{let r=n.name;Object.defineProperty(this,r,{get:()=>{let s=n.cache?this._options:KC({audioId:this.id}),d=r in s?s[r]:n.default;return typeof d=="number"&&r!=="volume"?d/1e3:d},set:n.readonly?void 0:s=>{this._options[r]=s,qC(ee.extend({},this._options,{audioId:this.id}))}})}),XC()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t*1e3})}destroy(){u(this.__timing),wl[this.id]&&(wl[this.id].close(),delete wl[this.id]),delete $f[this.id]}_operate(t,n){JC(ee.extend({},n,{audioId:this.id,operationType:t}))}}let XC=se.once(()=>{ah.forEach(e=>{Uf.prototype[e]=function(t){ee.isFunction(t)&&this._callbacks[e].push(t)}}),a_.forEach(e=>{Uf.prototype[e]=function(t){let n=this._callbacks[e],r=n.indexOf(t);r>=0&&n.splice(r,1)}})});function hp(e,t,n,r){let s=`on${ee.capitalize(t)}`;e._callbacks[s].forEach(d=>{ee.isFunction(d)&&d(t==="error"?{errMsg:n,errCode:r}:{})})}let QC=Mt(Mm,()=>{let{audioId:e}=YC(),t=new Uf(e);return $f[e]=t,t}),eA=["canplay","play","pause","stop","ended","timeUpdate","prev","next","error","waiting"],pp={canplay:[],play:[],pause:[],stop:[],ended:[],timeUpdate:[],prev:[],next:[],error:[],waiting:[]},tn,Hf=null,tA=250,nA=["play","pause","ended","stop","canplay"];function rA(){xu(),Hf=k(()=>{Tc({state:"timeUpdate"})},tA)}function xu(){Hf!==null&&u(Hf)}function iA(){if(tn)return;let e=bt.invokeOnCallback;tn=c.audio.createPlayer({autoplay:!0,backgroundControl:!0}),tn.src=tn.title=tn.epname=tn.singer=tn.coverImgUrl=tn.webUrl="",tn.startTime=0,nA.forEach(t=>{tn.addEventListener(t,()=>{t==="play"?(tn.isStopped=!1,rA()):t==="stop"&&(tn.isStopped=!0),(t==="pause"||t==="ended"||t==="stop")&&xu();let n=`onMusic${t[0].toUpperCase()+t.slice(1)}`;e(n,{dataUrl:tn.src,errMsg:`${n}:ok`}),Tc({state:t,dataUrl:tn.src})})}),tn.addEventListener("waiting",()=>{xu(),Tc({state:"waiting",dataUrl:tn.src})}),tn.addEventListener("error",t=>{xu(),e("onMusicError",{dataUrl:tn.src,errMsg:"Error:"+t.message}),Tc({state:"error",dataUrl:tn.src,errMsg:t.message,errCode:t.code})}),tn.addEventListener("prev",()=>{Tc({state:"prev"})}),tn.addEventListener("next",()=>{Tc({state:"next"})})}function oA(){let e={duration:0,currentTime:0,paused:!1,src:"",buffered:0,title:"",epname:"",singer:"",coverImgUrl:"",webUrl:"",startTime:0,errMsg:"getBackgroundAudioState:ok"};if(tn){let t={duration:tn.getDuration()||0,currentTime:tn.isStopped?0:tn.getPosition(),paused:tn.isPaused(),src:tn.src,buffered:tn.getBuffered(),title:tn.title,epname:tn.epname,singer:tn.singer,coverImgUrl:tn.coverImgUrl,webUrl:tn.webUrl,startTime:tn.startTime};e=ee.extend(e,t)}return e}function gp(e,t){iA();let n=["src","startTime","coverImgUrl","webUrl","singer","epname","title"];if(t==="playbackRate"){let s=e[t];tn.playbackRate&&tn.playbackRate(parseFloat(s));return}let r={};Object.keys(e).forEach(s=>{if(n.indexOf(s)>=0){let d=e[s];s===n[0]&&d&&(d=wt(d)),tn[s]=r[s]=d}}),tn.setStyles(r)}function aA({operationType:e,src:t,position:n,api:r="operateMusicPlayer",title:s,coverImgUrl:d}){var g=["resume","pause","stop"];return g.indexOf(e)>0?tn&&tn[e]():e==="play"?(gp({src:t,startTime:n,title:s,coverImgUrl:d}),tn.play()):e==="seek"&&tn&&tn.seekTo(n),{errMsg:`${r}:ok`}}function sA({operationType:e,src:t,startTime:n,currentTime:r}){return aA({operationType:e,src:t,position:n||r||0,api:"operateBackgroundAudio"})}function Tc({state:e,errMsg:t,errCode:n,dataUrl:r}){pp[e].forEach(s=>{ee.isFunction(s)&&s(e==="error"?{errMsg:t,errCode:n}:{})})}let lA=se.once(()=>{eA.forEach(e=>{vp.prototype[`on${ee.capitalize(e)}`]=function(t){pp[e].push(t)}})}),cA=[{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"buffered",readonly:!0},{name:"title",cache:!0},{name:"epname",cache:!0},{name:"singer",cache:!0},{name:"coverImgUrl",cache:!0},{name:"webUrl",cache:!0},{name:"protocol",readonly:!0,default:"http"},{name:"playbackRate",default:1,cache:!0}];class vp{constructor(){this._options={},cA.forEach(t=>{let n=t.name;Object.defineProperty(this,n,{get:()=>{let r=t.cache?this._options:oA();return n in r?r[n]:t.default},set:t.readonly?void 0:r=>{this._options[n]=r,gp(this._options,n)}})}),lA()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t})}_operate(t,n){sA(ee.extend({},n,{operationType:t}))}}let mp,uA=Mt(eb,()=>mp||(mp=new vp));class fA{constructor(t,n){this.id=t,this.ctx=n}start(t){return Gt(this.ctx,"start",t)}stop(t){return Gt(this.ctx,"stop",t)}pause(t){return Gt(this.ctx,"pause",t)}resume(t){return Gt(this.ctx,"resume",t)}switchCamera(t){return Gt(this.ctx,"switchCamera",t)}snapshot(t){return Gt(this.ctx,"snapshot",t)}toggleTorch(t){return Gt(this.ctx,"toggleTorch",t)}playBGM(t){return Jn(this.ctx,"playBGM",t)}stopBGM(t){return Gt(this.ctx,"stopBGM",t)}pauseBGM(t){return Gt(this.ctx,"pauseBGM",t)}resumeBGM(t){return Gt(this.ctx,"resumeBGM",t)}setBGMVolume(t){return Jn(this.ctx,"setBGMVolume",t)}startPreview(t){return Gt(this.ctx,"startPreview",t)}stopPreview(t){return Gt(this.ctx,"stopPreview",t)}}function Sl(e,t,n,r){bt.invokeViewMethod("livepusher."+e,{livePusherId:e,type:n,data:r},t)}class dA{constructor(t,n){this.id=t,this.pageId=n}start(){Sl(this.id,this.pageId,"start")}stop(){Sl(this.id,this.pageId,"stop")}pause(){Sl(this.id,this.pageId,"pause")}resume(){Sl(this.id,this.pageId,"resume")}switchCamera(){Sl(this.id,this.pageId,"switchCamera")}startPreview(){Sl(this.id,this.pageId,"preview")}stopPreview(){Sl(this.id,this.pageId,"stop")}snapshot(){Sl(this.id,this.pageId,"snapshot")}}let hA=Mt(Dm,(e,t)=>{if(t.$page.meta.isNVue){if(!t)return console.warn("uni.createLivePusherContext: 2 arguments required, but only 1 present");let n=Wa(e,t);return n?new fA(e,n):console.warn("Can not find `"+e+"`")}return new dA(e,t.$page.id)},Fm),Gi=3.141592653589793,Bu=6378245,Mu=.006693421622965943;function pA(e,t){if(t=+t,e=+e,_p(e,t))return[e,t];let n=bp(e-105,t-35),r=yp(e-105,t-35),s=t/180*Gi,d=Math.sin(s);d=1-Mu*d*d;let g=Math.sqrt(d);n=n*180/(Bu*(1-Mu)/(d*g)*Gi),r=r*180/(Bu/g*Math.cos(s)*Gi);let y=t+n,j=e+r;return[e*2-j,t*2-y]}function gA(e,t){if(t=+t,e=+e,_p(e,t))return[e,t];let n=bp(e-105,t-35),r=yp(e-105,t-35),s=t/180*Gi,d=Math.sin(s);d=1-Mu*d*d;let g=Math.sqrt(d);n=n*180/(Bu*(1-Mu)/(d*g)*Gi),r=r*180/(Bu/g*Math.cos(s)*Gi);let y=t+n;return[e+r,y]}let _p=function(e,t){return e<72.004||e>137.8347||t<.8293||t>55.8271||!1},bp=function(e,t){let n=-100+2*e+3*t+.2*t*t+.1*e*t+.2*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*Gi)+20*Math.sin(2*e*Gi))*2/3,n+=(20*Math.sin(t*Gi)+40*Math.sin(t/3*Gi))*2/3,n+=(160*Math.sin(t/12*Gi)+320*Math.sin(t*Gi/30))*2/3,n},yp=function(e,t){let n=300+e+2*t+.1*e*e+.1*e*t+.1*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*Gi)+20*Math.sin(2*e*Gi))*2/3,n+=(20*Math.sin(e*Gi)+40*Math.sin(e/3*Gi))*2/3,n+=(150*Math.sin(e/12*Gi)+300*Math.sin(e/30*Gi))*2/3,n};function Ep(e,t,n){let r=t.coords;if(e!==t.coordsType){let s;e==="wgs84"?s=pA(r.longitude,r.latitude):e==="gcj02"&&(s=gA(r.longitude,r.latitude)),s&&(r.longitude=s[0],r.latitude=s[1])}n({type:e,altitude:r.altitude||0,latitude:r.latitude,longitude:r.longitude,speed:r.speed,accuracy:r.accuracy,address:t.address,errMsg:"getLocation:ok"})}let vA=ke(D0,({type:e="wgs84",geocode:t=!1,altitude:n=!1,highAccuracyExpireTime:r,isHighAccuracy:s=!1},{resolve:d,reject:g})=>{c.geolocation.getCurrentPosition(y=>{Ep(e,y,d)},y=>{if(y.code===1501){Ep(e,y,d);return}g("getLocation:fail "+y.message)},{geocode:t,enableHighAccuracy:s||n,timeout:r,coordsType:e})},L0,F0),mA=ke(B0,(e,{resolve:t,reject:n})=>{let s=Wh()!=="light",d,g=Os({url:"__uniappchooselocation",data:e,style:{animationType:e.animationType||"slide-in-bottom",titleNView:!1,popGesture:"close",scrollIndicator:"none"},onMessage({event:y,detail:j}){y==="selected"&&(d=j)},onClose(){s&&c.navigator.setStatusBarStyle("dark"),d?t(d):n("cancel")}});s&&(c.navigator.setStatusBarStyle("light"),g.webview.addEventListener("popGesture",({type:y,result:j})=>{y==="start"?c.navigator.setStatusBarStyle("dark"):y==="end"&&!j&&c.navigator.setStatusBarStyle("light")}))},M0),_A=ke(V0,(e,{resolve:t,reject:n})=>(Os({url:"__uniappopenlocation",data:e,style:{titleNView:{type:"transparent"},popGesture:"close",backButtonAutoControl:"close"},onClose(){n("cancel")}}),t()),U0,$0),bA=ke(SE,({title:e="",content:t="",showCancel:n=!0,cancelText:r,cancelColor:s,confirmText:d,confirmColor:g,editable:y=!1,placeholderText:j=""}={},{resolve:N})=>{let $=n?[r,d]:[d],me=y?j:$;t=t||" ",c.nativeUI[y?"prompt":"confirm"](t,Te=>{if(n){let Ve=Te.index===1,yt={confirm:Ve,cancel:Te.index===0||Te.index===-1};Ve&&y&&(yt.content=Te.value),N(yt)}else{let Ve={confirm:Te.index===0,cancel:!1};y&&(Ve.content=Te.value),N(Ve)}},e,me,$)},CE,AE),yA=ke(mE,({itemList:e=[],itemColor:t="#000000",title:n="",popover:r},{resolve:s,reject:d})=>{On();let{t:g}=Z(),y={title:n,cancel:g("uni.showActionSheet.cancel"),buttons:e.map(j=>({title:j,color:t}))};c.nativeUI.actionSheet(ee.extend(y,{popover:r}),j=>{j.index>0?s({tapIndex:j.index-1}):d("showActionSheet:fail cancel")})},_E,bE),lu,jf=!1,Du="",Fu,EA=ke(yE,(e,t)=>wp(ee.extend({},e,{type:"loading",icon:"loading"}),t),EE,wE),wp=({title:e="",icon:t="success",image:n="",duration:r=1500,mask:s=!1,position:d,type:g="toast",style:y},{resolve:j,reject:N})=>{if(Lu(""),Du=g,["top","center","bottom"].includes(String(d)))c.nativeUI.toast(e,{verticalAlign:d}),jf=!0;else{t&&!~["success","loading","error","none"].indexOf(t)&&(t="success");let $={modal:s,back:"transmit",padding:"10px",size:"16px"};!n&&(!t||t==="none")?$.loading={display:"none"}:($.width="140px",$.height="112px"),n?$.loading={display:"block",height:"55px",icon:n,interval:r}:["success","error"].indexOf(t)!==-1&&($.loading={display:"block",height:"55px",icon:t==="success"?"__uniappsuccess.png":"__uniapperror.png",interval:r});try{lu=c.nativeUI.showWaiting(e,ee.extend($,y))}catch(me){N(`${me}`)}}return Du==="toast"&&(Fu=B(()=>{Lu("")},r)),j()},wA=ke(OE,wp,PE,IE),SA=ke(oE,(e,t)=>Lu("toast",t)),CA=ke(iE,(e,t)=>Lu("loading",t));function Lu(e="toast",t){return e&&e!==Du||(Fu&&(S(Fu),Fu=null),jf?c.nativeUI.closeToast():lu&&lu.close&&lu.close(),lu=null,jf=!1,Du=""),t&&t.resolve()}let AA=ke(NE,(e,{resolve:t,reject:n})=>{let r=zh();if(r&&r.endPullToRefresh(),r=Nu(),!r)return n();r.beginPullToRefresh(),xf(r),t()}),OA=ke(kE,(e,{resolve:t,reject:n})=>{let r=zh()||Nu();if(!r)return n();r.endPullToRefresh(),xf(null),t()}),TA=ke(Mh,(e,{resolve:t,reject:n})=>{let r=nr(Lr());bt.invokeViewMethod(Mh,e,r,s=>{s?n(s):t()})},aE),PA=ke(Dh,(e,{resolve:t})=>{let n=nr(Lr());bt.invokeViewMethod(Dh,e,n,t)},gE,vE),IA=ke(fE,({__page__:e,title:t},{resolve:n,reject:r})=>{let s=Hh(e);if(s){let d=s.getStyle();d&&d.titleNView&&s.setStyle({titleNView:{titleText:t}}),n()}else r()},dE),NA=ke(hE,(e,{resolve:t})=>{c.nativeUI.showWaiting("",{modal:!1}),t()}),kA=ke(pE,(e,{resolve:t})=>{c.nativeUI.closeWaiting(),t()});function RA(e){let t=Ln();!t.length||(t[t.length-1].$page.statusBarStyle=e)}let xA=ke(lE,({__page__:e,frontColor:t,backgroundColor:n},{resolve:r,reject:s})=>{let d=Hh(e);if(d){let g={};t&&(g.titleColor=t),n&&(g.backgroundColor=n);let y=t==="#000000"?"dark":"light";c.navigator.setStatusBarStyle(y),RA(y);let j=d.getStyle();j&&j.titleNView&&(j.titleNView.autoBackButton&&(g.backButton=g.backButton||{},g.backButton.color=t),d.setStyle({titleNView:g})),r()}else s()},uE,cE),BA=ke(ZE,({index:e,text:t},{resolve:n,reject:r})=>{Ri.setTabBarBadge("text",e,t),n()},XE,QE),MA=ke(RE,({index:e,text:t,iconPath:n,selectedIconPath:r,pagePath:s,visible:d,iconfont:g},{resolve:y})=>{if(Ri.setTabBarItem(e,t,n,r,d,g),s){let j=P.tabBar.list[e];if(j){let N=j.pagePath,$=se.removeLeadingSlash(s);$!==N&&Ss(e,N,$)}}y()},xE,BE),DA=ke(ME,(e={},{resolve:t,reject:n})=>{if(!iu())return n("not TabBar page");let r={black:"rgba(0,0,0,0.4)",white:"rgba(255,255,255,0.4)"},s=e.borderStyle;s&&s in r&&(e.borderStyle=r[s]),Ri.setTabBarStyle(e),t()},DE,LE),FA=ke(VE,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!iu())return n("not TabBar page");Ri.hideTabBar(Boolean(r)),t()},Fh),LA=ke($E,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!iu())return n("not TabBar page");Ri.showTabBar(Boolean(r)),t()},UE),VA=ke(WE,({index:e},{resolve:t,reject:n})=>{Ri.setTabBarBadge("redDot",e),t()},GE,YE),Sp=e=>Ri.setTabBarBadge("none",e),$A=ke(qE,({index:e},{resolve:t,reject:n})=>{Sp(e),t()},KE,JE),UA=ke(HE,({index:e},{resolve:t,reject:n})=>{Sp(e),t()},jE,zE),Cp="vdSync",HA="__uniapp__service",Pc="onWebviewReady",jA=0,zA="webviewInserted",WA="webviewRemoved",Ap="UniAppSubNVue";class GA{constructor(t,n){this.callbacks=[];let r=this.webview=c.webview.getWebviewById(t);if(this.isSub=n||!1,r.__uniapp_mask_id){let s=this.maskWebview=r.__uniapp_mask_id==="0"?{setStyle({mask:g}){ma("uni-tabview").setMask({color:g})}}:c.webview.getWebviewById(r.__uniapp_mask_id),d=function(){s.setStyle({mask:"none"})};r.addEventListener("hide",d),r.addEventListener("close",d)}}show(...t){if(this.maskWebview){let n=this.webview.__uniapp_mask;this.maskWebview.setStyle({mask:n})}this.webview.show(...t)}hide(...t){this.webview.hide(...t)}setStyle(t){this.webview.setStyle(t)}initMessage(){if(this.messageReady)return;this.messageReady=!0;let t=r=>{if(r.data&&r.data.type===Ap){let s=r.data.target;s.id===this.webview.id&&s.isSub===this.isSub&&this.callbacks.forEach(d=>{d({origin:this.webview.__uniapp_host,data:r.data.data})})}};ma("globalEvent").addEventListener("plusMessage",t),this.webview.addEventListener("close",()=>{this.callbacks.length=0})}postMessage(t){c.webview.postMessageToUniNView({type:Ap,data:t,target:{id:this.webview.id,isSub:!this.isSub}},HA)}onMessage(t){this.initMessage(),this.callbacks.push(t)}}let YA=function(e,t){return new GA(e,t)},cu,Op=c.navigator.setStatusBarStyle;function qA(e){Op=e}function Tp(e){cu=e,Op(e)}c.navigator.setStatusBarStyle=Tp;function Qs(e){if(!e){let t=Fr();if(!t||(e=t.$page.statusBarStyle,!e||e===cu))return}e!==cu&&(cu=e,c.navigator.setStatusBarStyle(e))}function KA(e,t,n,r,s,d,g){c!==n&&(T=gn=e,v=t,c=n,qA(c.navigator.setStatusBarStyle),c.navigator.setStatusBarStyle=Tp,B=r,S=s,k=d,u=g),P.serviceReady=!0}function JA(){let e=["ArrayBuffer","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"],t={};for(let n=0;n<e.length;n++){let r=e[n];t[r]=global[r]}return t}let Pp={oauth(e){c.oauth.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{t=t,e(t)})},share(e){c.share.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{e(t)})},payment(e){c.payment.getChannels(t=>{let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{e(t)})},push(e){if(typeof v!="undefined"||typeof c!="undefined"){let t=c.push.getClientInfo();e(null,[t.id],[t])}else e(null,[])}},ZA=ke(ew,({service:e},{resolve:t,reject:n})=>{Pp[e]?Pp[e]((r,s=[],d=[])=>{r?n(r.message):t({service:e,provider:s,providers:d.map(g=>(typeof g.serviceReady=="boolean"&&(g.isAppExist=g.serviceReady),typeof g.nativeClient=="boolean"&&(g.isAppExist=g.nativeClient),g))})}):n("service not found")},tw),Vu;function uu(e){return new Promise((t,n)=>{c.oauth.getServices(r=>{let s=r.find(({id:d})=>d===e);s?t(s):n(new Error("provider not find"))},n)})}let Ip=ke(nw,(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",s=Cr(n),d=r==="apple",g=d?{scope:"email"}:e.univerifyStyle?{univerifyStyle:eO(e.univerifyStyle,s)}:{};uu(r).then(y=>{function j(){if(e.onlyAuthorize&&r==="weixin"){y.authorize(({code:N})=>{t({code:N,authResult:""})},s);return}y.login(N=>{let $=N.target.authResult,me=N.target.appleInfo;t({code:$.code,authResult:$,appleInfo:me})},s,g)}d||r==="univerify"?j():y.logout(j,j)}).catch(s)},rw),Np=(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",s=Cr(n);uu(r).then(d=>{d.getUserInfo(g=>{let y={nickName:""};if(r==="weixin"){let N=d.userInfo;N&&(y={openId:N.openid,nickName:N.nickname,gender:N.sex,city:N.city,province:N.province,country:N.country,avatarUrl:N.headimgurl,unionId:N.unionid})}else if(r==="apple"){let N=d.appleInfo;N&&(y={openId:N.user,fullName:N.fullName,email:N.email,authorizationCode:N.authorizationCode,identityToken:N.identityToken,realUserStatus:N.realUserStatus})}else y=d.userInfo,y&&(y.openId=y.openId||y.openid||d.authResult.openid,y.nickName=y.nickName||y.nickname,y.avatarUrl=y.avatarUrl||y.headimgurl);let j={};e.data&&e.data.api_name==="webapi_getuserinfo"?j.data={data:JSON.stringify(y),rawData:"",signature:"",encryptedData:"",iv:""}:j.userInfo=y,t(j)},s)}).catch(()=>{n("\u8BF7\u5148\u8C03\u7528 uni.login")})},XA=ke(iw,Np,ow),QA=ke(aw,Np,sw),kp=ke(lw,({provider:e},{resolve:t,reject:n})=>{let r=Hl(t),s=Cr(n);uu(e).then(d=>d.preLogin(r,s)).catch(s)},fw,uw),Rp=()=>uu("univerify").then(e=>e.closeAuthView()),xp=Mt(dw,Rp),Bp=ke(hw,(e,{resolve:t,reject:n})=>{let r=Hl(t),s=Cr(n);try{uu("univerify").then(d=>{let g=d.getCheckBoxState();r({state:g})})}catch(d){s(d)}});function eO(e,t){return ee.isPlainObject(e)&&ee.isPlainObject(e.buttons)&&ee.toTypeString(e.buttons.list)==="[object Array]"&&e.buttons.list.forEach((n,r)=>{e.buttons.list[r].onclick=function(){let s={code:"30008",message:"\u7528\u6237\u70B9\u51FB\u4E86\u81EA\u5B9A\u4E49\u6309\u94AE",index:r,provider:n.provider};ee.isPlainObject(Vu)?Vu._triggerUniverifyButtonsClick(s):Rp().then(()=>{t(s)})}}),e}class tO{constructor(){this.provider="univerify",this.eventName="api.univerifyButtonsClick"}close(){return xp()}login(t){return Ip(this._getOptions(t))}getCheckBoxState(t){return Bp(t)}preLogin(t){return kp(this._getOptions(t))}onButtonsClick(t){bt.on(this.eventName,t)}offButtonsClick(t){bt.off(this.eventName,t)}_triggerUniverifyButtonsClick(t){bt.emit(this.eventName,t)}_getOptions(t={}){return ee.extend({},t,{provider:this.provider})}}let nO=Mt(pw,()=>Vu||(Vu=new tO)),rO=ke(Sw,(e,{resolve:t,reject:n})=>{let r=lp();if(r.notificationAuthorized!=="authorized")return n("notificationAuthorized: "+r.notificationAuthorized);let s=ee.extend({},e);delete s.content,delete s.payload,c.push.createMessage(e.content,e.payload,s),t()},void 0,Cw),iO=Mt("registerRuntime",e=>{ee.extend(jsRuntime,e)}),oO={0:{name:"web",title:"\u56FE\u6587"},1:{name:"text",title:"\u7EAF\u6587\u5B57"},2:{name:"image",title:"\u7EAF\u56FE\u7247"},3:{name:"music",title:"\u97F3\u4E50"},4:{name:"video",title:"\u89C6\u9891"},5:{name:"miniProgram",title:"\u5C0F\u7A0B\u5E8F"}},aO=e=>{e.type=e.type||0;let{provider:t,type:n,title:r,summary:s,href:d,imageUrl:g,mediaUrl:y,scene:j,miniProgram:N,openCustomerServiceChat:$,corpid:me,customerUrl:Te}=e;ee.isString(g)&&g&&(g=wt(g));let Ve=oO[n];if(Ve){let yt={provider:t,type:Ve.name,title:r,content:s,href:d,pictures:[g],thumbs:g?[g]:void 0,media:y,miniProgram:N,extra:{scene:j},openCustomerServiceChat:$,corpid:me,url:Te};return t==="weixin"&&(n===1||n===2)&&delete yt.thumbs,yt}return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E"},Mp=function(e,t,n,r,s="share"){let d=Cr(r),g=t.openCustomerServiceChat?"openCustomerServiceChat":"send";try{e[g](t,()=>{n()},d)}catch(y){d({message:`${t.provider} ${g} \u65B9\u6CD5\u8C03\u7528\u5931\u8D25`})}},sO=ke(gw,(e,{resolve:t,reject:n})=>{let r=aO(e),s=Cr(n);if(ee.isString(r))return n(r);c.share.getServices(d=>{let g=d.find(({id:y})=>y===r.provider);g?g.authenticated?Mp(g,r,t,n):g.authorize(()=>Mp(g,r,t,n),s):n("service not found")},s)},mw,vw),lO=ke(_w,({type:e,imageUrl:t,summary:n,href:r},{resolve:s,reject:d})=>{let g=Cr(d);ee.isString(t)&&t&&(t=wt(t)),c.share.sendWithSystem({type:e,pictures:t?[t]:void 0,content:n,href:r},()=>s(),g)},yw,bw),cO=ke(Ew,(e,{resolve:t,reject:n})=>{let r=e.provider,s=Cr(n);c.payment.getChannels(d=>{let g=d.find(({id:y})=>y===r);g?c.payment.request(g,e.orderInfo,y=>{t(y)},s):n("service not found")},s)},ww),Dp=ep,uO=ke("navigateToMiniProgram",(e,{resolve:t,reject:n})=>{Dp("navigateToUniMP",e,r=>{if(r.errMsg&&r.errMsg.indexOf(":ok")===-1)return n(r.errMsg.split(" ")[1]);t()})}),Fp=[];function Lp(e){Fp.push(e)}let fO=Lp;function dO(e,t){Fp.forEach(n=>n(e,t))}let Qo={load:"load",close:"close",error:"error",adClicked:"adClicked"};class Vp{constructor(){this._callbacks={}}onLoad(t){this._addEventListener(Qo.load,t)}onClose(t){this._addEventListener(Qo.close,t)}onError(t){this._addEventListener(Qo.error,t)}offLoad(t){this._removeEventListener(Qo.load,t)}offClose(t){this._removeEventListener(Qo.close,t)}offError(t){this._removeEventListener(Qo.error,t)}_addEventListener(t,n){!ee.isFunction(n)||(this._callbacks[t]||(this._callbacks[t]=[]),this._callbacks[t].push(n))}_removeEventListener(t,n){let r=this._callbacks[t],s=r.indexOf(n);s>-1&&r.splice(s,1)}_dispatchEvent(t,n){this._callbacks[t].forEach(r=>{r(n||{})})}}class zf extends Vp{constructor(t,n){super();this.preload=!0,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this.preload=n.preload!==void 0?n.preload:!1;let r=this._adInstance=t;r.onLoad(()=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(Qo.load,{})}),r.onClose(s=>{this._isLoaded=!1,this._isLoading=!1,this._dispatchEvent(Qo.close,s),this.preload===!0&&this._loadAd()}),r.onError(s=>{this._isLoading=!1;let d={code:s.code,errMsg:s.message};this._dispatchEvent(Qo.error,d);let g=new Error(JSON.stringify(d));this._loadPromiseReject!=null&&(this._loadPromiseReject(g),this._loadPromiseReject=null),this._showPromiseReject!=null&&(this._showPromiseReject(g),this._showPromiseReject=null)}),r.onAdClicked&&r.onAdClicked(()=>{this._dispatchEvent(Qo.adClicked,{})})}getProvider(){return this._adInstance.getProvider()}load(){return new Promise((t,n)=>{this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading&&(this._isLoaded?t(""):this._loadAd())})}show(){return new Promise((t,n)=>{this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading&&(this._isLoaded?(this._showAd(),t("")):this._loadAd())})}destroy(){this._adInstance.destroy()}_loadAd(){this._isLoaded=!1,this._isLoading=!0,this._adInstance.load()}_showAd(){this._adInstance.show()}}class hO extends zf{constructor(t){super(c.ad.createRewardedVideoAd(t),t);this._loadAd()}}let pO=Mt(Aw,e=>new hO(e),Tw,Ow);class gO extends zf{constructor(t){super(c.ad.createFullScreenVideoAd(t),t);this.preload=!1}}let vO=Mt(Pw,e=>new gO(e),Nw,Iw);class mO extends zf{constructor(t){super(c.ad.createInterstitialAd(t),t);this.preload=!1,this._loadAd()}}let _O=Mt(kw,e=>new mO(e),xw,Rw),Qa={},zl={};function bO(e){let t=e.provider;if(Qa[t]||(Qa[t]={}),typeof Qa[t].plugin=="object"){e.success(Qa[t].plugin);return}if(zl[t]||(zl[t]=[]),zl[t].push(e),Qa[t].status===!0){e.__plugin=Qa[t].plugin;return}Qa[t].status=!0;let n=ma(t);if(!n||!n.initSDK){zl[t].forEach(r=>{r.fail({code:-1,message:"provider ["+t+"] invalid"})}),zl[t].length=0,Qa[t].status=!1;return}Qa[t].plugin=n,e.__plugin=n,n.initSDK(r=>{let s=r.code===1||r.code==="1";s?Qa[t].plugin=n:Qa[t].status=!1,zl[t].forEach(d=>{s?d.success(d.__plugin):d.fail(r)}),zl[t].length=0})}class yO extends Vp{constructor(t){super();this._adpid="",this._provider="",this._userData=null,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this._adInstance=null,this._adError="",this._adpid=t.adpid,this._provider=t.provider,this._userData=t.userData,B(()=>{this._init()})}_init(){this._adError="",bO({provider:this._provider,success:t=>{this._adInstance=t,this._userData&&this.bindUserData(this._userData),this._loadAd()},fail:t=>{this._adError=t,this._loadPromiseReject!=null&&(this._loadPromiseReject(this._createError(t)),this._loadPromiseReject=null),this._dispatchEvent(Qo.error,t)}})}getProvider(){return this._provider}load(){return new Promise((t,n)=>{if(this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?t(""):this._loadAd()}})}show(){return new Promise((t,n)=>{if(this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?(this._showAd(),t("")):this._loadAd()}})}reportExposure(){this._adInstance!==null&&this._adInstance.reportExposure()}bindUserData(t){this._adInstance!==null&&this._adInstance.bindUserData(t)}destroy(){this._adInstance!==null&&this._adInstance.destroy&&this._adInstance.destroy({adpid:this._adpid})}_loadAd(){if(this._adInstance!==null){if(this._isLoading===!0)return;this._isLoading=!0,this._adInstance.loadData({adpid:this._adpid},t=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(Qo.load,t)},t=>{this._isLoading=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(Qo.error,t)})}}_showAd(){this._adInstance!==null&&this._isLoaded===!0&&this._adInstance.show({adpid:this._adpid},()=>{this._isLoaded=!1},t=>{this._isLoaded=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(Qo.error,t)})}_createError(t){return new Error(JSON.stringify(t))}}let EO=Mt(Bw,e=>new yO(e),Dw,Mw),$p=c.os.name==="Android"&&parseInt(c.os.version)<6,wO=$p?"slide-in-right":"pop-in",$u=300,Up=$p?"slide-out-right":"pop-out",SO="_www/__uniappview.html",CO="webviewId",AO="uniMPNativeEvent",Hp;function jp(){return Hp}function OO(e){let t=e.$.appContext;Hp=ee.extend(t.app,{mountPage(n,r,s){let d=gn.createVNode(n,r);d.appContext=t,d.__page_container__=s,gn.render(d,s);let g=d.component.proxy;return g.__page_container__=s,g},unmountPage:n=>{let{__page_container__:r}=n;r&&(r.isUnmounted=!0,gn.render(null,r))}})}let el=[];function Uu(e){if(!e.$page.meta.isNVue)return el.push(e);let n=el.findIndex(r=>r.$page.id===e.$page.id);n>-1?el.splice(n,1,e):el.push(e)}function fu(e){return el.find(t=>t.$page.id===e)}function Wf(){return el}function TO(){let e=[];return el.forEach(t=>{t.$.__isTabBar?t.$.__isActive&&e.push(t):e.push(t)}),e}function PO(){let e=Fr();!e||du(e)}function du(e){let t=el.findIndex(n=>n===e);t!==-1&&(e.$page.meta.isNVue||jp().unmountPage(e),el.splice(t,1))}function IO(e,t,n){n&&t.isNVue&&(e.uniNView={path:n,defaultFontSize:P.defaultFontSize,viewport:P.viewport})}let NO=/^#[a-z0-9]{6}$/i;function zp(e){return e&&(NO.test(e)||e==="transparent")}function kO(e,t){let{backgroundColor:n}=t;!n||!zp(n)||(e.background||(e.background=n),e.backgroundColorTop||(e.backgroundColorTop=n))}function RO(e,t){e.popGesture==="hide"&&delete e.popGesture,t.isQuit&&(e.popGesture=c.os.name==="iOS"?"appback":"none")}function xO(e,t){if(!t.enablePullDownRefresh)return;let n=il(ee.extend({},c.os.name==="Android"?MO:DO,t.pullToRefresh));e.pullToRefresh=BO(n,t)}function BO(e,t){let n=Ha(e);if(!n)return e;let[r,s,d]=n;return(r||s||d)&&le.onLocaleChange(()=>{let g=c.webview.getWebviewById(t.id+"");if(!g)return;let y={support:!0};r&&(y.contentdown={caption:e.contentdown.caption}),s&&(y.contentover={caption:e.contentover.caption}),d&&(y.contentrefresh={caption:e.contentrefresh.caption}),g.setStyle({pullToRefresh:y})}),e}let MO={support:!0,style:"circle"},DO={support:!0,style:"default",height:"50px",range:"200px",contentdown:{caption:""},contentover:{caption:""},contentrefresh:{caption:""}};function FO(e,t){let{navigationBar:n}=t;if(n.style==="custom")return!1;let r=!0;t.isQuit&&(r=!1);let s={autoBackButton:r};Object.keys(n).forEach(d=>{let g=n[d];d==="backgroundColor"?s.backgroundColor=zp(g)?g:se.BACKGROUND_COLOR:d==="titleImage"&&g?s.tags=VO(g):d==="buttons"&&ee.isArray(g)?s.buttons=g.map((y,j)=>(y.onclick=$O(j),y)):s[d]=g}),e.titleNView=LO(s,t)}function LO(e,t){let n=Ua(e);if(!n)return e;let[r,s]=n;return(r||s)&&le.onLocaleChange(()=>{let d=c.webview.getWebviewById(t.id+"");if(!d)return;let g={};r&&(g.titleText=e.titleText),s&&(g.searchInput={placeholder:e.searchInput.placeholder}),d.setStyle({titleNView:g})}),e}function VO(e){return[{tag:"img",src:e,position:{left:"auto",top:"auto",width:"auto",height:"26px"}}]}function $O(e){return function(n){n.index=e,Gn(se.ON_NAVIGATION_BAR_BUTTON_TAP,n)}}function Wp(e,t,n){let r={bounce:"vertical"};return Object.keys(t).forEach(s=>{UO.indexOf(s)===-1&&(r[s]=t[s])}),n.id!=="1"&&IO(r,t,e),RO(r,t),kO(r,t),FO(r,t),xO(r,t),r}let UO=["id","route","isNVue","isQuit","isEntry","isTabBar","tabBarIndex","windowTop","topWindow","leftWindow","rightWindow","maxWidth","usingComponents","disableScroll","enablePullDownRefresh","navigationBar","pullToRefresh","onReachBottomDistance","pageOrientation","backgroundColor"],Gp=2;function Yp(){return Gp}function qp(){return Gp++}function Kp(e){return e}function Jp(e,t){let n=t?se.stringifyQuery(t,Kp):"";return{path:e.slice(1),query:n&&n.slice(1)}}function HO(e,t,n){let r=n?se.stringifyQuery(n,Kp):"";return{isTab:e,arguments:JSON.stringify({path:t.slice(1),query:r&&r.slice(1)})}}function jO({path:e,query:t,routeOptions:n,webviewExtras:r}){let s=qp(),d=Wp(e,n.meta,{id:s+""});return d.uniPageUrl=Jp(e,t),d.isTab=!!n.meta.isTabBar,c.webview.create("",String(s),d,ee.extend({nvue:!0,__path__:e,__query__:JSON.stringify(t)},r))}let ho;function Zp(e){ho=e}function zO(){return ho}function WO(){return(!ho||ho.__uniapp_route)&&(ho=c.webview.create(SO,String(qp()),{contentAdjust:!1})),ho}function GO(e){let{popupSubNVueWebviews:t}=e;!t||e.addEventListener("close",()=>{Object.keys(t).forEach(n=>{t[n].close("none")})})}function Xp(e){return P.realEntryPagePath&&e.$page.route===P.entryPagePath}function Qp(){P.entryPagePath=P.realEntryPagePath,delete P.realEntryPagePath,le.reLaunch({url:se.addLeadingSlash(P.entryPagePath)})}function YO(e){let t;e.addEventListener("popGesture",n=>{if(n.type==="start"){let r=Ln(),s=r[r.length-2];t=cu;let d=s&&s.$page.statusBarStyle;d&&Qs(d)}else if(n.type==="end"&&!n.result)Qs(t);else if(n.type==="end"&&n.result){let r=Ln().length,s=Fr();PO(),Qs(),s&&r===1&&Xp(s)?Qp():Gn(se.ON_SHOW)}})}function qO(e){if(e.nvue)return;let t=e.id,{subscribe:n,unsubscribe:r}=bt,s=(d,g)=>{if(t!==g)return;r(Pc,s);let y=fu(parseInt(g));y&&y.__page_container__.restore()};e.addEventListener("recovery",()=>{n(Pc,s)})}function KO(e){let{emit:t}=bt,n=function({width:r,height:s}){let g={deviceOrientation:Math.abs(c.navigator.getOrientation())===90?"landscape":"portrait",size:{windowWidth:Math.ceil(r),windowHeight:Math.ceil(s)}};t(se.ON_RESIZE,g,parseInt(e.id))};e.addEventListener("resize",se.debounce(n,50,{setTimeout:B,clearTimeout:S}))}let eg={pullToRefresh:se.ON_PULL_DOWN_REFRESH,titleNViewSearchInputChanged:se.ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED,titleNViewSearchInputConfirmed:se.ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED,titleNViewSearchInputClicked:se.ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED,titleNViewSearchInputFocusChanged:se.ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED};function JO(e){let t=parseInt(e.id);Object.keys(eg).forEach(n=>{let r=eg[n];e.addEventListener(n,s=>{r===se.ON_PULL_DOWN_REFRESH&&xf(e),Gn(t,r,s)})}),GO(e),KO(e),c.os.name==="iOS"&&(qO(e),YO(e))}function ZO(e,t,n,r){let s=Wp(t,r,e);s.uniPageUrl=Jp(t,n);let d=!!r.isTabBar;r.isNVue?s.isTab=d:s.debugRefresh=HO(d,t,n),s.locale=v.requireModule("plus").getLanguage(),e.setStyle(s)}function XO(e,t,n){(n.subNVues||[]).forEach(s=>{if(!s.path)return;let d=ws(s.style||{}),g=s.type==="navigationBar",y=s.type==="popup";d.uniNView={path:s.path.replace(".nvue",".js"),defaultFontSize:P.defaultFontSize,viewport:P.viewport};let j={__uniapp_host:t,__uniapp_origin:d.uniNView.path.split("?")[0].replace(".js",""),__uniapp_origin_id:e.id,__uniapp_origin_type:e.__uniapp_type},N;g?(d.position="dock",d.dock="top",d.top="0",d.width="100%",d.height=String(se.NAVBAR_HEIGHT+Bf()),delete d.left,delete d.right,delete d.bottom,delete d.margin):y&&(d.position="absolute",iu(t)?N=Ri:N=e,j.__uniapp_mask=d.mask||"rgba(0,0,0,0.5)",j.__uniapp_mask_id=N.id),delete d.mask;let $=c.webview.create("",s.id,d,j);if(y){N.popupSubNVueWebviews||(N.popupSubNVueWebviews={}),N.popupSubNVueWebviews[$.id]=$;let me=function(){N.setStyle({mask:"none"}),$.hide("auto")};N.addEventListener("maskClick",me);let Te=!1;$.addEventListener("show",()=>{Te||(c.key.removeEventListener("backbutton",rr),c.key.addEventListener("backbutton",me),Te=!0)}),$.addEventListener("hide",()=>{Te&&(c.key.removeEventListener("backbutton",me),c.key.addEventListener("backbutton",rr),Te=!1)}),$.addEventListener("close",()=>{delete N.popupSubNVueWebviews[$.id],Te&&(c.key.removeEventListener("backbutton",me),c.key.addEventListener("backbutton",rr),Te=!1)})}else e.append($)})}function QO(e,t,n,r){(e.id==="1"||!r.isNVue)&&ZO(e,t,n,r),XO(e,t,r),JO(e)}function tg(e){return e.routeOptions.meta.isNVue?jO(e):Yp()===2?c.webview.getLaunchWebview():zO()}function ng(e,t){bt.once(Pc+"."+e,t)}let es=!1;function rg(e,t,n){es={path:e,nvue:ol(e).isNVue,callback:t}}function ig(e,t,n){du(e),Wl(e.$getAppWebview(),t,n)}function Hu(e,t,n=!1){if(!n&&es)return console.error(`Waiting to navigate to: ${es.path}, do not operate continuously: ${e}.`);if(P.renderer==="native")return Ln().length===0?rg(e,t,"waitForReady"):t();let r=!ho||ho&&ho.__uniapp_route,s=ho&&!ho.loaded;r||s?rg(e,t,r?"waitForCreate":"waitForReady"):t(),s&&ng(ho.id,ju)}function ju(){if(!es)return;let{callback:e}=es;return es=!1,e()}function og(){if(P.renderer==="native")return es&&es.nvue?ju():void 0;let e=WO();if(!!es){if(es.nvue)return ju();e.loaded?es.callback():ng(e.id,ju)}}function Wl(e,t,n){e[e.__preload__?"hide":"close"](t,n)}function zu(e,t,n,r,s){typeof s=="undefined"&&(s=e.nvue?0:100);let d=function(){d._called||(d._called=!0,r&&r(),og())};d._called=!1,B(()=>{let g=B(()=>{d()},n+150);e.show(t,n,()=>{d._called||S(g),d()})},s)}function eT(e,t){let n=e.children();if(!n||!n.length)return t();let r=n.find(s=>s.id.indexOf(CO)===0)||n[0];r.canBack(({canBack:s})=>{s?r.back():t()})}let tT=ke(jy,(e,{resolve:t,reject:n})=>{let r=Fr();if(!r)return n("getCurrentPages is empty");if(Gn(r,se.ON_BACK_PRESS,{from:e.from||"navigateBack"}))return t();if(le.hideToast(),le.hideLoading(),r.$page.meta.isQuit)nT();else if(Xp(r))Qp();else{let{delta:s,animationType:d,animationDuration:g}=e;rT(s,d,g)}return t()},Wy,tE),Wu=0;function nT(){zt(),Wu?Date.now()-Wu<2e3&&c.runtime.quit():(Wu=Date.now(),c.nativeUI.toast(Z().t("uni.app.quit")),B(()=>{Wu=0},2e3))}function rT(e,t,n){let r=Ln(),s=r.length,d=r[s-1];e>1&&r.slice(s-e,s-1).reverse().forEach(j=>{Wl(c.webview.getWebviewById(j.$page.id+""),"none",0)});let g=function(j){t?Wl(j,t,n||$u):d.$page.openType==="redirectTo"?Wl(j,Up,$u):Wl(j,"auto"),r.slice(s-e,s).forEach(N=>du(N)),Qs(),Gn(se.ON_SHOW)},y=c.webview.getWebviewById(d.$page.id+"");if(!d.__uniapp_webview)return g(y);eT(y,()=>{g(y)})}class iT extends se.UniNode{constructor(t,n,r=!1){super(se.NODE_TYPE_PAGE,"#page",null);this._id=1,this._created=!1,this._updating=!1,this._createActionMap=new Map,this.updateActions=[],this.dicts=[],this.nodeId=0,this.pageId=t,this.pageNode=this,this.options=n,this.isUnmounted=!1,this.createAction=[se.ACTION_TYPE_PAGE_CREATE,n],this.createdAction=[se.ACTION_TYPE_PAGE_CREATED],this.normalizeDict=this._normalizeDict.bind(this),this._update=this.update.bind(this),r&&this.setup()}_normalizeDict(t,n=!0){if(!ee.isPlainObject(t))return this.addDict(t);let r=[];return Object.keys(t).forEach(s=>{let d=[this.addDict(s)],g=t[s];n?d.push(this.addDict(g)):d.push(g),r.push(d)}),r}addDict(t){let{dicts:n}=this,r=n.indexOf(t);return r>-1?r:n.push(t)-1}onInjectHook(t){(t===se.ON_PAGE_SCROLL||t===se.ON_REACH_BOTTOM)&&!this.scrollAction&&(this.scrollAction=[se.ACTION_TYPE_PAGE_SCROLL,this.options.onReachBottomDistance],this.push(this.scrollAction))}onCreate(t,n){return sT(this,t.nodeId,n),t}onInsertBefore(t,n,r){return lT(this,n,t.nodeId,r&&r.nodeId||-1),n}onRemoveChild(t){return cT(this,t.nodeId),t}onAddEvent(t,n,r){t.parentNode&&uT(this,t.nodeId,n,r)}onAddWxsEvent(t,n,r,s){t.parentNode&&fT(this,t.nodeId,n,r,s)}onRemoveEvent(t,n){t.parentNode&&dT(this,t.nodeId,n)}onSetAttribute(t,n,r){t.parentNode&&pT(this,t.nodeId,n,r)}onRemoveAttribute(t,n){t.parentNode&&gT(this,t.nodeId,n)}onTextContent(t,n){t.parentNode&&sg(this,t.nodeId,n)}onNodeValue(t,n){t.parentNode&&sg(this,t.nodeId,n)}genId(){return this._id++}push(t,n){if(!this.isUnmounted){switch(t[0]){case se.ACTION_TYPE_CREATE:this._createActionMap.set(t[1],t);break;case se.ACTION_TYPE_INSERT:let r=this._createActionMap.get(t[1]);r?(r[3]=t[2],r[4]=t[3],n&&(r[5]=n)):(n&&(t[4]=n),this.updateActions.push(t));break}t[0]!==se.ACTION_TYPE_INSERT&&this.updateActions.push(t),this._updating||(this._updating=!0,gn.queuePostFlushCb(this._update))}}restore(){this.clear(),this.setup(),this.scrollAction&&this.push(this.scrollAction);let t=n=>{this.onCreate(n,n.nodeName),this.onInsertBefore(n.parentNode,n,null),n.childNodes.forEach(r=>{t(r)})};this.childNodes.forEach(n=>t(n)),this.push(this.createdAction)}setup(){this.send([this.createAction])}update(){let{dicts:t,updateActions:n,_createActionMap:r}=this;this._created||(this._created=!0,n.push(this.createdAction)),n.length&&(t.length&&n.unshift([jA,t]),this.send(n)),this.clear()}clear(){this.dicts.length=0,this.updateActions.length=0,this._updating=!1,this._createActionMap.clear()}send(t){bt.publishHandler(Cp,t,this.pageId)}fireEvent(t,n){let r=ag(t,this);r&&r.dispatchEvent(n)}}function oT(e){let t=fu(e);return t?t.__page_container__:null}function Gf(e,t,n){if(typeof n=="number"&&(n=oT(n)),n[e]===t)return n;let{childNodes:r}=n;for(let s=0;s<r.length;s++){let d=Gf(e,t,r[s]);if(d)return d}return null}function ag(e,t){return Gf("nodeId",e,t)}function aT(e,t){return Gf("nodeName",e.toUpperCase(),t)}function sT(e,t,n){e.push([se.ACTION_TYPE_CREATE,t,e.addDict(n),-1,-1])}function lT(e,t,n,r){let s=t.toJSON({attr:!0,normalize:e.normalizeDict});e.push([se.ACTION_TYPE_INSERT,t.nodeId,n,r],Object.keys(s).length?s:void 0)}function cT(e,t){e.push([se.ACTION_TYPE_REMOVE,t])}function uT(e,t,n,r){e.push([se.ACTION_TYPE_ADD_EVENT,t,e.addDict(n),r])}function fT(e,t,n,r,s){e.push([se.ACTION_TYPE_ADD_WXS_EVENT,t,e.addDict(n),e.addDict(r),s])}function dT(e,t,n){e.push([se.ACTION_TYPE_REMOVE_EVENT,t,e.addDict(n)])}function hT(e,t,n){return t==="style"&&ee.isPlainObject(n)?e.normalizeDict(n):e.addDict(n)}function pT(e,t,n,r){e.push([se.ACTION_TYPE_SET_ATTRIBUTE,t,e.addDict(n),hT(e,n,r)])}function gT(e,t,n){e.push([se.ACTION_TYPE_REMOVE_ATTRIBUTE,t,e.addDict(n)])}function sg(e,t,n){e.push([se.ACTION_TYPE_SET_TEXT,t,e.addDict(n)])}function vT(e,t,n){return new iT(e,t,n)}function lg(e){let t=e.setup;return e.inheritAttrs=!1,e.setup=(n,r)=>{let{attrs:{__pageId:s,__pagePath:d,__pageQuery:g,__pageInstance:y}}=r,N=gn.getCurrentInstance().proxy;if(lt(N,y),Uu(cg(s,N,y)),gn.onMounted(()=>{gn.nextTick(()=>{Gn(N,se.ON_READY)})}),gn.onBeforeUnmount(()=>{Gn(N,se.ON_UNLOAD)}),t)return t(g,r)},e}function cg(e,t,n){let r=()=>c.webview.getWebviewById(e+"");return t.$getAppWebview=r,t.$.ctx.$scope={$getAppWebview:r},t.getOpenerEventChannel=()=>(n.eventChannel||(n.eventChannel=new se.EventChannel(e)),n.eventChannel),t}function mT(e){return ee.isFunction(e)}let ug=new Map;function _T(e,t){ug.set(e,se.once(yT(t)))}function bT(e,t,n,r,s){let d=vT(e,s,!0),g=jp(),y=ug.get(t)(),j=N=>g.mountPage(N,{__pageId:e,__pagePath:t,__pageQuery:n,__pageInstance:r},d);return ee.isPromise(y)?y.then(N=>j(N)):j(y)}function yT(e){return()=>mT(e)?e().then(t=>lg(t)):lg(e)}let fg=!1;function dg(){if(fg)return;fg=!0;let e,t;if(v.requireModule("plus").getRedirectInfo){let{path:d,query:g,referrerInfo:y}=yo();d&&(e=d,t=g),P.referrerInfo=y}else{let d=c.runtime.arguments;if(!d)return;try{let g=JSON.parse(d);e=g.path||g.pathName,t=g.query?"?"+g.query:""}catch(g){}}if(!e||e===P.entryPagePath){t&&(P.entryPageQuery=t);return}let r=se.addLeadingSlash(e),s=vo(r);!s||(s.meta.isTabBar||(P.realEntryPagePath=P.realEntryPagePath||P.entryPagePath),P.entryPagePath=e,P.entryPageQuery=t)}function hg(e,t){let n=JSON.parse(JSON.stringify(vo(e)));return n.meta=Es(n.meta),t!=="preloadPage"&&!P.realEntryPagePath&&(t==="reLaunch"||Ln().length===0)?n.meta.isQuit=!0:n.meta.isTabBar||(n.meta.isQuit=!1),n}let ms={};function ET(e){let t=Object.keys(ms).find(n=>ms[n].id===e.id);t&&delete ms[t]}function wT({url:e}){let t=ms[e];return t&&(t.__page__&&Ln().find(n=>n===t.__page__)?t.__preload__=!1:t.close("none"),delete ms[e]),t}function ST({url:e,path:t,query:n}){if(!ms[e]){let r=hg(t,"preloadPage");ms[e]=tg({path:t,routeOptions:r,query:n,webviewExtras:{__preload__:!0}})}return ms[e]}function hu({url:e,path:t,query:n,openType:r,webview:s,nvuePageVm:d,eventChannel:g}){if(s&&dg(),ms[e]){s=ms[e];let Te=s;if(Te.__page__)if(Ln().find(Ve=>Ve===Te.__page__))s=void 0;else return g&&(Te.__page__.$page.eventChannel=g),Uu(Te.__page__),Te}let y=hg(t,r);s?(s=c.webview.getWebviewById(s.id),s.nvue=y.meta.isNVue):s=tg({path:t,routeOptions:y,query:n}),y.meta.id=parseInt(s.id),!!y.meta.isTabBar&&Ri.append(s),QO(s,t,n,y.meta);let N=t.slice(1);s.__uniapp_route=N;let $=ti(r,e,n,y.meta,g),me=parseInt(s.id);return s.nvue?d?AT(me,d,$):OT(me,s,$):bT(me,N,n,$,CT(y)),s}function CT({meta:e}){let t=Bf(),{platform:n,pixelRatio:r,windowWidth:s}=ta();return{css:!0,route:e.route,version:1,locale:"",platform:n,pixelRatio:r,windowWidth:s,disableScroll:e.disableScroll===!0,onPageScroll:!1,onPageReachBottom:!1,onReachBottomDistance:ee.hasOwn(e,"onReachBottomDistance")?e.onReachBottomDistance:se.ON_REACH_BOTTOM_DISTANCE,statusbarHeight:t,windowTop:e.navigationBar.type==="float"?t+se.NAVBAR_HEIGHT:0,windowBottom:Ri.indexOf(e.route)>=0&&Ri.cover?Ri.height:0}}function AT(e,t,n){lt(t,n),Uu(cg(e,t,n)),e===1&&(P.splashscreen&&P.splashscreen.autoclose&&!P.splashscreen.alwaysShowBeforeRender&&c.navigator.closeSplashscreen(),P.onReady(function(){og()}))}function OT(e,t,n){let r={$:{},$getAppWebview(){return t},getOpenerEventChannel(){return n.eventChannel||(n.eventChannel=new se.EventChannel(e)),n.eventChannel},__setup(s,d){s.$getAppWebview=()=>t,s.getOpenerEventChannel=d.getOpenerEventChannel,lt(s,n),t.__preload__&&(t.__page__=s);let g=Wf(),y=g.findIndex(j=>j===d);y>-1&&g.splice(y,1,s)}};lt(r,n),t.__preload__?t.__page__=r:Uu(r)}let pg=(e,{resolve:t,reject:n})=>{let{url:r,events:s,animationType:d,animationDuration:g}=e,{path:y,query:j}=se.parseUrl(r),[N,$]=IT(y,d,g);Hu(y,()=>{PT({url:r,path:y,query:j,events:s,aniType:N,aniDuration:$}).then(t).catch(n)},e.openType==="appLaunch")},TT=ke(Of,pg,zy,Zy);function PT({url:e,path:t,query:n,events:r,aniType:s,aniDuration:d}){Gn(se.ON_HIDE);let g=new se.EventChannel(Yp()+1,r);return new Promise(y=>{zu(hu({url:e,path:t,query:n,openType:"navigateTo",eventChannel:g}),s,d,()=>{y({eventChannel:g})}),Qs()})}function IT(e,t,n){let{globalStyle:r}=P,s=ol(e);return[t||s.animationType||r.animationType||wO,n||s.animationDuration||r.animationDuration||$u]}let NT=ke(Tf,({url:e},{resolve:t,reject:n})=>{let{path:r,query:s}=se.parseUrl(e);Hu(r,()=>{kT({url:e,path:r,query:s}).then(t).catch(n)})},Gy,Xy);function kT({url:e,path:t,query:n}){let r=Fr();return r&&du(r),new Promise(s=>{zu(hu({url:e,path:t,query:n,openType:"redirectTo"}),"none",0,()=>{if(r){let d=r.$getAppWebview();d.__preload__&&ET(d),d.close("none")}s(void 0)}),Qs()})}let RT=({url:e},{resolve:t,reject:n})=>{let{path:r,query:s}=se.parseUrl(e);Hu(r,()=>{xT({url:e,path:r,query:s}).then(t).catch(n)})};function xT({url:e,path:t,query:n}){return new Promise(r=>{let s=Wf().slice(0);ze.find(g=>g.path===t).meta.isTabBar&&Ri.switchTab(t.slice(1)),zu(hu({url:e,path:t,query:n,openType:"reLaunch"}),"none",0,()=>{s.forEach(g=>ig(g,"none")),r(void 0)}),Qs()})}let BT=ke(Rh,RT,Yy,Qy),gg=(e,{resolve:t,reject:n})=>{let{url:r}=e,{path:s,query:d}=se.parseUrl(r);Hu(s,()=>{DT({url:r,path:s,query:d}).then(t).catch(n)},e.openType==="appLaunch")},MT=ke(Ou,gg,qy,eE);function DT({url:e,path:t,query:n}){Ri.switchTab(t.slice(1));let r=Ln(),s=r.length,d=!1,g=!1,y;s>=1&&(y=r[s-1],y&&!y.$.__isTabBar?(g=!0,r.reverse().forEach(N=>{!N.$.__isTabBar&&N!==y&&ig(N,"none")}),du(y),B(()=>{y.$page.openType==="redirectTo"?Wl(y.$getAppWebview(),Up,$u):Wl(y.$getAppWebview(),"auto")},100)):d=!0);let j;return Wf().forEach(N=>{se.addLeadingSlash(N.route)===t?(N.$.__isActive||(g=!0),N.$.__isActive=!0,j=N):N.$.__isTabBar&&(N.$.__isActive=!1)}),y===j&&(d=!1),y&&d&&Gn(y,se.ON_HIDE),new Promise(N=>{if(j){let $=j.$getAppWebview();$.show("none"),g&&!$.__preload__&&Gn(j,se.ON_SHOW),Qs(),N(void 0)}else zu(hu({url:e,path:t,query:n,openType:"switchTab"}),"none",0,()=>{Qs(),N(void 0)},70)})}let FT=Mt(xh,({url:e})=>{let t=wT({url:e});return t?{id:t.id,url:e,errMsg:"unPreloadPage:ok"}:{url:e,errMsg:"unPreloadPage:fail not found"}},Jy),LT=ke(Pf,({url:e},{resolve:t,reject:n})=>{let r=e.split("?"),s=r[0],d=se.parseQuery(r[1]||""),g=ST({url:e,path:s,query:d});t({id:g.id,url:e,errMsg:"preloadPage:ok"})},Ky);var VT={__proto__:null,sendHostEvent:Dp,navigateToMiniProgram:uO,onHostEventReceive:Lp,onNativeEventReceive:fO,navigateTo:TT,reLaunch:BT,switchTab:MT,upx2px:um,addInterceptor:vm,removeInterceptor:mm,interceptors:_m,arrayBufferToBase64:Xr,base64ToArrayBuffer:Fi,createIntersectionObserver:u_,createMediaQueryObserver:d_,createSelectorQuery:__,createVideoContext:Vm,createMapContext:Um,createAnimation:C_,onWindowResize:P_,offWindowResize:I_,onTabBarMidButtonTap:A_,createCanvasContext:n_,canvasGetImageData:r_,canvasPutImageData:i_,canvasToTempFilePath:o_,getSelectedTextRange:B_,getLocale:wf,setLocale:R_,$on:Om,$off:Pm,$once:Tm,$emit:Im,onCreateVueApp:se.onCreateVueApp,onLocaleChange:k_,setPageMeta:x_,getEnterOptionsSync:G_,getLaunchOptionsSync:Y_,getPushClientId:K_,onPushMessage:J_,offPushMessage:Z_,onAppHide:z_,onAppShow:H_,onError:$_,onPageNotFound:L_,onUnhandledRejection:D_,offAppHide:W_,offAppShow:j_,offError:U_,offPageNotFound:V_,offUnhandledRejection:F_,invokePushCallback:q_,setStorageSync:Lw,setStorage:Vw,getStorageSync:$w,getStorage:Uw,removeStorageSync:Hw,removeStorage:jw,clearStorageSync:zw,clearStorage:Ww,getStorageInfoSync:$h,getStorageInfo:Gw,getFileInfo:Yw,saveFile:Zw,getSavedFileList:eS,getSavedFileInfo:tS,removeSavedFile:nS,openDocument:rS,canIUse:iS,getDeviceInfo:Yh,getAppBaseInfo:qh,getSystemInfoSync:Kh,getSystemInfo:dS,onCompassChange:hS,offCompassChange:pS,startCompass:Jh,stopCompass:Zh,vibrateShort:gS,vibrateLong:vS,onAccelerometerChange:mS,offAccelerometerChange:_S,startAccelerometer:Xh,stopAccelerometer:Qh,onBluetoothDeviceFound:bS,onBluetoothAdapterStateChange:yS,onBLEConnectionStateChange:ES,onBLECharacteristicValueChange:wS,openBluetoothAdapter:SS,closeBluetoothAdapter:CS,getBluetoothAdapterState:AS,startBluetoothDevicesDiscovery:OS,stopBluetoothDevicesDiscovery:TS,getBluetoothDevices:PS,getConnectedBluetoothDevices:IS,createBLEConnection:NS,closeBLEConnection:kS,getBLEDeviceServices:RS,getBLEDeviceCharacteristics:xS,notifyBLECharacteristicValueChange:BS,readBLECharacteristicValue:MS,writeBLECharacteristicValue:DS,setBLEMTU:FS,getBLEDeviceRSSI:LS,onBeaconUpdate:VS,onBeaconServiceChange:$S,getBeacons:US,startBeaconDiscovery:HS,stopBeaconDiscovery:jS,makePhoneCall:zS,addPhoneContact:YS,getClipboardData:qS,setClipboardData:KS,onNetworkStatusChange:JS,offNetworkStatusChange:ZS,getNetworkType:rp,checkIsSupportSoterAuthentication:XS,checkIsSoterEnrolledInDevice:QS,startSoterAuthentication:eC,scanCode:tC,onThemeChange:nC,getScreenBrightness:rC,setScreenBrightness:iC,setKeepScreenOn:oC,getWindowInfo:Gh,getSystemSetting:aC,getAppAuthorizeSetting:lp,openAppAuthorizeSetting:sC,getImageInfo:lC,getVideoInfo:cC,previewImage:uC,closePreviewImage:fC,getRecorderManager:pC,saveVideoToPhotosAlbum:gC,saveImageToPhotosAlbum:vC,compressImage:mC,compressVideo:_C,chooseImage:yC,chooseVideo:EC,showKeyboard:wC,hideKeyboard:SC,onKeyboardHeightChange:CC,offKeyboardHeightChange:AC,downloadFile:TC,request:kC,configMTLS:RC,connectSocket:DC,sendSocketMessage:FC,closeSocket:LC,onSocketOpen:VC,onSocketError:$C,onSocketMessage:UC,onSocketClose:HC,uploadFile:zC,createInnerAudioContext:QC,getBackgroundAudioManager:uA,createLivePusherContext:hA,getLocation:vA,chooseLocation:mA,openLocation:_A,showModal:bA,showActionSheet:yA,showLoading:EA,showToast:wA,hideToast:SA,hideLoading:CA,startPullDownRefresh:AA,stopPullDownRefresh:OA,loadFontFace:TA,pageScrollTo:PA,setNavigationBarTitle:IA,showNavigationBarLoading:NA,hideNavigationBarLoading:kA,setNavigationBarColor:xA,setTabBarBadge:BA,setTabBarItem:MA,setTabBarStyle:DA,hideTabBar:FA,showTabBar:LA,showTabBarRedDot:VA,removeTabBarBadge:$A,hideTabBarRedDot:UA,getSubNVueById:YA,restoreGlobal:KA,requireGlobal:JA,getProvider:ZA,login:Ip,getUserInfo:XA,getUserProfile:QA,preLogin:kp,closeAuthView:xp,getCheckBoxState:Bp,getUniverifyManager:nO,createPushMessage:rO,registerRuntime:iO,share:sO,shareWithSystem:lO,requestPayment:cO,requireNativePlugin:ma,sendNativeEvent:ep,createRewardedVideoAd:pO,createFullScreenVideoAd:vO,createInterstitialAd:_O,createInteractiveAd:EO,navigateBack:tT,redirectTo:NT,unPreloadPage:FT,preloadPage:LT};let $T=ee.extend(he,{publishHandler:UT});function UT(e,t,n){t=JSON.stringify(t),ee.isArray(n)||(n=[n]);let r=`typeof UniViewJSBridge !== 'undefined' && UniViewJSBridge.subscribeHandler("${e}",${t},__PAGE_ID__)`;n.forEach(s=>{let d=String(s),g=c.webview.getWebviewById(d);g&&g.evalJS(r.replace("__PAGE_ID__",d))})}function HT(){let{tabBar:e}=P;if(!(e&&e.list&&e.list.length))return;let{entryPagePath:n}=P;e.selectedIndex=0;let r=e.list.findIndex(s=>s.pagePath===n);Ri.init(e,(s,d)=>{le.switchTab({url:se.addLeadingSlash(s.pagePath),openType:"switchTab",from:"tabBar",success(){Gn(se.ON_TAB_ITEM_TAP,{index:d,text:s.text,pagePath:s.pagePath})}})}),r!==-1&&(e.selectedIndex=r,r!==0&&Ri.switchTab(n))}function jT(){let e=c.globalEvent,t=v.requireModule("globalEvent"),n=bt.emit;v.config.preload?c.key.addEventListener(Vr,rr):e.addEventListener("splashclosed",()=>{c.key.addEventListener(Vr,rr)}),e.addEventListener("pause",()=>{n(se.ON_APP_ENTER_BACKGROUND)}),e.addEventListener("resume",()=>{let s=yo();s&&s.userAction&&Ns(s),n(se.ON_APP_ENTER_FOREGROUND,wr())}),t.addEventListener("uistylechange",function(s){let d={theme:s.uistyle};n(se.ON_THEME_CHANGE,d)});let r=0;e.addEventListener("KeyboardHeightChange",function(s){r!==s.height&&(r=s.height,n(se.ON_KEYBOARD_HEIGHT_CHANGE,{height:r}))}),t.addEventListener(AO,function(s){s&&s.event&&dO(s.event,s.data)}),e.addEventListener("plusMessage",vg),e.addEventListener("WebviewPostMessage",vg)}function vg({data:e}){e&&e.type&&bt.subscribeHandler("plusMessage."+e.type,e.args)}function mg(e,t,n=!1){bt.subscribe("plusMessage."+e,t,n)}function zT(e){M_(e.$);let{entryPagePath:t,entryPageQuery:n,referrerInfo:r}=P,s=ks({path:t,query:n,referrerInfo:r});Gn(e,se.ON_LAUNCH,s),Gn(e,se.ON_SHOW,s);let d=v.requireModule("plus").getAppState;(d&&Number(d()))===2&&Gn(e,se.ON_HIDE,s)}function _g(e){return e=e.replace(/\/$/,""),e.indexOf("_")===0?c.io.convertLocalFileSystemURL(e):e}function WT(){let e=_g(Ui),t=_g(ni),n=t.split("/");n.pop();let r=n.join("/");c.io.resolveLocalFileSystemURL(c.io.convertAbsoluteFileSystem(r),s=>{s.createReader().readEntries(function(g){let y=g;y&&y.length&&y.forEach(function(j){j.isDirectory&&j.fullPath.indexOf(e)===0&&j.fullPath.indexOf(t)!==0&&j.removeRecursively()})})})}function GT(e,t,n){n.fireEvent(e,t)}function YT(e,t){let n=fu(parseInt(t));if(!n)return;let r=n.__page_container__;e.forEach(s=>{switch(s[0]){case se.ACTION_TYPE_EVENT:GT(s[1],s[2],r);break}})}let bg={};function qT(e,t,n){let{adpid:r,width:s}=e,d=r+"-"+s,g=bg[d];if(g&&g.length>0){t(g.splice(0,1)[0]);return}c.ad.getAds(e,y=>{let j=y.ads;t(j.splice(0,1)[0]),bg[d]=g?g.concat(j):j},y=>{n({errCode:y.code,errMsg:y.message})})}function KT(){Q("getAdData",(e,t)=>{qT(e,n=>{t({code:0,data:n})},n=>{t({code:1,message:n})})})}let JT=["switchTab","reLaunch","redirectTo","navigateTo","navigateBack"];function ZT(){JT.forEach(e=>{Q(e,t=>{le[e](ee.extend(t,{fail(n){console.error(n.errMsg)}}))})})}let yg=!1;function XT(e,t){let n=t==="1";if(!(n&&yg)){if(n?(yg=!0,Zp(c.webview.getLaunchWebview())):ho||Zp(c.webview.getWebviewById(t)),!ho.loaded){if(ho.id!==t)return console.error(`webviewReady[${ho.id}][${t}] not match`);ho.loaded=!0}bt.emit(Pc+"."+t),n&&QT()}}function QT(){let{autoclose:e,alwaysShowBeforeRender:t}=P.splashscreen;e&&!t&&c.navigator.closeSplashscreen();let n=se.addLeadingSlash(P.entryPagePath),r=vo(n);if(!r.meta.isNVue){let s={url:n+(P.entryPageQuery||""),openType:"appLaunch"},d={resolve(){},reject(){}};return r.meta.isTabBar?gg(s,d):pg(s,d)}}function eP(e,t){let n=fu(parseInt(t));n&&(n.__uniapp_webview=!0)}function tP(e,t){let n=fu(parseInt(t));n&&delete n.__uniapp_webview}let nP=({name:e,arg:t},n)=>{e==="postMessage"?rP(n[0],t):le[e](ee.extend(t,{fail(r){console.error(r.errMsg)}}))};function rP(e,t){let n=aT("web-view",parseInt(e));n&&n.dispatchEvent(se.createUniEvent({type:"onMessage",target:Object.create(null),currentTarget:Object.create(null),detail:{data:[t]}}))}function iP({nodeId:e,ownerId:t,method:n,args:r},s){let d=ag(e,parseInt(s));if(!d)return;let g=oP(t,d.__vueParentComponent);!g||!g[n]||g[n](r)}function oP(e,t){if(!t)return null;if(t.uid===e)return t.proxy;let n=t.parent;for(;n;){if(n.uid===e)return n.proxy;n=n.parent}return t.proxy}function aP(){let{subscribe:e,subscribeHandler:t,publishHandler:n}=bt;if(mg("subscribeHandler",({type:r,data:s,pageId:d})=>{t(r,s,d)}),mg(se.WEB_INVOKE_APPSERVICE,({data:r,webviewIds:s})=>{nP(r,s)}),P.renderer!=="native"){e(Pc,XT),e(Cp,YT),z(),KT(),ZT(),e(zA,eP),e(WA,tP),e(se.ON_WXS_INVOKE_CALL_METHOD,iP);let r=vo(se.addLeadingSlash(P.entryPagePath));r&&!r.meta.isNVue&&n(Pc,{},1)}}let Ic,Yf={globalData:{}};function sP({allowDefault:e=!1}={}){if(Ic)return Ic;if(e)return Yf;console.error("[warn]: getApp() failed. Learn more: https://uniapp.dcloud.io/collocation/frame/window?id=getapp.")}function lP(e){if(le.Vuex&&e.$store){let{useStore:t}=le.Vuex;le.Vuex.useStore=n=>n?t(n):e.$store}OO(e),Ic=e,pt(Ic),ee.extend(Ic,Yf),vn(Ic,Yf.globalData),Kt(),dg(),HT(),jT(),aP(),zT(e),B(WT,1e4),P.ready=!0}var cP={uni:VT,getApp:sP,getCurrentPages:TO,__definePage:_T,__registerApp:lP,__registerPage:hu,UniServiceJSBridge:$T};return cP}(At,rn,T);A=A.default||A;let le=A.uni,Sn=A.getApp,Ln=A.getCurrentPages,bt=A.UniServiceJSBridge;return A}var nv=WI(qI);var hd,pd,gd,rl,vd,md,_d;function rv(){return rl?{__definePage:hd,__registerApp:pd,__registerPage:gd,uni:rl,wx:rl,getApp:vd,getCurrentPages:md,UniServiceJSBridge:_d}:{}}function iv(v){let{weex:c,plus:b,VueShared:T}=v;return rl||({__definePage:hd,__registerApp:pd,__registerPage:gd,uni:rl,getApp:vd,getCurrentPages:md,UniServiceJSBridge:_d}=tv(c,b,v),rl.VueShared=T,Cg(rl)),{__definePage:hd,__registerApp:pd,__registerPage:gd,plus:b,uni:rl,wx:rl,getApp:vd,getCurrentPages:md,UniServiceJSBridge:_d}}function ov(v,c){let{__uniConfig:b}=c;if(!b)return;let T=c.weex;T.document.__$automator__=!!b.automator;let B=b.renderer!=="native"&&T.config.bundleUrl.indexOf("app-service.js")!==-1;if(pi(c,rv()),B?nv(c):(Pg(v,c),qg(c.Vue.parseClassStyles)),pi(c,iv(c)),T.config.plus_web_id==="1"){let P=T.requireModule("plus");P.setDefaultFontSize&&P.setDefaultFontSize(Math.round(c.plus.screen.resolutionWidth/20))}let{scale:S,deviceWidth:k,platform:u}=global.WXEnvironment;if(u.toLowerCase()==="ios"){let P=Math.ceil(k/S);T.requireModule("meta").setViewport({width:P,roundOffDeviation:!1})}}var Zl=class extends Jl{constructor(c){super();this.nodeType=8;this.type="comment";this.value="";this.value=c}toString(){return"<!-- "+this.value+" -->"}};function ea(v,c=[]){return{module:"dom",method:v,args:c}}var Mc=class{constructor(c,b){this.id=c,this.batched=!1,this.updates=[],zn(b)?Object.defineProperty(this,"handler",{configurable:!0,enumerable:!0,writable:!0,value:b}):console.error("[JS Runtime] invalid parameter, handler must be a function")}createFinish(c){return this.handler([ea("createFinish")],c)}updateFinish(c){return this.handler([ea("updateFinish")],c)}refreshFinish(c){return this.handler([ea("refreshFinish")],c)}createBody(c){let b=c.toJSON(),T=b.children;delete b.children;let B=[ea("createBody",[b])];return T&&B.push.apply(B,T.map(S=>ea("addElement",[b.ref,S,-1]))),this.addActions(B)}addElement(c,b,T){return T>=0||(T=-1),this.addActions(ea("addElement",[b,c.toJSON(),T]))}removeElement(c){if(Yi(c)){let b=c.map(T=>ea("removeElement",[T]));return this.addActions(b)}return this.addActions(ea("removeElement",[c]))}moveElement(c,b,T){return this.addActions(ea("moveElement",[c,b,T]))}setAttr(c,b,T){return this.addActions(ea("updateAttrs",[c,{[b]:T}]))}setStyle(c,b,T){return this.addActions(ea("updateStyle",[c,{[b]:T}]))}setStyles(c,b){return this.addActions(ea("updateStyle",[c,b]))}addEvent(c,b){return this.addActions(ea("addEvent",[c,b]))}removeEvent(c,b){return this.addActions(ea("removeEvent",[c,b]))}handler(c,b){return b&&b()}addActions(c){let b=this.updates,T=this.handler;if(Yi(c)||(c=[c]),this.batched)b.push.apply(b,c);else return T(c)}};var bd={createBody:"callCreateBody",addElement:"callAddElement",removeElement:"callRemoveElement",moveElement:"callMoveElement",updateAttrs:"callUpdateAttrs",updateStyle:"callUpdateStyle",addEvent:"callAddEvent",removeEvent:"callRemoveEvent"};function av(v,c){let b=c||global.callNative;return zn(b)||console.error("[JS Runtime] no default handler"),function(B){Yi(B)||(B=[B]);for(let S=0;S<B.length;S++){let k=JI(v,B[S],b);if(k===-1)return k}}}function KI(v,c){return v==="dom"&&bd[c]&&zn(global[bd[c]])}function JI(v,c,b){let{module:T,method:B,args:S}=c;return KI(T,B)?global[bd[B]](v,...S,"-1"):b(v,[c],"-1")}var cf=class extends Oo{constructor(c){super();this.value=c,this.nodeType=3,this.type="text",this.value=""}toString(){return""+this.value}};var sv={slider:{change:function(v){return{index:v.index,source:v.source}},scroll:function(v){return{offsetXRatio:v.offsetXRatio,offsetYRatio:v.offsetYRatio,drag:v.drag}}},"scroll-view":{scrollend:function(v){return{contentOffset:v.contentOffset}}}};function lv(v){let{attr:c,offsetLeft:b,offsetTop:T}=v,B={};return c&&Object.keys(c).forEach(S=>{S.indexOf("data-")===0&&(B[S.replace("data-","")]=c[S])}),{id:c&&c.id||"",dataset:B,offsetLeft:b||0,offsetTop:T||0}}var ZI=["a","div","list","cell","loading","refresh","recycle-list","scroller","indicator","waterfall","web","richtext"],XI=["viewappear","viewdisappear"],QI={markertap:["markerId"],controltap:["controlId"],regionchange:["causedBy"],end:["causedBy"],appear:["direction"],disappear:["direction"]};function cv(v,c){let b=v.type;if(XI.indexOf(b)!==-1)return v;let T=v.currentTarget,B=T.type.replace("u-","");if(ZI.indexOf(B)!==-1)return v;let{timestamp:S,target:k}=v;if(!c){let ze=sv[B];ze?zn(ze[b])?c=ze[b](v):c=v.detail||{}:c=v.detail||{}}let u={type:b,timeStamp:S,target:lv(k),currentTarget:lv(T),detail:c,touches:b==="touchend"||b==="panend"?[]:v.changedTouches,changedTouches:v.changedTouches};v.componentId&&(u.componentId=v.componentId);let P=QI[b];return P&&P.forEach(ze=>{Gl(v,ze)&&(u[ze]=v[ze])}),u}function e1(v,c){let b=c.attrs||{};for(let B in b)v.setAttr(B,b[B],!0);let T=c.style||{};for(let B in T)v.setStyle(B,T[B],!0)}var _a=class{constructor(c,b="",T){c=c?c.toString():"",this.id=c,this.URL=b,$g(c,this),this.nodeMap={};let B=_a.Listener||Mc;this.listener=new B(c,T||av(c,_a.handler)),this.taskCenter=new Bc(c,T?(S,k)=>T(k):_a.handler),this.createDocumentElement()}getRef(c){return this.nodeMap[c]}open(){this.listener.batched=!1}close(){this.listener.batched=!0}createDocumentElement(){if(!this.documentElement){let c=new Oo("document");c.docId=this.id,c.ownerDocument=this,c.role="documentElement",c.ref="_documentElement",this.nodeMap._documentElement=c,this.documentElement=c,Object.defineProperty(c,"appendChild",{configurable:!0,enumerable:!0,writable:!0,value:b=>{Qf(this,b)}}),Object.defineProperty(c,"insertBefore",{configurable:!0,enumerable:!0,writable:!0,value:(b,T)=>{Qf(this,b,T)}}),Xn("debug")&&po(`Create document element (id: "${c.docId}", ref: "${c.ref}")`)}return this.documentElement}createBody(c,b){if(!this.body){let T=new Oo(c,b);ed(this,T),Xn("debug")&&po(`[createBody](${this.id},${T.type},${T.ref}) (${JSON.stringify(T.toJSON(!0))}).`)}return this.body}createElement(c,b){let T=new Oo(c,b);return Xn("debug")&&po(`[createElement](${this.id},${T.type},${T.ref}) (${JSON.stringify(T.toJSON(!0))}).`),T}createComment(c){return new Zl(c)}createText(c){return new cf(c)}fireEvent(c,b,T,B,S){if(!c)return;T=T||{},T.type=T.type||b,T.target=c,T.currentTarget=c,T.timestamp=Date.now(),B&&e1(c,B);let k,u=this.getRef("_root");if(u&&u.attr){let P=u.attr.bubble;k=P==="true"||P===!0}return T=cv(T),c.fireEvent(b,T,k,S)}destroy(){Xn("debug")&&po(`[destroy](${this.id},document) Destroy document (id: "${this.id}", URL: "${this.URL}")`),this.taskCenter.destroyCallback(),delete this.listener,delete this.nodeMap,delete this.taskCenter,Ug(this.id)}};_a.handler=null;var uv={InputElementDiv:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",InputElementRegExp:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",ReservedWord:"<Keyword>|<NullLiteral>|<BooleanLiteral>",WhiteSpace:/[\t\v\f\u0020\u00A0\u1680\u180E\u2000-\u200A\u202F\u205f\u3000\uFEFF]/,LineTerminator:/[\n\r\u2028\u2029]/,Keyword:/new(?![_$a-zA-Z0-9])|void(?![_$a-zA-Z0-9])|delete(?![_$a-zA-Z0-9])|in(?![_$a-zA-Z0-9])|instanceof(?![_$a-zA-Z0-9])|typeof(?![_$a-zA-Z0-9])/,NullLiteral:/null(?![_$a-zA-Z0-9])/,BooleanLiteral:/(?:true|false)(?![_$a-zA-Z0-9])/,Identifier:/[_$a-zA-Z][_$a-zA-Z0-9]*/,Punctuator:/\/|=>|\*\*|>>>=|>>=|<<=|===|!==|>>>|<<|%=|\*=|-=|\+=|<=|>=|==|!=|\^=|\|=|\|\||&&|&=|>>|\+\+|--|\:|}|\*|&|\||\^|!|~|-|\+|\?|%|=|>|<|,|;|\.(?![0-9])|\]|\[|\)|\(|{/,DivPunctuator:/\/=|\//,NumericLiteral:/(?:0[xX][0-9a-fA-F]*|\.[0-9]+|(?:[1-9]+[0-9]*|0)(?:\.[0-9]*|\.)?)(?:[eE][+-]{0,1}[0-9]+)?(?![_$a-zA-Z0-9])/,StringLiteral:/"(?:[^"\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*"|'(?:[^'\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*'/,RegularExpressionLiteral:/\/(?:\[(?:\\[\s\S]|[^\]])*\]|[^*\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])(?:\[(?:\\[\s\S]|[^\]])*\]|[^\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])*\/[0-9a-zA-Z]*/};function fv(v,c,b){var T=[c];function B(k){var u=new RegExp;return u.compile(k.replace(/<([^>]+)>/g,function(P,ze){return v[ze]?(T.push(ze),v[ze]instanceof RegExp?"("+v[ze].source+")":"("+B(v[ze]).source+")"):""}),b),u}var S=B(v[c]);this.exec=function(k){var u=S.exec(k);if(u==null)return null;for(var P=new String(u[0]),ze=0;ze<T.length;ze++)u[ze]&&(P[T[ze]]=u[ze]);return P},Object.defineProperty(this,"lastIndex",{get:function(){return S.lastIndex},set:function(k){S.lastIndex=k}})}function t1(){var v=new fv(uv,"InputElementDiv","g"),c=new fv(uv,"InputElementRegExp","g"),b;Object.defineProperty(this,"source",{get:function(){return b},set:function(T){b=T,v.lastIndex=0,c.lastIndex=0}}),this.reset=function(){v.lastIndex=0,c.lastIndex=0},this.getNextToken=function(T){var B=v.lastIndex,S;T?S=v:S=c;var k=S.exec(b);if(k&&S.lastIndex-B>k.length)throw new SyntaxError("Unexpected token ILLEGAL");return v.lastIndex=S.lastIndex,c.lastIndex=S.lastIndex,k}}var dv={IdentifierName:[["Identifier"]],Literal:[["NullLiteral"],["BooleanLiteral"],["NumericLiteral"],["StringLiteral"],["RegularExpressionLiteral"]],PrimaryExpression:[["Identifier"],["Literal"],["(","Expression",")"]],CallExpression:[["PrimaryExpression","Arguments"],["CallExpression","Arguments"]],Arguments:[["(",")"],["(","ArgumentList",")"]],ArgumentList:[["ConditionalExpression"],["ArgumentList",",","ConditionalExpression"]],LeftHandSideExpression:[["PrimaryExpression"],["CallExpression"]],UnaryExpression:[["LeftHandSideExpression"],["void","UnaryExpression"],["+","UnaryExpression"],["-","UnaryExpression"],["~","UnaryExpression"],["!","UnaryExpression"]],ExponentiationExpression:[["UnaryExpression"],["ExponentiationExpression","**","UnaryExpression"]],MultiplicativeExpression:[["MultiplicativeExpression","/","ExponentiationExpression"],["ExponentiationExpression"],["MultiplicativeExpression","*","ExponentiationExpression"],["MultiplicativeExpression","%","ExponentiationExpression"]],AdditiveExpression:[["MultiplicativeExpression"],["AdditiveExpression","+","MultiplicativeExpression"],["AdditiveExpression","-","MultiplicativeExpression"]],ShiftExpression:[["AdditiveExpression"],["ShiftExpression","<<","AdditiveExpression"],["ShiftExpression",">>","AdditiveExpression"],["ShiftExpression",">>>","AdditiveExpression"]],RelationalExpression:[["ShiftExpression"],["RelationalExpression","<","ShiftExpression"],["RelationalExpression",">","ShiftExpression"],["RelationalExpression","<=","ShiftExpression"],["RelationalExpression",">=","ShiftExpression"],["RelationalExpression","instanceof","ShiftExpression"],["RelationalExpression","in","ShiftExpression"]],EqualityExpression:[["RelationalExpression"],["EqualityExpression","==","RelationalExpression"],["EqualityExpression","!=","RelationalExpression"],["EqualityExpression","===","RelationalExpression"],["EqualityExpression","!==","RelationalExpression"]],BitwiseANDExpression:[["EqualityExpression"],["BitwiseANDExpression","&","EqualityExpression"]],BitwiseXORExpression:[["BitwiseANDExpression"],["BitwiseXORExpression","^","BitwiseANDExpression"]],BitwiseORExpression:[["BitwiseXORExpression"],["BitwiseORExpression","|","BitwiseXORExpression"]],LogicalANDExpression:[["BitwiseORExpression"],["LogicalANDExpression","&&","BitwiseORExpression"]],LogicalORExpression:[["LogicalANDExpression"],["LogicalORExpression","||","LogicalANDExpression"]],ConditionalExpression:[["LogicalORExpression"],["LogicalORExpression","?","LogicalORExpression",":","LogicalORExpression"]],Expression:[["ConditionalExpression"],["Expression",",","ConditionalExpression"]],Program:[["Expression"]]};function bu(v,c){this.name=v,this.token=c,this.childNodes=[],this.toString=function(b){if(b||(b=""),this.childNodes.length==1)return this.childNodes[0].toString(b);for(var T=b+this.name+(this.token!=null&&this.name!=this.token?":"+this.token:"")+`
`,B=0;B<this.childNodes.length;B++)T+=this.childNodes[B].toString(b+"    ");return T}}function n1(){var v,c={Program:"$"},b={};function T(u){b[JSON.stringify(u)]=u;for(var P=Object.getOwnPropertyNames(u);P.length;){var ze=P.shift();!dv[ze]||dv[ze].forEach(function(rn){u[rn[0]]||P.push(rn[0]);var A=u,le=null;rn.forEach(function(Sn){A[Sn]||(A[Sn]={}),le=A,A=A[Sn]}),u[ze].$div&&(A.$div=!0),A.$reduce=ze,A.$count=rn.length})}for(var At in u)typeof u[At]!="object"||At.charAt(0)=="$"||u[At].$closure||(b[JSON.stringify(u[At])]?u[At]=b[JSON.stringify(u[At])]:T(u[At]));u.$closure=!0}T(c);var B=[],S=[c],k=c;this.insertSymbol=function(P,ze){for(;!k[P.name]&&k.$reduce;){for(var At=k.$count,rn=new bu(k.$reduce);At--;)rn.childNodes.push(B.pop()),S.pop();k=S[S.length-1],this.insertSymbol(rn)}if(k=k[P.name],B.push(P),S.push(k),!k)throw new Error;return k.$div},this.reset=function(){k=c,B=[],S=[c]},Object.defineProperty(this,"grammarTree",{get:function(){try{for(;k.$reduce;){for(var u=k.$count,P=new bu(k.$reduce);u--;)P.childNodes.push(B.pop()),S.pop();k=S[S.length-1],this.insertSymbol(P)}if(B.length>0&&k[";"])return this.insertSymbol(new bu(";",";")),this.grammarTree;if(B.length!=1||B[0].name!="Program")throw new Error}catch(ze){throw new SyntaxError("Unexpected end of input")}return B[0]}})}function r1(){this.lexicalParser=new t1,this.syntacticalParser=new n1;var v=["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","RegularExpressionLiteral","Identifier","**","=>","{","}","(",")","[","]",".",";",",","<",">","<=",">=","==","!=","===","!==","+","-","*","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","=","+=","-=","*=","%=","<<=",">>=",">>>=","&=","|=","^=","/","/=","instanceof","typeof","new","void","debugger","this","delete","in"],c={};v.forEach(function(b){Object.defineProperty(c,b,{})}),this.reset=function(){this.lexicalParser.reset(),this.syntacticalParser.reset()},this.parse=function(b,T){var B,S=!1;this.lexicalParser.source=b;for(var k=!1;B=this.lexicalParser.getNextToken(k);){T&&T(B);try{if(Object.getOwnPropertyNames(B).some(u=>c.hasOwnProperty(u)?(k=this.syntacticalParser.insertSymbol(new bu(u,B),S),S=!1,!0):!1))continue;(B.Keyword||B.Punctuator||B.DivPunctuator)&&c.hasOwnProperty(B.toString())&&(k=this.syntacticalParser.insertSymbol(new bu(B.toString(),B),S))}catch(u){throw new SyntaxError("Unexpected token "+B)}}return this.syntacticalParser.grammarTree}}var hv=new r1;function i1(v){hv.reset(),this.tree=hv.parse(v),this.paths=[];var c=Object.create(null),b=this,T=Object.create(null);this.isSimple,this.isConst,S(this.tree),B(this.tree),this.paths.length===0&&(this.isConst=!0),this.setter=function(P){for(var ze=c,At=0;At<P.length-1;At++)ze[P[At]]||(ze[P[At]]=Object.create(null)),ze=ze[P[At]];return{isCompleted:function(){for(var rn in T)if(!T[rn])return!1;return!0},set:function(rn){if(T[P.join(".")]||(T[P.join(".")]=!0),ze[P[At]]=rn,this.isCompleted())return b.exec()}}},this.valueOf=this.exec=function(){try{return function(){return(0,eval)(v)}.call(c)}catch(P){}};function B(P){for(var ze=P;ze.childNodes.length<=1&&ze.name!=="MemberExpression";)ze=ze.childNodes[0];ze.name==="MemberExpression"?b.isSimple=!0:b.isSimple=!1}function S(P){if(P.name==="CallExpression"&&P.childNodes[P.childNodes.length-1].name!=="CallExpression"){var ze=k(P.childNodes[1]);S(P.childNodes[0])}else if(P.name==="NewExpression"&&P.childNodes.length===1)var ze=k(P.childNodes[0]);else if(P.name==="MemberExpression"&&P.childNodes.length===1)var ze=k(P);else for(var At=0;At<P.childNodes.length;At++)S(P.childNodes[At])}function k(P){if(P.childNodes[0].name==="IdentifierName"){var ze=k(P.childNodes[2]);return ze&&(ze=ze.concat(P.childNodes[0].childNodes[0].token.toString())),u(ze),ze}else if(P.childNodes[0].name==="PrimaryExpression")if(P.childNodes[0].childNodes[0].name==="Identifier"){var ze=[P.childNodes[0].childNodes[0].token.toString()];return u(ze),ze}else return null;else{if(P.childNodes[0].name==="]")return k(P.childNodes[3]),S(P.childNodes[1]),null;if(P.childNodes[0].name==="Arguments")return S(P.childNodes[0]),S(P.childNodes[1]),null;for(var At=0;At<P.childNodes.length;At++)S(P.childNodes[At])}}function u(P){for(var ze=c,At=0;At<P.length-1;At++)ze[P[At]]||(ze[P[At]]=Object.create(null)),ze=ze[P[At]];b.paths.push(P),T[P.join(".")]=!1}}function Xl(v){var c=v.childNodes.slice().reverse(),b=c.filter(P=>!P.token||!P.token.Punctuator);if(v.name==="UnaryExpression"&&c.length===2&&c[0].name==="-"&&b.length===1){var T=Xl(b[0]);return T.value=-T.value,T}if(v.name==="Arguments"){for(var B=[],S=b[0];S;)S.childNodes.length===3&&(B.unshift(S.childNodes[0]),S=S.childNodes[2]),S.childNodes.length===1&&(B.unshift(S.childNodes[0]),S=null);return{type:"Arguments",children:B.map(P=>Xl(P))}}if(b&&b.length===1){var T=Xl(b[0]);return T}if(v.token&&["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","Identifier"].some(P=>v.token[P])){var k=Object.keys(v.token).filter(P=>P.match(/Literal/)||P.match(/Identifier/))[0],u={NullLiteral:null,BooleanLiteral:Boolean(v.token),NumericLiteral:Number(v.token),StringLiteral:v.token,Identifier:v.token}[k];return{type:k,value:u}}return v.name==="CallExpression"?{type:"CallExpression",children:[Xl(c[0]),Xl(c[1])]}:{type:c.filter(P=>P.token&&P.token.Punctuator)[0].name,children:c.filter(P=>!P.token||!P.token.Punctuator).map(P=>Xl(P))}}function pv(v){var c=new i1(v);return JSON.stringify(Xl(c.tree),null)}function o1(v,c){return c==="bind"&&(v==="bindingx"||v==="binding")}function gv(v){if(!v)return;try{v=JSON.parse(v)}catch(b){}let c={};if(qi(v)?c.origin=v:v&&(c.origin=v.origin,c.transformed=v.transformed),!(!c.transformed&&!c.origin))return c.transformed=c.transformed||pv(c.origin),c}function a1(v){return v&&(v.exitExpression=gv(v.exitExpression),v.props&&v.props.forEach(c=>{c.expression=gv(c.expression)}),v)}function s1(v){return function(c={}){if(zn(v))return v({state:c.state==="end"?"exit":c.state,t:c.t!==void 0?c.t:c.deltaT})}}function vv(v,c,b){return b&&(o1(v,c)?function(T,B=function(){}){if(!T)throw new Error("should pass options for binding");return a1(T),b(T,T&&T.eventType==="timing"?s1(B):B)}:b)}function l1(v,c){Object.defineProperty(v,"[[CurrentInstanceId]]",{value:c})}function mv(v){return v["[[CurrentInstanceId]]"]}function c1(v,c,b){let T=qr(v);return!T||!zn(T.send)?(console.error(`[JS Framework] Failed to find taskCenter (${v}).`),null):(...B)=>T.send("module",{module:c,method:b},B)}function u1(v,c,b,T){let B=qr(v);return!B||!zn(B.send)?(console.error(`[JS Framework] Failed to find taskCenter (${v}).`),null):zn(T)?S=>B.send("module",{module:c,method:b},[S]):(console.error(`[JS Framework] ${c}.${b} must be assigned as a function.`),null)}var uf=class{constructor(c,b){l1(this,String(c)),this.config=b||{},this.document=new _a(c,this.config.bundleUrl),this.requireModule=this.requireModule.bind(this),this.importScript=this.importScript.bind(this),this.isRegisteredModule=af,this.isRegisteredComponent=fd}requireModule(c){let b=mv(this);if(!(b&&this.document&&this.document.taskCenter)){console.error(`[JS Framework] Failed to requireModule("${c}"), instance (${b}) doesn't exist anymore.`);return}if(!af(c)){console.warn(`[JS Framework] \u5F53\u524D\u8FD0\u884C\u7684\u57FA\u5EA7\u4E0D\u5305\u542B\u539F\u751F\u63D2\u4EF6[${c}]\uFF0C\u8BF7\u5728manifest\u4E2D\u914D\u7F6E\u8BE5\u63D2\u4EF6\uFF0C\u91CD\u65B0\u5236\u4F5C\u5305\u62EC\u8BE5\u539F\u751F\u63D2\u4EF6\u7684\u81EA\u5B9A\u4E49\u8FD0\u884C\u57FA\u5EA7`);return}let T={},B=Qg(c);for(let S in B)Object.defineProperty(T,S,{enumerable:!0,configurable:!0,get:()=>vv(c,S,c1(b,c,S)),set:k=>u1(b,c,S,k)});return T}supports(c){if(!qi(c))return null;let b=c.match(/^@(\w+)\/([\w-]+)(\.(\w+))?$/i);if(b){let T=b[1],B=b[2],S=b[4];switch(T){case"module":return af(B,S);case"component":return fd(B)}}return null}importScript(c,b={}){let T=mv(this),B=qr(T);return new Promise(function(S,k){if(!B||!zn(B.send))return k(new Error(`[JS Framework] Failed to import script "${c}", no taskCenter (${T}) matched.`));try{B.send("module",{module:"script",method:"importScript"},[c,b],{callback:[u=>S(u),u=>k(u)]})}catch(u){k(u)}})}};function f1(v,c){let b=Object.create(null);return b.service=Object.create(null),Al.forEach(({name:T,options:B})=>{let S=B.create;if(S)try{let k=S(v,c);pi(b.service,k),pi(b,k.instance)}catch(k){console.error(`[JS Runtime] Failed to create service ${T}.`)}}),delete b.service.instance,ns(b.service),b}var d1={uid:0},h1=Dg(gu),p1=Mg(gu);function _v(v,c,b){let T=new uf(v,c),B="Vue",S=f1(v,{weex:T,nvue:T,config:c,created:Date.now(),framework:B});ns(S);let k=Object.create(null);return pi(k,E1(T)),pi(k,S,{SharedObject:d1,weex:T,nvue:T,requireModule:u=>T.requireModule(u),__WEEX_CALL_JAVASCRIPT__:cd,services:S}),k.plus=new k.WeexPlus(T),k.VueShared=gu,k.UniShared=h1,k.VueReactivity=p1,ov(v,k),ns(k),k}function g1(v,c,b={}){let T="Vue";b=Zf(b),b.env=Zf(global.WXEnvironment||{}),b.bundleType=T;let B=_v(v,b);v1(c,B)}function v1(v,c){let b=[],T=[];for(let S in c)b.push(S),T.push(c[S]);let B="(function (global) { "+v+" })(Object.create(this))";return new Function(...b,B)(...T)}function m1(v){let c=nl(v);try{if(c&&c.body)return c.body.toJSON()}catch(b){console.error("[JS Framework] Failed to get the virtual dom tree.");return}}function _1(v){Og(v),Al.forEach(c=>{let b=c.options.destroy;b&&b(v)})}function b1(v){Tg(v),Al.forEach(c=>{let b=c.options.refresh;b&&b(v)})}var y1={createInstance:g1,createInstanceContext:_v,getRoot:m1,getDocument:nl,registerService:sf,unregisterService:lf,callJS(v,c){return cd(v,c)},registerComponents:ev,registerModules:Xg,destroyInstance:_1,refreshInstance:b1};function yd(){return Zg(),y1}function E1(v){if(global.setTimeout&&global.setInterval)return{setTimeout:global.setTimeout,setInterval:global.setInterval,clearTimeout:global.clearTimeout,clearInterval:global.clearInterval};let c=v.requireModule("timer");return{setTimeout:(...T)=>{let B=function(){T[0](...T.slice(2))};return c.setTimeout(B,T[1]),v.document.taskCenter.callbackManager.lastCallbackId.toString()},setInterval:(...T)=>{let B=function(){T[0](...T.slice(2))};return c.setInterval(B,T[1]),v.document.taskCenter.callbackManager.lastCallbackId.toString()},clearTimeout:T=>{c.clearTimeout(T)},clearInterval:T=>{c.clearInterval(T)}}}var bv={Document:_a,Element:Oo,Comment:Zl,Listener:Mc,TaskCenter:Bc,sendTasks(...v){return zn(callNative)?callNative(...v):(global.callNative||(()=>{}))(...v)}};_a.handler=bv.sendTasks;var Ql=bv;function w1(){ns(Ql.Comment),ns(Ql.Listener),ns(Ql.Document.prototype),ns(Ql.Comment.prototype),ns(Ql.Listener.prototype)}var ff={service:{register:sf,unregister:lf,has:dd},freezePrototype:w1,init:yd,config:Ql};var Ed=class{constructor(c,b={}){this.type=c||"message",this.data=b.data||null,this.origin=b.origin||"",this.source=b.source||null,this.ports=b.ports||[],this.target=null,this.timeStamp=Date.now()}};var Ol={},yu={};function wd(){}wd.prototype.postMessage=function(v){if(this._closed)throw new Error(`BroadcastChannel "${this.name}" is closed.`);let c=Ol[this.name];if(c&&c.length)for(let b=0;b<c.length;++b){let T=c[b];T._closed||T===this||zn(T.onmessage)&&T.onmessage(new Ed("message",{data:v}))}};wd.prototype.close=function(){if(!this._closed&&(this._closed=!0,Ol[this.name])){let v=Ol[this.name].filter(c=>c!==this);v.length?Ol[this.name]=v:delete Ol[this.name]}};var yv={create:v=>{if(yu[v]=[],zn(global.BroadcastChannel))return{};let c={BroadcastChannel:function(b){Object.defineProperty(this,"name",{configurable:!1,enumerable:!0,writable:!1,value:String(b)}),this._closed=!1,this.onmessage=null,Ol[this.name]||(Ol[this.name]=[]),Ol[this.name].push(this),yu[v].push(this)}};return c.BroadcastChannel.prototype=wd.prototype,{instance:c}},destroy:v=>{yu[v]&&(yu[v].forEach(c=>c.close()),delete yu[v])}};function Sd(){let{init:v}=ff;ff.service.register("BroadcastChannel",yv),ff.freezePrototype();let c=v();for(let b in c)global[b]=(...T)=>{let B=c[b](...T);return B instanceof Error&&console.error(B.toString()),B}}var dR=global.console;function Ev(){if(Lg(),global.WXEnvironment&&global.WXEnvironment.platform!=="Web")global.console={debug:(...v)=>{Xn("debug")&&global.nativeLog(...Eu(v),"__DEBUG")},log:(...v)=>{Xn("log")&&global.nativeLog(...Eu(v),"__LOG")},info:(...v)=>{Xn("info")&&global.nativeLog(...Eu(v),"__INFO")},warn:(...v)=>{Xn("warn")&&global.nativeLog(...Eu(v),"__WARN")},error:(...v)=>{Xn("error")&&global.nativeLog(...Eu(v),"__ERROR")}};else{let{debug:v,log:c,info:b,warn:T,error:B}=console;console.__ori__={debug:v,log:c,info:b,warn:T,error:B},console.debug=(...S)=>{Xn("debug")&&console.__ori__.debug.apply(console,S)},console.log=(...S)=>{Xn("log")&&console.__ori__.log.apply(console,S)},console.info=(...S)=>{Xn("info")&&console.__ori__.info.apply(console,S)},console.warn=(...S)=>{Xn("warn")&&console.__ori__.warn.apply(console,S)},console.error=(...S)=>{Xn("error")&&console.__ori__.error.apply(console,S)}}}function Eu(v){return v.map(c=>{if(tl(c).toLowerCase()==="[object object]")try{c=JSON.stringify(c)}catch(T){c="[object object]"}else c=String(c);return c})}Ev();Sd();})();
