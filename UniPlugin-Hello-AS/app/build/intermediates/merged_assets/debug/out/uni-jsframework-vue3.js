//{"version":"3.5.3","encode":"base64"}
var __UniServiceStartTime__ = Date.now();var global=this; var process={env:{}}; var setTimeout=global.setTimeout;
(()=>{var uP=Object.defineProperty;var fP=(g,s)=>{for(var _ in s)uP(g,_,{get:s[_],enumerable:!0})};var va=Object.freeze;function dc({getCurrentPages:g,uni:s,UniShared:_,Vue:A,VueShared:R}){var S=function(N,f,P,He){"use strict";function Rt(){let Ve=g(),ot=Ve.length;if(ot)return Ve[ot-1]}function gn(){let Ve=Rt();if(Ve)return Ve.$vm}function B(Ve,ot,gt){if(f.isString(Ve))gt=ot,ot=Ve,Ve=gn();else if(typeof Ve=="number"){let tn=g().find(Xt=>Xt.$page.id===Ve);tn?Ve=tn.$vm:Ve=gn()}if(!Ve)return;if(Ve.__call_hook)return Ve.__call_hook(ot,gt);let qt=Ve.$[ot];return qt&&P.invokeArrayFns(qt,gt)}function dt(Ve,ot,gt,qt){f.isFunction(ot)&&He.injectHook(Ve,ot.bind(gt),qt)}function pn(Ve,ot,gt){let qt=Ve.mpType||gt.$mpType;if(!!qt&&(Object.keys(Ve).forEach(tn=>{if(tn.indexOf("on")===0){let Xt=Ve[tn];f.isArray(Xt)?Xt.forEach(rr=>dt(tn,rr,gt,ot)):dt(tn,Xt,gt,ot)}}),qt==="page")){ot.__isVisible=!0;try{B(gt,P.ON_LOAD,ot.attrs.__pageQuery),delete ot.attrs.__pageQuery,B(gt,P.ON_SHOW)}catch(tn){console.error(tn.message+P.LINEFEED+tn.stack)}}}function Pn(Ve,ot){at(ot,Ve.$renderjs,Ve["$"+P.RENDERJS_MODULES])}function at(Ve,ot,gt={}){if(!f.isArray(ot))return;let qt=Ve.uid,tn=Ve.$wxsModules||(Ve.$wxsModules=[]),Xt=Ve.ctx;ot.forEach(rr=>{gt[rr]&&(Xt[rr]=q(qt,gt[rr],rr),tn.push(rr))})}function q(Ve,ot,gt){let qt={};return new Proxy(qt,{get(tn,Xt){return qt[Xt]||(qt[Xt]=ne(Ve,ot,gt,Xt))}})}function ne(Ve,ot,gt,qt){let tn=()=>{},Xt=()=>P.WXS_PROTOCOL+JSON.stringify([Ve,ot,gt+"."+qt]);return new Proxy(tn,{get(rr,sr){return sr==="toJSON"?Xt:tn[sr]||(tn[sr]=ne(Ve,ot,gt+"."+qt,sr))},apply(rr,sr,Li){return P.WXS_PROTOCOL+JSON.stringify([Ve,ot,gt+"."+qt,[...Li]])}})}function En(Ve,ot){at(ot,Ve.$wxs,Ve["$"+P.WXS_MODULES])}function yn(Ve,ot,gt){En(Ve,ot),Pn(Ve,ot),pn(Ve,ot,gt)}function ln(Ve,ot,gt){return Ve[ot]=gt}function Un(Ve){return function(gt,qt,tn){if(!qt)throw gt;let Xt=Ve._instance;if(!Xt||!Xt.proxy)throw gt;B(Xt.proxy,P.ON_ERROR,gt)}}function on(Ve,ot){return Ve?[...new Set([].concat(Ve,ot))]:ot}function kn(Ve){P.UniLifecycleHooks.forEach(ot=>{Ve[ot]=on})}let Hn,vn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",an=/^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;typeof atob!="function"?Hn=function(Ve){if(Ve=String(Ve).replace(/[\t\n\f\r ]+/g,""),!an.test(Ve))throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");Ve+="==".slice(2-(Ve.length&3));for(var ot,gt="",qt,tn,Xt=0;Xt<Ve.length;)ot=vn.indexOf(Ve.charAt(Xt++))<<18|vn.indexOf(Ve.charAt(Xt++))<<12|(qt=vn.indexOf(Ve.charAt(Xt++)))<<6|(tn=vn.indexOf(Ve.charAt(Xt++))),gt+=qt===64?String.fromCharCode(ot>>16&255):tn===64?String.fromCharCode(ot>>16&255,ot>>8&255):String.fromCharCode(ot>>16&255,ot>>8&255,ot&255);return gt}:Hn=atob;function mn(Ve){return decodeURIComponent(Hn(Ve).split("").map(function(ot){return"%"+("00"+ot.charCodeAt(0).toString(16)).slice(-2)}).join(""))}function Rn(){let Ve=s.getStorageSync("uni_id_token")||"",ot=Ve.split(".");if(!Ve||ot.length!==3)return{uid:null,role:[],permission:[],tokenExpired:0};let gt;try{gt=JSON.parse(mn(ot[1]))}catch(qt){throw new Error("\u83B7\u53D6\u5F53\u524D\u7528\u6237\u4FE1\u606F\u51FA\u9519\uFF0C\u8BE6\u7EC6\u9519\u8BEF\u4FE1\u606F\u4E3A\uFF1A"+qt.message)}return gt.tokenExpired=gt.exp*1e3,delete gt.exp,delete gt.iat,gt}function Br(Ve){Ve.uniIDHasRole=function(ot){let{role:gt}=Rn();return gt.indexOf(ot)>-1},Ve.uniIDHasPermission=function(ot){let{permission:gt}=Rn();return this.uniIDHasRole("admin")||gt.indexOf(ot)>-1},Ve.uniIDTokenValid=function(){let{tokenExpired:ot}=Rn();return ot>Date.now()}}function ni(Ve){let ot=Ve._context.config;f.isFunction(Ve._component.onError)&&(ot.errorHandler=Un(Ve)),kn(ot.optionMergeStrategies);let gt=ot.globalProperties;Br(gt),gt.$set=ln,gt.$applyOptions=yn,P.invokeCreateVueAppHook(Ve)}return N.initApp=ni,Object.defineProperty(N,"__esModule",{value:!0}),N}({},R,_,A);return S}function Zc(g,{nvue:s,UniShared:_,VueShared:A,VueReactivity:R}){let S={platform:s.config.env.platform,UniShared:_,VueShared:A,VueReactivity:R};return g(S,s.document)}function dP({setTimeout:g,clearTimeout:s,uni:_,getCurrentPages:A,Vue:R,weex:S,plus:N,BroadcastChannel:f,UniViewJSBridge:P,VueShared:He,UniShared:Rt}){var gn=function(B,dt,pn){"use strict";let Pn=["navigate","redirect","switchTab","reLaunch","navigateBack"],at=["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"],q=["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"],ne={hoverClass:{type:String,default:"navigator-hover"},url:{type:String,default:""},openType:{type:String,default:"navigate",validator(m){return Boolean(~Pn.indexOf(m))}},delta:{type:Number,default:1},hoverStartTime:{type:[Number,String],default:50},hoverStayTime:{type:[Number,String],default:600},exists:{type:String,default:""},hoverStopPropagation:{type:Boolean,default:!1},animationType:{type:String,default:"",validator(m){return!m||at.concat(q).includes(m)}},animationDuration:{type:[String,Number],default:300}};function En(m){return()=>{if(m.openType!=="navigateBack"&&!m.url){console.error("<navigator/> should have url attribute when using navigateTo, redirectTo, reLaunch or switchTab");return}let k=parseInt(m.animationDuration);switch(m.openType){case"navigate":_.navigateTo({url:m.url,animationType:m.animationType||"pop-in",animationDuration:k});break;case"redirect":_.redirectTo({url:m.url,exists:m.exists});break;case"switchTab":_.switchTab({url:m.url});break;case"reLaunch":_.reLaunch({url:m.url});break;case"navigateBack":_.navigateBack({delta:m.delta,animationType:m.animationType||"pop-out",animationDuration:k});break}}}function yn(m){if(m.hoverClass&&m.hoverClass!=="none"){let k={hoverClass:m.hoverClass};return dt.hasOwn(m,"hoverStartTime")&&(k.hoverStartTime=m.hoverStartTime),dt.hasOwn(m,"hoverStayTime")&&(k.hoverStayTime=m.hoverStayTime),dt.hasOwn(m,"hoverStopPropagation")&&(k.hoverStopPropagation=m.hoverStopPropagation),k}return{}}function ln(m,k){return B.createElementVNode("u-text",dt.extend({appendAsTree:!0},k),m)}let Un=[{"navigator-hover":{"":{backgroundColor:"rgba(0,0,0,0.1)",opacity:.7}}}];var on=B.defineComponent({name:"Navigator",props:ne,styles:Un,setup(m,{slots:k}){let z=En(m);return()=>B.createVNode("view",B.mergeProps(yn(m),{onClick:z}),[k.default&&k.default()])}});function kn(m){return Symbol(m)}function Hn(){return B.getCurrentInstance().root.proxy.$page.id}let vn,an,mn;function Rn(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function Br(){return vn.webview.currentWebview().id}let ni,Ve,ot={};function gt(m){let k=m.data&&m.data.__message;if(!k||!k.__page)return;let z=k.__page,j=ot[z];j&&j(k),k.keep||delete ot[z]}function qt(m,k){Rn()==="v8"?mn?(ni&&ni.close(),ni=new mn(Br()),ni.onmessage=gt):Ve||(Ve=an.requireModule("globalEvent"),Ve.addEventListener("plusMessage",gt)):window.__plusMessage=gt,ot[m]=k}class tn{constructor(k){this.webview=k}sendMessage(k){let z=JSON.parse(JSON.stringify({__message:{data:k}})),j=this.webview.id;mn?new mn(j).postMessage(z):vn.webview.postMessageToUniNView&&vn.webview.postMessageToUniNView(z,j)}close(){this.webview.close()}}function Xt({context:m={},url:k,data:z={},style:j={},onMessage:Z,onClose:ee}){vn=m.plus||N,an=m.weex||(typeof S=="object"?S:null),mn=m.BroadcastChannel||(typeof f=="object"?f:null);let ce={autoBackButton:!0,titleSize:"17px"},Ee=`page${Date.now()}`;j=dt.extend({},j),j.titleNView!==!1&&j.titleNView!=="none"&&(j.titleNView=dt.extend(ce,j.titleNView));let Te={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${k}.js`,defaultFontSize:16,viewport:vn.screen.resolutionWidth}};j=dt.extend(Te,j);let Ie=vn.webview.create("",Ee,j,{extras:{from:Br(),runtime:Rn(),data:z,useGlobalEvent:!mn}});return Ie.addEventListener("close",ee),qt(Ee,me=>{dt.isFunction(Z)&&Z(me.data),me.keep||Ie.close("auto")}),Ie.show(j.animationType,j.animationDuration),new tn(Ie)}let rr={for:{type:String,default:""}},sr=kn("ul");function Li(){let m=[];return B.provide(sr,{addHandler(k){m.push(k)},removeHandler(k){m.splice(m.indexOf(k),1)}}),m}var Di=B.defineComponent({name:"Label",props:rr,styles:[],setup(m,{slots:k}){let z=Hn(),j=Li(),Z=ee=>{m.for?P.emit(`uni-label-click-${z}-${m.for}`,ee,!0):j.length&&j[0](ee,!0)};return()=>B.createVNode("view",{onClick:Z},[k.default&&k.default()])}});function xn(m,k){wr(m.id,k),B.watch(()=>m.id,(z,j)=>{Wr(j,k,!0),wr(z,k,!0)}),B.onUnmounted(()=>{Wr(m.id,k)})}function wr(m,k,z){let j=Hn();z&&!m||!dt.isPlainObject(k)||Object.keys(k).forEach(Z=>{z?Z.indexOf("@")!==0&&Z.indexOf("uni-")!==0&&P.on(`uni-${Z}-${j}-${m}`,k[Z]):Z.indexOf("uni-")===0?P.on(Z,k[Z]):m&&P.on(`uni-${Z}-${j}-${m}`,k[Z])})}function Wr(m,k,z){let j=Hn();z&&!m||!dt.isPlainObject(k)||Object.keys(k).forEach(Z=>{z?Z.indexOf("@")!==0&&Z.indexOf("uni-")!==0&&P.off(`uni-${Z}-${j}-${m}`,k[Z]):Z.indexOf("uni-")===0?P.off(Z,k[Z]):m&&P.off(`uni-${Z}-${j}-${m}`,k[Z])})}function Gr(m){return Object.keys(m).map(k=>[k,m[k]])}let Ji=["class","style"],Zi=/^on[A-Z]+/,Io=(m={})=>{let{excludeListeners:k=!1,excludeKeys:z=[]}=m,j=B.getCurrentInstance(),Z=B.shallowRef({}),ee=B.shallowRef({}),ce=B.shallowRef({}),Ee=z.concat(Ji);return j.attrs=B.reactive(j.attrs),B.watchEffect(()=>{let Te=Gr(j.attrs).reduce((Ie,[me,Be])=>(Ee.includes(me)?Ie.exclude[me]=Be:Zi.test(me)?(k||(Ie.attrs[me]=Be),Ie.listeners[me]=Be):Ie.attrs[me]=Be,Ie),{exclude:{},attrs:{},listeners:{}});Z.value=Te.attrs,ee.value=Te.listeners,ce.value=Te.exclude}),{$attrs:Z,$listeners:ee,$excludeAttrs:ce}},No={id:{type:String,default:""},hoverClass:{type:String,default:"button-hover"},hoverStartTime:{type:[Number,String],default:20},hoverStayTime:{type:[Number,String],default:70},hoverStopPropagation:{type:Boolean,default:!1},disabled:{type:[Boolean,String],default:!1},formType:{type:String,default:""},openType:{type:String,default:""},loading:{type:[Boolean,String],default:!1},plain:{type:[Boolean,String],default:!1}},hr=kn("uf"),Cn=[{ub:{"":{flexDirection:"row",alignItems:"center",justifyContent:"center",position:"relative",paddingLeft:"5",paddingRight:"5",overflow:"hidden",color:"#000000",backgroundColor:"#f8f8f8",borderRadius:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#dbdbdb"}},"ub-t":{"":{color:"#000000",fontSize:"18",textDecoration:"none",lineHeight:"46"}},"ub-d":{"":{backgroundColor:"#f8f8f8"}},"ub-p":{"":{backgroundColor:"#007aff",borderColor:"#0062cc"}},"ub-w":{"":{backgroundColor:"#e64340",borderColor:"#b83633"}},"ub-d-t":{"":{color:"#000000"}},"ub-p-t":{"":{color:"#ffffff"}},"ub-w-t":{"":{color:"#ffffff"}},"ub-d-d":{"":{backgroundColor:"#f7f7f7"}},"ub-p-d":{"":{backgroundColor:"#63acfc",borderColor:"#4f8aca"}},"ub-w-d":{"":{backgroundColor:"#ec8b89",borderColor:"#bd6f6e"}},"ub-d-t-d":{"":{color:"#cccccc"}},"ub-p-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-d":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-plain":{"":{borderColor:"#353535",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-plain":{"":{borderColor:"#007aff",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-plain":{"":{borderColor:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-plain":{"":{color:"#353535"}},"ub-p-t-plain":{"":{color:"#007aff"}},"ub-w-t-plain":{"":{color:"#e64340"}},"ub-d-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-d-plain":{"":{borderColor:"#c6c6c6",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-p-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-w-t-d-plain":{"":{color:"rgba(0,0,0,0.2)"}},"ub-mini":{"":{lineHeight:"30",fontSize:"13",paddingTop:0,paddingRight:"17.5",paddingBottom:0,paddingLeft:"17.5"}},"ub-loading":{"":{width:"18",height:"18",marginRight:"10"}},"ub-d-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-loading":{"":{color:"rgba(255,255,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-loading-plain":{"":{color:"#353535"}},"ub-p-loading-plain":{"":{color:"#007aff",backgroundColor:"#0062cc"}},"ub-w-loading-plain":{"":{color:"#e64340",backgroundColor:"rgba(0,0,0,0)"}},"ub-d-hover":{"":{opacity:.8,backgroundColor:"#dedede"}},"ub-p-hover":{"":{opacity:.8,backgroundColor:"#0062cc"}},"ub-w-hover":{"":{opacity:.8,backgroundColor:"#ce3c39"}},"ub-d-t-hover":{"":{color:"rgba(0,0,0,0.6)"}},"ub-p-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-w-t-hover":{"":{color:"rgba(255,255,255,0.6)"}},"ub-d-hover-plain":{"":{color:"rgba(53,53,53,0.6)",borderColor:"rgba(53,53,53,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-p-hover-plain":{"":{color:"rgba(26,173,25,0.6)",borderColor:"rgba(0,122,255,0.6)",backgroundColor:"rgba(0,0,0,0)"}},"ub-w-hover-plain":{"":{color:"rgba(230,67,64,0.6)",borderColor:"rgba(230,67,64,0.6)",backgroundColor:"rgba(0,0,0,0)"}}}],On={default:"d",primary:"p",warn:"w"};var di=B.defineComponent({inheritAttrs:!1,name:"Button",props:dt.extend(No,{type:{type:String,default:"default"},size:{type:String,default:"default"}}),styles:Cn,setup(m,{slots:k,attrs:z}){let{$attrs:j,$excludeAttrs:Z,$listeners:ee}=Io({excludeListeners:!0}),ce=m.type,Ee=B.ref(null),Te=B.inject(hr,!1),Ie=(tt,ze)=>{let st=ee.value.onClick||(()=>{});if(m.disabled)return;st(tt);let Ft=m.formType;if(Ft){if(!Te)return;Ft==="submit"?Te.submit(tt):Ft==="reset"&&Te.reset(tt)}},me=tt=>{let ze="ub-"+On[ce]+tt;return m.disabled&&(ze+="-d"),m.plain&&(ze+="-plain"),m.size==="mini"&&tt==="-t"&&(ze+=" ub-mini"),ze},Be=tt=>{if(m.disabled)return"";let ze="ub-"+On[ce]+tt+"-hover";return m.plain&&(ze+="-plain"),ze},nt=B.inject(sr,!1);nt&&(nt.addHandler(Ie),B.onBeforeUnmount(()=>{nt.removeHandler(Ie)})),xn(m,{"label-click":Ie});let _t=B.computed(()=>{let tt={};for(let ze in ee.value){let st=ee.value[ze];ze!=="onClick"&&(tt[ze]=st)}return tt}),Gt=()=>{if(!k.default)return[];let tt=k.default();return tt.length===1&&tt[0].type===B.Text?[ln(tt[0].children,{class:"ub-t "+me("-t")})]:tt};return()=>{let tt=dt.extend({},yn(m),{hoverClass:Be("")},j.value,Z.value,_t.value);return B.createVNode("view",B.mergeProps({ref:Ee,class:["ub",me("")],onClick:Ie},tt),[m.loading?B.createVNode("loading-indicator",B.mergeProps({class:["ub-loading",`ub-${On[ce]}-loading`]},{arrow:"false",animating:"true"}),null):null,...Gt()])}}});let Xi={scaleArea:{type:Boolean,default:!1}};function Qi(m){let k=[];return dt.isArray(m)&&m.forEach(z=>{B.isVNode(z)?z.type===B.Fragment?k.push(...Qi(z.children)):k.push(z):dt.isArray(z)&&k.push(...Qi(z))}),k}function po(m){let k=Object.create(null);return function(j){return k[j]||(k[j]=m(j))}}let Ci=po(function(m){let k={},z=/;(?![^(]*\))/g,j=/:(.+)/;return m.split(z).forEach(function(Z){if(Z){let ee=Z.split(j);ee.length>1&&(k[ee[0].trim()]=ee[1].trim())}}),k}),lr=m=>new Promise((k,z)=>{if(!m)return k({width:0,height:0,top:0,left:0});S.requireModule("dom").getComponentRect(m,({size:Z})=>{k(Z)})});var Yr=B.defineComponent({name:"MovableArea",props:Xi,styles:[{"uni-movable-area":{"":{overflow:"hidden",width:"10px",height:"10px"}}}],setup(m,{slots:k}){let z=B.ref(0),j=B.ref(0),Z=B.ref(0),ee=B.ref(0),ce=B.ref(!1),Ee=B.ref(null),Te=[],Ie=null,me=ze=>{Ie=ze},Be=()=>lr(Ee.value).then(({width:ze,height:st,top:Ft,left:ht})=>{z.value=ze,j.value=st,Z.value=Ft,ee.value=ht}),nt=()=>{Be().then(()=>{Te.forEach(function(ze){ze.setParent()})})};B.onMounted(()=>{g(()=>{ce.value=!0,nt()},200)});let _t={onPanstart(ze){Ie&&Ie.touchstart(ze)},onPanmove(ze){ze.stopPropagation(),Ie&&Ie.touchmove(ze)},onPanend(ze){Ie&&Ie.touchend(ze),Ie=null}},Gt=ze=>{Te.push(ze)},tt=ze=>{let st=Te.indexOf(ze);st>=0&&Te.splice(st,1)};return B.provide("_isMounted",ce),B.provide("parentSize",{width:z,height:j,top:Z,left:ee}),B.provide("addMovableViewContext",Gt),B.provide("removeMovableViewContext",tt),B.provide("setTouchMovableViewContext",me),()=>{let ze=k.default&&k.default(),st=Qi(ze);return B.createVNode("view",B.mergeProps({ref:Ee,class:"uni-movable-area"},_t),[st])}}});function Sr(m){let k={};function z(me,Be){k[me]&&k[me](Be)}function j(me,Be){k[me]=function(nt){dt.isFunction(Be)&&(nt.touches=nt.changedTouches,Be(nt)===!1&&nt.stopPropagation())}}let Z=0,ee=0,ce=0,Ee=0,Te=function(me,Be,nt,_t){if(m({target:me.target,currentTarget:me.currentTarget,stopPropagation:me.stopPropagation.bind(me),touches:me.touches,changedTouches:me.changedTouches,detail:{state:Be,x:nt,y:_t,dx:nt-Z,dy:_t-ee,ddx:nt-ce,ddy:_t-Ee,timeStamp:me.timeStamp||Date.now()}})===!1)return!1},Ie=null;return j("touchstart",function(me){if(!Ie)return Ie=me,Z=ce=me.touches[0].pageX,ee=Ee=me.touches[0].pageY,Te(me,"start",Z,ee)}),j("touchmove",function(me){if(Ie){let Be=Te(me,"move",me.touches[0].pageX,me.touches[0].pageY);return ce=me.touches[0].pageX,Ee=me.touches[0].pageY,Be}}),j("touchend",function(me){if(Ie)return Ie=null,Te(me,"end",me.changedTouches[0].pageX,me.changedTouches[0].pageY)}),{touchstart:function(me){z("touchstart",me)},touchmove:function(me){z("touchmove",me)},touchend:function(me){z("touchend",me)}}}function gr(m,k){return(z,j)=>{m.value&&k(z,ko(z,m.value,j||{}))}}function ko(m,k,z={}){return k=vo(k),{type:m,timeStamp:Date.now(),target:k,currentTarget:k,detail:z}}let Ro=pn.cacheStringFunction(m=>m.charAt(0).toLowerCase()+m.slice(1));function vo(m){let{offsetLeft:k,offsetTop:z}=m,j=m.attr,Z={};return Object.keys(j||{}).forEach(ee=>{ee.indexOf("data")===0&&(Z[Ro(ee.replace("data",""))]=j[ee])}),{id:j&&j.id||"",dataset:Z,offsetLeft:k||0,offsetTop:z||0}}function Mr(m,k,z){return m>k-z&&m<k+z}function cr(m,k){return Mr(m,0,k)}function Ar(){}Ar.prototype.x=function(m){return Math.sqrt(m)};function ri(m,k){this._m=m,this._f=1e3*k,this._startTime=0,this._v=0}ri.prototype.setV=function(m,k){let z=Math.pow(Math.pow(m,2)+Math.pow(k,2),.5);this._x_v=m,this._y_v=k,this._x_a=-this._f*this._x_v/z,this._y_a=-this._f*this._y_v/z,this._t=Math.abs(m/this._x_a)||Math.abs(k/this._y_a),this._lastDt=null,this._startTime=new Date().getTime()},ri.prototype.setS=function(m,k){this._x_s=m,this._y_s=k},ri.prototype.s=function(m){m===void 0&&(m=(new Date().getTime()-this._startTime)/1e3),m>this._t&&(m=this._t,this._lastDt=m);let k=this._x_v*m+.5*this._x_a*Math.pow(m,2)+this._x_s,z=this._y_v*m+.5*this._y_a*Math.pow(m,2)+this._y_s;return(this._x_a>0&&k<this._endPositionX||this._x_a<0&&k>this._endPositionX)&&(k=this._endPositionX),(this._y_a>0&&z<this._endPositionY||this._y_a<0&&z>this._endPositionY)&&(z=this._endPositionY),{x:k,y:z}},ri.prototype.ds=function(m){return m===void 0&&(m=(new Date().getTime()-this._startTime)/1e3),m>this._t&&(m=this._t),{dx:this._x_v+this._x_a*m,dy:this._y_v+this._y_a*m}},ri.prototype.delta=function(){return{x:-1.5*Math.pow(this._x_v,2)/this._x_a||0,y:-1.5*Math.pow(this._y_v,2)/this._y_a||0}},ri.prototype.dt=function(){return-this._x_v/this._x_a},ri.prototype.done=function(){let m=Mr(this.s().x,this._endPositionX)||Mr(this.s().y,this._endPositionY)||this._lastDt===this._t;return this._lastDt=null,m},ri.prototype.setEnd=function(m,k){this._endPositionX=m,this._endPositionY=k},ri.prototype.reconfigure=function(m,k){this._m=m,this._f=1e3*k};function Wn(m,k,z){this._m=m,this._k=k,this._c=z,this._solution=null,this._endPosition=0,this._startTime=0}Wn.prototype._solve=function(m,k){let z=this._c,j=this._m,Z=this._k,ee=z*z-4*j*Z;if(ee===0){let me=-z/(2*j),Be=m,nt=k/(me*m);return{x:function(_t){return(Be+nt*_t)*Math.pow(Math.E,me*_t)},dx:function(_t){let Gt=Math.pow(Math.E,me*_t);return me*(Be+nt*_t)*Gt+nt*Gt}}}if(ee>0){let me=(-z-Math.sqrt(ee))/(2*j),Be=(-z+Math.sqrt(ee))/(2*j),nt=(k-me*m)/(Be-me),_t=m-nt;return{x:function(Gt){let tt,ze;return Gt===this._t&&(tt=this._powER1T,ze=this._powER2T),this._t=Gt,tt||(tt=this._powER1T=Math.pow(Math.E,me*Gt)),ze||(ze=this._powER2T=Math.pow(Math.E,Be*Gt)),_t*tt+nt*ze},dx:function(Gt){let tt,ze;return Gt===this._t&&(tt=this._powER1T,ze=this._powER2T),this._t=Gt,tt||(tt=this._powER1T=Math.pow(Math.E,me*Gt)),ze||(ze=this._powER2T=Math.pow(Math.E,Be*Gt)),_t*me*tt+nt*Be*ze}}}let ce=Math.sqrt(4*j*Z-z*z)/(2*j),Ee=-z/2*j,Te=m,Ie=(k-Ee*m)/ce;return{x:function(me){return Math.pow(Math.E,Ee*me)*(Te*Math.cos(ce*me)+Ie*Math.sin(ce*me))},dx:function(me){let Be=Math.pow(Math.E,Ee*me),nt=Math.cos(ce*me),_t=Math.sin(ce*me);return Be*(Ie*ce*nt-Te*ce*_t)+Ee*Be*(Ie*_t+Te*nt)}}},Wn.prototype.x=function(m){return m===void 0&&(m=(new Date().getTime()-this._startTime)/1e3),this._solution?this._endPosition+this._solution.x(m):0},Wn.prototype.dx=function(m){return m===void 0&&(m=(new Date().getTime()-this._startTime)/1e3),this._solution?this._solution.dx(m):0},Wn.prototype.setEnd=function(m,k,z){if(z||(z=new Date().getTime()),m!==this._endPosition||!cr(k,.1)){k=k||0;let j=this._endPosition;this._solution&&(cr(k,.1)&&(k=this._solution.dx((z-this._startTime)/1e3)),j=this._solution.x((z-this._startTime)/1e3),cr(k,.1)&&(k=0),cr(j,.1)&&(j=0),j+=this._endPosition),this._solution&&cr(j-m,.1)&&cr(k,.1)||(this._endPosition=m,this._solution=this._solve(j-this._endPosition,k),this._startTime=z)}},Wn.prototype.snap=function(m){this._startTime=new Date().getTime(),this._endPosition=m,this._solution={x:function(){return 0},dx:function(){return 0}}},Wn.prototype.done=function(m){return m||(m=new Date().getTime()),Mr(this.x(),this._endPosition,.1)&&cr(this.dx(),.1)},Wn.prototype.reconfigure=function(m,k,z){this._m=m,this._k=k,this._c=z,this.done()||(this._solution=this._solve(this.x()-this._endPosition,this.dx()),this._startTime=new Date().getTime())},Wn.prototype.springConstant=function(){return this._k},Wn.prototype.damping=function(){return this._c},Wn.prototype.configuration=function(){function m(z,j){z.reconfigure(1,j,z.damping())}function k(z,j){z.reconfigure(1,z.springConstant(),j)}return[{label:"Spring Constant",read:this.springConstant.bind(this),write:m.bind(this,this),min:100,max:1e3},{label:"Damping",read:this.damping.bind(this),write:k.bind(this,this),min:1,max:500}]};function qr(m,k,z){this._springX=new Wn(m,k,z),this._springY=new Wn(m,k,z),this._springScale=new Wn(m,k,z),this._startTime=0}qr.prototype.setEnd=function(m,k,z,j){let Z=new Date().getTime();this._springX.setEnd(m,j,Z),this._springY.setEnd(k,j,Z),this._springScale.setEnd(z,j,Z),this._startTime=Z},qr.prototype.x=function(){let m=(new Date().getTime()-this._startTime)/1e3;return{x:this._springX.x(m),y:this._springY.x(m),scale:this._springScale.x(m)}},qr.prototype.done=function(){let m=new Date().getTime();return this._springX.done(m)&&this._springY.done(m)&&this._springScale.done(m)},qr.prototype.reconfigure=function(m,k,z){this._springX.reconfigure(m,k,z),this._springY.reconfigure(m,k,z),this._springScale.reconfigure(m,k,z)};let eo={direction:{type:String,default:"none"},inertia:{type:[Boolean,String],default:!1},outOfBounds:{type:[Boolean,String],default:!1},x:{type:[Number,String],default:0},y:{type:[Number,String],default:0},damping:{type:[Number,String],default:20},friction:{type:[Number,String],default:2},disabled:{type:[Boolean,String],default:!1},scale:{type:[Boolean,String],default:!1},scaleMin:{type:[Number,String],default:.5},scaleMax:{type:[Number,String],default:10},scaleValue:{type:[Number,String],default:1},animation:{type:[Boolean,String],default:!0}};function Fi(m,k){return+((1e3*m-1e3*k)/1e3).toFixed(1)}function Lr(m,k,z){let j={id:0,cancelled:!1},Z=function(ce){ce&&ce.id&&ii(ce.id),ce&&(ce.cancelled=!0)};function ee(ce,Ee,Te,Ie){if(!ce||!ce.cancelled){Te(Ee);let me=Ee.done();me||ce.cancelled||(ce.id=bo(ee.bind(null,ce,Ee,Te,Ie))),me&&Ie&&Ie(Ee)}}return ee(j,m,k,z),{cancel:Z.bind(null,j),model:m}}let mo=!1;function _o(m){mo||(mo=!0,bo(function(){m(),mo=!1}))}function bo(m){return g(m,16)}function ii(m){s(m)}let oi=S.requireModule("animation");var Oi=B.defineComponent({name:"MovableView",props:eo,emits:["change","scale"],styles:[{"uni-movable-view":{"":{position:"absolute",top:"0px",left:"0px",width:"10px",height:"10px"}}}],setup(m,{emit:k,slots:z}){let j=B.ref(null),Z=gr(j,k),ee=B.inject("setTouchMovableViewContext",()=>{}),ce=hi(m,Z,j,ee);return()=>{let Ee={preventGesture:!0};return B.createVNode("view",B.mergeProps({ref:j,onTouchstart:ce,class:"uni-movable-view",style:"transform-origin: center;"},Ee),[z.default&&z.default()])}}});function hi(m,k,z,j){let Z=B.inject("_isMounted",B.ref(!1)),ee=B.inject("parentSize",{width:B.ref(0),height:B.ref(0),top:B.ref(0),left:B.ref(0)}),ce=B.inject("addMovableViewContext",()=>{}),Ee=B.inject("removeMovableViewContext",()=>{}),Te={touchstart:()=>{},touchmove:()=>{},touchend:()=>{}};function Ie(Ne){return Number(Ne)||0}function me(Ne){return Ne=Number(Ne),isNaN(Ne)?1:Ne}let Be=B.ref(Ie(m.x)),nt=B.ref(Ie(m.y)),_t=B.ref(me(Number(m.scaleValue))),Gt=B.ref(0),tt=B.ref(0),ze=B.ref(0),st=B.ref(0),Ft=B.ref(0),ht=B.ref(0),Je=null,Ct=null,wn={x:0,y:0},un={x:0,y:0},nn=1,Sn=0,Ht=0,Ln=!1,Ei,ir,Er=null,Do=null,lo={top:0,left:0,width:0,height:0},$r=new Ar,Fo=new Ar,$t={historyX:[0,0],historyY:[0,0],historyT:[0,0]},_n=B.computed(()=>{let Ne=Number(m.damping);return isNaN(Ne)?20:Ne}),Fa=B.computed(()=>{let Ne=Number(m.friction);return isNaN(Ne)||Ne<=0?2:Ne}),yi=B.computed(()=>{let Ne=Number(m.scaleMin);return isNaN(Ne)?.5:Ne}),Xr=B.computed(()=>{let Ne=Number(m.scaleMax);return isNaN(Ne)?10:Ne}),Vo=B.computed(()=>m.direction==="all"||m.direction==="horizontal"),sa=B.computed(()=>m.direction==="all"||m.direction==="vertical"),Dn=new qr(1,9*Math.pow(_n.value,2)/40,_n.value),An=new ri(1,Fa.value);B.watch(()=>m.x,Ne=>{Be.value=Ie(Ne)}),B.watch(()=>m.y,Ne=>{nt.value=Ie(Ne)}),B.watch(()=>m.scaleValue,Ne=>{_t.value=me(Number(Ne))}),B.watch(Be,ei),B.watch(nt,Pr),B.watch(_t,os),B.watch(yi,Ur),B.watch(Xr,Ur);function Qr(){Ct&&Ct.cancel(),Je&&Je.cancel()}function ei(Ne){if(Vo.value){if(Ne+un.x===Sn)return Sn;Je&&Je.cancel(),co(Ne+un.x,nt.value+un.y,nn)}return Ne}function Pr(Ne){if(sa.value){if(Ne+un.y===Ht)return Ht;Je&&Je.cancel(),co(Be.value+un.x,Ne+un.y,nn)}return Ne}function Ur(){if(!m.scale)return!1;Sa(nn,!0)}function os(Ne){return m.scale?(Ne=Go(Ne),Sa(Ne,!0),Ne):!1}function la(){m.disabled||(Qr(),$t.historyX=[0,0],$t.historyY=[0,0],$t.historyT=[0,0],Vo.value&&(Ei=Sn),sa.value&&(ir=Ht),Er=null,Do=null,Ln=!0)}function Fn(Ne){if(!m.disabled&&Ln){let Ot=Sn,Pt=Ht;if(Do===null&&(Do=Math.abs(Ne.detail.dx/Ne.detail.dy)>1?"htouchmove":"vtouchmove"),Vo.value&&(Ot=Ne.detail.dx+Ei,$t.historyX.shift(),$t.historyX.push(Ot),!sa.value&&Er===null&&(Er=Math.abs(Ne.detail.dx/Ne.detail.dy)<1)),sa.value&&(Pt=Ne.detail.dy+ir,$t.historyY.shift(),$t.historyY.push(Pt),!Vo.value&&Er===null&&(Er=Math.abs(Ne.detail.dy/Ne.detail.dx)<1)),$t.historyT.shift(),$t.historyT.push(Ne.detail.timeStamp),!Er){let Tn="touch";Ot<ze.value?m.outOfBounds?(Tn="touch-out-of-bounds",Ot=ze.value-$r.x(ze.value-Ot)):Ot=ze.value:Ot>Ft.value&&(m.outOfBounds?(Tn="touch-out-of-bounds",Ot=Ft.value+$r.x(Ot-Ft.value)):Ot=Ft.value),Pt<st.value?m.outOfBounds?(Tn="touch-out-of-bounds",Pt=st.value-Fo.x(st.value-Pt)):Pt=st.value:Pt>ht.value&&(m.outOfBounds?(Tn="touch-out-of-bounds",Pt=ht.value+Fo.x(Pt-ht.value)):Pt=ht.value),_o(function(){wo(Ot,Pt,nn,Tn)})}}}function fn(){if(!m.disabled&&Ln&&(Ln=!1,!Er&&!Mt("out-of-bounds")&&m.inertia)){let Ne=1e3*($t.historyX[1]-$t.historyX[0])/($t.historyT[1]-$t.historyT[0]),Ot=1e3*($t.historyY[1]-$t.historyY[0])/($t.historyT[1]-$t.historyT[0]);An.setV(Ne,Ot),An.setS(Sn,Ht);let Pt=An.delta().x,Tn=An.delta().y,Qn=Pt+Sn,Nr=Tn+Ht;Qn<ze.value?(Qn=ze.value,Nr=Ht+(ze.value-Sn)*Tn/Pt):Qn>Ft.value&&(Qn=Ft.value,Nr=Ht+(Ft.value-Sn)*Tn/Pt),Nr<st.value?(Nr=st.value,Qn=Sn+(st.value-Ht)*Pt/Tn):Nr>ht.value&&(Nr=ht.value,Qn=Sn+(ht.value-Ht)*Pt/Tn),An.setEnd(Qn,Nr),Ct=Lr(An,function(){let Gi=An.s(),Yi=Gi.x,So=Gi.y;wo(Yi,So,nn,"friction")},function(){Ct.cancel()})}}function fr(Ne,Ot){let Pt=!1;return Ne>Ft.value?(Ne=Ft.value,Pt=!0):Ne<ze.value&&(Ne=ze.value,Pt=!0),Ot>ht.value?(Ot=ht.value,Pt=!0):Ot<st.value&&(Ot=st.value,Pt=!0),{x:Ne,y:Ot,outOfBounds:Pt}}function Ir(){wn.x=lo.left-ee.left.value,wn.y=lo.top-ee.top.value}function Wi(Ne){Ne=Ne||nn,Ne=Go(Ne),tt.value=lo.height/nn,Gt.value=lo.width/nn;let Ot=tt.value*Ne,Pt=Gt.value*Ne;un.x=(Pt-Gt.value)/2,un.y=(Ot-tt.value)/2}function Va(){let Ne=0-wn.x+un.x,Ot=ee.width.value-Gt.value-wn.x-un.x;ze.value=Math.min(Ne,Ot),Ft.value=Math.max(Ne,Ot);let Pt=0-wn.y+un.y,Tn=ee.height.value-tt.value-wn.y-un.y;st.value=Math.min(Pt,Tn),ht.value=Math.max(Pt,Tn)}function Sa(Ne,Ot){if(m.scale){Ne=Go(Ne),Wi(Ne),Va();let Pt=fr(Sn,Ht),Tn=Pt.x,Qn=Pt.y;Ot?co(Tn,Qn,Ne,"",!0,!0):_o(function(){wo(Tn,Qn,Ne,"",!0,!0)})}}function Go(Ne){return Ne=Math.max(.5,yi.value,Ne),Ne=Math.min(10,Xr.value,Ne),Ne}function co(Ne,Ot,Pt,Tn,Qn,Nr){Qr(),Vo.value||(Ne=Sn),sa.value||(Ot=Ht),m.scale||(Pt=nn);let Gi=fr(Ne,Ot);if(Ne=Gi.x,Ot=Gi.y,!m.animation){wo(Ne,Ot,Pt,Tn,Qn,Nr);return}Dn._springX._solution=null,Dn._springY._solution=null,Dn._springScale._solution=null,Dn._springX._endPosition=Sn,Dn._springY._endPosition=Ht,Dn._springScale._endPosition=nn,Dn.setEnd(Ne,Ot,Pt,1),Je=Lr(Dn,function(){let Yi=Dn.x(),So=Yi.x,Yo=Yi.y,$a=Yi.scale;wo(So,Yo,$a,Tn,Qn,Nr)},function(){Je.cancel()})}function Mt(Ne){let Ot=fr(Sn,Ht),Pt=Ot.x,Tn=Ot.y,Qn=Ot.outOfBounds;return Qn&&co(Pt,Tn,nn,Ne),Qn}function wo(Ne,Ot,Pt,Tn="",Qn,Nr){Ne!==null&&Ne.toString()!=="NaN"&&typeof Ne=="number"||(Ne=Sn||0),Ot!==null&&Ot.toString()!=="NaN"&&typeof Ot=="number"||(Ot=Ht||0),Ne=Number(Ne.toFixed(1)),Ot=Number(Ot.toFixed(1)),Pt=Number(Pt.toFixed(1)),Sn===Ne&&Ht===Ot||Qn||k("change",{x:Fi(Ne,un.x),y:Fi(Ot,un.y),source:Tn}),m.scale||(Pt=nn),Pt=Go(Pt),Pt=+Pt.toFixed(3),Nr&&Pt!==nn&&k("scale",{x:Ne,y:Ot,scale:Pt});let Gi=`translate(${Ne}px, ${Ot}px) scale(${Pt})`;oi.transition(z.value,{styles:{transform:Gi},duration:0,delay:0}),Sn=Ne,Ht=Ot,nn=Pt}function as(){return lr(z.value).then(Ne=>{lo=Ne})}function Aa(){if(!Z.value)return;Qr();let Ne=m.scale?_t.value:1;Ir(),Wi(Ne),Va(),Sn=Be.value+un.x,Ht=nt.value+un.y;let Ot=fr(Sn,Ht),Pt=Ot.x,Tn=Ot.y;wo(Pt,Tn,Ne,"",!0)}return B.onMounted(()=>{Te=Sr(Ot=>{switch(Ot.detail.state){case"start":la();break;case"move":Fn(Ot);break;case"end":fn()}}),g(()=>{as().then(()=>{Aa()})},100),An.reconfigure(1,Fa.value),Dn.reconfigure(1,9*Math.pow(_n.value,2)/40,_n.value);let Ne={setParent:Aa};ce(Ne),B.onUnmounted(()=>{Ee(Ne)})}),B.onUnmounted(()=>{Qr()}),()=>{j(Te)}}let Kn=16,Cr={activeColor:pn.PRIMARY_COLOR,backgroundColor:"#EBEBEB",activeMode:"backwards"},Vi={percent:{type:[Number,String],default:0,validator(m){return!isNaN(parseFloat(m))}},fontSize:{type:[String,Number],default:Kn},showInfo:{type:[Boolean,String],default:!1},strokeWidth:{type:[Number,String],default:6,validator(m){return!isNaN(parseFloat(m))}},color:{type:String,default:Cr.activeColor},activeColor:{type:String,default:Cr.activeColor},backgroundColor:{type:String,default:Cr.backgroundColor},active:{type:[Boolean,String],default:!1},activeMode:{type:String,default:Cr.activeMode},duration:{type:[Number,String],default:30,validator(m){return!isNaN(parseFloat(m))}},borderRadius:{type:[Number,String],default:0}},xt=[{"uni-progress":{"":{flex:1,flexDirection:"row",alignItems:"center"}},"uni-progress-bar":{"":{flex:1}},"uni-progress-inner-bar":{"":{position:"absolute"}},"uni-progress-info":{"":{marginLeft:"15px"}}}];var we=B.defineComponent({name:"Progress",props:Vi,styles:xt,emits:["activeend"],setup(m,{emit:k}){let z=B.ref(null),j=B.ref(null),Z=gr(z,k),ee=Ti(m);return B.watch(()=>ee.realPercent,(ce,Ee)=>{ee.lastPercent=Ee||0,$i(ee,m,Z)}),B.onMounted(()=>{g(()=>{lr(j.value).then(({width:ce})=>{ee.progressWidth=ce||0,$i(ee,m,Z)})},50)}),()=>{let{showInfo:ce,fontSize:Ee}=m,{outerBarStyle:Te,innerBarStyle:Ie,currentPercent:me}=ee;return B.createVNode("div",{ref:z,class:"uni-progress"},[B.createVNode("div",{ref:j,style:Te,class:"uni-progress-bar"},[B.createVNode("div",{style:Ie,class:"uni-progress-inner-bar"},null)]),ce?ln(me+"%",{class:"uni-progress-info",style:{fontSize:Ee}}):null])}}});function Ti(m){let k=B.ref(0),z=B.ref(0),j=B.computed(()=>({backgroundColor:m.backgroundColor,borderRadius:m.borderRadius,height:m.strokeWidth})),Z=B.computed(()=>{let Ee=m.color!==Cr.activeColor&&m.activeColor===Cr.activeColor?m.color:m.activeColor;return{width:k.value*z.value/100,height:m.strokeWidth,backgroundColor:Ee,borderRadius:m.borderRadius}}),ee=B.computed(()=>{let Ee=parseFloat(m.percent);return Ee<0&&(Ee=0),Ee>100&&(Ee=100),Ee});return B.reactive({outerBarStyle:j,innerBarStyle:Z,realPercent:ee,currentPercent:k,strokeTimer:0,lastPercent:0,progressWidth:z})}function $i(m,k,z){m.strokeTimer&&clearInterval(m.strokeTimer),k.active?(m.currentPercent=k.activeMode===Cr.activeMode?0:m.lastPercent,m.strokeTimer=setInterval(()=>{m.currentPercent+1>m.realPercent?(m.currentPercent=m.realPercent,m.strokeTimer&&clearInterval(m.strokeTimer),z("activeend",{})):m.currentPercent+=1},parseFloat(k.duration))):m.currentPercent=m.realPercent}let Kr={value:{type:Array,default(){return[]},validator:function(m){return dt.isArray(m)&&m.filter(k=>typeof k=="number").length===m.length}},indicatorStyle:{type:String,default:""},indicatorClass:{type:String,default:""},maskStyle:{type:String,default:""},maskClass:{type:String,default:""}},Dr=dt.extend({},Kr,{height:{type:[Number,String],default:0}});var jn=B.defineComponent({name:"PickerView",props:Dr,emits:["change","update:value"],setup(m,{slots:k,emit:z}){let j=B.ref(null),Z=Bn(m),ee=gr(j,z),ce=[],Ee=Ie=>Array.prototype.indexOf.call(ce,Ie),Te=Ie=>B.computed({get(){let me=Ee(Ie.vnode);return Z.value[me]||0},set(me){if(!Ie.data._isMounted)return;let Be=Ee(Ie.vnode);if(Be<0)return;if(Z.value[Be]!==me){Z.value[Be]=me;let _t=Z.value.map(Gt=>Gt);z("update:value",_t),ee("change",{value:_t})}}});return B.provide("getPickerViewColumn",Te),B.provide("pickerViewProps",m),()=>{let Ie=k.default&&k.default();ce=Qi(Ie);let me=m.height?{height:`${parseFloat(m.height)}px`}:{};return B.createVNode("view",B.mergeProps({ref:j,class:"uni-picker-view",style:me},{preventGesture:!0}),[B.createVNode("view",{class:"uni-picker-view-wrapper"},[Ie])])}},styles:[{"uni-picker-view":{"":{position:"relative"}},"uni-picker-view-wrapper":{"":{display:"flex",flexDirection:"row",position:"absolute",top:0,left:0,right:0,bottom:0,overflow:"hidden"}}}]});function Bn(m){let k=B.reactive([...m.value]),z=B.reactive({value:k});return B.watch(()=>m.value,j=>{z.value.length=j.length,j.forEach((Z,ee)=>{Z!==z.value[ee]&&z.value.splice(ee,1,Z)})}),z}let xo=S.requireModule("dom"),Pi=S.config.env.platform.toLowerCase()==="android";function Ut(m){return dt.extend({},dt.isString(m)?Ci(m):m)}var gi=B.defineComponent({name:"PickerViewColumn",props:{length:{type:[Number,String],default:0}},data:()=>({_isMounted:!1}),setup(m,{slots:k}){let z=B.getCurrentInstance(),j=B.ref(null),Z=B.ref(null),ee=B.ref(null),ce=B.ref(null),Ee=B.inject("pickerViewProps"),Ie=B.inject("getPickerViewColumn")(z),me=B.computed(()=>Ut(Ee.indicatorStyle)),Be=B.computed(()=>Ut(Ee.maskStyle)),nt=B.ref(0);nt.value=pi(me.value);let _t=B.ref(0);_t.value=parseFloat(Ee.height),B.watch(()=>m.length,()=>{g(()=>{tt(Ie.value,!0,!0)},150)});let Gt,tt=(ht,Je=!0,Ct)=>{Ie.value===ht&&!Ct||(xo.scrollToElement(Z.value,{offset:ht*nt.value,animated:Je}),Ie.value=ht,Je&&(Gt=Date.now()))},ze=ht=>{if(Date.now()-Gt<340)return;let Je=ht.detail.contentOffset.y,Ct=Math.round(Je/nt.value);Je%nt.value?tt(Ct,!0,!0):Ie.value=Ct},st=()=>{let ht,Je;g(()=>{Promise.all([lr(j.value).then(({height:Ct})=>{ht=_t.value=Ct}),Pi&&m.length?lr(ee.value).then(({height:Ct})=>{Je=nt.value=Ct/parseFloat(m.length)}):lr(ce.value).then(({height:Ct})=>{Je=nt.value=Ct})]).then(()=>{ht&&Je?g(()=>{z.data._isMounted=!0,tt(Ie.value,!1,!0)},50):st()})},50)};B.onMounted(st);let Ft=ht=>ht?Pi?B.createVNode("div",{ref:ee,style:"flex-direction:column;"},[ht]):ht:null;return()=>{let ht=k.default&&k.default(),Je=(_t.value-nt.value)/2,Ct=`${_t.value-Je}px`,wn={showScrollbar:!1,scrollToBegin:!1,decelerationRate:.3,scrollY:!0};return Pi||(wn.scrollTop=Ie.value*nt.value),B.createVNode("view",{ref:j,class:"uni-picker-view-column"},[B.createVNode("scroll-view",B.mergeProps({class:"uni-picker-view-group",style:"flex-direction:column;",onScrollend:ze},wn),[B.createVNode("view",{ref:Z,class:"uni-picker-view-content",style:{paddingTop:`${Je}px`,paddingBottom:`${Je}px`}},[Ft(ht)])]),B.createVNode("u-scalable",{class:"uni-picker-view-mask",style:Be.value},[B.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-top",style:{bottom:Ct}},null),B.createVNode("u-scalable",{class:"uni-picker-view-mask uni-picker-view-mask-bottom",style:{top:Ct}},null)]),B.createVNode("u-scalable",{ref:ce,class:"uni-picker-view-indicator",style:dt.extend({},me.value,{top:`${Je}px`})},null)])}},styles:[{"uni-picker-view-column":{"":{flex:1,position:"relative",alignItems:"stretch",overflow:"hidden"}},"uni-picker-view-mask":{"":{position:"absolute",top:0,left:0,right:0,bottom:0,pointerEvents:"none"}},"uni-picker-view-mask-top":{"":{bottom:0,backgroundImage:"linear-gradient(to bottom,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-mask-bottom":{"":{top:0,backgroundImage:"linear-gradient(to top,rgba(255, 255, 255, 0.95),rgba(255, 255, 255, 0.6))"}},"uni-picker-view-group":{"":{position:"absolute",top:0,left:0,right:0,bottom:0}},"uni-picker-view-content":{"":{flexDirection:"column",paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0}},"uni-picker-view-indicator":{"":{position:"absolute",left:0,right:0,top:0,height:"34px",pointerEvents:"none",borderColor:"#e5e5e5",borderTopWidth:"1px",borderBottomWidth:"1px"}}}]});function pi(m){let z=(m.height||m.lineHeight||"").match(/(-?[\d\.]+)px/),j=0;return z&&(j=parseFloat(z[1])),j}let Kt={SELECTOR:"selector",MULTISELECTOR:"multiSelector",TIME:"time",DATE:"date"},Gn={YEAR:"year",MONTH:"month",DAY:"day"};function Or(m){return m>9?m:`0${m}`}function In(m,k){m=String(m||"");let z=new Date;if(k===Kt.TIME){let j=m.split(":");j.length===2&&z.setHours(parseInt(j[0]),parseInt(j[1]))}else{let j=m.split("-");j.length===3&&z.setFullYear(parseInt(j[0]),parseInt(String(parseFloat(j[1])-1)),parseInt(j[2]))}return z}function Ii(m){if(m.mode===Kt.TIME)return"00:00";if(m.mode===Kt.DATE){let k=new Date().getFullYear()-100;switch(m.fields){case Gn.YEAR:return k;case Gn.MONTH:return k+"-01";default:return k+"-01-01"}}return""}function Bo(m){if(m.mode===Kt.TIME)return"23:59";if(m.mode===Kt.DATE){let k=new Date().getFullYear()+100;switch(m.fields){case Gn.YEAR:return k;case Gn.MONTH:return k+"-12";default:return k+"-12-31"}}return""}let vi={name:{type:String,default:""},range:{type:Array,default(){return[]}},rangeKey:{type:String,default:""},value:{type:[Number,String,Array],default:0},mode:{type:String,default:Kt.SELECTOR,validator(m){return Object.values(Kt).indexOf(m)>=0}},fields:{type:String,default:""},start:{type:String,default:Ii},end:{type:String,default:Bo},disabled:{type:[Boolean,String],default:!1}};var to=B.defineComponent({name:"Picker",props:vi,emits:["change","cancel","columnchange"],setup(m,{slots:k,emit:z}){let j=B.ref(null),Z=gr(j,z),ee=B.ref(null),ce=B.ref(null),Ee=()=>{let tt=m.value;switch(m.mode){case Kt.MULTISELECTOR:{dt.isArray(tt)||(tt=[]),dt.isArray(ee.value)||(ee.value=[]);let ze=ee.value.length=Math.max(tt.length,m.range.length);for(let st=0;st<ze;st++){let Ft=Number(tt[st]),ht=Number(ee.value[st]),Je=isNaN(Ft)?isNaN(ht)?0:ht:Ft;ee.value.splice(st,1,Je<0?0:Je)}}break;case Kt.TIME:case Kt.DATE:ee.value=String(tt);break;default:{let ze=Number(tt);ee.value=ze<0?0:ze;break}}},Te=tt=>{ce.value&&ce.value.sendMessage(tt)},Ie=tt=>{let ze={event:"cancel"};ce.value=Xt({url:"__uniapppicker",data:tt,style:{titleNView:!1,animationType:"none",animationDuration:0,background:"rgba(0,0,0,0)",popGesture:"none"},onMessage:st=>{let Ft=st.event;if(Ft==="created"){Te(tt);return}if(Ft==="columnchange"){delete st.event,Z(Ft,st);return}ze=st},onClose:()=>{ce.value=null;let st=ze.event;delete ze.event,st&&Z(st,ze)}})},me=tt=>{N.nativeUI[m.mode===Kt.TIME?"pickTime":"pickDate"](ze=>{let st=ze.date;Z("change",{value:m.mode===Kt.TIME?`${Or(st.getHours())}:${Or(st.getMinutes())}`:`${st.getFullYear()}-${Or(st.getMonth()+1)}-${Or(st.getDate())}`})},()=>{Z("cancel",{})},m.mode===Kt.TIME?{time:In(m.value,Kt.TIME)}:{date:In(m.value,Kt.DATE),minDate:In(m.start,Kt.DATE),maxDate:In(m.end,Kt.DATE)})},Be=tt=>{(tt.mode===Kt.TIME||tt.mode===Kt.DATE)&&!tt.fields?me():(tt.fields=Object.values(Gn).includes(tt.fields)?tt.fields:Gn.DAY,Ie(tt))},nt=tt=>{m.disabled||Be(dt.extend({},m,{value:ee.value,locale:_.getLocale()}))},_t=B.inject(hr,!1),Gt={submit:()=>[m.name,ee.value],reset:()=>{switch(m.mode){case Kt.SELECTOR:ee.value=0;break;case Kt.MULTISELECTOR:dt.isArray(m.value)&&(ee.value=m.value.map(tt=>0));break;case Kt.DATE:case Kt.TIME:ee.value="";break}}};return _t&&(_t.addField(Gt),B.onBeforeUnmount(()=>_t.removeField(Gt))),Object.keys(m).forEach(tt=>{B.watch(()=>m[tt],ze=>{let st={};st[tt]=ze,Te(st)},{deep:!0})}),B.watch(()=>m.value,Ee,{deep:!0}),Ee(),()=>B.createVNode("view",{ref:j,onClick:nt},[k.default&&k.default()])}});let Zo={name:{type:String,default:""},min:{type:[Number,String],default:0},max:{type:[Number,String],default:100},value:{type:[Number,String],default:0},step:{type:[Number,String],default:1},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#e9e9e9"},backgroundColor:{type:String,default:"#e9e9e9"},activeColor:{type:String,default:"#007aff"},selectedColor:{type:String,default:"#007aff"},blockColor:{type:String,default:"#ffffff"},blockSize:{type:[Number,String],default:28},showValue:{type:[Boolean,String],default:!1}},Ui=[{"uni-slider":{"":{flex:1,flexDirection:"column",marginTop:"12",marginRight:0,marginBottom:"12",marginLeft:0,paddingTop:0,paddingRight:0,paddingBottom:0,paddingLeft:0}},"uni-slider-wrapper":{"":{flexDirection:"row",alignItems:"center",minHeight:"30"}},"uni-slider-tap-area":{"":{position:"relative",flex:1,flexDirection:"column",paddingTop:"15",paddingRight:0,paddingBottom:"15",paddingLeft:0}},"uni-slider-handle-wrapper":{"":{position:"relative",marginTop:0,marginRight:"18",marginBottom:0,marginLeft:"18",height:"2",borderRadius:"5",backgroundColor:"#e9e9e9",transitionProperty:"backgroundColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-track":{"":{height:"2",borderRadius:"6",backgroundColor:"#007aff",transitionProperty:"backgroundColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-thumb":{"":{position:"absolute",width:"28",height:"28",borderRadius:50,boxShadow:"0 0 4px #ebebeb",transitionProperty:"borderColor",transitionDuration:300,transitionTimingFunction:"ease"}},"uni-slider-step":{"":{position:"absolute",width:100,height:"2",background:"transparent"}},"uni-slider-value":{"":{color:"#888888",fontSize:"14",marginLeft:"14"}}}];var Jn=B.defineComponent({name:"USlider",props:Zo,styles:Ui,setup(m,{emit:k}){let z=B.ref(null),j=B.ref(null),Z=gr(z,k),ee=pr(m),ce=Zn(m,ee,Z);return Fr(m,ee),B.watch(()=>m.value,Ee=>{ee.sliderValue=Number(Ee)}),B.onMounted(()=>{g(()=>{lr(z.value).then(({width:Ee})=>{ee.sliderWidth=Ee||0,ee.sliderValue=Number(m.value)})},100)}),()=>{let{showValue:Ee}=m,{trackStyle:Te,trackActiveStyle:Ie,thumbStyle:me,sliderValue:Be}=ee;return B.createVNode("div",{class:"uni-slider",ref:z},[B.createVNode("div",{class:"uni-slider-wrapper"},[B.createVNode("div",B.mergeProps({class:"uni-slider-tap-area"},ce),[B.createVNode("div",{class:"uni-slider-handle-wrapper",ref:j,style:Te},[B.createVNode("div",{class:"uni-slider-track",style:Ie},null)]),B.createVNode("div",{class:"uni-slider-thumb",style:me},null)]),Ee?ln(Be+"",{class:"uni-slider-value"}):null])])}}});function pr(m){let k=B.ref(0),z=B.ref(0),j=()=>m.backgroundColor!=="#e9e9e9"?m.backgroundColor:m.color!=="#007aff"?m.color:"#007aff",Z=()=>m.activeColor!=="#007aff"?m.activeColor:m.selectedColor!=="#e9e9e9"?m.selectedColor:"#e9e9e9",ee=()=>{let Ee=Number(m.max),Te=Number(m.min);return(z.value-Te)/(Ee-Te)*k.value};return B.reactive({sliderWidth:k,sliderValue:z,trackStyle:B.computed(()=>({backgroundColor:j()})),trackActiveStyle:B.computed(()=>({backgroundColor:Z(),width:ee()})),thumbStyle:B.computed(()=>({width:m.blockSize,height:m.blockSize,marginTop:-m.blockSize/2,left:ee(),backgroundColor:m.blockColor}))})}function Zn(m,k,z){let j=null;function Z(Ee,Te){m.disabled||(Ee==="move"?(ee(Te),z("changing",{value:k.sliderValue})):Ee==="end"&&(ee(Te),z("change",{value:k.sliderValue})))}function ee(Ee){Ee<0&&(Ee=0),Ee>k.sliderWidth&&(Ee=k.sliderWidth);let Te=Number(m.max),Ie=Number(m.min),me=Number(m.step),Be=Ee/k.sliderWidth*Te-Ie;me>0&&Be>me&&Be%me/me!==0&&(Be-=Be%me),k.sliderValue=Be+Ie}return{onTouchstart(Ee){Ee.changedTouches.length===1&&!j&&(j=Ee,Z("start",Ee.changedTouches[0].pageX))},onTouchmove(Ee){Ee.changedTouches.length===1&&j&&Z("move",Ee.changedTouches[0].pageX)},onTouchend(Ee){Ee.changedTouches.length===1&&j&&(j=null,Z("end",Ee.changedTouches[0].pageX))}}}function Fr(m,k){let z=B.inject(hr,!1),j={submit:()=>{let Z=["",null];return m.name&&(Z[0]=m.name,Z[1]=k.sliderValue),Z},reset:()=>{k.sliderValue=Number(m.value)}};z&&(z.addField(j),B.onUnmounted(()=>{z.removeField(j)}))}let Tr={name:{type:String,default:""},checked:{type:[Boolean,String],default:!1},type:{type:String,default:"switch"},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"}},Hi={switch:"switch",checkbox:"checkbox"},ai={width:52,height:32};var vr=B.defineComponent({name:"Switch",props:Tr,emits:["change"],setup(m,{emit:k}){let z=B.ref(null),j=B.ref(m.checked),Z=Jr(m,j),ee=gr(z,k);B.watch(()=>m.checked,Te=>{j.value=Te});let ce={onChange(Te){j.value=Te.detail.value,ee("change",{value:j.value})}},Ee=(Te,Ie)=>{m.disabled||(j.value=!j.value,ee("change",{value:j.value}))};return Z&&(Z.addHandler(Ee),B.onBeforeUnmount(()=>{Z.removeHandler(Ee)})),xn(m,{"label-click":Ee}),()=>{let{color:Te,type:Ie}=m;return B.createVNode("div",{ref:z},[Ie===Hi.switch?B.createVNode("dc-switch",B.mergeProps({dataUncType:"uni-switch"},ce,{checked:j.value,color:Te},{style:ai}),null):null,Ie===Hi.checkbox?B.createVNode(B.resolveComponent("checkbox"),B.mergeProps({style:{color:Te}},{checked:j.value},ce),null):null])}}});function Jr(m,k){let z=B.inject(hr,!1),j=B.inject(sr,!1),Z={submit:()=>{let ee=["",null];return m.name&&(ee[0]=m.name,ee[1]=k.value),ee},reset:()=>{k.value=!1}};return z&&(z.addField(Z),B.onUnmounted(()=>{z.removeField(Z)})),j}let Ni={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},mi=kn("ucg"),_i={name:{type:String,default:""}},Zr=[{"uni-checkbox":{"":{flexDirection:"row",alignItems:"center"}},"uni-checkbox-input":{"":{justifyContent:"center",alignItems:"center",position:"relative",borderWidth:"1",borderColor:"#d1d1d1",borderStyle:"solid",backgroundColor:"#ffffff",borderRadius:"3",width:"22",height:"22"}},"uni-icon":{"":{fontFamily:"unincomponents",fontSize:"16",marginLeft:"2",marginTop:"2",color:"#007aff"}},"uni-checkbox-input-disabled":{"":{backgroundColor:"#e1e1e1"}},"uni-checkbox-input-disabled-before":{"":{color:"#adadad"}},"uni-checkbox-slot":{"":{fontSize:"16",marginLeft:"5"}}}];var bi=B.defineComponent({name:"Checkbox",props:Ni,styles:Zr,setup(m,{slots:k}){let z=B.ref(null),j=B.ref(m.checked),Z=B.ref(m.value),ee=B.computed(()=>m.disabled?"#adadad":m.color),ce=()=>{j.value=!1},Ee=(Be,nt)=>{m.disabled||(j.value=!j.value,Te&&Te.checkboxChange(Be))},{uniCheckGroup:Te,uniLabel:Ie}=no(j,Z,ce);Ie&&(Ie.addHandler(Ee),B.onBeforeUnmount(()=>{Ie.removeHandler(Ee)})),xn(m,{"label-click":Ee}),B.watch([()=>m.checked,()=>m.value],([Be,nt])=>{j.value=Be,Z.value=nt});let me=()=>{if(!k.default)return[];let Be=k.default();return Be.length===1&&Be[0].type===Text?[ln(Be[0].children,{class:"uni-checkbox-slot"})]:Be};return()=>B.createVNode("div",B.mergeProps({ref:z},{dataUncType:"uni-checkbox"},{onClick:Ee,class:"uni-checkbox"}),[B.createVNode("div",{class:["uni-checkbox-input",{"uni-checkbox-input-disabled":m.disabled}]},[j.value?ln("\uEA08",{class:"uni-icon",style:{color:ee.value}}):null]),...me()])}});function no(m,k,z){let j=B.computed(()=>({checkboxChecked:Boolean(m.value),value:k.value})),Z={reset:z},ee=B.inject(mi,!1);ee&&ee.addField(j);let ce=B.inject(hr,!1);ce&&ce.addField(Z);let Ee=B.inject(sr,!1);return B.onBeforeUnmount(()=>{ee&&ee.removeField(j),ce&&ce.removeField(Z)}),{uniCheckGroup:ee,uniForm:ce,uniLabel:Ee}}var ji=B.defineComponent({name:"CheckboxGroup",props:_i,emits:["change"],setup(m,{slots:k,emit:z}){let j=B.ref(null),Z=gr(j,z);return ro(m,Z),()=>B.createVNode("div",{ref:j,class:"uni-checkbox-group"},[k.default&&k.default()])}});function ro(m,k){let z=[],j=()=>z.reduce((ee,ce)=>(ce.value.checkboxChecked&&ee.push(ce.value.value),ee),new Array);B.provide(mi,{addField(ee){z.push(ee)},removeField(ee){z.splice(z.indexOf(ee),1)},checkboxChange(ee){k("change",{value:j()})}});let Z=B.inject(hr,!1);return Z&&Z.addField({submit:()=>{let ee=["",null];return m.name!==""&&(ee[0]=m.name,ee[1]=j()),ee}}),j}let x={checked:{type:[Boolean,String],default:!1},id:{type:String,default:""},disabled:{type:[Boolean,String],default:!1},color:{type:String,default:"#007aff"},value:{type:String,default:""}},re=kn("ucg"),he={name:{type:String,default:""}},H=[{"uni-radio":{"":{alignItems:"center",flexDirection:"row"}},"uni-radio-input":{"":{position:"relative",alignItems:"center",justifyContent:"center",marginRight:"5",borderStyle:"solid",borderWidth:"1",borderColor:"#d1d1d1",borderRadius:50,width:"22",height:"22",outline:0}},"uni-radio-input-icon":{"":{fontFamily:"unincomponents",fontSize:"14",color:"#ffffff"}},"uni-radio-input-disabled":{"":{backgroundColor:"#e1e1e1",borderColor:"#d1d1d1",color:"#adadad"}},"uni-radio-slot":{"":{fontSize:"16",marginLeft:"5"}}}];var M=B.defineComponent({name:"Radio",props:x,styles:H,emits:["change"],setup(m,{slots:k}){let z=B.ref(null),j=B.ref(m.checked),Z=B.ref(m.value),ee=B.computed(()=>{let nt=m.disabled?"#adadad":m.color;return j.value?{backgroundColor:nt,borderColor:nt}:{borderColor:"#d1d1d1"}}),ce=()=>{j.value=!1},{uniCheckGroup:Ee,uniLabel:Te,field:Ie}=J(j,Z,ce),me=(nt,_t)=>{m.disabled||(j.value=!j.value,Ee&&Ee.radioChange(nt,Ie))};Te&&(Te.addHandler(me),B.onBeforeUnmount(()=>{Te.removeHandler(me)})),xn(m,{"label-click":me}),B.watch([()=>m.checked,()=>m.value],([nt,_t])=>{j.value=nt,Z.value=_t});let Be=()=>{if(!k.default)return[];let nt=k.default();return nt.length===1&&nt[0].type===Text?[ln(nt[0].children,{class:"uni-radio-slot"})]:nt};return()=>{let{disabled:nt}=m;return B.createVNode("div",B.mergeProps({ref:z},{dataUncType:"uni-radio"},{onClick:me,class:"uni-radio"}),[B.createVNode("div",{style:ee.value,class:["uni-radio-input",{"uni-radio-input-disabled":nt}]},[j.value?ln("\uEA08",{class:"uni-radio-input-icon"}):null]),...Be()])}}});function J(m,k,z){let j=B.computed({get:()=>({radioChecked:Boolean(m.value),value:k.value}),set:({radioChecked:Te})=>{m.value=Te}}),Z={reset:z},ee=B.inject(re,!1);ee&&ee.addField(j);let ce=B.inject(hr,!1);ce&&ce.addField(Z);let Ee=B.inject(sr,!1);return B.onBeforeUnmount(()=>{ee&&ee.removeField(j),ce&&ce.removeField(Z)}),{uniCheckGroup:ee,uniForm:ce,uniLabel:Ee,field:j}}var X=B.defineComponent({name:"RadioGroup",props:he,emits:["change"],setup(m,{slots:k,emit:z}){let j=B.ref(null),Z=gr(j,z);return fe(m,Z),()=>B.createVNode("div",{ref:j},[k.default&&k.default()])}});function fe(m,k){let z=[];B.onMounted(()=>{Ee(z.length-1)});let j=()=>{var Te;return(Te=z.find(Ie=>Ie.value.radioChecked))==null?void 0:Te.value.value};B.provide(re,{addField(Te){z.push(Te)},removeField(Te){z.splice(z.indexOf(Te),1)},radioChange(Te,Ie){let me=z.indexOf(Ie);Ee(me,!0),k("change",{value:j()})}});let Z=B.inject(hr,!1),ee={submit:()=>{let Te=["",null];return m.name!==""&&(Te[0]=m.name,Te[1]=j()),Te}};Z&&(Z.addField(ee),B.onBeforeUnmount(()=>{Z.removeField(ee)}));function ce(Te,Ie){Te.value={radioChecked:Ie,value:Te.value.value}}function Ee(Te,Ie){z.forEach((me,Be)=>{Be!==Te&&Ie&&ce(z[Be],!1)})}return z}let en=["u-input","u-textarea"];var Mn=B.defineComponent({name:"Form",emits:["submit","reset"],setup({},{slots:m,emit:k}){let z=B.ref(null),j=gr(z,k),Z=[],ee;return B.provide(hr,{addField(ce){Z.push(ce)},removeField(ce){Z.splice(Z.indexOf(ce),1)},submit(ce){let Ee={};ee&&ee(Ee);let Te=Z.reduce((Ie,me)=>{if(me.submit){let[Be,nt]=me.submit();Be&&(Ie[Be]=nt)}return Ie},Object.create(null));Object.assign(Ee,Te),j("submit",{value:Ee})},reset(ce){ee&&ee(),Z.forEach(Ee=>Ee.reset&&Ee.reset()),j("reset",ce)}}),()=>{let ce=m.default&&m.default();return ee=cn(ce),B.createVNode("view",{ref:z},[ce])}}});function cn(m){let k=S.requireModule("plus"),z=(j,Z)=>{(Z||m||[]).forEach(function(ee){en.indexOf(String(ee.type))>=0&&ee.el&&ee.el.attr&&ee.el.attr.name&&(j?j[ee.el.attr.name]=k.getValue(ee.el.nodeId):ee.el.setValue("")),dt.isArray(ee.children)&&ee.children&&ee.children.length&&z(j,ee.children)})};return z}let si={type:{type:String,default:""},size:{type:[String,Number],default:23},color:{type:String,default:""}},mr={success:"#09bb07",info:"#10aeff",warn:"#f76260",waiting:"#10aeff",safe_success:"#09bb07",safe_warn:"#ffbe00",success_circle:"#09bb07",success_no_circle:"#09bb07",waiting_circle:"#10aeff",circle:"#c9c9c9",download:"#09bb07",info_circle:"#09bb07",cancel:"#f43530",search:"#b2b2b2",clear:"#b2b2b2"},Xo={success:"\uEA06",info:"\uEA03",warn:"\uEA0B",waiting:"\uEA09",safe_success:"\uEA04",safe_warn:"\uEA05",success_circle:"\uEA07",success_no_circle:"\uEA08",waiting_circle:"\uEA0A",circle:"\uEA01",download:"\uEA02",info_circle:"\uEA0C",cancel:"\uEA0D",search:"\uEA0E",clear:"\uEA0F"},jo=[{"uni-icon":{"":{fontFamily:"unincomponents"}}}];var Qo=B.defineComponent({name:"Icon",props:si,styles:jo,setup(m,{}){return()=>ln(Xo[m.type],{class:"uni-icon",style:{color:m.color||mr[m.type],fontSize:m.size}})}});let Mo={indicatorDots:{type:[Boolean,String],default:!1},vertical:{type:[Boolean,String],default:!1},autoplay:{type:[Boolean,String],default:!1},circular:{type:[Boolean,String],default:!1},interval:{type:[Number,String],default:5e3},duration:{type:[Number,String],default:500},current:{type:[Number,String],default:0},indicatorColor:{type:String,default:"rgba(0,0,0,.3)"},indicatorActiveColor:{type:String,default:"#000000"},previousMargin:{type:String,default:""},nextMargin:{type:String,default:""},currentItemId:{type:String,default:""},skipHiddenItemLayout:{type:[Boolean,String],default:!1},displayMultipleItems:{type:[Number,String],default:1},disableTouch:{type:[Boolean,String],default:!1}},Eo=S.config.env.platform.toLowerCase()==="android",io=[{"uni-swiper":{"":{position:"relative",height:"150px"}},"uni-swiper-slider":{"":{position:"absolute",left:0,top:0,right:0,bottom:0}},"uni-swiper-dots":{"":{position:"absolute",left:0,right:0,bottom:"10",height:"10"}}}];var xa=B.defineComponent({name:"Swiper",props:Mo,styles:io,emits:["change","transition","animationfinish"],setup(m,{slots:k,emit:z}){let j=B.ref(null),Z=[],ee=gr(j,z),ce=ea(m),Ee=ma(ce,m,Z,ee);return B.watch([()=>m.current,()=>m.currentItemId],([Te,Ie])=>{rs(ce,m,Z)}),B.onMounted(()=>{g(()=>{lr(j.value).then(({width:Te,height:Ie})=>{ce.swiperWidth=Te,ce.swiperHeight=Ie})},50)}),()=>{let Te=k.default&&k.default(),{indicatorStyle:Ie,currentSync:me}=ce;return Z=Qi(Te),B.createVNode("div",{ref:j,class:"uni-swiper"},[B.createVNode("slider",B.mergeProps({class:"uni-swiper-slider"},{autoPlay:m.autoplay,interval:m.interval,index:me,keepIndex:!0,showIndicators:m.indicatorDots,infinite:m.circular,vertical:m.vertical,scrollable:!m.disableTouch},Ee),[Z,B.createVNode("indicator",{class:"uni-swiper-dots",style:Ie},null)])])}}});function ea(m){let k=B.ref(0),z=B.ref(0),j=B.ref(m.current),Z=B.ref("autoplay"),ee=B.computed(()=>({itemColor:m.indicatorColor,itemSelectedColor:m.indicatorActiveColor,itemSize:8,opacity:m.indicatorDots?1:0}));return B.reactive({swiperWidth:k,swiperHeight:z,indicatorStyle:ee,currentSync:j,currentChangeSource:Z})}function ma(m,k,z,j){let Z=0,ee=me=>{let Be=me.detail,nt=k.vertical,_t=(nt?Be.offsetYRatio:Be.offsetXRatio)||0;if((me.drag||me.drag)&&(m.currentChangeSource="touch"),_t===0){let Gt=Math.abs(Z);if(Gt===1)return;Gt>.5&&(_t=1)}Z=_t,j("transition",{dx:nt?0:-m.swiperWidth*_t,dy:nt?-m.swiperHeight*_t:0})},ce=me=>{let Be=()=>{j("animationfinish",Te()),m.currentChangeSource="autoplay"};Eo?Be():g(Be,50)},Ee=me=>{dt.isString(me.detail.source)&&(m.currentChangeSource=me.detail.source),m.currentSync=me.detail.index,Z=0};function Te(){let me=Number(m.currentSync),Be=z[me]||{},nt=Be.componentInstance&&Be.componentInstance.itemId||"";return{current:me,currentItemId:nt,source:m.currentChangeSource}}return B.watch(()=>m.currentSync,me=>{j("change",Te())}),{onScroll:ee,onScrollend:ce,onChange:Ee}}function rs(m,k,z){let j=-1;if(k.currentItemId)for(let Z=0,ee=z;Z<ee.length;Z++){let ce=ee[Z].componentInstance;if(ce&&ce.itemId===k.currentItemId){j=Z;break}}j<0&&(j=Math.round(Number(k.current))||0),j=j<0?0:j,m.currentSync!==j&&(m.currentChangeSource="",m.currentSync=j)}let ta={itemId:{type:String,default:""}};var Ba=B.defineComponent({name:"SwiperItem",props:ta,setup(m,{slots:k}){return()=>B.createVNode("div",{class:"uni-swiper-item",style:{position:"absolute",left:0,top:0,right:0,bottom:0,overflow:"hidden"}},[k.default&&k.default()])}}),ur=/^<([-A-Za-z0-9_]+)((?:\s+[a-zA-Z_:][-a-zA-Z0-9_:.]*(?:\s*=\s*(?:(?:"[^"]*")|(?:'[^']*')|[^>\s]+))?)*)\s*(\/?)>/,_r=/^<\/([-A-Za-z0-9_]+)[^>]*>/,na=/([a-zA-Z_:][-a-zA-Z0-9_:.]*)(?:\s*=\s*(?:(?:"((?:\\.|[^"])*)")|(?:'((?:\\.|[^'])*)')|([^>\s]+)))?/g,Ma=zo("area,base,basefont,br,col,frame,hr,img,input,link,meta,param,embed,command,keygen,source,track,wbr"),Vr=zo("a,address,article,applet,aside,audio,blockquote,button,canvas,center,dd,del,dir,div,dl,dt,fieldset,figcaption,figure,footer,form,frameset,h1,h2,h3,h4,h5,h6,header,hgroup,hr,iframe,isindex,li,map,menu,noframes,noscript,object,ol,output,p,pre,section,script,table,tbody,td,tfoot,th,thead,tr,ul,video"),La=zo("abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,script,select,small,span,strike,strong,sub,sup,textarea,tt,u,var"),br=zo("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr"),Xn=zo("checked,compact,declare,defer,disabled,ismap,multiple,nohref,noresize,noshade,nowrap,readonly,selected"),Lo=zo("script,style");function Ss(m,k){var z,j,Z,ee=[],ce=m;for(ee.last=function(){return this[this.length-1]};m;){if(j=!0,!ee.last()||!Lo[ee.last()]){if(m.indexOf("<!--")==0?(z=m.indexOf("-->"),z>=0&&(k.comment&&k.comment(m.substring(4,z)),m=m.substring(z+3),j=!1)):m.indexOf("</")==0?(Z=m.match(_r),Z&&(m=m.substring(Z[0].length),Z[0].replace(_r,Ie),j=!1)):m.indexOf("<")==0&&(Z=m.match(ur),Z&&(m=m.substring(Z[0].length),Z[0].replace(ur,Te),j=!1)),j){z=m.indexOf("<");var Ee=z<0?m:m.substring(0,z);m=z<0?"":m.substring(z),k.chars&&k.chars(Ee)}}else m=m.replace(new RegExp("([\\s\\S]*?)</"+ee.last()+"[^>]*>"),function(me,Be){return Be=Be.replace(/<!--([\s\S]*?)-->|<!\[CDATA\[([\s\S]*?)]]>/g,"$1$2"),k.chars&&k.chars(Be),""}),Ie("",ee.last());if(m==ce)throw"Parse Error: "+m;ce=m}Ie();function Te(me,Be,nt,_t){if(Be=Be.toLowerCase(),Vr[Be])for(;ee.last()&&La[ee.last()];)Ie("",ee.last());if(br[Be]&&ee.last()==Be&&Ie("",Be),_t=Ma[Be]||!!_t,_t||ee.push(Be),k.start){var Gt=[];nt.replace(na,function(tt,ze){var st=arguments[2]?arguments[2]:arguments[3]?arguments[3]:arguments[4]?arguments[4]:Xn[ze]?ze:"";Gt.push({name:ze,value:st,escaped:st.replace(/(^|[^\\])"/g,'$1\\"')})}),k.start&&k.start(Be,Gt,_t)}}function Ie(me,Be){if(Be)for(var nt=ee.length-1;nt>=0&&ee[nt]!=Be;nt--);else var nt=0;if(nt>=0){for(var _t=ee.length-1;_t>=nt;_t--)k.end&&k.end(ee[_t]);ee.length=nt}}}function zo(m){for(var k={},z=m.split(","),j=0;j<z.length;j++)k[z[j]]=!0;return k}function is(m){return m.replace(/<\?xml.*\?>\n/,"").replace(/<!doctype.*>\n/,"").replace(/<!DOCTYPE.*>\n/,"")}function zn(m){return m.reduce(function(k,z){let j=z.value,Z=z.name;return j.match(/ /)&&["style","src"].indexOf(Z)===-1&&(j=j.split(" ")),k[Z]?Array.isArray(k[Z])?k[Z].push(j):k[Z]=[k[Z],j]:k[Z]=j,k},{})}function _a(m){m=is(m);let k=[],z={node:"root",children:[]};return Ss(m,{start:function(j,Z,ee){let ce={name:j};if(Z.length!==0&&(ce.attrs=zn(Z)),ee){let Ee=k[0]||z;Ee.children||(Ee.children=[]),Ee.children.push(ce)}else k.unshift(ce)},end:function(j){let Z=k.shift();if(Z.name!==j&&console.error("invalid state: mismatch end tag"),k.length===0)z.children.push(Z);else{let ee=k[0];ee.children||(ee.children=[]),ee.children.push(Z)}},chars:function(j){let Z={type:"text",text:j};if(k.length===0)z.children.push(Z);else{let ee=k[0];ee.children||(ee.children=[]),ee.children.push(Z)}},comment:function(j){let Z={node:"comment",text:j},ee=k[0];ee.children||(ee.children=[]),ee.children.push(Z)}}),z.children}let Wo={nodes:{type:[Array,String],default:function(){return[]}}},ki=16;var ba=B.defineComponent({name:"RichText",props:Wo,setup(m){let k=B.getCurrentInstance();return()=>{let z=m.nodes;return dt.isString(z)&&(z=_a(z)),B.createVNode("u-rich-text",{value:Da(z||[],k.root,{defaultFontSize:ki})},null)}}});function Da(m,k,z){let j=["span","a","image","img"],Z={blockquote:Be,br:tt,div:Be,dl:Be,h1:_t(2),h2:_t(1.5),h3:_t(1.17),h4:_t(1),h5:_t(.83),h6:_t(.67),hr:Be,ol:Be,p:Be,strong:Gt,table:Be,tbody:Be,tfoot:Be,thead:Be,ul:Be},ee=/&(amp|gt|lt|nbsp|quot|apos);/g,ce={amp:"&",gt:">",lt:"<",nbsp:" ",quot:'"',apos:"'"},Ee={type:"span",__type:"break",attr:{value:`
`}},Te={__block:!0,__break:!0,children:[]},Ie=null;function me(Je){let Ct=Object.create(null);if(Je.attrs){let wn=(Je.attrs.class||"").split(" ");Object.assign(Ct,B.parseClassList(wn,k),Ci(Je.attrs.style||""))}if(Je.name==="img"||Je.name==="image"){let wn=Je.attrs;Ct.width=Ct.width||wn.width,Ct.height=Ct.height||wn.height}return Ct}function Be(Je){return Je.__block=!0,Je}function nt(Je,Ct){return Je.style&&!Je.style.fontSize&&(Je.style.fontSize=z.defaultFontSize*Ct),Be(Gt(Je))}function _t(Je){return function(Ct){return nt(Ct,Je)}}function Gt(Je){return Je.style&&!Je.style.fontWeight&&(Je.style.fontWeight="bold"),Je}function tt(Je){return Je.__value=" ",Be(Je)}function ze(Je){return Je.replace(ee,function(Ct,wn){return ce[wn]})}function st(Je){let Ct=(Je.name||"").toLowerCase(),wn=Ct,un=Z[Ct];j.indexOf(Ct)===-1&&(Ct="span"),Ct==="img"&&(Ct="image");let nn={type:Ct,__type:wn,attr:Object.create(null)};return(Je.type==="text"||Je.text)&&(nn.__value=nn.attr.value=ze((Je.text||"").trim())),Je.attrs&&Object.keys(Je.attrs).forEach(Sn=>{Sn!=="class"&&Sn!=="style"&&(nn.attr[Sn]=Je.attrs[Sn])}),nn.style=me(Je),un&&un(nn),(Te.__block||nn.__block)&&(Ie||(Te.children.push(Ee),Ie=[Te,Ee])),Te=nn,(Te.__value||Te.type==="image"&&Te.attr.src)&&(Ie=null),nn.children=Ft(Je.children),Te=nn,Te.__block&&Te.style.height&&!/^0(px)?$/.test(Te.style.height)&&(Ie=null),nn}function Ft(Je){return dt.isArray(Je)?Je.map(Ct=>st(Ct)):[]}let ht=Ft(m);if(Ie){let[Je,Ct]=Ie,wn=Je.children,un=wn.indexOf(Ct);wn.splice(un,1)}return ht}let oo={};function ra(m,k,z){let{adpid:j,width:Z}=m,ee=j+"-"+Z,ce=oo[ee];if(ce&&ce.length>0){k(ce.splice(0,1)[0]);return}N.ad.getAds(m,Ee=>{let Te=Ee.ads;k(Te.splice(0,1)[0]),oo[ee]=ce?ce.concat(Te):Te},Ee=>{z({errCode:Ee.code,errMsg:Ee.message})})}let yo={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""},channel:{type:String,default:""}},zi={load:"load",close:"close",error:"error",downloadchange:"downloadchange"};var Ea=B.defineComponent({name:"Ad",props:yo,emits:[zi.load,zi.close,zi.error,zi.downloadchange],setup(m,{emit:k}){let z=B.ref(null),j=gr(z,k),Z=ia();B.watch(()=>m.adpid,ce=>{ya(Z,m,j)}),B.watch(()=>m.data,ce=>{Z.data=ce}),B.onMounted(()=>{g(()=>{lr(z.value).then(({width:ce})=>{Z.width=ce===0?-1:ce,ya(Z,m,j)})},50)});let ee={onDownloadchange(ce){j(zi.downloadchange,ce)},onDislike(ce){j(zi.close,ce)}};return()=>B.createVNode("u-ad",B.mergeProps({ref:z},{data:Z.data,rendering:!0},ee),null)}});function ia(m){let k=B.ref("");return B.reactive({width:0,data:k})}function ya(m,k,z){ra({adpid:k.adpid,width:m.width},j=>{m.data=j,z(zi.load,{})},j=>{z(zi.error,j)})}let oa={};function wa(m,k,z,j,Z){let ee=m+"-"+k,ce=oa[ee];if(ce&&ce.length>0){j(ce.splice(0,1)[0]);return}N.ad.getDrawAds({adpid:String(m),count:3,width:k},Ee=>{let Te=Ee.ads;j(Te.splice(0,1)[0]),oa[ee]=ce?ce.concat(Te):Te},Ee=>{Z({errCode:Ee.code,errMsg:Ee.message})})}let As={adpid:{type:[Number,String],default:""},data:{type:String,default:""},width:{type:String,default:""}},ao={load:"load",close:"close",error:"error"};var li=B.defineComponent({name:"AdDraw",props:As,emits:[ao.load,ao.close,ao.error],setup(m,{emit:k}){let z=B.ref(null),j=gr(z,k),Z=Ri();B.watch(()=>m.adpid,ce=>{so(Z,m,j)}),B.watch(()=>m.data,ce=>{Z.data=ce});let ee={onDislike(ce){j(ao.close,ce)}};return B.onMounted(()=>{g(()=>{lr(z.value).then(({width:ce,height:Ee})=>{Z.width=ce===0?-1:ce,Z.height=Ee===0?-1:Ee,so(Z,m,j)})},50)}),()=>{let{data:ce}=Z;return B.createVNode("u-ad-draw",B.mergeProps({ref:z},{data:ce,rendering:!0},ee),null)}}});function Ri(m){let k=B.ref("");return B.reactive({width:0,height:0,data:k})}function so(m,k,z){wa(k.adpid,m.width,m.height,j=>{m.data=j,z(ao.load,{})},j=>{z(ao.error,j)})}var aa={Navigator:on,Label:Di,Button:di,MovableArea:Yr,MovableView:Oi,Progress:we,PickerView:jn,PickerViewColumn:gi,Picker:to,USlider:Jn,Switch:vr,Checkbox:bi,CheckboxGroup:ji,Radio:M,RadioGroup:X,Form:Mn,Icon:Qo,Swiper:xa,SwiperItem:Ba,RichText:ba,Ad:Ea,AdDraw:li};return aa}(R,He,Rt);return gn}function hP(g,s){let{UniShared:_,Vue:A}=s;function R(N,f,P){let He=N.$[f];return He&&_.invokeArrayFns(He,P)}let S=g.setup;return g.inheritAttrs=!1,g.setup=(N,f)=>{let{attrs:{__pageId:P,__pagePath:He,__pageQuery:Rt}}=f,gn=s.__uniRoutes.find(pn=>pn.meta.route===He),B=A.getCurrentInstance(),dt=B.proxy;if(gn&&(gn.meta.isSubNVue||gP(dt,s,{__pageId:P,__pagePath:He})),A.onMounted(()=>{A.nextTick(()=>{R(dt,_.ON_READY)}),B.onPageScroll&&dt.$el.addEvent("scroll",pn=>{pn.scrollTop=pn.detail.scrollTop,R(dt,_.ON_PAGE_SCROLL,pn)}),B.onReachBottom&&dt.$el.addEvent("scrolltolower",pn=>{R(dt,_.ON_REACH_BOTTOM,pn)})}),A.onBeforeUnmount(()=>{R(dt,_.ON_UNLOAD)}),S)return S(Rt,f)},g}function gP(g,s,{__pageId:_,__pagePath:A}){let R=s.getCurrentPages(),S=R[R.length-1];if(S&&S.__setup)S.__setup(g,S);else{let N="/"+A;return s.__registerPage({url:N,path:N,query:{},openType:"launch",webview:{id:_+""},nvuePageVm:g})}}var Ll={},ep;function tp(g){ep=g}var Xc;function pP(g){if(Xc)return Xc;let s=new g.Emitter;return Xc={on(_,A){return s.on(_,A)},once(_,A){return s.once(_,A)},off(_,A){return s.off(_,A)},emit(_,...A){return s.emit(_,...A)}},Xc}function vP(g){return(s,_,A)=>{let{nvue:R}=_,S=Zc(g,_);_.Vue=S,Ll[s]={instanceId:s,config:R.config,document:R.document,data:A};let{createApp:N}=S;S.createVueApp=S.createApp=(f,P)=>(_.__uniConfig.styles=f.styles||[],N(f,P).use(mP,s,_)),S.createPageApp=(f,P)=>{hP(f,_);let He=P.$store;delete P.$store;let Rt=N(f,P);return He&&Rt.use(He),Rt.use(bP,S,s,_)}}}var mP={install(g,s,_){dc(_).initApp(g),_P(g,s,_)}};function _P(g,s,_){let{mount:A}=g,R=Ll[s];return g.mount=S=>{let N=S==="#app",f=R.app=A(np(R.document,{isRoot:N}));return N&&_.__registerApp(f),f},g}var bP={install(g,s,_,A){let{weex:R,plus:S,BroadcastChannel:N,VueShared:f,UniShared:P,getCurrentPages:He,setTimeout:Rt,clearTimeout:gn}=A;g.config.globalProperties.$requireNativePlugin=R.requireModule;let B=dP({uni:ep,Vue:s,weex:R,plus:S,BroadcastChannel:N,UniViewJSBridge:pP(P),VueShared:f,UniShared:P,getCurrentPages:He,setTimeout:Rt,clearTimeout:gn});Object.keys(B).forEach(dt=>{g.component(s.hyphenate(dt),B[dt])}),dc(A).initApp(g),EP(g,_,A)}};function EP(g,s,{nvue:_}){let{config:{compilerOptions:A},mount:R}=g;A.isCustomElement=N=>!!_.supports(`@component/${N}`);let S=Ll[s];return g.mount=N=>{let f=N==="#root",P=S.app=R(np(S.document,{isRoot:f}));if(f)try{_.document.taskCenter.send("dom",{action:"createFinish"},[])}catch(He){}return P},g}function np(g,{isRoot:s}){if(s)return g.documentElement;let _=g.createComment("root");return g.documentElement.appendChild(_),_}function rp(g){let s=Ll[g];if(s&&s.app&&s.document){try{s.app.$.appContext.app.unmount(),s.document.destroy()}catch(_){}delete s.document,delete s.app}delete Ll[g]}function ip(g){let s=Ll[g];if(!s||!s.app)return new Error(`refreshInstance: instance ${g} not found!`);s.document.taskCenter.send("dom",{action:"refreshFinish"},[])}function yP(g,s){let{UniShared:_,VueShared:A,VueReactivity:R}=g;var S=function(N,f,P,He){"use strict";var Rt=[];function gn(o){P.pauseTracking();for(var c=Rt.length?Rt[Rt.length-1].component:null,p=c&&c.appContext.config.warnHandler,E=B(),T=arguments.length,C=new Array(T>1?T-1:0),V=1;V<T;V++)C[V-1]=arguments[V];if(p)q(p,c,11,[o+C.join(""),c&&c.proxy,E.map(Y=>{var{vnode:oe}=Y;return"at <".concat(Nr(c,oe.type),">")}).join(`
`),E]);else{var W=["[Vue warn]: ".concat(o),...C];E.length&&W.push(`
`,...dt(E)),console.warn(...W)}P.resetTracking()}function B(){var o=Rt[Rt.length-1];if(!o)return[];for(var c=[];o;){var p=c[0];p&&p.vnode===o?p.recurseCount++:c.push({vnode:o,recurseCount:0});var E=o.component&&o.component.parent;o=E&&E.vnode}return c}function dt(o){var c=[];return o.forEach((p,E)=>{c.push(...E===0?[]:[`
`],...pn(p))}),c}function pn(o){var{vnode:c,recurseCount:p}=o,E=p>0?"... (".concat(p," recursive calls)"):"",T=c.component?c.component.parent==null:!1,C=" at <".concat(Nr(c.component,c.type,T)),V=">"+E;return c.props?[C,...Pn(c.props),V]:[C+V]}function Pn(o){var c=[],p=Object.keys(o);return p.slice(0,3).forEach(E=>{c.push(...at(E,o[E]))}),p.length>3&&c.push(" ..."),c}function at(o,c,p){return f.isString(c)?(c=JSON.stringify(c),p?c:["".concat(o,"=").concat(c)]):typeof c=="number"||typeof c=="boolean"||c==null?p?c:["".concat(o,"=").concat(c)]:P.isRef(c)?(c=at(o,P.toRaw(c.value),!0),p?c:["".concat(o,"=Ref<"),c,">"]):f.isFunction(c)?["".concat(o,"=fn").concat(c.name?"<".concat(c.name,">"):"")]:(c=P.toRaw(c),p?c:["".concat(o,"="),c])}function q(o,c,p,E){var T;try{T=E?o(...E):o()}catch(C){En(C,c,p)}return T}function ne(o,c,p,E){if(f.isFunction(o)){var T=q(o,c,p,E);return T&&f.isPromise(T)&&T.catch(W=>{En(W,c,p)}),T}for(var C=[],V=0;V<o.length;V++)C.push(ne(o[V],c,p,E));return C}function En(o,c,p){if(c&&c.vnode,c){for(var E=c.parent,T=c.proxy,C=p;E;){var V=E.ec;if(V){for(var W=0;W<V.length;W++)if(V[W](o,T,C)===!1)return}E=E.parent}var Y=c.appContext.config.errorHandler;if(Y){q(Y,null,10,[o,T,C]);return}}yn(o)}function yn(o,c,p){console.error(o)}var ln=!1,Un=!1,on=[],kn=0,Hn=[],vn=null,an=0,mn=[],Rn=null,Br=0,ni=Promise.resolve(),Ve=null,ot=null;function gt(o){var c=Ve||ni;return o?c.then(this?o.bind(this):o):c}function qt(o){for(var c=kn+1,p=on.length;c<p;){var E=c+p>>>1,T=Wr(on[E]);T<o?c=E+1:p=E}return c}function tn(o){(!on.length||!on.includes(o,ln&&o.allowRecurse?kn+1:kn))&&o!==ot&&(o.id==null?on.push(o):on.splice(qt(o.id),0,o),Xt())}function Xt(){!ln&&!Un&&(Un=!0,Ve=ni.then(Gr))}function rr(o){var c=on.indexOf(o);c>kn&&on.splice(c,1)}function sr(o,c,p,E){f.isArray(o)?p.push(...o):(!c||!c.includes(o,o.allowRecurse?E+1:E))&&p.push(o),Xt()}function Li(o){sr(o,vn,Hn,an)}function Di(o){sr(o,Rn,mn,Br)}function xn(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(Hn.length){for(ot=c,vn=[...new Set(Hn)],Hn.length=0,an=0;an<vn.length;an++)vn[an]();vn=null,an=0,ot=null,xn(o,c)}}function wr(o){if(xn(),mn.length){var c=[...new Set(mn)];if(mn.length=0,Rn){Rn.push(...c);return}for(Rn=c,Rn.sort((p,E)=>Wr(p)-Wr(E)),Br=0;Br<Rn.length;Br++)Rn[Br]();Rn=null,Br=0}}var Wr=o=>o.id==null?1/0:o.id;function Gr(o){Un=!1,ln=!0,xn(o),on.sort((E,T)=>Wr(E)-Wr(T));var c=f.NOOP;try{for(kn=0;kn<on.length;kn++){var p=on[kn];p&&p.active!==!1&&q(p,null,14)}}finally{kn=0,on.length=0,wr(),ln=!1,Ve=null,(on.length||Hn.length||mn.length)&&Gr(o)}}N.devtools=void 0;var Ji=[];function Zi(o,c){var p,E;if(N.devtools=o,N.devtools)N.devtools.enabled=!0,Ji.forEach(C=>{var{event:V,args:W}=C;return N.devtools.emit(V,...W)}),Ji=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((E=(p=window.navigator)===null||p===void 0?void 0:p.userAgent)===null||E===void 0?void 0:E.includes("jsdom"))){var T=c.__VUE_DEVTOOLS_HOOK_REPLAY__=c.__VUE_DEVTOOLS_HOOK_REPLAY__||[];T.push(C=>{Zi(C,c)}),setTimeout(()=>{N.devtools||(c.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Ji=[])},3e3)}else Ji=[]}function Io(o,c){if(!o.isUnmounted){for(var p=o.vnode.props||f.EMPTY_OBJ,E=arguments.length,T=new Array(E>2?E-2:0),C=2;C<E;C++)T[C-2]=arguments[C];var V=T,W=c.startsWith("update:"),Y=W&&c.slice(7);if(Y&&Y in p){var oe="".concat(Y==="modelValue"?"model":Y,"Modifiers"),{number:je,trim:Ye}=p[oe]||f.EMPTY_OBJ;Ye&&(V=T.map(vt=>vt.trim())),je&&(V=T.map(f.toNumber))}var pe,$e=p[pe=f.toHandlerKey(c)]||p[pe=f.toHandlerKey(f.camelize(c))];!$e&&W&&($e=p[pe=f.toHandlerKey(f.hyphenate(c))]),$e&&ne($e,o,6,V);var We=p[pe+"Once"];if(We){if(!o.emitted)o.emitted={};else if(o.emitted[pe])return;o.emitted[pe]=!0,ne(We,o,6,V)}}}function No(o,c){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=c.emitsCache,T=E.get(o);if(T!==void 0)return T;var C=o.emits,V={},W=!1;if(!f.isFunction(o)){var Y=oe=>{var je=No(oe,c,!0);je&&(W=!0,f.extend(V,je))};!p&&c.mixins.length&&c.mixins.forEach(Y),o.extends&&Y(o.extends),o.mixins&&o.mixins.forEach(Y)}return!C&&!W?(E.set(o,null),null):(f.isArray(C)?C.forEach(oe=>V[oe]=null):f.extend(V,C),E.set(o,V),V)}function hr(o,c){return!o||!f.isOn(c)?!1:(c=c.slice(2).replace(/Once$/,""),f.hasOwn(o,c[0].toLowerCase()+c.slice(1))||f.hasOwn(o,f.hyphenate(c))||f.hasOwn(o,c))}var Cn=null,On=null;function di(o){var c=Cn;return Cn=o,On=o&&o.type.__scopeId||null,c}function Xi(o){On=o}function Qi(){On=null}var po=o=>Ci;function Ci(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Cn;if(!c||o._n)return o;var p=function(){p._d&&nn(-1);var E=di(c),T=o(...arguments);return di(E),p._d&&nn(1),T};return p._n=!0,p._c=!0,p._d=!0,p}function lr(){}function Yr(o){var{type:c,vnode:p,proxy:E,withProxy:T,props:C,propsOptions:[V],slots:W,attrs:Y,emit:oe,render:je,renderCache:Ye,data:pe,setupState:$e,ctx:We,inheritAttrs:vt}=o,wt,Ae,de=di(o);try{if(p.shapeFlag&4){var Le=T||E;wt=Dn(je.call(Le,Le,Ye,C,$e,pe,We)),Ae=Y}else{var i=c;wt=Dn(i.length>1?i(C,{attrs:Y,slots:W,emit:oe}):i(C,null)),Ae=c.props?Y:gr(Y)}}catch(y){ht.length=0,En(y,o,1),wt=$t(st)}var l=wt;if(Ae&&vt!==!1){var d=Object.keys(Ae),{shapeFlag:v}=l;d.length&&v&(1|6)&&(V&&d.some(f.isModelListener)&&(Ae=ko(Ae,V)),l=yi(l,Ae))}return p.dirs&&(l=yi(l),l.dirs=l.dirs?l.dirs.concat(p.dirs):p.dirs),p.transition&&(l.transition=p.transition),wt=l,di(de),wt}function Sr(o){for(var c,p=0;p<o.length;p++){var E=o[p];if(Ei(E)){if(E.type!==st||E.children==="v-if"){if(c)return;c=E}}else return}return c}var gr=o=>{var c;for(var p in o)(p==="class"||p==="style"||f.isOn(p))&&((c||(c={}))[p]=o[p]);return c},ko=(o,c)=>{var p={};for(var E in o)(!f.isModelListener(E)||!(E.slice(9)in c))&&(p[E]=o[E]);return p};function Ro(o,c,p){var{props:E,children:T,component:C}=o,{props:V,children:W,patchFlag:Y}=c,oe=C.emitsOptions;if(c.dirs||c.transition)return!0;if(p&&Y>=0){if(Y&1024)return!0;if(Y&16)return E?vo(E,V,oe):!!V;if(Y&8)for(var je=c.dynamicProps,Ye=0;Ye<je.length;Ye++){var pe=je[Ye];if(V[pe]!==E[pe]&&!hr(oe,pe))return!0}}else return(T||W)&&(!W||!W.$stable)?!0:E===V?!1:E?V?vo(E,V,oe):!0:!!V;return!1}function vo(o,c,p){var E=Object.keys(c);if(E.length!==Object.keys(o).length)return!0;for(var T=0;T<E.length;T++){var C=E[T];if(c[C]!==o[C]&&!hr(p,C))return!0}return!1}function Mr(o,c){for(var{vnode:p,parent:E}=o;E&&E.subTree===p;)(p=E.vnode).el=c,E=E.parent}var cr=o=>o.__isSuspense,Ar={name:"Suspense",__isSuspense:!0,process(o,c,p,E,T,C,V,W,Y,oe){o==null?qr(c,p,E,T,C,V,W,Y,oe):eo(o,c,p,E,T,V,W,Y,oe)},hydrate:Lr,create:Fi,normalize:mo},ri=Ar;function Wn(o,c){var p=o.props&&o.props[c];f.isFunction(p)&&p()}function qr(o,c,p,E,T,C,V,W,Y){var{p:oe,o:{createElement:je}}=Y,Ye=je("div"),pe=o.suspense=Fi(o,T,E,c,Ye,p,C,V,W,Y);oe(null,pe.pendingBranch=o.ssContent,Ye,null,E,pe,C,V),pe.deps>0?(Wn(o,"onPending"),Wn(o,"onFallback"),oe(null,o.ssFallback,c,p,E,null,C,V),ii(pe,o.ssFallback)):pe.resolve()}function eo(o,c,p,E,T,C,V,W,Y){var{p:oe,um:je,o:{createElement:Ye}}=Y,pe=c.suspense=o.suspense;pe.vnode=c,c.el=o.el;var $e=c.ssContent,We=c.ssFallback,{activeBranch:vt,pendingBranch:wt,isInFallback:Ae,isHydrating:de}=pe;if(wt)pe.pendingBranch=$e,ir($e,wt)?(oe(wt,$e,pe.hiddenContainer,null,T,pe,C,V,W),pe.deps<=0?pe.resolve():Ae&&(oe(vt,We,p,E,T,null,C,V,W),ii(pe,We))):(pe.pendingId++,de?(pe.isHydrating=!1,pe.activeBranch=wt):je(wt,T,pe),pe.deps=0,pe.effects.length=0,pe.hiddenContainer=Ye("div"),Ae?(oe(null,$e,pe.hiddenContainer,null,T,pe,C,V,W),pe.deps<=0?pe.resolve():(oe(vt,We,p,E,T,null,C,V,W),ii(pe,We))):vt&&ir($e,vt)?(oe(vt,$e,p,E,T,pe,C,V,W),pe.resolve(!0)):(oe(null,$e,pe.hiddenContainer,null,T,pe,C,V,W),pe.deps<=0&&pe.resolve()));else if(vt&&ir($e,vt))oe(vt,$e,p,E,T,pe,C,V,W),ii(pe,$e);else if(Wn(c,"onPending"),pe.pendingBranch=$e,pe.pendingId++,oe(null,$e,pe.hiddenContainer,null,T,pe,C,V,W),pe.deps<=0)pe.resolve();else{var{timeout:Le,pendingId:i}=pe;Le>0?setTimeout(()=>{pe.pendingId===i&&pe.fallback(We)},Le):Le===0&&pe.fallback(We)}}function Fi(o,c,p,E,T,C,V,W,Y,oe){var je=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1,{p:Ye,m:pe,um:$e,n:We,o:{parentNode:vt,remove:wt}}=oe,Ae=f.toNumber(o.props&&o.props.timeout),de={vnode:o,parent:c,parentComponent:p,isSVG:V,container:E,hiddenContainer:T,anchor:C,deps:0,pendingId:0,timeout:typeof Ae=="number"?Ae:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:je,isUnmounted:!1,effects:[],resolve(){var Le=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,{vnode:i,activeBranch:l,pendingBranch:d,pendingId:v,effects:y,parentComponent:w,container:I}=de;if(de.isHydrating)de.isHydrating=!1;else if(!Le){var L=l&&d.transition&&d.transition.mode==="out-in";L&&(l.transition.afterLeave=()=>{v===de.pendingId&&pe(d,I,$,0)});var{anchor:$}=de;l&&($=We(l),$e(l,w,de,!0)),L||pe(d,I,$,0)}ii(de,d),de.pendingBranch=null,de.isInFallback=!1;for(var te=de.parent,ae=!1;te;){if(te.pendingBranch){te.effects.push(...y),ae=!0;break}te=te.parent}ae||Di(y),de.effects=[],Wn(i,"onResolve")},fallback(Le){if(!!de.pendingBranch){var{vnode:i,activeBranch:l,parentComponent:d,container:v,isSVG:y}=de;Wn(i,"onFallback");var w=We(l),I=()=>{!de.isInFallback||(Ye(null,Le,v,w,d,null,y,W,Y),ii(de,Le))},L=Le.transition&&Le.transition.mode==="out-in";L&&(l.transition.afterLeave=I),de.isInFallback=!0,$e(l,d,null,!0),L||I()}},move(Le,i,l){de.activeBranch&&pe(de.activeBranch,Le,i,l),de.container=Le},next(){return de.activeBranch&&We(de.activeBranch)},registerDep(Le,i){var l=!!de.pendingBranch;l&&de.deps++;var d=Le.vnode.el;Le.asyncDep.catch(v=>{En(v,Le,0)}).then(v=>{if(!(Le.isUnmounted||de.isUnmounted||de.pendingId!==Le.suspenseId)){Le.asyncResolved=!0;var{vnode:y}=Le;Go(Le,v,!1),d&&(y.el=d);var w=!d&&Le.subTree.el;i(Le,y,vt(d||Le.subTree.el),d?null:We(Le.subTree),de,V,Y),w&&wt(w),Mr(Le,y.el),l&&--de.deps===0&&de.resolve()}})},unmount(Le,i){de.isUnmounted=!0,de.activeBranch&&$e(de.activeBranch,p,Le,i),de.pendingBranch&&$e(de.pendingBranch,p,Le,i)}};return de}function Lr(o,c,p,E,T,C,V,W,Y){var oe=c.suspense=Fi(c,E,p,o.parentNode,s.createElement("div"),null,T,C,V,W,!0),je=Y(o,oe.pendingBranch=c.ssContent,p,oe,C,V);return oe.deps===0&&oe.resolve(),je}function mo(o){var{shapeFlag:c,children:p}=o,E=c&32;o.ssContent=_o(E?p.default:p),o.ssFallback=E?_o(p.fallback):$t(st)}function _o(o){var c;if(f.isFunction(o)){var p=un&&o._c;p&&(o._d=!1,Ct()),o=o(),p&&(o._d=!0,c=Je,wn())}if(f.isArray(o)){var E=Sr(o);o=E}return o=Dn(o),c&&!o.dynamicChildren&&(o.dynamicChildren=c.filter(T=>T!==o)),o}function bo(o,c){c&&c.pendingBranch?f.isArray(o)?c.effects.push(...o):c.effects.push(o):Di(o)}function ii(o,c){o.activeBranch=c;var{vnode:p,parentComponent:E}=o,T=p.el=c.el;E&&E.subTree===p&&(E.vnode.el=T,Mr(E,T))}function oi(o,c){if(Fn){var p=Fn.provides,E=Fn.parent&&Fn.parent.provides;E===p&&(p=Fn.provides=Object.create(E)),p[o]=c,Fn.type.mpType==="app"&&Fn.appContext.app.provide(o,c)}}function Oi(o,c){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=Fn||Cn;if(E){var T=E.parent==null?E.vnode.appContext&&E.vnode.appContext.provides:E.parent.provides;if(T&&o in T)return T[o];if(arguments.length>1)return p&&f.isFunction(c)?c.call(E.proxy):c}}function hi(o,c){return we(o,null,c)}function Kn(o,c){return we(o,null,{flush:"post"})}function Cr(o,c){return we(o,null,{flush:"sync"})}var Vi={};function xt(o,c,p){return we(o,c,p)}function we(o,c){var{immediate:p,deep:E,flush:T,onTrack:C,onTrigger:V}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:f.EMPTY_OBJ,W=Fn,Y,oe=!1,je=!1;if(P.isRef(o)?(Y=()=>o.value,oe=P.isShallow(o)):P.isReactive(o)?(Y=()=>o,E=!0):f.isArray(o)?(je=!0,oe=o.some(de=>P.isReactive(de)||P.isShallow(de)),Y=()=>o.map(de=>{if(P.isRef(de))return de.value;if(P.isReactive(de))return Kr(de);if(f.isFunction(de))return q(de,W,2)})):f.isFunction(o)?c?Y=()=>q(o,W,2):Y=()=>{if(!(W&&W.isUnmounted))return pe&&pe(),ne(o,W,3,[$e])}:Y=f.NOOP,c&&E){var Ye=Y;Y=()=>Kr(Ye())}var pe,$e=de=>{pe=Ae.onStop=()=>{q(de,W,4)}};if(N.isInSSRComponentSetup)return $e=f.NOOP,c?p&&ne(c,W,3,[Y(),je?[]:void 0,$e]):Y(),f.NOOP;var We=je?[]:Vi,vt=()=>{if(!!Ae.active)if(c){var de=Ae.run();(E||oe||(je?de.some((Le,i)=>f.hasChanged(Le,We[i])):f.hasChanged(de,We)))&&(pe&&pe(),ne(c,W,3,[de,We===Vi?void 0:We,$e]),We=de)}else Ae.run()};vt.allowRecurse=!!c;var wt;T==="sync"?wt=vt:T==="post"?wt=()=>m(vt,W&&W.suspense):wt=()=>Li(vt);var Ae=new P.ReactiveEffect(Y,wt);return c?p?vt():We=Ae.run():T==="post"?m(Ae.run.bind(Ae),W&&W.suspense):Ae.run(),()=>{Ae.stop(),W&&W.scope&&f.remove(W.scope.effects,Ae)}}function Ti(o,c,p){var E=this.proxy,T=f.isString(o)?o.includes(".")?$i(E,o):()=>E[o]:o.bind(E,E),C;f.isFunction(c)?C=c:(C=c.handler,p=c);var V=Fn;fr(this);var W=we(T,C.bind(E),p);return V?fr(V):Ir(),W}function $i(o,c){var p=c.split(".");return()=>{for(var E=o,T=0;T<p.length&&E;T++)E=E[p[T]];return E}}function Kr(o,c){if(!f.isObject(o)||o.__v_skip||(c=c||new Set,c.has(o)))return o;if(c.add(o),P.isRef(o))Kr(o.value,c);else if(f.isArray(o))for(var p=0;p<o.length;p++)Kr(o[p],c);else if(f.isSet(o)||f.isMap(o))o.forEach(T=>{Kr(T,c)});else if(f.isPlainObject(o))for(var E in o)Kr(o[E],c);return o}function Dr(){var o={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Ni(()=>{o.isMounted=!0}),Zr(()=>{o.isUnmounting=!0}),o}var jn=[Function,Array],Bn={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:jn,onEnter:jn,onAfterEnter:jn,onEnterCancelled:jn,onBeforeLeave:jn,onLeave:jn,onAfterLeave:jn,onLeaveCancelled:jn,onBeforeAppear:jn,onAppear:jn,onAfterAppear:jn,onAppearCancelled:jn},setup(o,c){var{slots:p}=c,E=fn(),T=Dr(),C;return()=>{var V=p.default&&Gn(p.default(),!0);if(!(!V||!V.length)){var W=V[0];if(V.length>1){for(var Y of V)if(Y.type!==st){W=Y;break}}var oe=P.toRaw(o),{mode:je}=oe;if(T.isLeaving)return gi(W);var Ye=pi(W);if(!Ye)return gi(W);var pe=Ut(Ye,oe,T,E);Kt(Ye,pe);var $e=E.subTree,We=$e&&pi($e),vt=!1,{getTransitionKey:wt}=Ye.type;if(wt){var Ae=wt();C===void 0?C=Ae:Ae!==C&&(C=Ae,vt=!0)}if(We&&We.type!==st&&(!ir(Ye,We)||vt)){var de=Ut(We,oe,T,E);if(Kt(We,de),je==="out-in")return T.isLeaving=!0,de.afterLeave=()=>{T.isLeaving=!1,E.update()},gi(W);je==="in-out"&&Ye.type!==st&&(de.delayLeave=(Le,i,l)=>{var d=Pi(T,We);d[String(We.key)]=We,Le._leaveCb=()=>{i(),Le._leaveCb=void 0,delete pe.delayedLeave},pe.delayedLeave=l})}return W}}}},xo=Bn;function Pi(o,c){var{leavingVNodes:p}=o,E=p.get(c.type);return E||(E=Object.create(null),p.set(c.type,E)),E}function Ut(o,c,p,E){var{appear:T,mode:C,persisted:V=!1,onBeforeEnter:W,onEnter:Y,onAfterEnter:oe,onEnterCancelled:je,onBeforeLeave:Ye,onLeave:pe,onAfterLeave:$e,onLeaveCancelled:We,onBeforeAppear:vt,onAppear:wt,onAfterAppear:Ae,onAppearCancelled:de}=c,Le=String(o.key),i=Pi(p,o),l=(y,w)=>{y&&ne(y,E,9,w)},d=(y,w)=>{var I=w[1];l(y,w),f.isArray(y)?y.every(L=>L.length<=1)&&I():y.length<=1&&I()},v={mode:C,persisted:V,beforeEnter(y){var w=W;if(!p.isMounted)if(T)w=vt||W;else return;y._leaveCb&&y._leaveCb(!0);var I=i[Le];I&&ir(o,I)&&I.el._leaveCb&&I.el._leaveCb(),l(w,[y])},enter(y){var w=Y,I=oe,L=je;if(!p.isMounted)if(T)w=wt||Y,I=Ae||oe,L=de||je;else return;var $=!1,te=y._enterCb=ae=>{$||($=!0,ae?l(L,[y]):l(I,[y]),v.delayedLeave&&v.delayedLeave(),y._enterCb=void 0)};w?d(w,[y,te]):te()},leave(y,w){var I=String(o.key);if(y._enterCb&&y._enterCb(!0),p.isUnmounting)return w();l(Ye,[y]);var L=!1,$=y._leaveCb=te=>{L||(L=!0,w(),te?l(We,[y]):l($e,[y]),y._leaveCb=void 0,i[I]===o&&delete i[I])};i[I]=o,pe?d(pe,[y,$]):$()},clone(y){return Ut(y,c,p,E)}};return v}function gi(o){if(vi(o))return o=yi(o),o.children=null,o}function pi(o){return vi(o)?o.children?o.children[0]:void 0:o}function Kt(o,c){o.shapeFlag&6&&o.component?Kt(o.component.subTree,c):o.shapeFlag&128?(o.ssContent.transition=c.clone(o.ssContent),o.ssFallback.transition=c.clone(o.ssFallback)):o.transition=c}function Gn(o){for(var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,p=arguments.length>2?arguments[2]:void 0,E=[],T=0,C=0;C<o.length;C++){var V=o[C],W=p==null?V.key:String(p)+String(V.key!=null?V.key:C);V.type===tt?(V.patchFlag&128&&T++,E=E.concat(Gn(V.children,c,W))):(c||V.type!==st)&&E.push(W!=null?yi(V,{key:W}):V)}if(T>1)for(var Y=0;Y<E.length;Y++)E[Y].patchFlag=-2;return E}function Or(o){return f.isFunction(o)?{setup:o,name:o.name}:o}var In=o=>!!o.type.__asyncLoader;function Ii(o){f.isFunction(o)&&(o={loader:o});var{loader:c,loadingComponent:p,errorComponent:E,delay:T=200,timeout:C,suspensible:V=!0,onError:W}=o,Y=null,oe,je=0,Ye=()=>(je++,Y=null,pe()),pe=()=>{var $e;return Y||($e=Y=c().catch(We=>{if(We=We instanceof Error?We:new Error(String(We)),W)return new Promise((vt,wt)=>{var Ae=()=>vt(Ye()),de=()=>wt(We);W(We,Ae,de,je+1)});throw We}).then(We=>$e!==Y&&Y?Y:(We&&(We.__esModule||We[Symbol.toStringTag]==="Module")&&(We=We.default),oe=We,We)))};return Or({name:"AsyncComponentWrapper",__asyncLoader:pe,get __asyncResolved(){return oe},setup(){var $e=Fn;if(oe)return()=>Bo(oe,$e);var We=de=>{Y=null,En(de,$e,13)};if(V&&$e.suspense||N.isInSSRComponentSetup)return pe().then(de=>()=>Bo(de,$e)).catch(de=>(We(de),()=>E?$t(E,{error:de}):null));var vt=P.ref(!1),wt=P.ref(),Ae=P.ref(!!T);return T&&setTimeout(()=>{Ae.value=!1},T),C!=null&&setTimeout(()=>{if(!vt.value&&!wt.value){var de=new Error("Async component timed out after ".concat(C,"ms."));We(de),wt.value=de}},C),pe().then(()=>{vt.value=!0,$e.parent&&vi($e.parent.vnode)&&tn($e.parent.update)}).catch(de=>{We(de),wt.value=de}),()=>{if(vt.value&&oe)return Bo(oe,$e);if(wt.value&&E)return $t(E,{error:wt.value});if(p&&!Ae.value)return $t(p)}}})}function Bo(o,c){var{vnode:{ref:p,props:E,children:T,shapeFlag:C},parent:V}=c,W=$t(o,E,T);return W.ref=p,W}var vi=o=>o.type.__isKeepAlive,to={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(o,c){var{slots:p}=c,E=fn(),T=E.ctx;if(!T.renderer)return()=>{var Le=p.default&&p.default();return Le&&Le.length===1?Le[0]:Le};var C=new Map,V=new Set,W=null,Y=E.suspense,{renderer:{p:oe,m:je,um:Ye,o:{createElement:pe}}}=T,$e=pe("div");T.activate=(Le,i,l,d,v)=>{var y=Le.component;je(Le,i,l,0,Y),oe(y.vnode,Le,i,l,y,Y,d,Le.slotScopeIds,v),m(()=>{y.isDeactivated=!1,y.a&&f.invokeArrayFns(y.a);var w=Le.props&&Le.props.onVnodeMounted;w&&Pr(w,y.parent,Le)},Y)},T.deactivate=Le=>{var i=Le.component;je(Le,$e,null,1,Y),m(()=>{i.da&&f.invokeArrayFns(i.da);var l=Le.props&&Le.props.onVnodeUnmounted;l&&Pr(l,i.parent,Le),i.isDeactivated=!0},Y)};function We(Le){Tr(Le),Ye(Le,E,Y,!0)}function vt(Le){C.forEach((i,l)=>{var d=Qn(i.type);d&&(!Le||!Le(d))&&wt(l)})}function wt(Le){var i=C.get(Le);!W||i.type!==W.type?We(i):W&&Tr(W),C.delete(Le),V.delete(Le)}xt(()=>[o.include,o.exclude],Le=>{var[i,l]=Le;i&&vt(d=>Ui(i,d)),l&&vt(d=>!Ui(l,d))},{flush:"post",deep:!0});var Ae=null,de=()=>{Ae!=null&&C.set(Ae,Hi(E.subTree))};return Ni(de),_i(de),Zr(()=>{C.forEach(Le=>{var{subTree:i,suspense:l}=E,d=Hi(i);if(Le.type===d.type){Tr(d);var v=d.component.da;v&&m(v,l);return}We(Le)})}),()=>{if(Ae=null,!p.default)return null;var Le=p.default(),i=Le[0];if(Le.length>1)return W=null,Le;if(!Ei(i)||!(i.shapeFlag&4)&&!(i.shapeFlag&128))return W=null,i;var l=Hi(i),d=l.type,v=Qn(In(l)?l.type.__asyncResolved||{}:d),{include:y,exclude:w,max:I}=o;if(y&&(!v||!Ui(y,v))||w&&v&&Ui(w,v))return W=l,i;var L=l.key==null?d:l.key,$=C.get(L);return l.el&&(l=yi(l),i.shapeFlag&128&&(i.ssContent=l)),Ae=L,$?(l.el=$.el,l.component=$.component,l.transition&&Kt(l,l.transition),l.shapeFlag|=512,V.delete(L),V.add(L)):(V.add(L),I&&V.size>parseInt(I,10)&&wt(V.values().next().value)),l.shapeFlag|=256,W=l,cr(i.type)?i:l}}},Zo=to;function Ui(o,c){return f.isArray(o)?o.some(p=>Ui(p,c)):f.isString(o)?o.split(",").includes(c):o.test?o.test(c):!1}function Jn(o,c){Zn(o,"a",c)}function pr(o,c){Zn(o,"da",c)}function Zn(o,c){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Fn,E=o.__wdc||(o.__wdc=()=>{for(var C=p;C;){if(C.isDeactivated)return;C=C.parent}return o()});if(ai(c,E,p),p)for(var T=p.parent;T&&T.parent;)vi(T.parent.vnode)&&Fr(E,c,p,T),T=T.parent}function Fr(o,c,p,E){var T=ai(c,o,E,!0);bi(()=>{f.remove(E[c],T)},p)}function Tr(o){var c=o.shapeFlag;c&256&&(c-=256),c&512&&(c-=512),o.shapeFlag=c}function Hi(o){return o.shapeFlag&128?o.ssContent:o}function ai(o,c){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:Fn,E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(p){if(He.isRootHook(o)&&p!==p.root&&(p=p.root,He.isRootImmediateHook(o))){var T=p.proxy;ne(c.bind(T),p,o,He.ON_LOAD===o?[T.$page.options]:[])}var C=p[o]||(p[o]=[]),V=c.__weh||(c.__weh=function(){if(!p.isUnmounted){P.pauseTracking(),fr(p);for(var W=arguments.length,Y=new Array(W),oe=0;oe<W;oe++)Y[oe]=arguments[oe];var je=ne(c,p,o,Y);return Ir(),P.resetTracking(),je}});return E?C.unshift(V):C.push(V),V}}var vr=o=>function(c){var p=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Fn;return(!N.isInSSRComponentSetup||o==="sp")&&ai(o,c,p)},Jr=vr("bm"),Ni=vr("m"),mi=vr("bu"),_i=vr("u"),Zr=vr("bum"),bi=vr("um"),no=vr("sp"),ji=vr("rtg"),ro=vr("rtc");function x(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:Fn;ai("ec",o,c)}function re(o,c){var p=Cn;if(p===null)return o;for(var E=Ot(p)||p.proxy,T=o.dirs||(o.dirs=[]),C=0;C<c.length;C++){var[V,W,Y,oe=f.EMPTY_OBJ]=c[C];f.isFunction(V)&&(V={mounted:V,updated:V}),V.deep&&Kr(W),T.push({dir:V,instance:E,value:W,oldValue:void 0,arg:Y,modifiers:oe})}return o}function he(o,c,p,E){for(var T=o.dirs,C=c&&c.dirs,V=0;V<T.length;V++){var W=T[V];C&&(W.oldValue=C[V].value);var Y=W.dir[E];Y&&(P.pauseTracking(),ne(Y,p,8,[o.el,W,o,c]),P.resetTracking())}}var H="components",M="directives";function J(o,c){return Mn(H,o,!0,c)||o}var X=Symbol();function fe(o){return f.isString(o)?Mn(H,o,!1)||o:o||X}function en(o){return Mn(M,o)}function Mn(o,c){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,E=Cn||Fn;if(E){var T=E.type;if(o===H){var C=Qn(T,!1);if(C&&(C===c||C===f.camelize(c)||C===f.capitalize(f.camelize(c))))return T}var V=cn(E[o]||T[o],c)||cn(E.appContext[o],c);return!V&&p?T:V}}function cn(o,c){return o&&(o[c]||o[f.camelize(c)]||o[f.capitalize(f.camelize(c))])}function si(o,c,p,E){var T,C=p&&p[E];if(f.isArray(o)||f.isString(o)){T=new Array(o.length);for(var V=0,W=o.length;V<W;V++)T[V]=c(o[V],V,void 0,C&&C[V])}else if(typeof o=="number"){T=new Array(o);for(var Y=0;Y<o;Y++)T[Y]=c(Y+1,Y,void 0,C&&C[Y])}else if(f.isObject(o))if(o[Symbol.iterator])T=Array.from(o,($e,We)=>c($e,We,void 0,C&&C[We]));else{var oe=Object.keys(o);T=new Array(oe.length);for(var je=0,Ye=oe.length;je<Ye;je++){var pe=oe[je];T[je]=c(o[pe],pe,je,C&&C[je])}}else T=[];return p&&(p[E]=T),T}function mr(o,c){for(var p=0;p<c.length;p++){var E=c[p];if(f.isArray(E))for(var T=0;T<E.length;T++)o[E[T].name]=E[T].fn;else E&&(o[E.name]=E.fn)}return o}function Xo(o,c){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},E=arguments.length>3?arguments[3]:void 0,T=arguments.length>4?arguments[4]:void 0;if(Cn.isCE||Cn.parent&&In(Cn.parent)&&Cn.parent.isCE)return $t("slot",c==="default"?null:{name:c},E&&E());var C=o[c];C&&C._c&&(C._d=!1),Ct();var V=C&&jo(C(p)),W=Ln(tt,{key:p.key||"_".concat(c)},V||(E?E():[]),V&&o._===1?64:-2);return!T&&W.scopeId&&(W.slotScopeIds=[W.scopeId+"-s"]),C&&C._c&&(C._d=!0),W}function jo(o){return o.some(c=>Ei(c)?!(c.type===st||c.type===tt&&!jo(c.children)):!0)?o:null}function Qo(o){var c={};for(var p in o)c[f.toHandlerKey(p)]=o[p];return c}var Mo=o=>o?Wi(o)?Ot(o)||o.proxy:Mo(o.parent):null,Eo=f.extend(Object.create(null),{$:o=>o,$el:o=>o.vnode.el,$data:o=>o.data,$props:o=>o.props,$attrs:o=>o.attrs,$slots:o=>o.slots,$refs:o=>o.refs,$parent:o=>Mo(o.parent),$root:o=>Mo(o.root),$emit:o=>o.emit,$options:o=>ur(o),$forceUpdate:o=>o.f||(o.f=()=>tn(o.update)),$nextTick:o=>o.n||(o.n=gt.bind(o.proxy)),$watch:o=>Ti.bind(o)}),io={get(o,c){var{_:p}=o,{ctx:E,setupState:T,data:C,props:V,accessCache:W,type:Y,appContext:oe}=p,je;if(c[0]!=="$"){var Ye=W[c];if(Ye!==void 0)switch(Ye){case 1:return T[c];case 2:return C[c];case 4:return E[c];case 3:return V[c]}else{if(T!==f.EMPTY_OBJ&&f.hasOwn(T,c))return W[c]=1,T[c];if(C!==f.EMPTY_OBJ&&f.hasOwn(C,c))return W[c]=2,C[c];if((je=p.propsOptions[0])&&f.hasOwn(je,c))return W[c]=3,V[c];if(E!==f.EMPTY_OBJ&&f.hasOwn(E,c))return W[c]=4,E[c];ea&&(W[c]=0)}}var pe=Eo[c],$e,We;if(pe)return c==="$attrs"&&P.track(p,"get",c),pe(p);if(($e=Y.__cssModules)&&($e=$e[c]))return $e;if(E!==f.EMPTY_OBJ&&f.hasOwn(E,c))return W[c]=4,E[c];if(We=oe.config.globalProperties,f.hasOwn(We,c))return We[c]},set(o,c,p){var{_:E}=o,{data:T,setupState:C,ctx:V}=E;return C!==f.EMPTY_OBJ&&f.hasOwn(C,c)?(C[c]=p,!0):T!==f.EMPTY_OBJ&&f.hasOwn(T,c)?(T[c]=p,!0):f.hasOwn(E.props,c)||c[0]==="$"&&c.slice(1)in E?!1:(V[c]=p,!0)},has(o,c){var{_:{data:p,setupState:E,accessCache:T,ctx:C,appContext:V,propsOptions:W}}=o,Y;return!!T[c]||p!==f.EMPTY_OBJ&&f.hasOwn(p,c)||E!==f.EMPTY_OBJ&&f.hasOwn(E,c)||(Y=W[0])&&f.hasOwn(Y,c)||f.hasOwn(C,c)||f.hasOwn(Eo,c)||f.hasOwn(V.config.globalProperties,c)},defineProperty(o,c,p){return p.get!=null?o._.accessCache[c]=0:f.hasOwn(p,"value")&&this.set(o,c,p.value,null),Reflect.defineProperty(o,c,p)}},xa=f.extend({},io,{get(o,c){if(c!==Symbol.unscopables)return io.get(o,c,o)},has(o,c){var p=c[0]!=="_"&&!f.isGloballyWhitelisted(c);return p}}),ea=!0;function ma(o){var c=ur(o),p=o.proxy,E=o.ctx;ea=!1,c.beforeCreate&&ta(c.beforeCreate,o,"bc");var{data:T,computed:C,methods:V,watch:W,provide:Y,inject:oe,created:je,beforeMount:Ye,mounted:pe,beforeUpdate:$e,updated:We,activated:vt,deactivated:wt,beforeDestroy:Ae,beforeUnmount:de,destroyed:Le,unmounted:i,render:l,renderTracked:d,renderTriggered:v,errorCaptured:y,serverPrefetch:w,expose:I,inheritAttrs:L,components:$,directives:te,filters:ae}=c,Re=null;if(oe&&rs(oe,E,Re,o.appContext.config.unwrapInjectedRef),V)for(var Q in V){var ve=V[Q];f.isFunction(ve)&&(E[Q]=ve.bind(p))}if(T){var Ce=T.call(p,p);f.isObject(Ce)&&(o.data=P.reactive(Ce))}if(ea=!0,C){var lt=function(rt){var Ze=C[rt],De=f.isFunction(Ze)?Ze.bind(p,p):f.isFunction(Ze.get)?Ze.get.bind(p,p):f.NOOP,bt=!f.isFunction(Ze)&&f.isFunction(Ze.set)?Ze.set.bind(p):f.NOOP,yt=Yi({get:De,set:bt});Object.defineProperty(E,rt,{enumerable:!0,configurable:!0,get:()=>yt.value,set:Bt=>yt.value=Bt})};for(var mt in C)lt(mt)}if(W)for(var _e in W)Ba(W[_e],E,p,_e);if(Y){var se=f.isFunction(Y)?Y.call(p):Y;Reflect.ownKeys(se).forEach(rt=>{oi(rt,se[rt])})}je&&ta(je,o,"c");function be(rt,Ze){f.isArray(Ze)?Ze.forEach(De=>rt(De.bind(p))):Ze&&rt(Ze.bind(p))}if(be(Jr,Ye),be(Ni,pe),be(mi,$e),be(_i,We),be(Jn,vt),be(pr,wt),be(x,y),be(ro,d),be(ji,v),be(Zr,de),be(bi,i),be(no,w),f.isArray(I))if(I.length){var Ge=o.exposed||(o.exposed={});I.forEach(rt=>{Object.defineProperty(Ge,rt,{get:()=>p[rt],set:Ze=>p[rt]=Ze})})}else o.exposed||(o.exposed={});l&&o.render===f.NOOP&&(o.render=l),L!=null&&(o.inheritAttrs=L),$&&(o.components=$),te&&(o.directives=te);var Me=o.appContext.config.globalProperties.$applyOptions;Me&&Me(c,o,p)}function rs(o,c){var p=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;f.isArray(o)&&(o=La(o));var E=function(C){var V=o[C],W=void 0;f.isObject(V)?"default"in V?W=Oi(V.from||C,V.default,!0):W=Oi(V.from||C):W=Oi(V),P.isRef(W)&&p?Object.defineProperty(c,C,{enumerable:!0,configurable:!0,get:()=>W.value,set:Y=>W.value=Y}):c[C]=W};for(var T in o)E(T)}function ta(o,c,p){ne(f.isArray(o)?o.map(E=>E.bind(c.proxy)):o.bind(c.proxy),c,p)}function Ba(o,c,p,E){var T=E.includes(".")?$i(p,E):()=>p[E];if(f.isString(o)){var C=c[o];f.isFunction(C)&&xt(T,C)}else if(f.isFunction(o))xt(T,o.bind(p));else if(f.isObject(o))if(f.isArray(o))o.forEach(W=>Ba(W,c,p,E));else{var V=f.isFunction(o.handler)?o.handler.bind(p):c[o.handler];f.isFunction(V)&&xt(T,V,o)}}function ur(o){var c=o.type,{mixins:p,extends:E}=c,{mixins:T,optionsCache:C,config:{optionMergeStrategies:V}}=o.appContext,W=C.get(c),Y;return W?Y=W:!T.length&&!p&&!E?Y=c:(Y={},T.length&&T.forEach(oe=>_r(Y,oe,V,!0)),_r(Y,c,V)),C.set(c,Y),Y}function _r(o,c,p){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:T,extends:C}=c;C&&_r(o,C,p,!0),T&&T.forEach(Y=>_r(o,Y,p,!0));for(var V in c)if(!(E&&V==="expose")){var W=na[V]||p&&p[V];o[V]=W?W(o[V],c[V]):c[V]}return o}var na={data:Ma,props:Xn,emits:Xn,methods:Xn,computed:Xn,beforeCreate:br,created:br,beforeMount:br,mounted:br,beforeUpdate:br,updated:br,beforeDestroy:br,beforeUnmount:br,destroyed:br,unmounted:br,activated:br,deactivated:br,errorCaptured:br,serverPrefetch:br,components:Xn,directives:Xn,watch:Lo,provide:Ma,inject:Vr};function Ma(o,c){return c?o?function(){return f.extend(f.isFunction(o)?o.call(this,this):o,f.isFunction(c)?c.call(this,this):c)}:c:o}function Vr(o,c){return Xn(La(o),La(c))}function La(o){if(f.isArray(o)){for(var c={},p=0;p<o.length;p++)c[o[p]]=o[p];return c}return o}function br(o,c){return o?[...new Set([].concat(o,c))]:c}function Xn(o,c){return o?f.extend(f.extend(Object.create(null),o),c):c}function Lo(o,c){if(!o)return c;if(!c)return o;var p=f.extend(Object.create(null),o);for(var E in c)p[E]=br(o[E],c[E]);return p}function Ss(o,c,p){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,T={},C={};f.def(C,Do,1),o.propsDefaults=Object.create(null),is(o,c,T,C);for(var V in o.propsOptions[0])V in T||(T[V]=void 0);p?o.props=E?T:P.shallowReactive(T):o.type.props?o.props=T:o.props=C,o.attrs=C}function zo(o,c,p,E){var{props:T,attrs:C,vnode:{patchFlag:V}}=o,W=P.toRaw(T),[Y]=o.propsOptions,oe=!1;if((E||V>0)&&!(V&16)){if(V&8)for(var je=o.vnode.dynamicProps,Ye=0;Ye<je.length;Ye++){var pe=je[Ye];if(!hr(o.emitsOptions,pe)){var $e=c[pe];if(Y)if(f.hasOwn(C,pe))$e!==C[pe]&&(C[pe]=$e,oe=!0);else{var We=f.camelize(pe);T[We]=zn(Y,W,We,$e,o,!1)}else $e!==C[pe]&&(C[pe]=$e,oe=!0)}}}else{is(o,c,T,C)&&(oe=!0);var vt;for(var wt in W)(!c||!f.hasOwn(c,wt)&&((vt=f.hyphenate(wt))===wt||!f.hasOwn(c,vt)))&&(Y?p&&(p[wt]!==void 0||p[vt]!==void 0)&&(T[wt]=zn(Y,W,wt,void 0,o,!0)):delete T[wt]);if(C!==W)for(var Ae in C)(!c||!f.hasOwn(c,Ae)&&!0)&&(delete C[Ae],oe=!0)}oe&&P.trigger(o,"set","$attrs")}function is(o,c,p,E){var[T,C]=o.propsOptions,V=!1,W;if(c){for(var Y in c)if(!f.isReservedProp(Y)){var oe=c[Y],je=void 0;T&&f.hasOwn(T,je=f.camelize(Y))?!C||!C.includes(je)?p[je]=oe:(W||(W={}))[je]=oe:hr(o.emitsOptions,Y)||(!(Y in E)||oe!==E[Y])&&(E[Y]=oe,V=!0)}}if(C)for(var Ye=P.toRaw(p),pe=W||f.EMPTY_OBJ,$e=0;$e<C.length;$e++){var We=C[$e];p[We]=zn(T,Ye,We,pe[We],o,!f.hasOwn(pe,We))}return V}function zn(o,c,p,E,T,C){var V=o[p];if(V!=null){var W=f.hasOwn(V,"default");if(W&&E===void 0){var Y=V.default;if(V.type!==Function&&f.isFunction(Y)){var{propsDefaults:oe}=T;p in oe?E=oe[p]:(fr(T),E=oe[p]=Y.call(null,c),Ir())}else E=Y}V[0]&&(C&&!W?E=!1:V[1]&&(E===""||E===f.hyphenate(p))&&(E=!0))}return E}function _a(o,c){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=c.propsCache,T=E.get(o);if(T)return T;var C=o.props,V={},W=[],Y=!1;if(!f.isFunction(o)){var oe=Le=>{Y=!0;var[i,l]=_a(Le,c,!0);f.extend(V,i),l&&W.push(...l)};!p&&c.mixins.length&&c.mixins.forEach(oe),o.extends&&oe(o.extends),o.mixins&&o.mixins.forEach(oe)}if(!C&&!Y)return E.set(o,f.EMPTY_ARR),f.EMPTY_ARR;if(f.isArray(C))for(var je=0;je<C.length;je++){var Ye=f.camelize(C[je]);Wo(Ye)&&(V[Ye]=f.EMPTY_OBJ)}else if(C)for(var pe in C){var $e=f.camelize(pe);if(Wo($e)){var We=C[pe],vt=V[$e]=f.isArray(We)||f.isFunction(We)?{type:We}:We;if(vt){var wt=Da(Boolean,vt.type),Ae=Da(String,vt.type);vt[0]=wt>-1,vt[1]=Ae<0||wt<Ae,(wt>-1||f.hasOwn(vt,"default"))&&W.push($e)}}}var de=[V,W];return E.set(o,de),de}function Wo(o){return o[0]!=="$"}function ki(o){var c=o&&o.toString().match(/^\s*function (\w+)/);return c?c[1]:o===null?"null":""}function ba(o,c){return ki(o)===ki(c)}function Da(o,c){return f.isArray(c)?c.findIndex(p=>ba(p,o)):f.isFunction(c)&&ba(c,o)?0:-1}var oo=o=>o[0]==="_"||o==="$stable",ra=o=>f.isArray(o)?o.map(Dn):[Dn(o)],yo=(o,c,p)=>{if(c._n)return c;var E=Ci(function(){return ra(c(...arguments))},p);return E._c=!1,E},zi=(o,c,p)=>{var E=o._ctx;for(var T in o)if(!oo(T)){var C=o[T];f.isFunction(C)?c[T]=yo(T,C,E):C!=null&&function(){var V=ra(C);c[T]=()=>V}()}},Ea=(o,c)=>{var p=ra(c);o.slots.default=()=>p},ia=(o,c)=>{if(o.vnode.shapeFlag&32){var p=c._;p?(o.slots=P.toRaw(c),f.def(c,"_",p)):zi(c,o.slots={})}else o.slots={},c&&Ea(o,c);f.def(o.slots,Do,1)},ya=(o,c,p)=>{var{vnode:E,slots:T}=o,C=!0,V=f.EMPTY_OBJ;if(E.shapeFlag&32){var W=c._;W?p&&W===1?C=!1:(f.extend(T,c),!p&&W===1&&delete T._):(C=!c.$stable,zi(c,T)),V=c}else c&&(Ea(o,c),V={default:1});if(C)for(var Y in T)!oo(Y)&&!(Y in V)&&delete T[Y]};function oa(){return{app:null,config:{isNativeTag:f.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var wa=0;function As(o,c){return function(E){var T=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;f.isFunction(E)||(E=Object.assign({},E)),T!=null&&!f.isObject(T)&&(T=null);var C=oa(),V=new Set,W=!1,Y=C.app={_uid:wa++,_component:E,_props:T,_container:null,_context:C,_instance:null,version:uo,get config(){return C.config},set config(oe){},use(oe){for(var je=arguments.length,Ye=new Array(je>1?je-1:0),pe=1;pe<je;pe++)Ye[pe-1]=arguments[pe];return V.has(oe)||(oe&&f.isFunction(oe.install)?(V.add(oe),oe.install(Y,...Ye)):f.isFunction(oe)&&(V.add(oe),oe(Y,...Ye))),Y},mixin(oe){return C.mixins.includes(oe)||C.mixins.push(oe),Y},component(oe,je){return je?(C.components[oe]=je,Y):C.components[oe]},directive(oe,je){return je?(C.directives[oe]=je,Y):C.directives[oe]},mount(oe,je,Ye){if(!W){var pe=$t(E,T);return pe.appContext=C,je&&c?c(pe,oe):o(pe,oe,Ye),W=!0,Y._container=oe,oe.__vue_app__=Y,Y._instance=pe.component,Ot(pe.component)||pe.component.proxy}},unmount(){W&&(o(null,Y._container),delete Y._container.__vue_app__)},provide(oe,je){return C.provides[oe]=je,Y}};return Y}}function ao(o,c,p,E){var T=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(f.isArray(o)){o.forEach((vt,wt)=>ao(vt,c&&(f.isArray(c)?c[wt]:c),p,E,T));return}if(!(In(E)&&!T)){var C=E.shapeFlag&4?Ot(E.component)||E.component.proxy:E.el,V=T?null:C,{i:W,r:Y}=o,oe=c&&c.r,je=W.refs===f.EMPTY_OBJ?W.refs={}:W.refs,Ye=W.setupState;if(oe!=null&&oe!==Y&&(f.isString(oe)?(je[oe]=null,f.hasOwn(Ye,oe)&&(Ye[oe]=null)):P.isRef(oe)&&(oe.value=null)),f.isFunction(Y))q(Y,W,12,[V,je]);else{var pe=f.isString(Y),$e=P.isRef(Y);if(pe||$e){var We=()=>{if(o.f){var vt=pe?je[Y]:Y.value;T?f.isArray(vt)&&f.remove(vt,C):f.isArray(vt)?vt.includes(C)||vt.push(C):pe?(je[Y]=[C],f.hasOwn(Ye,Y)&&(Ye[Y]=je[Y])):(Y.value=[C],o.k&&(je[o.k]=Y.value))}else pe?(je[Y]=V,f.hasOwn(Ye,Y)&&(Ye[Y]=V)):$e&&(Y.value=V,o.k&&(je[o.k]=V))};V?(We.id=-1,m(We,p)):We()}}}}var li=!1,Ri=o=>/svg/.test(o.namespaceURI)&&o.tagName!=="foreignObject",so=o=>o.nodeType===8;function aa(o){var{mt:c,p,o:{patchProp:E,createText:T,nextSibling:C,parentNode:V,remove:W,insert:Y,createComment:oe}}=o,je=(Ae,de)=>{if(!de.hasChildNodes()){p(null,Ae,de),wr(),de._vnode=Ae;return}li=!1,Ye(de.firstChild,Ae,null,null,null),wr(),de._vnode=Ae,li&&console.error("Hydration completed but contains mismatches.")},Ye=function(Ae,de,Le,i,l){var d=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,v=so(Ae)&&Ae.data==="[",y=()=>vt(Ae,de,Le,i,l,v),{type:w,ref:I,shapeFlag:L,patchFlag:$}=de,te=Ae.nodeType;de.el=Ae,$===-2&&(d=!1,de.dynamicChildren=null);var ae=null;switch(w){case ze:te!==3?de.children===""?(Y(de.el=T(""),V(Ae),Ae),ae=Ae):ae=y():(Ae.data!==de.children&&(li=!0,Ae.data=de.children),ae=C(Ae));break;case st:te!==8||v?ae=y():ae=C(Ae);break;case Ft:if(te!==1&&te!==3)ae=y();else{ae=Ae;for(var Re=!de.children.length,Q=0;Q<de.staticCount;Q++)Re&&(de.children+=ae.nodeType===1?ae.outerHTML:ae.data),Q===de.staticCount-1&&(de.anchor=ae),ae=C(ae);return ae}break;case tt:v?ae=We(Ae,de,Le,i,l,d):ae=y();break;default:if(L&1)te!==1||de.type.toLowerCase()!==Ae.tagName.toLowerCase()?ae=y():ae=pe(Ae,de,Le,i,l,d);else if(L&6){de.slotScopeIds=l;var ve=V(Ae);if(c(de,ve,null,Le,i,Ri(ve),d),ae=v?wt(Ae):C(Ae),ae&&so(ae)&&ae.data==="teleport end"&&(ae=C(ae)),In(de)){var Ce;v?(Ce=$t(tt),Ce.anchor=ae?ae.previousSibling:ve.lastChild):Ce=Ae.nodeType===3?Xr(""):$t("div"),Ce.el=Ae,de.component.subTree=Ce}}else L&64?te!==8?ae=y():ae=de.type.hydrate(Ae,de,Le,i,l,d,o,$e):L&128&&(ae=de.type.hydrate(Ae,de,Le,i,Ri(V(Ae)),l,d,o,Ye))}return I!=null&&ao(I,null,i,de),ae},pe=(Ae,de,Le,i,l,d)=>{d=d||!!de.dynamicChildren;var{type:v,props:y,patchFlag:w,shapeFlag:I,dirs:L}=de,$=v==="input"&&L||v==="option";if($||w!==-1){if(L&&he(de,null,Le,"created"),y)if($||!d||w&(16|32))for(var te in y)($&&te.endsWith("value")||f.isOn(te)&&!f.isReservedProp(te))&&E(Ae,te,null,y[te],!1,void 0,Le);else y.onClick&&E(Ae,"onClick",null,y.onClick,!1,void 0,Le);var ae;if((ae=y&&y.onVnodeBeforeMount)&&Pr(ae,Le,de),L&&he(de,null,Le,"beforeMount"),((ae=y&&y.onVnodeMounted)||L)&&bo(()=>{ae&&Pr(ae,Le,de),L&&he(de,null,Le,"mounted")},i),I&16&&!(y&&(y.innerHTML||y.textContent)))for(var Re=$e(Ae.firstChild,de,Ae,Le,i,l,d);Re;){li=!0;var Q=Re;Re=Re.nextSibling,W(Q)}else I&8&&Ae.textContent!==de.children&&(li=!0,Ae.textContent=de.children)}return Ae.nextSibling},$e=(Ae,de,Le,i,l,d,v)=>{v=v||!!de.dynamicChildren;for(var y=de.children,w=y.length,I=0;I<w;I++){var L=v?y[I]:y[I]=Dn(y[I]);if(Ae)Ae=Ye(Ae,L,i,l,d,v);else{if(L.type===ze&&!L.children)continue;li=!0,p(null,L,Le,null,i,l,Ri(Le),d)}}return Ae},We=(Ae,de,Le,i,l,d)=>{var{slotScopeIds:v}=de;v&&(l=l?l.concat(v):v);var y=V(Ae),w=$e(C(Ae),de,y,Le,i,l,d);return w&&so(w)&&w.data==="]"?C(de.anchor=w):(li=!0,Y(de.anchor=oe("]"),y,w),w)},vt=(Ae,de,Le,i,l,d)=>{if(li=!0,de.el=null,d)for(var v=wt(Ae);;){var y=C(Ae);if(y&&y!==v)W(y);else break}var w=C(Ae),I=V(Ae);return W(Ae),p(null,de,I,w,Le,i,Ri(I),l),w},wt=Ae=>{for(var de=0;Ae;)if(Ae=C(Ae),Ae&&so(Ae)&&(Ae.data==="["&&de++,Ae.data==="]")){if(de===0)return C(Ae);de--}return Ae};return[je,Ye]}var m=bo;function k(o){return j(o)}function z(o){return j(o,aa)}function j(o,c){var p=f.getGlobalThis();p.__VUE__=!0;var{insert:E,remove:T,patchProp:C,forcePatchProp:V,createElement:W,createText:Y,createComment:oe,setText:je,setElementText:Ye,parentNode:pe,nextSibling:$e,setScopeId:We=f.NOOP,cloneNode:vt,insertStaticContent:wt}=o,Ae=function(D,K,le){var ue=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,Pe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,et=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,ft=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,Ke=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,it=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!!K.dynamicChildren;if(D!==K){D&&!ir(D,K)&&(ue=bt(D),Ge(D,Pe,et,!0),D=null),K.patchFlag===-2&&(it=!1,K.dynamicChildren=null);var{type:xe,ref:St,shapeFlag:It}=K;switch(xe){case ze:de(D,K,le,ue);break;case st:Le(D,K,le,ue);break;case Ft:D==null&&i(K,le,ue,ft);break;case tt:ae(D,K,le,ue,Pe,et,ft,Ke,it);break;default:It&1?v(D,K,le,ue,Pe,et,ft,Ke,it):It&6?Re(D,K,le,ue,Pe,et,ft,Ke,it):(It&64||It&128)&&xe.process(D,K,le,ue,Pe,et,ft,Ke,it,Bt)}St!=null&&Pe&&ao(St,D&&D.ref,et,K||D,!K)}},de=(D,K,le,ue)=>{if(D==null)E(K.el=Y(K.children),le,ue);else{var Pe=K.el=D.el;K.children!==D.children&&je(Pe,K.children)}},Le=(D,K,le,ue)=>{D==null?E(K.el=oe(K.children||""),le,ue):K.el=D.el},i=(D,K,le,ue)=>{[D.el,D.anchor]=wt(D.children,K,le,ue,D.el,D.anchor)},l=(D,K,le)=>{for(var{el:ue,anchor:Pe}=D,et;ue&&ue!==Pe;)et=$e(ue),E(ue,K,le),ue=et;E(Pe,K,le)},d=D=>{for(var{el:K,anchor:le}=D,ue;K&&K!==le;)ue=$e(K),T(K),K=ue;T(le)},v=(D,K,le,ue,Pe,et,ft,Ke,it)=>{ft=ft||K.type==="svg",D==null?y(K,le,ue,Pe,et,ft,Ke,it):L(D,K,Pe,et,ft,Ke,it)},y=(D,K,le,ue,Pe,et,ft,Ke)=>{var it,xe,{type:St,props:It,shapeFlag:At,transition:Nt,patchFlag:sn,dirs:bn}=D;if(D.el&&vt!==void 0&&sn===-1)it=D.el=vt(D.el);else{if(it=D.el=W(D.type,et,It&&It.is,It),At&8?Ye(it,D.children):At&16&&I(D.children,it,null,ue,Pe,et&&St!=="foreignObject",ft,Ke),bn&&he(D,null,ue,"created"),It){for(var tr in It)tr!=="value"&&!f.isReservedProp(tr)&&C(it,tr,null,It[tr],et,D.children,ue,Pe,De,D.hostInstance);"value"in It&&C(it,"value",null,It.value,!1,[],ue,null,void 0,D.hostInstance),(xe=It.onVnodeBeforeMount)&&Pr(xe,ue,D)}w(it,D,D.scopeId,ft,ue)}bn&&he(D,null,ue,"beforeMount");var er=(!Pe||Pe&&!Pe.pendingBranch)&&Nt&&!Nt.persisted;er&&Nt.beforeEnter(it),E(it,K,le),((xe=It&&It.onVnodeMounted)||er||bn)&&m(()=>{xe&&Pr(xe,ue,D),er&&Nt.enter(it),bn&&he(D,null,ue,"mounted")},Pe)},w=(D,K,le,ue,Pe)=>{if(le&&We(D,le),ue)for(var et=0;et<ue.length;et++)We(D,ue[et]);if(Pe){var ft=Pe.subTree;if(K===ft){var Ke=Pe.vnode;w(D,Ke,Ke.scopeId,Ke.slotScopeIds,Pe.parent)}}},I=function(D,K,le,ue,Pe,et,ft,Ke){for(var it=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,xe=it;xe<D.length;xe++){var St=D[xe]=Ke?An(D[xe]):Dn(D[xe]);Ae(null,St,K,le,ue,Pe,et,ft,Ke)}},L=(D,K,le,ue,Pe,et,ft)=>{var Ke=K.el=D.el,{patchFlag:it,dynamicChildren:xe,dirs:St}=K;it|=D.patchFlag&16;var It=D.props||f.EMPTY_OBJ,At=K.props||f.EMPTY_OBJ,Nt;le&&Z(le,!1),(Nt=At.onVnodeBeforeUpdate)&&Pr(Nt,le,K,D),St&&he(K,D,le,"beforeUpdate"),le&&Z(le,!0);var sn=Pe&&K.type!=="foreignObject";if(xe?$(D.dynamicChildren,xe,Ke,le,ue,sn,et):ft||mt(D,K,Ke,null,le,ue,sn,et,!1),it>0){if(it&16)te(Ke,K,It,At,le,ue,Pe);else if(it&2&&It.class!==At.class&&C(Ke,"class",null,At.class,Pe,[],le,null,void 0,K.hostInstance),it&4&&C(Ke,"style",It.style,At.style,Pe,[],le,null,void 0,K.hostInstance),it&8)for(var bn=K.dynamicProps,tr=0;tr<bn.length;tr++){var er=bn[tr],Co=It[er],Ko=At[er];(Ko!==Co||er==="value"||V&&V(Ke,er))&&C(Ke,er,Co,Ko,Pe,D.children,le,ue,De,K.hostInstance)}it&1&&D.children!==K.children&&Ye(Ke,K.children)}else!ft&&xe==null&&te(Ke,K,It,At,le,ue,Pe);((Nt=At.onVnodeUpdated)||St)&&m(()=>{Nt&&Pr(Nt,le,K,D),St&&he(K,D,le,"updated")},ue)},$=(D,K,le,ue,Pe,et,ft)=>{for(var Ke=0;Ke<K.length;Ke++){var it=D[Ke],xe=K[Ke],St=it.el&&(it.type===tt||!ir(it,xe)||it.shapeFlag&(6|64))?pe(it.el):le;Ae(it,xe,St,null,ue,Pe,et,ft,!0)}},te=(D,K,le,ue,Pe,et,ft)=>{if(le!==ue){for(var Ke in ue)if(!f.isReservedProp(Ke)){var it=ue[Ke],xe=le[Ke];(it!==xe&&Ke!=="value"||V&&V(D,Ke))&&C(D,Ke,xe,it,ft,K.children,Pe,et,De,K.hostInstance)}if(le!==f.EMPTY_OBJ)for(var St in le)!f.isReservedProp(St)&&!(St in ue)&&C(D,St,le[St],null,ft,K.children,Pe,et,De,K.hostInstance);"value"in ue&&C(D,"value",le.value,ue.value,!1,[],Pe,null,void 0,K.hostInstance)}},ae=(D,K,le,ue,Pe,et,ft,Ke,it)=>{var xe=K.el=D?D.el:Y(""),St=K.anchor=D?D.anchor:Y(""),{patchFlag:It,dynamicChildren:At,slotScopeIds:Nt}=K;Nt&&(Ke=Ke?Ke.concat(Nt):Nt),D==null?(E(xe,le,ue),E(St,le,ue),I(K.children,le,St,Pe,et,ft,Ke,it)):It>0&&It&64&&At&&D.dynamicChildren?($(D.dynamicChildren,At,le,Pe,et,ft,Ke),(K.key!=null||Pe&&K===Pe.subTree)&&ee(D,K,!0)):mt(D,K,le,St,Pe,et,ft,Ke,it)},Re=(D,K,le,ue,Pe,et,ft,Ke,it)=>{K.slotScopeIds=Ke,D==null?K.shapeFlag&512?Pe.ctx.activate(K,le,ue,ft,it):Q(K,le,ue,Pe,et,ft,it):ve(D,K,it)},Q=(D,K,le,ue,Pe,et,ft)=>{var Ke=D.component=la(D,ue,Pe);if(vi(D)&&(Ke.ctx.renderer=Bt),Va(Ke),Ke.asyncDep){if(Pe&&Pe.registerDep(Ke,Ce),!D.el){var it=Ke.subTree=$t(st);Le(null,it,K,le)}return}Ce(Ke,D,K,le,Pe,et,ft)},ve=(D,K,le)=>{var ue=K.component=D.component;if(Ro(D,K,le))if(ue.asyncDep&&!ue.asyncResolved){lt(ue,K,le);return}else ue.next=K,rr(ue.update),ue.update();else K.el=D.el,ue.vnode=K},Ce=(D,K,le,ue,Pe,et,ft)=>{var Ke=()=>{if(D.isMounted){var{next:G,bu:ie,u:ye,parent:Oe,vnode:Fe}=D,Xe=G,ct;Z(D,!1),G?(G.el=Fe.el,lt(D,G,ft)):G=Fe,ie&&f.invokeArrayFns(ie),(ct=G.props&&G.props.onVnodeBeforeUpdate)&&Pr(ct,Oe,G,Fe),Z(D,!0);var qe=Yr(D),Qe=D.subTree;D.subTree=qe,Ae(Qe,qe,pe(Qe.el),bt(Qe),D,Pe,et),G.el=qe.el,Xe===null&&Mr(D,qe.el),ye&&m(ye,Pe),(ct=G.props&&G.props.onVnodeUpdated)&&m(()=>Pr(ct,Oe,G,Fe),Pe)}else{var St,{el:It,props:At}=K,{bm:Nt,m:sn,parent:bn}=D,tr=In(K);if(Z(D,!1),Nt&&f.invokeArrayFns(Nt),!tr&&(St=At&&At.onVnodeBeforeMount)&&Pr(St,bn,K),Z(D,!0),It&&ut){var er=()=>{D.subTree=Yr(D),ut(It,D.subTree,D,Pe,null)};tr?K.type.__asyncLoader().then(()=>!D.isUnmounted&&er()):er()}else{var Co=D.subTree=Yr(D);Ae(null,Co,le,ue,D,Pe,et),K.el=Co.el}if(sn&&m(sn,Pe),!tr&&(St=At&&At.onVnodeMounted)){var Ko=K;m(()=>Pr(St,bn,Ko),Pe)}(K.shapeFlag&256||bn&&In(bn.vnode)&&bn.vnode.shapeFlag&256)&&D.a&&m(D.a,Pe),D.isMounted=!0,K=le=ue=null}},it=D.effect=new P.ReactiveEffect(Ke,()=>tn(xe),D.scope),xe=D.update=()=>it.run();xe.id=D.uid,Z(D,!0),xe()},lt=(D,K,le)=>{K.component=D;var ue=D.vnode.props;D.vnode=K,D.next=null,zo(D,K.props,ue,le),ya(D,K.children,le),P.pauseTracking(),xn(void 0,D.update),P.resetTracking()},mt=function(D,K,le,ue,Pe,et,ft,Ke){var it=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,xe=D&&D.children,St=D?D.shapeFlag:0,It=K.children,{patchFlag:At,shapeFlag:Nt}=K;if(At>0){if(At&128){se(xe,It,le,ue,Pe,et,ft,Ke,it);return}else if(At&256){_e(xe,It,le,ue,Pe,et,ft,Ke,it);return}}Nt&8?(St&16&&De(xe,Pe,et),It!==xe&&Ye(le,It)):St&16?Nt&16?se(xe,It,le,ue,Pe,et,ft,Ke,it):De(xe,Pe,et,!0):(St&8&&Ye(le,""),Nt&16&&I(It,le,ue,Pe,et,ft,Ke,it))},_e=(D,K,le,ue,Pe,et,ft,Ke,it)=>{D=D||f.EMPTY_ARR,K=K||f.EMPTY_ARR;var xe=D.length,St=K.length,It=Math.min(xe,St),At;for(At=0;At<It;At++){var Nt=K[At]=it?An(K[At]):Dn(K[At]);Ae(D[At],Nt,le,null,Pe,et,ft,Ke,it)}xe>St?De(D,Pe,et,!0,!1,It):I(K,le,ue,Pe,et,ft,Ke,it,It)},se=(D,K,le,ue,Pe,et,ft,Ke,it)=>{for(var xe=0,St=K.length,It=D.length-1,At=St-1;xe<=It&&xe<=At;){var Nt=D[xe],sn=K[xe]=it?An(K[xe]):Dn(K[xe]);if(ir(Nt,sn))Ae(Nt,sn,le,null,Pe,et,ft,Ke,it);else break;xe++}for(;xe<=It&&xe<=At;){var bn=D[It],tr=K[At]=it?An(K[At]):Dn(K[At]);if(ir(bn,tr))Ae(bn,tr,le,null,Pe,et,ft,Ke,it);else break;It--,At--}if(xe>It){if(xe<=At)for(var er=At+1,Co=er<St?K[er].el:ue;xe<=At;)Ae(null,K[xe]=it?An(K[xe]):Dn(K[xe]),le,Co,Pe,et,ft,Ke,it),xe++}else if(xe>At)for(;xe<=It;)Ge(D[xe],Pe,et,!0),xe++;else{var Ko=xe,G=xe,ie=new Map;for(xe=G;xe<=At;xe++){var ye=K[xe]=it?An(K[xe]):Dn(K[xe]);ye.key!=null&&ie.set(ye.key,xe)}var Oe,Fe=0,Xe=At-G+1,ct=!1,qe=0,Qe=new Array(Xe);for(xe=0;xe<Xe;xe++)Qe[xe]=0;for(xe=Ko;xe<=It;xe++){var Ue=D[xe];if(Fe>=Xe){Ge(Ue,Pe,et,!0);continue}var kt=void 0;if(Ue.key!=null)kt=ie.get(Ue.key);else for(Oe=G;Oe<=At;Oe++)if(Qe[Oe-G]===0&&ir(Ue,K[Oe])){kt=Oe;break}kt===void 0?Ge(Ue,Pe,et,!0):(Qe[kt-G]=xe+1,kt>=qe?qe=kt:ct=!0,Ae(Ue,K[kt],le,null,Pe,et,ft,Ke,it),Fe++)}var Lt=ct?ce(Qe):f.EMPTY_ARR;for(Oe=Lt.length-1,xe=Xe-1;xe>=0;xe--){var Dt=G+xe,rn=K[Dt],Hr=Dt+1<St?K[Dt+1].el:ue;Qe[xe]===0?Ae(null,rn,le,Hr,Pe,et,ft,Ke,it):ct&&(Oe<0||xe!==Lt[Oe]?be(rn,le,Hr,2):Oe--)}}},be=function(D,K,le,ue){var Pe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:et,type:ft,transition:Ke,children:it,shapeFlag:xe}=D;if(xe&6){be(D.component.subTree,K,le,ue);return}if(xe&128){D.suspense.move(K,le,ue);return}if(xe&64){ft.move(D,K,le,Bt);return}if(ft===tt){E(et,K,le);for(var St=0;St<it.length;St++)be(it[St],K,le,ue);E(D.anchor,K,le);return}if(ft===Ft){l(D,K,le);return}var It=ue!==2&&xe&1&&Ke;if(It)if(ue===0)Ke.beforeEnter(et),E(et,K,le),m(()=>Ke.enter(et),Pe);else{var{leave:At,delayLeave:Nt,afterLeave:sn}=Ke,bn=()=>E(et,K,le),tr=()=>{At(et,()=>{bn(),sn&&sn()})};Nt?Nt(et,bn,tr):tr()}else E(et,K,le)},Ge=function(D,K,le){var ue=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,Pe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:et,props:ft,ref:Ke,children:it,dynamicChildren:xe,shapeFlag:St,patchFlag:It,dirs:At}=D;if(Ke!=null&&ao(Ke,null,le,D,!0),St&256){K.ctx.deactivate(D);return}var Nt=St&1&&At,sn=!In(D),bn;if(sn&&(bn=ft&&ft.onVnodeBeforeUnmount)&&Pr(bn,K,D),St&6)Ze(D.component,le,ue);else{if(St&128){D.suspense.unmount(le,ue);return}Nt&&he(D,null,K,"beforeUnmount"),St&64?D.type.remove(D,K,le,Pe,Bt,ue):xe&&(et!==tt||It>0&&It&64)?De(xe,K,le,!1,!0):(et===tt&&It&(128|256)||!Pe&&St&16)&&De(it,K,le),ue&&Me(D)}(sn&&(bn=ft&&ft.onVnodeUnmounted)||Nt)&&m(()=>{bn&&Pr(bn,K,D),Nt&&he(D,null,K,"unmounted")},le)},Me=D=>{var{type:K,el:le,anchor:ue,transition:Pe}=D;if(K===tt){rt(le,ue);return}if(K===Ft){d(D);return}var et=()=>{T(le),Pe&&!Pe.persisted&&Pe.afterLeave&&Pe.afterLeave()};if(D.shapeFlag&1&&Pe&&!Pe.persisted){var{leave:ft,delayLeave:Ke}=Pe,it=()=>ft(le,et);Ke?Ke(D.el,et,it):it()}else et()},rt=(D,K)=>{for(var le;D!==K;)le=$e(D),T(D),D=le;T(K)},Ze=(D,K,le)=>{var{bum:ue,scope:Pe,update:et,subTree:ft,um:Ke}=D;ue&&f.invokeArrayFns(ue),Pe.stop(),et&&(et.active=!1,Ge(ft,D,K,le)),Ke&&m(Ke,K),m(()=>{D.isUnmounted=!0},K),K&&K.pendingBranch&&!K.isUnmounted&&D.asyncDep&&!D.asyncResolved&&D.suspenseId===K.pendingId&&(K.deps--,K.deps===0&&K.resolve())},De=function(D,K,le){for(var ue=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,Pe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,et=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,ft=et;ft<D.length;ft++)Ge(D[ft],K,le,ue,Pe)},bt=D=>D.shapeFlag&6?bt(D.component.subTree):D.shapeFlag&128?D.suspense.next():$e(D.anchor||D.el),yt=(D,K,le)=>{D==null?K._vnode&&Ge(K._vnode,null,null,!0):Ae(K._vnode||null,D,K,null,null,null,le),wr(),K._vnode=D},Bt={p:Ae,um:Ge,m:be,r:Me,mt:Q,mc:I,pc:mt,pbc:$,n:bt,o},jt,ut;return c&&([jt,ut]=c(Bt)),{render:yt,hydrate:jt,createApp:As(yt,jt)}}function Z(o,c){var{effect:p,update:E}=o;p.allowRecurse=E.allowRecurse=c}function ee(o,c){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=o.children,T=c.children;if(f.isArray(E)&&f.isArray(T))for(var C=0;C<E.length;C++){var V=E[C],W=T[C];W.shapeFlag&1&&!W.dynamicChildren&&((W.patchFlag<=0||W.patchFlag===32)&&(W=T[C]=An(T[C]),W.el=V.el),p||ee(V,W))}}function ce(o){var c=o.slice(),p=[0],E,T,C,V,W,Y=o.length;for(E=0;E<Y;E++){var oe=o[E];if(oe!==0){if(T=p[p.length-1],o[T]<oe){c[E]=T,p.push(E);continue}for(C=0,V=p.length-1;C<V;)W=C+V>>1,o[p[W]]<oe?C=W+1:V=W;oe<o[p[C]]&&(C>0&&(c[E]=p[C-1]),p[C]=E)}}for(C=p.length,V=p[C-1];C-- >0;)p[C]=V,V=c[V];return p}var Ee=o=>o.__isTeleport,Te=o=>o&&(o.disabled||o.disabled===""),Ie=o=>typeof SVGElement!="undefined"&&o instanceof SVGElement,me=(o,c)=>{var p=o&&o.to;if(f.isString(p))if(c){var E=c(p);return E}else return null;else return p},Be={__isTeleport:!0,process(o,c,p,E,T,C,V,W,Y,oe){var{mc:je,pc:Ye,pbc:pe,o:{insert:$e,querySelector:We,createText:vt,createComment:wt}}=oe,Ae=Te(c.props),{shapeFlag:de,children:Le,dynamicChildren:i}=c;if(o==null){var l=c.el=vt(""),d=c.anchor=vt("");$e(l,p,E),$e(d,p,E);var v=c.target=me(c.props,We),y=c.targetAnchor=vt("");v&&($e(y,v),V=V||Ie(v));var w=(ve,Ce)=>{de&16&&je(Le,ve,Ce,T,C,V,W,Y)};Ae?w(p,d):v&&w(v,y)}else{c.el=o.el;var I=c.anchor=o.anchor,L=c.target=o.target,$=c.targetAnchor=o.targetAnchor,te=Te(o.props),ae=te?p:L,Re=te?I:$;if(V=V||Ie(L),i?(pe(o.dynamicChildren,i,ae,T,C,V,W),ee(o,c,!0)):Y||Ye(o,c,ae,Re,T,C,V,W,!1),Ae)te||nt(c,p,I,oe,1);else if((c.props&&c.props.to)!==(o.props&&o.props.to)){var Q=c.target=me(c.props,We);Q&&nt(c,Q,null,oe,0)}else te&&nt(c,L,$,oe,1)}},remove(o,c,p,E,T,C){var{um:V,o:{remove:W}}=T,{shapeFlag:Y,children:oe,anchor:je,targetAnchor:Ye,target:pe,props:$e}=o;if(pe&&W(Ye),(C||!Te($e))&&(W(je),Y&16))for(var We=0;We<oe.length;We++){var vt=oe[We];V(vt,c,p,!0,!!vt.dynamicChildren)}},move:nt,hydrate:_t};function nt(o,c,p,E){var{o:{insert:T},m:C}=E,V=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;V===0&&T(o.targetAnchor,c,p);var{el:W,anchor:Y,shapeFlag:oe,children:je,props:Ye}=o,pe=V===2;if(pe&&T(W,c,p),(!pe||Te(Ye))&&oe&16)for(var $e=0;$e<je.length;$e++)C(je[$e],c,p,2);pe&&T(Y,c,p)}function _t(o,c,p,E,T,C,V,W){var{o:{nextSibling:Y,parentNode:oe,querySelector:je}}=V,Ye=c.target=me(c.props,je);if(Ye){var pe=Ye._lpa||Ye.firstChild;if(c.shapeFlag&16)if(Te(c.props))c.anchor=W(Y(o),c,oe(o),p,E,T,C),c.targetAnchor=pe;else{c.anchor=Y(o);for(var $e=pe;$e;)if($e=Y($e),$e&&$e.nodeType===8&&$e.data==="teleport anchor"){c.targetAnchor=$e,Ye._lpa=c.targetAnchor&&Y(c.targetAnchor);break}W(pe,c,Ye,p,E,T,C)}}return c.anchor&&Y(c.anchor)}var Gt=Be,tt=Symbol(void 0),ze=Symbol(void 0),st=Symbol(void 0),Ft=Symbol(void 0),ht=[],Je=null;function Ct(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;ht.push(Je=o?null:[])}function wn(){ht.pop(),Je=ht[ht.length-1]||null}var un=1;function nn(o){un+=o}function Sn(o){return o.dynamicChildren=un>0?Je||f.EMPTY_ARR:null,wn(),un>0&&Je&&Je.push(o),o}function Ht(o,c,p,E,T,C){return Sn(Fo(o,c,p,E,T,C,!0))}function Ln(o,c,p,E,T){return Sn($t(o,c,p,E,T,!0))}function Ei(o){return o?o.__v_isVNode===!0:!1}function ir(o,c){return o.type===c.type&&o.key===c.key}function Er(o){}var Do="__vInternal",lo=o=>{var{key:c}=o;return c!=null?c:null},$r=o=>{var{ref:c,ref_key:p,ref_for:E}=o;return c!=null?f.isString(c)||P.isRef(c)||f.isFunction(c)?{i:Cn,r:c,k:p,f:!!E}:c:null};function Fo(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,T=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,C=arguments.length>5&&arguments[5]!==void 0?arguments[5]:o===tt?0:1,V=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,W=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,Y={__v_isVNode:!0,__v_skip:!0,type:o,props:c,key:c&&lo(c),ref:c&&$r(c),scopeId:On,slotScopeIds:null,children:p,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:C,patchFlag:E,dynamicProps:T,dynamicChildren:null,appContext:null,hostInstance:Cn};return W?(Qr(Y,p),C&128&&o.normalize(Y)):p&&(Y.shapeFlag|=f.isString(p)?8:16),un>0&&!V&&Je&&(Y.patchFlag>0||C&6)&&Y.patchFlag!==32&&Je.push(Y),Y}var $t=_n;function _n(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,T=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,C=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!o||o===X)&&(o=st),Ei(o)){var V=yi(o,c,!0);return p&&Qr(V,p),un>0&&!C&&Je&&(V.shapeFlag&6?Je[Je.indexOf(o)]=V:Je.push(V)),V.patchFlag|=-2,V}if(Gi(o)&&(o=o.__vccOpts),c){c=Fa(c);var{class:W,style:Y}=c;W&&!f.isString(W)&&(c.class=f.normalizeClass(W)),f.isObject(Y)&&(P.isProxy(Y)&&!f.isArray(Y)&&(Y=f.extend({},Y)),c.style=f.normalizeStyle(Y))}var oe=f.isString(o)?1:cr(o)?128:Ee(o)?64:f.isObject(o)?4:f.isFunction(o)?2:0;return Fo(o,c,p,E,T,oe,C,!0)}function Fa(o){return o?P.isProxy(o)||Do in o?f.extend({},o):o:null}function yi(o,c){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:E,ref:T,patchFlag:C,children:V}=o,W=c?ei(E||{},c):E,Y={__v_isVNode:!0,__v_skip:!0,type:o.type,props:W,key:W&&lo(W),ref:c&&c.ref?p&&T?f.isArray(T)?T.concat($r(c)):[T,$r(c)]:$r(c):T,scopeId:o.scopeId,slotScopeIds:o.slotScopeIds,children:V,target:o.target,targetAnchor:o.targetAnchor,staticCount:o.staticCount,shapeFlag:o.shapeFlag,patchFlag:c&&o.type!==tt?C===-1?16:C|16:C,dynamicProps:o.dynamicProps,dynamicChildren:o.dynamicChildren,appContext:o.appContext,hostInstance:o.hostInstance,dirs:o.dirs,transition:o.transition,component:o.component,suspense:o.suspense,ssContent:o.ssContent&&yi(o.ssContent),ssFallback:o.ssFallback&&yi(o.ssFallback),el:o.el,anchor:o.anchor};return Y}function Xr(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return $t(ze,null,o,c)}function Vo(o,c){var p=$t(Ft,null,o);return p.staticCount=c,p}function sa(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return c?(Ct(),Ln(st,null,o)):$t(st,null,o)}function Dn(o){return o==null||typeof o=="boolean"?$t(st):f.isArray(o)?$t(tt,null,o.slice()):typeof o=="object"?An(o):$t(ze,null,String(o))}function An(o){return o.el===null||o.memo?o:yi(o)}function Qr(o,c){var p=0,{shapeFlag:E}=o;if(c==null)c=null;else if(f.isArray(c))p=16;else if(typeof c=="object")if(E&(1|64)){var T=c.default;T&&(T._c&&(T._d=!1),Qr(o,T()),T._c&&(T._d=!0));return}else{p=32;var C=c._;!C&&!(Do in c)?c._ctx=Cn:C===3&&Cn&&(Cn.slots._===1?c._=1:(c._=2,o.patchFlag|=1024))}else f.isFunction(c)?(c={default:c,_ctx:Cn},p=32):(c=String(c),E&64?(p=16,c=[Xr(c)]):p=8);o.children=c,o.shapeFlag|=p}function ei(){for(var o={},c=0;c<arguments.length;c++){var p=c<0||arguments.length<=c?void 0:arguments[c];for(var E in p)if(E==="class")o.class!==p.class&&(o.class=f.normalizeClass([o.class,p.class]));else if(E==="style")o.style=f.normalizeStyle([o.style,p.style]);else if(f.isOn(E)){var T=o[E],C=p[E];C&&T!==C&&!(f.isArray(T)&&T.includes(C))&&(o[E]=T?[].concat(T,C):C)}else E!==""&&(o[E]=p[E])}return o}function Pr(o,c,p){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;ne(o,c,7,[p,E])}var Ur=oa(),os=0;function la(o,c,p){var E=o.type,T=(c?c.appContext:o.appContext)||Ur,C={uid:os++,vnode:o,type:E,parent:c,appContext:T,root:null,next:null,subTree:null,effect:null,update:null,scope:new P.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:c?c.provides:Object.create(T.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:_a(E,T),emitsOptions:No(E,T),emit:null,emitted:null,propsDefaults:f.EMPTY_OBJ,inheritAttrs:E.inheritAttrs,ctx:f.EMPTY_OBJ,data:f.EMPTY_OBJ,props:f.EMPTY_OBJ,attrs:f.EMPTY_OBJ,slots:f.EMPTY_OBJ,refs:f.EMPTY_OBJ,setupState:f.EMPTY_OBJ,setupContext:null,suspense:p,suspenseId:p?p.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return C.ctx={_:C},C.root=c?c.root:C,C.emit=Io.bind(null,C),o.ce&&o.ce(C),C}var Fn=null,fn=()=>Fn||Cn,fr=o=>{Fn=o,o.scope.on()},Ir=()=>{Fn&&Fn.scope.off(),Fn=null};function Wi(o){return o.vnode.shapeFlag&4}N.isInSSRComponentSetup=!1;function Va(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;N.isInSSRComponentSetup=c;var{props:p,children:E}=o.vnode,T=Wi(o);Ss(o,p,T,c),ia(o,E);var C=T?Sa(o,c):void 0;return N.isInSSRComponentSetup=!1,C}function Sa(o,c){var p=o.type;o.accessCache=Object.create(null),o.proxy=P.markRaw(new Proxy(o.ctx,io));var{setup:E}=p;if(E){var T=o.setupContext=E.length>1?Ne(o):null;fr(o),P.pauseTracking();var C=q(E,o,0,[o.props,T]);if(P.resetTracking(),Ir(),f.isPromise(C)){if(C.then(Ir,Ir),c)return C.then(V=>{Go(o,V,c)}).catch(V=>{En(V,o,0)});o.asyncDep=C}else Go(o,C,c)}else Aa(o,c)}function Go(o,c,p){f.isFunction(c)?o.type.__ssrInlineRender?o.ssrRender=c:o.render=c:f.isObject(c)&&(o.setupState=P.proxyRefs(c)),Aa(o,p)}var co,Mt;function wo(o){co=o,Mt=c=>{c.render._rc&&(c.withProxy=new Proxy(c.ctx,xa))}}var as=()=>!co;function Aa(o,c,p){var E=o.type;if(!o.render){if(!c&&co&&!E.render){var T=E.template;if(T){var{isCustomElement:C,compilerOptions:V}=o.appContext.config,{delimiters:W,compilerOptions:Y}=E,oe=f.extend(f.extend({isCustomElement:C,delimiters:W},V),Y);E.render=co(T,oe)}}o.render=E.render||f.NOOP,Mt&&Mt(o)}fr(o),P.pauseTracking(),ma(o),P.resetTracking(),Ir()}function Cs(o){return new Proxy(o.attrs,{get(c,p){return P.track(o,"get","$attrs"),c[p]}})}function Ne(o){var c=E=>{o.exposed=E||{}},p;return{get attrs(){return p||(p=Cs(o))},slots:o.slots,emit:o.emit,expose:c}}function Ot(o){if(o.exposed)return o.exposeProxy||(o.exposeProxy=new Proxy(P.proxyRefs(P.markRaw(o.exposed)),{get(c,p){if(p in c)return c[p];if(p in Eo)return Eo[p](o)}}))}var Pt=/(?:^|[-_])(\w)/g,Tn=o=>o.replace(Pt,c=>c.toUpperCase()).replace(/[-_]/g,"");function Qn(o){var c=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return f.isFunction(o)?o.displayName||o.name:o.name||c&&o.__name}function Nr(o,c){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,E=Qn(c);if(!E&&c.__file){var T=c.__file.match(/([^/\\]+)\.\w+$/);T&&(E=T[1])}if(!E&&o&&o.parent){var C=V=>{for(var W in V)if(V[W]===c)return W};E=C(o.components||o.parent.type.components)||C(o.appContext.components)}return E?Tn(E):p?"App":"Anonymous"}function Gi(o){return f.isFunction(o)&&"__vccOpts"in o}var Yi=(o,c)=>P.computed(o,c,N.isInSSRComponentSetup);function So(){return null}function Yo(){return null}function $a(o){}function Zs(o,c){return null}function ca(){return Xs().slots}function Os(){return Xs().attrs}function Xs(){var o=fn();return o.setupContext||(o.setupContext=Ne(o))}function ss(o,c){var p=f.isArray(o)?o.reduce((C,V)=>(C[V]={},C),{}):o;for(var E in c){var T=p[E];T?f.isArray(T)||f.isFunction(T)?p[E]={type:T,default:c[E]}:T.default=c[E]:T===null&&(p[E]={default:c[E]})}return p}function Qs(o,c){var p={},E=function(C){c.includes(C)||Object.defineProperty(p,C,{enumerable:!0,get:()=>o[C]})};for(var T in o)E(T);return p}function el(o){var c=fn(),p=o();return Ir(),f.isPromise(p)&&(p=p.catch(E=>{throw fr(c),E})),[p,()=>fr(c)]}function tl(o,c,p){var E=arguments.length;return E===2?f.isObject(c)&&!f.isArray(c)?Ei(c)?$t(o,null,[c]):$t(o,c):$t(o,null,c):(E>3?p=Array.prototype.slice.call(arguments,2):E===3&&Ei(p)&&(p=[p]),$t(o,c,p))}var Ua=Symbol(""),Ha=()=>{{var o=Oi(Ua);return o||gn("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),o}};function Hl(){}function nl(o,c,p,E){var T=p[E];if(T&&rl(T,o))return T;var C=c();return C.memo=o.slice(),p[E]=C}function rl(o,c){var p=o.memo;if(p.length!=c.length)return!1;for(var E=0;E<p.length;E++)if(f.hasChanged(p[E],c[E]))return!1;return un>0&&Je&&Je.push(o),!0}var uo="3.2.37",Ca=null,ja=null,za={insert:(o,c,p)=>p?c.insertBefore(o,p):c.appendChild(o),remove:o=>{var c=o.parentNode;c&&c.removeChild(o)},createElement:o=>s.createElement(o),createText:o=>s.createText(o),createComment:o=>s.createComment(o),setText:(o,c)=>{o.setAttr("value",c)},setElementText:(o,c)=>{o.setAttr("value",c)},parentNode:o=>o.parentNode,nextSibling:o=>o.nextSibling};function ua(o){return Object.keys(o)}function Oa(o){var c={};return f.isArray(o)&&o.forEach(p=>{ua(p).forEach(E=>{var T=p[E],C=c[E]||(c[E]={});ua(T).forEach(V=>{var W=T[V],Y=C[V]||(C[V]={});ua(W).forEach(oe=>{oe[0]==="!"?(Y[oe]=W[oe],delete Y[oe.slice(1)]):f.hasOwn(Y,"!"+oe)||(Y[oe]=W[oe])})})})}),c}function Ta(o,c){var p=c&&c.classList;return p&&p.includes(o)}var Ts=/[+~> ]$/,Wa="parentNode",ls="previousSibling";function cs(o,c){for(var p=o.split("."),E=p.length-1;E>0;E--){var T=p[E],C=T[T.length-1],V=T.replace(Ts,"");if(C==="~"||C===" "){for(var W=C==="~"?ls:Wa;c&&(c=c[W],!Ta(V,c)););if(!c)return!1}else if(C===">"?c=c&&c[Wa]:C==="+"&&(c=c&&c[ls]),!Ta(V,c))return!1}return!0}var il=1e3;function Ga(o,c,p){var{styles:E,weights:T}=o;ua(c).forEach(C=>{if(!(C&&p&&!cs(C,p))){var V=C.split(".").length,W=c[C];ua(W).forEach(Y=>{var oe=W[Y],je=Y[0]==="!";je&&(Y=Y.slice(1));var Ye=T[Y]||0,pe=V+(je?il:0);pe>=Ye&&(T[Y]=pe,E[Y]=oe)})}})}function ci(o,c){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,E={styles:{},weights:{}};return o.forEach(T=>{var C=c[T];C&&Ga(E,C,p)}),E.styles}function fo(o){return ci(o.classList,o.styleSheet,o)}function Ps(o,c){var p=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null;return ci(o,ol(c),p)}function ol(o){var{type:c,appContext:p}=o,E=c;if(!E.__styles)if(p&&f.isArray(p.provides.__globalStyles)&&(p.provides.__globalStyles=Oa(p.provides.__globalStyles)),E.mpType==="page"&&p)E.__styles=p.provides.__globalStyles;else{var T=[];p&&T.push(p.provides.__globalStyles),f.isArray(E.styles)&&E.styles.forEach(C=>T.push(C)),E.__styles=Oa(T)}return E.__styles}function al(o,c,p){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;E&&([c,p]=Ao(o,c,p,E)),o.setAttr(c,p)}var us="hoverClass",sl="placeholderClass",Is="placeholderStyle",ll="indicatorClass",jl="indicatorStyle",cl="maskClass",Ya="maskStyle",Ns={view:{class:[us],style:[]},button:{class:[us],style:[]},navigator:{class:[us],style:[]},"u-input":{class:[sl],style:[Is]},"u-textarea":{class:[sl],style:[Is]},"picker-view":{class:[ll,cl],style:[jl,Ya]}};function Ao(o,c,p,E){if(!p)return[c,p];var T=Ns[o.type];if(T){var C=f.camelize(c);if(T.class.indexOf(C)>-1)return[C,Ps([p],E,o)];if(T.style.indexOf(c)>-1)return f.isString(p)?[C,f.parseStringStyle(p)]:[C,f.normalizeStyle(p)]}return[c,p]}function Pa(o,c,p){var E=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;if(!!E){var T=p?p.split(" "):[];o.setClassList(T),o.setStyleSheet(ol(E))}}function fs(o,c,p,E){o.addEvent(c,p)}function ul(o,c){o.removeEvent(c)}function zl(o,c,p,E){var T=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,C=o._vei||(o._vei={}),V=C[c];if(E&&V)V.value=E;else{var[W,Y]=fl(c);if(E){var oe=C[c]=dl(E,T);fs(o,W,oe)}else V&&(ul(o,W),C[c]=void 0)}}var qo=/(?:Once|Passive|Capture)$/;function ks(o){return o==="on-post-message"?"onPostMessage":o}function fl(o){var c;if(qo.test(o)){c={};for(var p;p=o.match(qo);)o=o.slice(0,o.length-p[0].length),c[p[0].toLowerCase()]=!0}return o=o.slice(2),[ks(f.hyphenate(o)),c]}function dl(o,c){var p=T=>{ne(p.value,c,5,[T])};p.value=o;var E=new Set;return f.isArray(p.value)?p.value.forEach(T=>{T.modifiers&&T.modifiers.forEach(C=>{E.add(C)})}):(p.value.modifiers&&p.value.modifiers.forEach(T=>{E.add(T)}),Rs(p,c)),p.modifiers=[...E],p}function Rs(o,c){if(!!c){var{$wxsModules:p}=c;if(!!p){var E=o.value.toString();!p.find(T=>E.indexOf("."+T+".")>-1)||(o.wxsEvent=o.value())}}}function $o(o,c,p){if(!!p){f.isString(p)&&(p=f.parseStringStyle(p));var E={},T=c&&!f.isString(c);if(T){for(var C in c)p[C]==null&&(E[f.camelize(C)]="");for(var V in p){var W=p[V];W!==c[V]&&(E[f.camelize(V)]=W)}}else for(var Y in p)E[f.camelize(Y)]=p[Y];o.setStyles(E)}}var fa=["u-input","u-textarea"],hl=function(o,c,p,E){var T=arguments.length>6?arguments[6]:void 0,C=arguments.length>9?arguments[9]:void 0;c==="class"?Pa(o,p,E,C||T):c==="style"?$o(o,p,E):f.isOn(c)?f.isModelListener(c)||zl(o,c,p,E,T):c==="modelValue"&&fa.includes(o.type)?o.setAttrs({modelValue:E,value:E}):al(o,c,E,T)};function Wl(){var o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var c=fn();if(!c)return f.EMPTY_OBJ;var p=c.type.__cssModules;if(!p)return f.EMPTY_OBJ;var E=p[o];return E||f.EMPTY_OBJ}}function gl(o){var c=fn();if(!!c){var p=()=>ds(c.subTree,o(c.proxy));Ni(()=>hi(p,{flush:"post"})),_i(p)}}function ds(o,c){if(o.shapeFlag&128){var p=o.suspense;o=p.activeBranch,p.pendingBranch&&!p.isHydrating&&p.effects.push(()=>{ds(p.activeBranch,c)})}for(;o.component;)o=o.component.subTree;if(o.shapeFlag&1&&o.el){var E=o.el.style;for(var T in c)E.setProperty("--".concat(T),c[T])}else o.type===tt&&o.children.forEach(C=>ds(C,c))}var pl=["ctrl","shift","alt","meta"],vl={stop:o=>o.stopPropagation(),prevent:o=>o.preventDefault(),self:o=>o.target!==o.currentTarget,ctrl:o=>!o.ctrlKey,shift:o=>!o.shiftKey,alt:o=>!o.altKey,meta:o=>!o.metaKey,left:o=>"button"in o&&o.button!==0,middle:o=>"button"in o&&o.button!==1,right:o=>"button"in o&&o.button!==2,exact:(o,c)=>pl.some(p=>o["".concat(p,"Key")]&&!c.includes(p))},ml=(o,c)=>function(p){for(var E=0;E<c.length;E++){var T=vl[c[E]];if(T&&T(p,c))return}for(var C=arguments.length,V=new Array(C>1?C-1:0),W=1;W<C;W++)V[W-1]=arguments[W];return o(p,...V)},_l=(o,c)=>p=>{if("key"in p){var E=f.hyphenate(p.key);if(c.some(T=>T===E))return o(p)}},bl=f.extend({patchProp:hl},za),El;function yl(){return El||(El=k(bl))}var Gl=function(){yl().render(...arguments)},Yl=function(){var o=yl().createApp(...arguments),{mount:c}=o;return o.mount=p=>c(p),o};return Object.defineProperty(N,"camelize",{enumerable:!0,get:function(){return f.camelize}}),Object.defineProperty(N,"capitalize",{enumerable:!0,get:function(){return f.capitalize}}),Object.defineProperty(N,"hyphenate",{enumerable:!0,get:function(){return f.hyphenate}}),Object.defineProperty(N,"normalizeClass",{enumerable:!0,get:function(){return f.normalizeClass}}),Object.defineProperty(N,"normalizeProps",{enumerable:!0,get:function(){return f.normalizeProps}}),Object.defineProperty(N,"normalizeStyle",{enumerable:!0,get:function(){return f.normalizeStyle}}),Object.defineProperty(N,"toDisplayString",{enumerable:!0,get:function(){return f.toDisplayString}}),Object.defineProperty(N,"toHandlerKey",{enumerable:!0,get:function(){return f.toHandlerKey}}),Object.defineProperty(N,"EffectScope",{enumerable:!0,get:function(){return P.EffectScope}}),Object.defineProperty(N,"ReactiveEffect",{enumerable:!0,get:function(){return P.ReactiveEffect}}),Object.defineProperty(N,"customRef",{enumerable:!0,get:function(){return P.customRef}}),Object.defineProperty(N,"effect",{enumerable:!0,get:function(){return P.effect}}),Object.defineProperty(N,"effectScope",{enumerable:!0,get:function(){return P.effectScope}}),Object.defineProperty(N,"getCurrentScope",{enumerable:!0,get:function(){return P.getCurrentScope}}),Object.defineProperty(N,"isProxy",{enumerable:!0,get:function(){return P.isProxy}}),Object.defineProperty(N,"isReactive",{enumerable:!0,get:function(){return P.isReactive}}),Object.defineProperty(N,"isReadonly",{enumerable:!0,get:function(){return P.isReadonly}}),Object.defineProperty(N,"isRef",{enumerable:!0,get:function(){return P.isRef}}),Object.defineProperty(N,"isShallow",{enumerable:!0,get:function(){return P.isShallow}}),Object.defineProperty(N,"markRaw",{enumerable:!0,get:function(){return P.markRaw}}),Object.defineProperty(N,"onScopeDispose",{enumerable:!0,get:function(){return P.onScopeDispose}}),Object.defineProperty(N,"proxyRefs",{enumerable:!0,get:function(){return P.proxyRefs}}),Object.defineProperty(N,"reactive",{enumerable:!0,get:function(){return P.reactive}}),Object.defineProperty(N,"readonly",{enumerable:!0,get:function(){return P.readonly}}),Object.defineProperty(N,"ref",{enumerable:!0,get:function(){return P.ref}}),Object.defineProperty(N,"shallowReactive",{enumerable:!0,get:function(){return P.shallowReactive}}),Object.defineProperty(N,"shallowReadonly",{enumerable:!0,get:function(){return P.shallowReadonly}}),Object.defineProperty(N,"shallowRef",{enumerable:!0,get:function(){return P.shallowRef}}),Object.defineProperty(N,"stop",{enumerable:!0,get:function(){return P.stop}}),Object.defineProperty(N,"toRaw",{enumerable:!0,get:function(){return P.toRaw}}),Object.defineProperty(N,"toRef",{enumerable:!0,get:function(){return P.toRef}}),Object.defineProperty(N,"toRefs",{enumerable:!0,get:function(){return P.toRefs}}),Object.defineProperty(N,"triggerRef",{enumerable:!0,get:function(){return P.triggerRef}}),Object.defineProperty(N,"unref",{enumerable:!0,get:function(){return P.unref}}),N.BaseTransition=xo,N.Comment=st,N.Fragment=tt,N.KeepAlive=Zo,N.Static=Ft,N.Suspense=ri,N.Teleport=Gt,N.Text=ze,N.callWithAsyncErrorHandling=ne,N.callWithErrorHandling=q,N.cloneVNode=yi,N.compatUtils=ja,N.computed=Yi,N.createApp=Yl,N.createBlock=Ln,N.createCommentVNode=sa,N.createElementBlock=Ht,N.createElementVNode=Fo,N.createHydrationRenderer=z,N.createPropsRestProxy=Qs,N.createRenderer=k,N.createSlots=mr,N.createStaticVNode=Vo,N.createTextVNode=Xr,N.createVNode=$t,N.defineAsyncComponent=Ii,N.defineComponent=Or,N.defineEmits=Yo,N.defineExpose=$a,N.defineProps=So,N.getCurrentInstance=fn,N.getTransitionRawChildren=Gn,N.guardReactiveProps=Fa,N.h=tl,N.handleError=En,N.initCustomFormatter=Hl,N.inject=Oi,N.injectHook=ai,N.isMemoSame=rl,N.isRuntimeOnly=as,N.isVNode=Ei,N.mergeDefaults=ss,N.mergeProps=ei,N.nextTick=gt,N.onActivated=Jn,N.onBeforeMount=Jr,N.onBeforeUnmount=Zr,N.onBeforeUpdate=mi,N.onDeactivated=pr,N.onErrorCaptured=x,N.onMounted=Ni,N.onRenderTracked=ro,N.onRenderTriggered=ji,N.onServerPrefetch=no,N.onUnmounted=bi,N.onUpdated=_i,N.openBlock=Ct,N.parseClassList=Ps,N.parseClassStyles=fo,N.popScopeId=Qi,N.provide=oi,N.pushScopeId=Xi,N.queuePostFlushCb=Di,N.registerRuntimeCompiler=wo,N.render=Gl,N.renderList=si,N.renderSlot=Xo,N.resolveComponent=J,N.resolveDirective=en,N.resolveDynamicComponent=fe,N.resolveFilter=Ca,N.resolveTransitionHooks=Ut,N.setBlockTracking=nn,N.setDevtoolsHook=Zi,N.setTransitionHooks=Kt,N.ssrContextKey=Ua,N.toHandlers=Qo,N.transformVNodeArgs=Er,N.useAttrs=Os,N.useCssModule=Wl,N.useCssStyles=Oa,N.useCssVars=gl,N.useSSRContext=Ha,N.useSlots=ca,N.useTransitionState=Dr,N.version=uo,N.warn=gn,N.watch=xt,N.watchEffect=hi,N.watchPostEffect=Kn,N.watchSyncEffect=Cr,N.withAsyncContext=el,N.withCtx=Ci,N.withDefaults=Zs,N.withDirectives=re,N.withKeys=_l,N.withMemo=nl,N.withModifiers=ml,N.withScopeId=po,Object.defineProperty(N,"__esModule",{value:!0}),N}({},A,R,_);return S.__TYPE__="nvue",S}var op=vP(yP);var hc={};fP(hc,{EMPTY_ARR:()=>BP,EMPTY_OBJ:()=>xP,NO:()=>LP,NOOP:()=>MP,camelize:()=>KP,capitalize:()=>eu,def:()=>e1,extend:()=>ti,getGlobalThis:()=>n1,hasChanged:()=>XP,hasOwn:()=>js,hyphenate:()=>ef,invokeArrayFns:()=>QP,isArray:()=>Si,isBuiltInDirective:()=>YP,isFunction:()=>$n,isGloballyWhitelisted:()=>AP,isHTMLTag:()=>NP,isIntegerKey:()=>WP,isMap:()=>lp,isModelListener:()=>VP,isObject:()=>Fl,isOn:()=>FP,isPlainObject:()=>Vl,isPromise:()=>jP,isReservedProp:()=>GP,isSVGTag:()=>kP,isSet:()=>cp,isString:()=>Ai,isSymbol:()=>HP,makeMap:()=>Dl,normalizeClass:()=>Qu,normalizeProps:()=>TP,normalizeStyle:()=>Xu,parseStringStyle:()=>ap,remove:()=>$P,toDisplayString:()=>RP,toHandlerKey:()=>ZP,toNumber:()=>t1,toRawType:()=>zP,toTypeString:()=>es});function Dl(g,s){let _=Object.create(null),A=g.split(",");for(let R=0;R<A.length;R++)_[A[R]]=!0;return s?R=>!!_[R.toLowerCase()]:R=>!!_[R]}var SP="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt",AP=Dl(SP);function Xu(g){if(Si(g)){let s={};for(let _=0;_<g.length;_++){let A=g[_],R=Ai(A)?ap(A):Xu(A);if(R)for(let S in R)s[S]=R[S]}return s}else{if(Ai(g))return g;if(Fl(g))return g}}var CP=/;(?![^(]*\))/g,OP=/:(.+)/;function ap(g){let s={};return g.split(CP).forEach(_=>{if(_){let A=_.split(OP);A.length>1&&(s[A[0].trim()]=A[1].trim())}}),s}function Qu(g){let s="";if(Ai(g))s=g;else if(Si(g))for(let _=0;_<g.length;_++){let A=Qu(g[_]);A&&(s+=A+" ")}else if(Fl(g))for(let _ in g)g[_]&&(s+=_+" ");return s.trim()}function TP(g){if(!g)return null;let{class:s,style:_}=g;return s&&!Ai(s)&&(g.class=Qu(s)),_&&(g.style=Xu(_)),g}var PP="html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot",IP="svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,text,textPath,title,tspan,unknown,use,view",NP=Dl(PP),kP=Dl(IP),RP=g=>Ai(g)?g:g==null?"":Si(g)||Fl(g)&&(g.toString===up||!$n(g.toString))?JSON.stringify(g,sp,2):String(g),sp=(g,s)=>s&&s.__v_isRef?sp(g,s.value):lp(s)?{[`Map(${s.size})`]:[...s.entries()].reduce((_,[A,R])=>(_[`${A} =>`]=R,_),{})}:cp(s)?{[`Set(${s.size})`]:[...s.values()]}:Fl(s)&&!Si(s)&&!Vl(s)?String(s):s,xP={},BP=[],MP=()=>{},LP=()=>!1,DP=/^on[^a-z]/,FP=g=>DP.test(g),VP=g=>g.startsWith("onUpdate:"),ti=Object.assign,$P=(g,s)=>{let _=g.indexOf(s);_>-1&&g.splice(_,1)},UP=Object.prototype.hasOwnProperty,js=(g,s)=>UP.call(g,s),Si=Array.isArray,lp=g=>es(g)==="[object Map]",cp=g=>es(g)==="[object Set]",$n=g=>typeof g=="function",Ai=g=>typeof g=="string",HP=g=>typeof g=="symbol",Fl=g=>g!==null&&typeof g=="object",jP=g=>Fl(g)&&$n(g.then)&&$n(g.catch),up=Object.prototype.toString,es=g=>up.call(g),zP=g=>es(g).slice(8,-1),Vl=g=>es(g)==="[object Object]",WP=g=>Ai(g)&&g!=="NaN"&&g[0]!=="-"&&""+parseInt(g,10)===g,GP=Dl(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),YP=Dl("bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text,memo"),Qc=g=>{let s=Object.create(null);return _=>s[_]||(s[_]=g(_))},qP=/-(\w)/g,KP=Qc(g=>g.replace(qP,(s,_)=>_?_.toUpperCase():"")),JP=/\B([A-Z])/g,ef=Qc(g=>g.replace(JP,"-$1").toLowerCase()),eu=Qc(g=>g.charAt(0).toUpperCase()+g.slice(1)),ZP=Qc(g=>g?`on${eu(g)}`:""),XP=(g,s)=>!Object.is(g,s),QP=(g,s)=>{for(let _=0;_<g.length;_++)g[_](s)},e1=(g,s,_)=>{Object.defineProperty(g,s,{configurable:!0,enumerable:!1,value:_})},t1=g=>{let s=parseFloat(g);return isNaN(s)?g:s},fp,n1=()=>fp||(fp=typeof globalThis!="undefined"?globalThis:typeof self!="undefined"?self:typeof window!="undefined"?window:typeof global!="undefined"?global:{});function dp(g){var s=function(_,A){"use strict";function R(x,...re){console.warn(`[Vue warn] ${x}`,...re)}let S;class N{constructor(re=!1){this.active=!0,this.effects=[],this.cleanups=[],!re&&S&&(this.parent=S,this.index=(S.scopes||(S.scopes=[])).push(this)-1)}run(re){if(this.active){let he=S;try{return S=this,re()}finally{S=he}}}on(){S=this}off(){S=this.parent}stop(re){if(this.active){let he,H;for(he=0,H=this.effects.length;he<H;he++)this.effects[he].stop();for(he=0,H=this.cleanups.length;he<H;he++)this.cleanups[he]();if(this.scopes)for(he=0,H=this.scopes.length;he<H;he++)this.scopes[he].stop(!0);if(this.parent&&!re){let M=this.parent.scopes.pop();M&&M!==this&&(this.parent.scopes[this.index]=M,M.index=this.index)}this.active=!1}}}function f(x){return new N(x)}function P(x,re=S){re&&re.active&&re.effects.push(x)}function He(){return S}function Rt(x){S&&S.cleanups.push(x)}let gn=x=>{let re=new Set(x);return re.w=0,re.n=0,re},B=x=>(x.w&ne)>0,dt=x=>(x.n&ne)>0,pn=({deps:x})=>{if(x.length)for(let re=0;re<x.length;re++)x[re].w|=ne},Pn=x=>{let{deps:re}=x;if(re.length){let he=0;for(let H=0;H<re.length;H++){let M=re[H];B(M)&&!dt(M)?M.delete(x):re[he++]=M,M.w&=~ne,M.n&=~ne}re.length=he}},at=new WeakMap,q=0,ne=1,En=30,yn,ln=Symbol(""),Un=Symbol("");class on{constructor(re,he=null,H){this.fn=re,this.scheduler=he,this.active=!0,this.deps=[],this.parent=void 0,P(this,H)}run(){if(!this.active)return this.fn();let re=yn,he=an;for(;re;){if(re===this)return;re=re.parent}try{return this.parent=yn,yn=this,an=!0,ne=1<<++q,q<=En?pn(this):kn(this),this.fn()}finally{q<=En&&Pn(this),ne=1<<--q,yn=this.parent,an=he,this.parent=void 0,this.deferStop&&this.stop()}}stop(){yn===this?this.deferStop=!0:this.active&&(kn(this),this.onStop&&this.onStop(),this.active=!1)}}function kn(x){let{deps:re}=x;if(re.length){for(let he=0;he<re.length;he++)re[he].delete(x);re.length=0}}function Hn(x,re){x.effect&&(x=x.effect.fn);let he=new on(x);re&&(A.extend(he,re),re.scope&&P(he,re.scope)),(!re||!re.lazy)&&he.run();let H=he.run.bind(he);return H.effect=he,H}function vn(x){x.effect.stop()}let an=!0,mn=[];function Rn(){mn.push(an),an=!1}function Br(){mn.push(an),an=!0}function ni(){let x=mn.pop();an=x===void 0?!0:x}function Ve(x,re,he){if(an&&yn){let H=at.get(x);H||at.set(x,H=new Map);let M=H.get(he);M||H.set(he,M=gn()),ot(M,void 0)}}function ot(x,re){let he=!1;q<=En?dt(x)||(x.n|=ne,he=!B(x)):he=!x.has(yn),he&&(x.add(yn),yn.deps.push(x))}function gt(x,re,he,H,M,J){let X=at.get(x);if(!X)return;let fe=[];if(re==="clear")fe=[...X.values()];else if(he==="length"&&A.isArray(x))X.forEach((Mn,cn)=>{(cn==="length"||cn>=H)&&fe.push(Mn)});else switch(he!==void 0&&fe.push(X.get(he)),re){case"add":A.isArray(x)?A.isIntegerKey(he)&&fe.push(X.get("length")):(fe.push(X.get(ln)),A.isMap(x)&&fe.push(X.get(Un)));break;case"delete":A.isArray(x)||(fe.push(X.get(ln)),A.isMap(x)&&fe.push(X.get(Un)));break;case"set":A.isMap(x)&&fe.push(X.get(ln));break}let en=void 0;if(fe.length===1)fe[0]&&qt(fe[0]);else{let Mn=[];for(let cn of fe)cn&&Mn.push(...cn);qt(gn(Mn))}}function qt(x,re){let he=A.isArray(x)?x:[...x];for(let H of he)H.computed&&tn(H,re);for(let H of he)H.computed||tn(H,re)}function tn(x,re){(x!==yn||x.allowRecurse)&&(x.scheduler?x.scheduler():x.run())}let Xt=A.makeMap("__proto__,__v_isRef,__isVue"),rr=new Set(Object.getOwnPropertyNames(Symbol).filter(x=>x!=="arguments"&&x!=="caller").map(x=>Symbol[x]).filter(A.isSymbol)),sr=Gr(),Li=Gr(!1,!0),Di=Gr(!0),xn=Gr(!0,!0),wr=Wr();function Wr(){let x={};return["includes","indexOf","lastIndexOf"].forEach(re=>{x[re]=function(...he){let H=Ut(this);for(let J=0,X=this.length;J<X;J++)Ve(H,"get",J+"");let M=H[re](...he);return M===-1||M===!1?H[re](...he.map(Ut)):M}}),["push","pop","shift","unshift","splice"].forEach(re=>{x[re]=function(...he){Rn();let H=Ut(this)[re].apply(this,he);return ni(),H}}),x}function Gr(x=!1,re=!1){return function(H,M,J){if(M==="__v_isReactive")return!x;if(M==="__v_isReadonly")return x;if(M==="__v_isShallow")return re;if(M==="__v_raw"&&J===(x?re?Cr:Kn:re?hi:Oi).get(H))return H;let X=A.isArray(H);if(!x&&X&&A.hasOwn(wr,M))return Reflect.get(wr,M,J);let fe=Reflect.get(H,M,J);return(A.isSymbol(M)?rr.has(M):Xt(M))||(x||Ve(H,"get",M),re)?fe:In(fe)?X&&A.isIntegerKey(M)?fe:fe.value:A.isObject(fe)?x?$i(fe):we(fe):fe}}let Ji=Io(),Zi=Io(!0);function Io(x=!1){return function(he,H,M,J){let X=he[H];if(Bn(X)&&In(X)&&!In(M))return!1;if(!x&&!Bn(M)&&(xo(M)||(M=Ut(M),X=Ut(X)),!A.isArray(he)&&In(X)&&!In(M)))return X.value=M,!0;let fe=A.isArray(he)&&A.isIntegerKey(H)?Number(H)<he.length:A.hasOwn(he,H),en=Reflect.set(he,H,M,J);return he===Ut(J)&&(fe?A.hasChanged(M,X)&&gt(he,"set",H,M,X):gt(he,"add",H,M)),en}}function No(x,re){let he=A.hasOwn(x,re),H=x[re],M=Reflect.deleteProperty(x,re);return M&&he&&gt(x,"delete",re,void 0,H),M}function hr(x,re){let he=Reflect.has(x,re);return(!A.isSymbol(re)||!rr.has(re))&&Ve(x,"has",re),he}function Cn(x){return Ve(x,"iterate",A.isArray(x)?"length":ln),Reflect.ownKeys(x)}let On={get:sr,set:Ji,deleteProperty:No,has:hr,ownKeys:Cn},di={get:Di,set(x,re){return!0},deleteProperty(x,re){return!0}},Xi=A.extend({},On,{get:Li,set:Zi}),Qi=A.extend({},di,{get:xn}),po=x=>x,Ci=x=>Reflect.getPrototypeOf(x);function lr(x,re,he=!1,H=!1){x=x.__v_raw;let M=Ut(x),J=Ut(re);he||(re!==J&&Ve(M,"get",re),Ve(M,"get",J));let{has:X}=Ci(M),fe=H?po:he?Kt:pi;if(X.call(M,re))return fe(x.get(re));if(X.call(M,J))return fe(x.get(J));x!==M&&x.get(re)}function Yr(x,re=!1){let he=this.__v_raw,H=Ut(he),M=Ut(x);return re||(x!==M&&Ve(H,"has",x),Ve(H,"has",M)),x===M?he.has(x):he.has(x)||he.has(M)}function Sr(x,re=!1){return x=x.__v_raw,!re&&Ve(Ut(x),"iterate",ln),Reflect.get(x,"size",x)}function gr(x){x=Ut(x);let re=Ut(this);return Ci(re).has.call(re,x)||(re.add(x),gt(re,"add",x,x)),this}function ko(x,re){re=Ut(re);let he=Ut(this),{has:H,get:M}=Ci(he),J=H.call(he,x);J||(x=Ut(x),J=H.call(he,x));let X=M.call(he,x);return he.set(x,re),J?A.hasChanged(re,X)&&gt(he,"set",x,re,X):gt(he,"add",x,re),this}function Ro(x){let re=Ut(this),{has:he,get:H}=Ci(re),M=he.call(re,x);M||(x=Ut(x),M=he.call(re,x));let J=H?H.call(re,x):void 0,X=re.delete(x);return M&&gt(re,"delete",x,void 0,J),X}function vo(){let x=Ut(this),re=x.size!==0,he=void 0,H=x.clear();return re&&gt(x,"clear",void 0,void 0,he),H}function Mr(x,re){return function(H,M){let J=this,X=J.__v_raw,fe=Ut(X),en=re?po:x?Kt:pi;return!x&&Ve(fe,"iterate",ln),X.forEach((Mn,cn)=>H.call(M,en(Mn),en(cn),J))}}function cr(x,re,he){return function(...H){let M=this.__v_raw,J=Ut(M),X=A.isMap(J),fe=x==="entries"||x===Symbol.iterator&&X,en=x==="keys"&&X,Mn=M[x](...H),cn=he?po:re?Kt:pi;return!re&&Ve(J,"iterate",en?Un:ln),{next(){let{value:si,done:mr}=Mn.next();return mr?{value:si,done:mr}:{value:fe?[cn(si[0]),cn(si[1])]:cn(si),done:mr}},[Symbol.iterator](){return this}}}}function Ar(x){return function(...re){return x==="delete"?!1:this}}function ri(){let x={get(J){return lr(this,J)},get size(){return Sr(this)},has:Yr,add:gr,set:ko,delete:Ro,clear:vo,forEach:Mr(!1,!1)},re={get(J){return lr(this,J,!1,!0)},get size(){return Sr(this)},has:Yr,add:gr,set:ko,delete:Ro,clear:vo,forEach:Mr(!1,!0)},he={get(J){return lr(this,J,!0)},get size(){return Sr(this,!0)},has(J){return Yr.call(this,J,!0)},add:Ar("add"),set:Ar("set"),delete:Ar("delete"),clear:Ar("clear"),forEach:Mr(!0,!1)},H={get(J){return lr(this,J,!0,!0)},get size(){return Sr(this,!0)},has(J){return Yr.call(this,J,!0)},add:Ar("add"),set:Ar("set"),delete:Ar("delete"),clear:Ar("clear"),forEach:Mr(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(J=>{x[J]=cr(J,!1,!1),he[J]=cr(J,!0,!1),re[J]=cr(J,!1,!0),H[J]=cr(J,!0,!0)}),[x,he,re,H]}let[Wn,qr,eo,Fi]=ri();function Lr(x,re){let he=re?x?Fi:eo:x?qr:Wn;return(H,M,J)=>M==="__v_isReactive"?!x:M==="__v_isReadonly"?x:M==="__v_raw"?H:Reflect.get(A.hasOwn(he,M)&&M in H?he:H,M,J)}let mo={get:Lr(!1,!1)},_o={get:Lr(!1,!0)},bo={get:Lr(!0,!1)},ii={get:Lr(!0,!0)};function oi(x,re,he){let H=Ut(he);if(H!==he&&re.call(x,H)){let M=A.toRawType(x);console.warn(`Reactive ${M} contains both the raw and reactive versions of the same object${M==="Map"?" as keys":""}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`)}}let Oi=new WeakMap,hi=new WeakMap,Kn=new WeakMap,Cr=new WeakMap;function Vi(x){switch(x){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function xt(x){return x.__v_skip||!Object.isExtensible(x)?0:Vi(A.toRawType(x))}function we(x){return Bn(x)?x:Dr(x,!1,On,mo,Oi)}function Ti(x){return Dr(x,!1,Xi,_o,hi)}function $i(x){return Dr(x,!0,di,bo,Kn)}function Kr(x){return Dr(x,!0,Qi,ii,Cr)}function Dr(x,re,he,H,M){if(!A.isObject(x)||x.__v_raw&&!(re&&x.__v_isReactive))return x;let J=M.get(x);if(J)return J;let X=xt(x);if(X===0)return x;let fe=new Proxy(x,X===2?H:he);return M.set(x,fe),fe}function jn(x){return Bn(x)?jn(x.__v_raw):!!(x&&x.__v_isReactive)}function Bn(x){return!!(x&&x.__v_isReadonly)}function xo(x){return!!(x&&x.__v_isShallow)}function Pi(x){return jn(x)||Bn(x)}function Ut(x){let re=x&&x.__v_raw;return re?Ut(re):x}function gi(x){return A.def(x,"__v_skip",!0),x}let pi=x=>A.isObject(x)?we(x):x,Kt=x=>A.isObject(x)?$i(x):x;function Gn(x){an&&yn&&(x=Ut(x),ot(x.dep||(x.dep=gn())))}function Or(x,re){x=Ut(x),x.dep&&qt(x.dep)}function In(x){return!!(x&&x.__v_isRef===!0)}function Ii(x){return vi(x,!1)}function Bo(x){return vi(x,!0)}function vi(x,re){return In(x)?x:new to(x,re)}class to{constructor(re,he){this.__v_isShallow=he,this.dep=void 0,this.__v_isRef=!0,this._rawValue=he?re:Ut(re),this._value=he?re:pi(re)}get value(){return Gn(this),this._value}set value(re){re=this.__v_isShallow?re:Ut(re),A.hasChanged(re,this._rawValue)&&(this._rawValue=re,this._value=this.__v_isShallow?re:pi(re),Or(this,re))}}function Zo(x){Or(x,void 0)}function Ui(x){return In(x)?x.value:x}let Jn={get:(x,re,he)=>Ui(Reflect.get(x,re,he)),set:(x,re,he,H)=>{let M=x[re];return In(M)&&!In(he)?(M.value=he,!0):Reflect.set(x,re,he,H)}};function pr(x){return jn(x)?x:new Proxy(x,Jn)}class Zn{constructor(re){this.dep=void 0,this.__v_isRef=!0;let{get:he,set:H}=re(()=>Gn(this),()=>Or(this));this._get=he,this._set=H}get value(){return this._get()}set value(re){this._set(re)}}function Fr(x){return new Zn(x)}function Tr(x){let re=A.isArray(x)?new Array(x.length):{};for(let he in x)re[he]=ai(x,he);return re}class Hi{constructor(re,he,H){this._object=re,this._key=he,this._defaultValue=H,this.__v_isRef=!0}get value(){let re=this._object[this._key];return re===void 0?this._defaultValue:re}set value(re){this._object[this._key]=re}}function ai(x,re,he){let H=x[re];return In(H)?H:new Hi(x,re,he)}class vr{constructor(re,he,H,M){this._setter=he,this.dep=void 0,this.__v_isRef=!0,this._dirty=!0,this.effect=new on(re,()=>{this._dirty||(this._dirty=!0,Or(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!M,this.__v_isReadonly=H}get value(){let re=Ut(this);return Gn(re),(re._dirty||!re._cacheable)&&(re._dirty=!1,re._value=re.effect.run()),re._value}set value(re){this._setter(re)}}function Jr(x,re,he=!1){let H,M,J=A.isFunction(x);return J?(H=x,M=A.NOOP):(H=x.get,M=x.set),new vr(H,M,J||!M,he)}var Ni;let mi=Promise.resolve(),_i=[],Zr=!1,bi=x=>{_i.push(x),Zr||(Zr=!0,mi.then(no))},no=()=>{for(let x=0;x<_i.length;x++)_i[x]();_i.length=0,Zr=!1};class ji{constructor(re){this.dep=void 0,this._dirty=!0,this.__v_isRef=!0,this[Ni]=!0;let he,H=!1,M=!1;this.effect=new on(re,J=>{if(this.dep){if(J)he=this._value,H=!0;else if(!M){let X=H?he:this._value;M=!0,H=!1,bi(()=>{this.effect.active&&this._get()!==X&&Or(this),M=!1})}for(let X of this.dep)X.computed instanceof ji&&X.scheduler(!0)}this._dirty=!0}),this.effect.computed=this}_get(){return this._dirty?(this._dirty=!1,this._value=this.effect.run()):this._value}get value(){return Gn(this),Ut(this)._get()}}Ni="__v_isReadonly";function ro(x){return new ji(x)}return _.EffectScope=N,_.ITERATE_KEY=ln,_.ReactiveEffect=on,_.computed=Jr,_.customRef=Fr,_.deferredComputed=ro,_.effect=Hn,_.effectScope=f,_.enableTracking=Br,_.getCurrentScope=He,_.isProxy=Pi,_.isReactive=jn,_.isReadonly=Bn,_.isRef=In,_.isShallow=xo,_.markRaw=gi,_.onScopeDispose=Rt,_.pauseTracking=Rn,_.proxyRefs=pr,_.reactive=we,_.readonly=$i,_.ref=Ii,_.resetTracking=ni,_.shallowReactive=Ti,_.shallowReadonly=Kr,_.shallowRef=Bo,_.stop=vn,_.toRaw=Ut,_.toRef=ai,_.toRefs=Tr,_.track=Ve,_.trigger=gt,_.triggerRef=Zo,_.unref=Ui,Object.defineProperty(_,"__esModule",{value:!0}),_}({},g);return s}function hp(g){var s=function(_){"use strict";let A=`
`,R=44,S=50,N=50,f=["%","%"],P="#007aff",He="#f7f7f7",Rt=/^([a-z-]+:)?\/\//i,gn=/^data:.*,.*/,B="WEB_INVOKE_APPSERVICE",dt="wxs://",pn="json://",Pn="wxsModules",at="renderjsModules",q="onShow",ne="onHide",En="onLaunch",yn="onError",ln="onThemeChange",Un="onKeyboardHeightChange",on="onPageNotFound",kn="onUnhandledRejection",Hn="onLoad",vn="onReady",an="onUnload",mn="onInit",Rn="onSaveExitState",Br="onResize",ni="onBackPress",Ve="onPageScroll",ot="onTabItemTap",gt="onReachBottom",qt="onPullDownRefresh",tn="onShareTimeline",Xt="onAddToFavorites",rr="onShareAppMessage",sr="onNavigationBarButtonTap",Li="onNavigationBarSearchInputClicked",Di="onNavigationBarSearchInputChanged",xn="onNavigationBarSearchInputConfirmed",wr="onNavigationBarSearchInputFocusChanged",Wr="onAppEnterForeground",Gr="onAppEnterBackground",Ji="onWxsInvokeCallMethod";function Zi(H){return!!H.appContext}function Io(H){return H&&(Zi(H)?H.proxy:H)}function No(H){return H.nodeType===1}function hr(H){let{vnode:M}=H;if(No(M.el))return M.el;let{subTree:J}=H;if(J.shapeFlag&16){let X=J.children.find(fe=>fe.el&&No(fe.el));if(X)return X.el}return M.el}let Cn=0;function On(H,...M){let J=Date.now(),X=Cn?J-Cn:0;return Cn=J,`[${J}][${X}ms][${H}]\uFF1A${M.map(fe=>JSON.stringify(fe)).join(" ")}`}function di(H){let M=Object.create(null);return J=>M[J]||(M[J]=H(J))}function Xi(H){return di(H)}function Qi(H=""){return(""+H).replace(/[^\x00-\xff]/g,"**").length}function po(H){return H.indexOf("/")===0}function Ci(H){return po(H)?H:"/"+H}function lr(H){return po(H)?H.slice(1):H}let Yr=(H,M)=>{let J;for(let X=0;X<H.length;X++)J=H[X](M);return J};function Sr(H,M=null){let J;return(...X)=>(H&&(J=H.apply(M,X),H=null),J)}function gr(H,M){H=H||{},_.isString(M)&&(M={errMsg:M}),/:ok$/.test(M.errMsg)?_.isFunction(H.success)&&H.success(M):_.isFunction(H.fail)&&H.fail(M),_.isFunction(H.complete)&&H.complete(M)}function ko(H){let M={};return _.isPlainObject(H)&&Object.keys(H).sort().forEach(J=>{let X=J;M[X]=H[X]}),Object.keys(M)?M:H}let Ro=encodeURIComponent;function vo(H,M=Ro){let J=H?Object.keys(H).map(X=>{let fe=H[X];return typeof fe===void 0||fe===null?fe="":_.isPlainObject(fe)&&(fe=JSON.stringify(fe)),M(X)+"="+M(fe)}).filter(X=>X.length>0).join("&"):null;return J?`?${J}`:""}function Mr(H){try{return decodeURIComponent(""+H)}catch(M){}return""+H}let cr=/\+/g;function Ar(H){let M={};if(H===""||H==="?")return M;let X=(H[0]==="?"?H.slice(1):H).split("&");for(let fe=0;fe<X.length;++fe){let en=X[fe].replace(cr," "),Mn=en.indexOf("="),cn=Mr(Mn<0?en:en.slice(0,Mn)),si=Mn<0?null:Mr(en.slice(Mn+1));if(cn in M){let mr=M[cn];_.isArray(mr)||(mr=M[cn]=[mr]),mr.push(si)}else M[cn]=si}return M}function ri(H){let[M,J]=H.split("?",2);return{path:M,query:Ar(J||"")}}function Wn(H){let M={};return H&&Object.keys(H).forEach(J=>{J.indexOf("data-")===0&&(M[J.replace("data-","")]=H[J])}),M}class qr extends Error{constructor(M){super(M);this.name="DOMException"}}function eo(H,M){return M&&(M.capture&&(H+="Capture"),M.once&&(H+="Once"),M.passive&&(H+="Passive")),`on${_.capitalize(_.camelize(H))}`}class Fi{constructor(M,J){this.defaultPrevented=!1,this.timeStamp=Date.now(),this._stop=!1,this._end=!1,this.type=M,this.bubbles=!!J.bubbles,this.cancelable=!!J.cancelable}preventDefault(){this.defaultPrevented=!0}stopImmediatePropagation(){this._end=this._stop=!0}stopPropagation(){this._stop=!0}}function Lr(H){if(H instanceof Fi)return H;let[M]=bo(H.type),J=new Fi(M,{bubbles:!1,cancelable:!1});return _.extend(J,H),J}class mo{constructor(){this.listeners=Object.create(null)}dispatchEvent(M){let J=this.listeners[M.type];if(!J)return!1;let X=Lr(M),fe=J.length;for(let en=0;en<fe&&(J[en].call(this,X),!X._end);en++);return X.cancelable&&X.defaultPrevented}addEventListener(M,J,X){M=eo(M,X),(this.listeners[M]||(this.listeners[M]=[])).push(J)}removeEventListener(M,J,X){M=eo(M,X);let fe=this.listeners[M];if(!fe)return;let en=fe.indexOf(J);en>-1&&fe.splice(en,1)}}let _o=/(?:Once|Passive|Capture)$/;function bo(H){let M;if(_o.test(H)){M={};let J;for(;J=H.match(_o);)H=H.slice(0,H.length-J[0].length),M[J[0].toLowerCase()]=!0}return[_.hyphenate(H.slice(2)),M]}let ii=(()=>({stop:1,prevent:1<<1,self:1<<2}))();function oi(H){let M=0;return H.includes("stop")&&(M|=ii.stop),H.includes("prevent")&&(M|=ii.prevent),H.includes("self")&&(M|=ii.self),M}let Oi=0,hi=1,Kn=3,Cr=8;function Vi(H,M){let{parentNode:J}=H;if(!J)return null;let{childNodes:X}=J;return X[X.indexOf(H)+(M==="n"?1:-1)]||null}function xt(H){let{parentNode:M}=H;M&&M.removeChild(H)}function we(H){!H.nodeId&&H.pageNode&&(H.nodeId=H.pageNode.genId())}class Ti extends mo{constructor(M,J,X){super();if(this.pageNode=null,this.parentNode=null,this._text=null,X){let{pageNode:fe}=X;fe&&(this.pageNode=fe,this.nodeId=fe.genId(),!fe.isUnmounted&&fe.onCreate(this,J))}this.nodeType=M,this.nodeName=J,this.childNodes=[]}get firstChild(){return this.childNodes[0]||null}get lastChild(){let{childNodes:M}=this,J=M.length;return J?M[J-1]:null}get nextSibling(){return Vi(this,"n")}get nodeValue(){return null}set nodeValue(M){}get textContent(){return this._text||""}set textContent(M){this._text=M,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onTextContent(this,M)}get parentElement(){let{parentNode:M}=this;return M&&M.nodeType===hi?M:null}get previousSibling(){return Vi(this,"p")}appendChild(M){return this.insertBefore(M,null)}cloneNode(M){let J=_.extend(Object.create(Object.getPrototypeOf(this)),this),{attributes:X}=J;return X&&(J.attributes=_.extend({},X)),M&&(J.childNodes=J.childNodes.map(fe=>fe.cloneNode(!0))),J}insertBefore(M,J){xt(M),M.pageNode=this.pageNode,M.parentNode=this,we(M);let{childNodes:X}=this;if(J){let fe=X.indexOf(J);if(fe===-1)throw new qr("Failed to execute 'insertBefore' on 'Node': The node before which the new node is to be inserted is not a child of this node.");X.splice(fe,0,M)}else X.push(M);return this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onInsertBefore(this,M,J):M}removeChild(M){let{childNodes:J}=this,X=J.indexOf(M);if(X===-1)throw new qr("Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.");return M.parentNode=null,J.splice(X,1),this.pageNode&&!this.pageNode.isUnmounted?this.pageNode.onRemoveChild(M):M}}let $i="class",Kr="style",Dr=".vOwnerId",jn=".vRenderjs";class Bn extends Ti{constructor(M,J,X){super(M,J,X);this.attributes=Object.create(null),this.style=null,this.vShow=null,this._html=null}get className(){return this.attributes[$i]||""}set className(M){this.setAttribute($i,M)}get innerHTML(){return""}set innerHTML(M){this._html=M}addEventListener(M,J,X){super.addEventListener(M,J,X),this.pageNode&&!this.pageNode.isUnmounted&&(J.wxsEvent?this.pageNode.onAddWxsEvent(this,eo(M,X),J.wxsEvent,oi(J.modifiers||[])):this.pageNode.onAddEvent(this,eo(M,X),oi(J.modifiers||[])))}removeEventListener(M,J,X){super.removeEventListener(M,J,X),this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveEvent(this,eo(M,X))}getAttribute(M){return M===Kr?this.style:this.attributes[M]}removeAttribute(M){M==Kr?this.style=null:delete this.attributes[M],this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onRemoveAttribute(this,M)}setAttribute(M,J){M===Kr?this.style=J:this.attributes[M]=J,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onSetAttribute(this,M,J)}toJSON({attr:M,normalize:J}={}){let{attributes:X,style:fe,listeners:en,_text:Mn}=this,cn={};Object.keys(X).length&&(cn.a=J?J(X):X);let si=Object.keys(en);if(si.length){let mr,Xo={};si.forEach(jo=>{let Qo=en[jo];if(Qo.length){let{wxsEvent:Mo,modifiers:Eo}=Qo[0],io=oi(Eo||[]);Mo?(mr||(mr={}),mr[jo]=[J?J(Mo):Mo,io]):Xo[jo]=io}}),cn.e=J?J(Xo,!1):Xo,mr&&(cn.w=J?J(mr,!1):mr)}return fe!==null&&(cn.s=J?J(fe):fe),M||(cn.i=this.nodeId,cn.n=this.nodeName),Mn!==null&&(cn.t=J?J(Mn):Mn),cn}}class xo extends Ti{constructor(M,J){super(Cr,"#comment",J);this._text=""}toJSON(M={}){return M.attr?{}:{i:this.nodeId}}}class Pi extends Bn{constructor(M,J){super(hi,M.toUpperCase(),J);this.tagName=this.nodeName}}class Ut extends Pi{get value(){return this.getAttribute("value")}set value(M){this.setAttribute("value",M)}}class gi extends Ut{}class pi extends Bn{constructor(M,J){super(Kn,"#text",J);this._text=M}get nodeValue(){return this._text||""}set nodeValue(M){this._text=M,this.pageNode&&!this.pageNode.isUnmounted&&this.pageNode.onNodeValue(this,M)}}let Kt={AD:["data"],"AD-DRAW":["data"],"LIVE-PLAYER":["picture-in-picture-mode"],MAP:["markers","polyline","circles","controls","include-points","polygons"],PICKER:["range","value"],"PICKER-VIEW":["value"],"RICH-TEXT":["nodes"],VIDEO:["danmu-list","header"],"WEB-VIEW":["webview-styles"]},Gn=["animation"],Or=(H,M)=>{if(Gn.indexOf(M)>-1)return!0;let J=Kt[H.nodeName];return!!(J&&J.indexOf(M)>-1)},In=1,Ii=2,Bo=3,vi=4,to=5,Zo=6,Ui=7,Jn=8,pr=9,Zn=10,Fr=12,Tr=15,Hi=20;function ai(H,M,{clearTimeout:J,setTimeout:X}){let fe,en=function(){J(fe),fe=X(()=>H.apply(this,arguments),M)};return en.cancel=function(){J(fe)},en}class vr{constructor(M,J){this.id=M,this.listener={},this.emitCache={},J&&Object.keys(J).forEach(X=>{this.on(X,J[X])})}emit(M,...J){let X=this.listener[M];if(!X)return(this.emitCache[M]||(this.emitCache[M]=[])).push(J);X.forEach(fe=>{fe.fn.apply(fe.fn,J)}),this.listener[M]=X.filter(fe=>fe.type!=="once")}on(M,J){this._addListener(M,"on",J),this._clearCache(M)}once(M,J){this._addListener(M,"once",J),this._clearCache(M)}off(M,J){let X=this.listener[M];if(!!X)if(J)for(let fe=0;fe<X.length;)X[fe].fn===J&&(X.splice(fe,1),fe--),fe++;else delete this.listener[M]}_clearCache(M){let J=this.emitCache[M];if(J)for(;J.length>0;)this.emit.apply(this,[M,...J.shift()])}_addListener(M,J,X){(this.listener[M]||(this.listener[M]=[])).push({fn:X,type:J})}}let Jr=[mn,Hn,q,ne,an,ni,Ve,ot,gt,qt,tn,rr,Xt,Rn,sr,Li,Di,xn,wr],Ni=[Hn,q];function mi(H){return Ni.indexOf(H)>-1}function _i(H){return Jr.indexOf(H)>-1}let Zr=[q,ne,En,yn,ln,on,kn,mn,Hn,vn,an,Br,ni,Ve,ot,gt,qt,tn,Xt,rr,Rn,sr,Li,Di,xn,wr],bi,no=[];function ji(H){if(bi)return H(bi);no.push(H)}function ro(H){bi=H,no.forEach(M=>M(H))}let x=function(){};x.prototype={on:function(H,M,J){var X=this.e||(this.e={});return(X[H]||(X[H]=[])).push({fn:M,ctx:J}),this},once:function(H,M,J){var X=this;function fe(){X.off(H,fe),M.apply(J,arguments)}return fe._=M,this.on(H,fe,J)},emit:function(H){var M=[].slice.call(arguments,1),J=((this.e||(this.e={}))[H]||[]).slice(),X=0,fe=J.length;for(X;X<fe;X++)J[X].fn.apply(J[X].ctx,M);return this},off:function(H,M){var J=this.e||(this.e={}),X=J[H],fe=[];if(X&&M)for(var en=0,Mn=X.length;en<Mn;en++)X[en].fn!==M&&X[en].fn._!==M&&fe.push(X[en]);return fe.length?J[H]=fe:delete J[H],this}};var re=x,he={invokeArrayFns:Yr,ON_LOAD:Hn,ON_SHOW:q,LINEFEED:A,RENDERJS_MODULES:at,WXS_PROTOCOL:dt,formatLog:On,WXS_MODULES:Pn,ON_ERROR:yn,UniLifecycleHooks:Zr,invokeCreateVueAppHook:ro,parseNVueDataset:Wn,once:Sr,I18N_JSON_DELIMITERS:f,Emitter:re,addLeadingSlash:Ci,resolveComponentInstance:Io,removeLeadingSlash:lr,ON_RESIZE:Br,ON_APP_ENTER_FOREGROUND:Wr,ON_APP_ENTER_BACKGROUND:Gr,ON_HIDE:ne,ON_PAGE_SCROLL:Ve,ON_REACH_BOTTOM:gt,SCHEME_RE:Rt,DATA_RE:gn,cacheStringFunction:Xi,parseQuery:Ar,callOptions:gr,ON_UNHANDLE_REJECTION:kn,ON_PAGE_NOT_FOUND:on,PRIMARY_COLOR:P,getLen:Qi,TABBAR_HEIGHT:S,NAVBAR_HEIGHT:R,sortObject:ko,ON_THEME_CHANGE:ln,ON_KEYBOARD_HEIGHT_CHANGE:Un,BACKGROUND_COLOR:He,ON_NAVIGATION_BAR_BUTTON_TAP:sr,stringifyQuery:vo,debounce:ai,ON_PULL_DOWN_REFRESH:qt,ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED:Di,ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED:xn,ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED:Li,ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED:wr,ON_BACK_PRESS:ni,UniNode:Ti,NODE_TYPE_PAGE:Oi,ACTION_TYPE_PAGE_CREATE:In,ACTION_TYPE_PAGE_CREATED:Ii,ACTION_TYPE_PAGE_SCROLL:Tr,ACTION_TYPE_INSERT:vi,ACTION_TYPE_CREATE:Bo,ACTION_TYPE_REMOVE:to,ACTION_TYPE_ADD_EVENT:Jn,ACTION_TYPE_ADD_WXS_EVENT:Fr,ACTION_TYPE_REMOVE_EVENT:pr,ACTION_TYPE_SET_ATTRIBUTE:Zo,ACTION_TYPE_REMOVE_ATTRIBUTE:Ui,ACTION_TYPE_SET_TEXT:Zn,ON_READY:vn,ON_UNLOAD:an,EventChannel:vr,ON_REACH_BOTTOM_DISTANCE:N,parseUrl:ri,onCreateVueApp:ji,ON_TAB_ITEM_TAP:ot,ON_LAUNCH:En,ACTION_TYPE_EVENT:Hi,createUniEvent:Lr,ON_WXS_INVOKE_CALL_METHOD:Ji,WEB_INVOKE_APPSERVICE:B,isRootHook:_i,isRootImmediateHook:mi,UniInputElement:Ut,UniTextAreaElement:gi,UniElement:Pi,UniTextNode:pi,UniCommentNode:xo,forcePatchProp:Or,resolveOwnerEl:hr,ATTR_V_OWNER_ID:Dr,ATTR_V_RENDERJS:jn,JSON_PROTOCOL:pn};return he}(g);return s}var r1=1;function gp(){return(r1++).toString()}var tf=g=>g&&JSON.parse(JSON.stringify(g))||g;function gc(g){let s=es(g);return s.substring(8,s.length-1)}function nf(g){if(!$n(btoa))return"";let s=Array.prototype.map.call(new Uint8Array(g),_=>String.fromCharCode(_)).join("");return btoa(s)}function pc(g){if(!g||typeof g!="object")return!0;for(let s in g)if(js(g,s))return!1;return!0}var tu=["off","error","warn","info","log","debug"],nu={};function pp(){tu.forEach(g=>{let s=tu.indexOf(g);nu[g]={},tu.forEach(_=>{tu.indexOf(_)<=s&&(nu[g][_]=!0)})})}function qn(g){let s=global.WXEnvironment&&global.WXEnvironment.logLevel||"log";return nu[s]&&nu[s][g]}function Mi(g){global.nativeLog("wxInteractionAnalyzer: [jsfm]"+g,"__DEBUG")}function vp(g,s,_){return`${s}@${_}#${g}`}var ru=class{constructor(s){this.instanceId=String(s),this.lastCallbackId=0,this.callbacks={},this.hooks={}}add(s){return this.lastCallbackId++,this.callbacks[this.lastCallbackId]=s,this.lastCallbackId}remove(s){let _=this.callbacks[s];return delete this.callbacks[s],_}registerHook(s,_,A,R){let S=vp(s,_,A);this.hooks[S]&&console.warn(`[JS Framework] Override an existing component hook "${S}".`),this.hooks[S]=R}triggerHook(s,_,A,R){let S=vp(s,_,A),N=this.hooks[S];if(!$n(N))return console.error(`[JS Framework] Invalid hook function type (${typeof N}) on "${S}".`),null;let f=null;try{f=N.apply(null,R||[])}catch(P){throw console.error(`[JS Framework] Failed to execute the hook function on "${S}".`),P}return f}consume(s,_,A){let R=this.callbacks[s];if((typeof A=="undefined"||A===!1)&&delete this.callbacks[s],$n(R))try{return R.call(null,_,A)}catch(S){throw console.error(`[JS Framework] Failed to execute the callback function:
 ${S.toString()}`),S}return new Error(`invalid callback id "${s}"`)}close(){this.callbacks={},this.hooks={}}};var iu={};function mp(g,s){g&&(iu[g]=s)}function ts(g){return iu[g]}function _p(g){delete iu[g]}function xr(g){if(g){let s=iu[g];if(s&&s.taskCenter)return s.taskCenter}return null}function i1(g){g.calcClassList&&g.calcClassList()}function rf(g,s,_){let{documentElement:A}=g;if(A.pureChildren.length>0||s.parentNode)return;let R=A.children,S=_?R.indexOf(_):-1;S<0?R.push(s):R.splice(S,0,s),s.nodeType===1?(s.role==="body"?(s.docId=g.id,s.ownerDocument=g,s.parentNode=A,zs(s,A)):(s.children.forEach(N=>{N.parentNode=s}),of(g,s),zs(s,A),delete g.nodeMap[s.nodeId]),A.pureChildren.push(s),o1(g,s)):(s.parentNode=A,g.nodeMap[s.ref]=s)}function o1(g,s){let _=s.toJSON();g&&g.taskCenter&&$n(g.taskCenter.send)&&g.taskCenter.send("dom",{action:"createBody"},[_])}function of(g,s){s.role="body",s.depth=1,delete g.nodeMap[s.nodeId],s.ref="_root",g.nodeMap._root=s,g.body=s}function zs(g,s){g.parentNode=s,i1(g),s.docId&&(g.docId=s.docId,g.ownerDocument=s.ownerDocument,g.ownerDocument.nodeMap[g.nodeId]=g,g.depth=s.depth+1),g.children.forEach(_=>{zs(_,g)})}function af(g){for(;g;){if(g.nodeType===1)return g;g=g.nextSibling}}function sf(g){for(;g;){if(g.nodeType===1)return g;g=g.previousSibling}}function Ws(g,s,_,A=!1){_<0&&(_=0);let R=s[_-1],S=s[_];return s.splice(_,0,g),A&&(R&&(R.nextSibling=g),g.previousSibling=R,g.nextSibling=S,S&&(S.previousSibling=g)),_}function Gs(g,s,_,A=!1){let R=s.indexOf(g);if(R<0)return-1;if(A){let P=s[R-1],He=s[R+1];P&&(P.nextSibling=He),He&&(He.previousSibling=P)}s.splice(R,1);let S=_;R<=_&&(S=_-1);let N=s[S-1],f=s[S];return s.splice(S,0,g),A&&(N&&(N.nextSibling=g),g.previousSibling=N,g.nextSibling=f,f&&(f.previousSibling=g)),R===S?-1:_}function lf(g,s,_=!1){let A=s.indexOf(g);if(!(A<0)){if(_){let R=s[A-1],S=s[A+1];R&&(R.nextSibling=S),S&&(S.previousSibling=R)}s.splice(A,1)}}var Ys=class{constructor(){this.depth=0;this.nodeId=gp(),this.ref=this.nodeId,this.children=[],this.pureChildren=[],this.parentNode=null,this.nextSibling=null,this.previousSibling=null}destroy(){let s=ts(this.docId);s&&(delete this.docId,delete s.nodeMap[this.nodeId]),this.children.forEach(_=>{_.destroy()})}};var bp={};function cf(g,s){if(!Si(s)||!s.length)return;class _ extends Ki{}s.forEach(A=>{_.prototype[A]=function(...R){let S=xr(this.docId);if(S)return S.send("component",{ref:this.ref,component:g,method:A},R)}}),bp[g]=_}function Ep(g){return bp[g]}function yr(g,s,_,A,R){return{type:"decl",prop:g,value:s+(_?" !important":""),raws:A,source:R}}var a1="backgroundColor",s1="backgroundImage",l1=g=>{let{value:s,important:_,raws:A,source:R}=g;return/^#?\S+$/.test(s)||/^rgba?(.+)$/.test(s)?[yr(a1,s,_,A,R)]:/^linear-gradient(.+)$/.test(s)?[yr(s1,s,_,A,R)]:[g]},c1="Width",u1="Style",f1="Color",vc=g=>{let{prop:s,value:_,important:A,raws:R,source:S}=g,N=_.replace(/\s*,\s*/g,",").split(/\s+/),f=[/^[\d\.]+\S*$/,/^(solid|dashed|dotted)$/,/\S+/].map(P=>{let He=N.findIndex(Rt=>P.test(Rt));return He<0?null:N.splice(He,1)[0]});return N.length?[g]:[yr(s+c1,(f[0]||"0").trim(),A,R,S),yr(s+u1,(f[1]||"solid").trim(),A,R,S),yr(s+f1,(f[2]||"#000000").trim(),A,R,S)]},d1="borderTop",h1="borderRight",g1="borderBottom",p1="borderLeft",uf=g=>{let{prop:s,value:_,important:A,raws:R,source:S}=g,N=ef(s).split("-")[1];N=eu(N);let f=_.replace(/\s*,\s*/g,",").split(/\s+/);switch(f.length){case 1:return[g];case 2:f.push(f[0],f[1]);break;case 3:f.push(f[1]);break}return[yr(d1+N,f[0],A,R,S),yr(h1+N,f[1],A,R,S),yr(g1+N,f[2],A,R,S),yr(p1+N,f[3],A,R,S)]},v1="borderTopLeftRadius",m1="borderTopRightRadius",_1="borderBottomRightRadius",b1="borderBottomLeftRadius",E1=g=>{let{value:s,important:_,raws:A,source:R}=g,S=s.split(/\s+/);if(s.includes("/"))return[g];switch(S.length){case 1:return[g];case 2:S.push(S[0],S[1]);break;case 3:S.push(S[1]);break}return[yr(v1,S[0],_,A,R),yr(m1,S[1],_,A,R),yr(_1,S[2],_,A,R),yr(b1,S[3],_,A,R)]},y1=uf,w1=uf,S1="flexDirection",A1="flexWrap",C1=g=>{let{value:s,important:_,raws:A,source:R}=g,S=s.split(/\s+/),N=[/^(column|column-reverse|row|row-reverse)$/,/^(nowrap|wrap|wrap-reverse)$/].map(f=>{let P=S.findIndex(He=>f.test(He));return P<0?null:S.splice(P,1)[0]});return S.length?[g]:[yr(S1,N[0]||"column",_,A,R),yr(A1,N[1]||"nowrap",_,A,R)]},O1="Top",T1="Right",P1="Bottom",I1="Left",yp=g=>s=>{let{value:_,important:A,raws:R,source:S}=s,N=_.split(/\s+/);switch(N.length){case 1:N.push(N[0],N[0],N[0]);break;case 2:N.push(N[0],N[1]);break;case 3:N.push(N[1]);break}return[yr(g+O1,N[0],A,R,S),yr(g+T1,N[1],A,R,S),yr(g+P1,N[2],A,R,S),yr(g+I1,N[3],A,R,S)]},N1=yp("margin"),k1=yp("padding"),R1="transitionProperty",x1="transitionDuration",B1="transitionTimingFunction",M1="transitionDelay",L1=g=>{let s=/^(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?\s*(\S*)?\s*(\d*\.?\d+(?:ms|s)?)?$/,{value:_,important:A,raws:R,source:S}=g,N=[],f=_.match(s);return f&&(f[1]&&N.push(yr(R1,f[1],A,R,S)),f[2]&&N.push(yr(x1,f[2],A,R,S)),f[3]&&N.push(yr(B1,f[3],A,R,S)),f[4]&&N.push(yr(M1,f[4],A,R,S))),N},wp={transition:L1,margin:N1,padding:k1,border:vc,background:l1};ti(wp,{borderTop:vc,borderRight:vc,borderBottom:vc,borderLeft:vc,borderStyle:y1,borderWidth:w1,borderColor:uf,borderRadius:E1,flexFlow:C1});var Sp=Symbol("expanded"),Ap={postcssPlugin:"nvue:expand",Declaration(g){if(g[Sp])return;let s=wp[g.prop];if(s){let _=s(g);_.length===1&&_[0]===g||g.replaceWith(_)}g[Sp]=!0}};var D1=Ap.Declaration;function ff(g,s){let _=ti({replaceWith(R){A=R}},F1(g,s)),A=[_];return D1(_),A}function F1(g,s){let _=s+"";return _.includes("!important")?{prop:g,value:_.replace(/\s*!important/,""),important:!0}:{prop:g,value:_,important:!1}}var V1="view",$1=["click","longpress","touchstart","touchmove","touchend","panstart","panmove","panend","horizontalpan","verticalpan","swipe"];function df(g,s){let _=ts(g);_.nodeMap[s.nodeId]=s}var hf;function Cp(g){hf||(hf=g)}var Ki=class extends Ys{constructor(s=V1,_={},A){super();let R=Ep(s);if(R&&!A)return new R(s,_,!0);this.nodeType=1,this.type=s,this.attr=_.attr||{},this.style=_.style||{},this.classStyle=_.classStyle||{},this.classList=_.classList||[],this.styleSheet=_.styleSheet||{},this.event={}}appendChild(s){if(!(s.parentNode&&s.parentNode!==this)){if(s.parentNode){if(qn("debug")&&Mi(`[appendChild](${this.docId},${s.type},${s.ref}) Move <${s.type}> to ${this.children.length} of <${this.type}> (${this.ref}).`),Gs(s,this.children,this.children.length,!0),s.nodeType===1){let _=Gs(s,this.pureChildren,this.pureChildren.length),A=xr(this.docId);if(A&&_>=0)return A.send("dom",{action:"moveElement"},[s.ref,this.ref,_])}}else if(qn("debug")&&Mi(`[appendChild](${this.docId},${s.type},${s.ref}) Append <${s.type}> to <${this.type}> (${this.ref}).`),zs(s,this),Ws(s,this.children,this.children.length,!0),this.docId&&df(this.docId,s),s.nodeType===1){Ws(s,this.pureChildren,this.pureChildren.length);let _=xr(this.docId);if(_)return _.send("dom",{action:"addElement"},[this.ref,s.toJSON(),-1])}}}insertBefore(s,_){if(!(s.parentNode&&s.parentNode!==this)&&!(s===_||s.nextSibling&&s.nextSibling===_)){if(s.parentNode){if(Gs(s,this.children,this.children.indexOf(_),!0),s.nodeType===1){let A=af(_),R=Gs(s,this.pureChildren,A?this.pureChildren.indexOf(A):this.pureChildren.length),S=xr(this.docId);if(S&&R>=0)return S.send("dom",{action:"moveElement"},[s.ref,this.ref,R])}}else if(qn("debug")&&Mi(`[insertBefore](${this.docId},${s.type},${s.ref}) Insert <${s.type}> to <${this.type}> (${this.ref}), before (${_.ref}).`),zs(s,this),Ws(s,this.children,this.children.indexOf(_),!0),this.docId&&df(this.docId,s),s.nodeType===1){let A=af(_),R=Ws(s,this.pureChildren,A?this.pureChildren.indexOf(A):this.pureChildren.length),S=xr(this.docId);if(S)return S.send("dom",{action:"addElement"},[this.ref,s.toJSON(),R])}}}insertAfter(s,_){if(!(s.parentNode&&s.parentNode!==this)&&!(s===_||s.previousSibling&&s.previousSibling===_)){if(s.parentNode){if(Gs(s,this.children,this.children.indexOf(_)+1,!0),s.nodeType===1){let A=Gs(s,this.pureChildren,this.pureChildren.indexOf(sf(_))+1),R=xr(this.docId);if(R&&A>=0)return R.send("dom",{action:"moveElement"},[s.ref,this.ref,A])}}else if(qn("debug")&&Mi(`[insertAfter](${this.docId},${s.type},${s.ref}) Insert <${s.type}> to <${this.type}> (${this.ref}), after (${_.ref}).`),zs(s,this),Ws(s,this.children,this.children.indexOf(_)+1,!0),this.docId&&df(this.docId,s),s.nodeType===1){let A=Ws(s,this.pureChildren,this.pureChildren.indexOf(sf(_))+1),R=xr(this.docId);if(R)return R.send("dom",{action:"addElement"},[this.ref,s.toJSON(),A])}}}removeChild(s,_){if(s.parentNode&&(lf(s,this.children,!0),s.nodeType===1)){qn("debug")&&Mi(`[removeChild](${this.docId},${s.type},${s.ref}) Remove <${s.type}> from <${this.type}> (${this.ref}).`),lf(s,this.pureChildren);let A=xr(this.docId);A&&A.send("dom",{action:"removeElement"},[s.ref])}_||s.destroy()}clear(){let s=xr(this.docId);s&&this.pureChildren.forEach(_=>{s.send("dom",{action:"removeElement"},[_.ref])}),this.children.forEach(_=>{_.destroy()}),this.children.length=0,this.pureChildren.length=0}setAttr(s,_,A){if(this.attr[s]===_&&A!==!1)return;this.attr[s]=_;let R=xr(this.docId);!A&&R&&R.send("dom",{action:"updateAttrs"},[this.ref,{[s]:_}])}setAttrs(s,_){if(pc(s))return;let A={};for(let R in s)this.attr[R]!==s[R]&&(this.attr[R]=s[R],A[R]=s[R]);if(!pc(A)){let R=xr(this.docId);!_&&R&&R.send("dom",{action:"updateAttrs"},[this.ref,A])}}setStyle(s,_,A){ff(s,_).forEach(({prop:R,value:S})=>{if(this.style[R]===S&&A!==!1)return;this.style[R]=S;let N=xr(this.docId);!A&&N&&N.send("dom",{action:"updateStyle"},[this.ref,{[R]:S}])})}setStyles(s,_){if(pc(s))return;let A={};for(let R in s)ff(R,s[R]).forEach(({prop:S,value:N})=>{this.style[S]!==N&&(this.style[S]=N,A[S]=N)});if(!pc(A)){let R=xr(this.docId);!_&&R&&R.send("dom",{action:"updateStyle"},[this.ref,A])}}setClassStyle(s){for(let A in this.classStyle)this.classStyle[A]="";ti(this.classStyle,s);let _=xr(this.docId);_&&_.send("dom",{action:"updateStyle"},[this.ref,this.toStyle()])}setClassList(s){s.length===this.classList.length&&s.filter(_=>!this.classList.includes(_)).length===0||(this.classList=s,this.parentNode&&this.calcClassList())}calcClassList(){this.setClassStyle(hf(this))}setStyleSheet(s){this.styleSheet=s}addEvent(s,_,A){if(this.event||(this.event={}),!this.event[s]){qn("debug")&&Mi(`[addEvent](${this.docId},${this.type},${this.ref}) Add "${s}" event on <${this.type}> (${this.ref}).`),this.event[s]={handler:_,params:A};let R=xr(this.docId);R&&R.send("dom",{action:"addEvent"},[this.ref,s])}}removeEvent(s){if(this.event&&this.event[s]){qn("debug")&&Mi(`[removeEvent](${this.docId},${this.type},${this.ref}) Remove "${s}" event on <${this.type}> (${this.ref}).`),delete this.event[s];let _=xr(this.docId);_&&_.send("dom",{action:"removeEvent"},[this.ref,s])}}fireEvent(s,_,A,R){let S=null,N=!1,f=this.event[s];if(f&&_){qn("debug")&&Mi(`[fireEvent](${this.docId},${this.type},${this.ref}) Fire "${s}" event on <${this.type}> (${this.ref}).`);let P=f.handler;_.stopPropagation=()=>{N=!0},_.preventDefault=()=>{};try{R&&R.params?S=P.call(this,...R.params,_):S=P.call(this,_)}catch(He){throw console.error(`[JS Framework] Failed to invoke the event handler of "${s}" on ${this.type} (${this.ref}):
 ${He.toString()}`),He}}return!N&&A&&$1.indexOf(s)!==-1&&this.parentNode&&this.parentNode.fireEvent&&(_.currentTarget=this.parentNode,this.parentNode.fireEvent(s,_,A)),S}toStyle(){return ti({},this.classStyle,this.style)}toJSON(s=!1){let _={ref:this.ref.toString(),type:this.type,attr:this.attr,style:this.toStyle()},A=[];for(let R in this.event){let{params:S}=this.event[R];S?A.push({type:R,params:S}):A.push(R)}return A.length&&(_.event=A),!s&&this.pureChildren.length&&(_.children=this.pureChildren.map(R=>R.toJSON())),_}toString(){return"<"+this.type+" attr="+JSON.stringify(this.attr)+" style="+JSON.stringify(this.toStyle())+">"+this.pureChildren.map(s=>s.toString()).join("")+"</"+this.type+">"}};function Op(g){let s=g&&g.__v_raw;return s?Op(s):g}function Tp(g){let s=gc(g);switch(s){case"Undefined":case"Null":return"";case"RegExp":return g.toString();case"Date":return g.toISOString();case"Number":case"String":case"Boolean":case"Array":case"Object":return Op(g);case"ArrayBuffer":return{"@type":"binary",dataType:s,base64:nf(g)};case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":return{"@type":"binary",dataType:s,base64:nf(g.buffer)};default:return JSON.stringify(g)}}var ou=function(){},$l=class{constructor(s,_){Object.defineProperty(this,"instanceId",{enumerable:!0,value:String(s)}),Object.defineProperty(this,"callbackManager",{enumerable:!0,value:new ru(s)}),ou=_||function(){}}callback(s,_,A){return this.callbackManager.consume(s,_,A)}registerHook(s,_,A,R){return this.callbackManager.registerHook(s,_,A,R)}triggerHook(s,_,A,R){return this.callbackManager.triggerHook(s,_,A,R)}updateData(s,_,A){this.send("module",{module:"dom",method:"updateComponentData"},[s,_,A])}destroyCallback(){return this.callbackManager.close()}normalize(s,_=!1){let A=gc(s);if(s&&s instanceof Ki)return s.ref;if(s&&s.$el instanceof Ki)return s.$el.ref;if(A==="Function")return this.callbackManager.add(s).toString();if(_){if(A==="Object"){let R={};for(let S in s)R[S]=this.normalize(s[S],!0);return R}if(A==="Array")return s.map(R=>this.normalize(R,!0))}return s&&s.ref&&s["[[VirtualElement]]"]?s.ref:Tp(s)}send(s,_,A,R){let{action:S,component:N,ref:f,module:P,method:He}=_;switch(A=A.map(Rt=>this.normalize(Rt,s!=="module")),gc(R)==="Object"&&(R=this.normalize(R,!0)),s){case"dom":return qn("debug")&&Mi(`[task](${this.instanceId},${s},${S}) ${JSON.stringify(A)}`),this[S](this.instanceId,A);case"component":return this.componentHandler(this.instanceId,f,He,A,ti({component:N},R));default:return qn("debug")&&Mi(`[task](${this.instanceId},${P},${He}) ${JSON.stringify(A)}`),this.moduleHandler(this.instanceId,P,He,A,R)}}callDOM(s,_){return this[s](this.instanceId,_)}callComponent(s,_,A,R){return this.componentHandler(this.instanceId,s,_,A,R)}callModule(s,_,A,R){return this.moduleHandler(this.instanceId,s,_,A,R)}};function Pp(){let g={createFinish:global.callCreateFinish,updateFinish:global.callUpdateFinish,refreshFinish:global.callRefreshFinish,createBody:global.callCreateBody,addElement:global.callAddElement,removeElement:global.callRemoveElement,moveElement:global.callMoveElement,updateAttrs:global.callUpdateAttrs,updateStyle:global.callUpdateStyle,addEvent:global.callAddEvent,removeEvent:global.callRemoveEvent,__updateComponentData:global.__updateComponentData},s=$l.prototype;for(let _ in g){let A=g[_];s[_]=A?(R,S)=>A(R,...S):(R,S)=>ou(R,[{module:"dom",method:_,args:S}],"-1")}s.componentHandler=global.callNativeComponent||((_,A,R,S,N)=>ou(_,[{component:N.component,ref:A,method:R,args:S}])),s.moduleHandler=global.callNativeModule||((_,A,R,S)=>ou(_,[{module:A,method:R,args:S}]))}function U1(g,s,_,A,R,S){let N=g.getRef(s);if(N)return g.fireEvent(N,_,A,R,S);if(A)return A._nodeId=s,g.fireEvent(g.getRef("_documentElement"),_,A,R,S)}function H1(g,s,_,A){return g.taskCenter.callback(s,_,A)}function j1(g,s,_,A,R){if(!g||!g.taskCenter)return console.error(`[JS Framework] Can't find "document" or "taskCenter".`),null;let S=null;try{S=g.taskCenter.triggerHook(s,_,A,R)}catch(N){throw console.error(`[JS Framework] Failed to trigger the "${_}@${A}" hook on ${s}.`),N}return S}function gf(g,s){let _=ts(g);if(!_)return new Error(`[JS Framework] Failed to receiveTasks, instance (${g}) is not available.`);if(Si(s))return s.map(A=>{switch(A.method){case"callback":return H1(_,...A.args);case"fireEventSync":case"fireEvent":return U1(_,...A.args);case"componentHook":return j1(_,...A.args)}})}var Es={};function Ip(g={}){for(let s in g)js(Es,s)||(Es[s]={}),!!Si(g[s])&&g[s].forEach(_=>{Ai(_)?Es[s][_]=!0:Vl(_)&&Ai(_.name)&&(Es[s][_.name]=_.args||[])})}function au(g,s){return Ai(s)?!!(Es[g]&&Es[g][s]):!!Es[g]}function Np(g){return Es[g]}var pf={};function kp(g){!Si(g)||g.forEach(s=>{!s||(Ai(s)?pf[s]=!0:Vl(s)&&Ai(s.type)&&(pf[s.type]=s,cf(s.type,s.methods)))})}function vf(g){return!!pf[g]}var ys=[];function su(g,s){mf(g)?console.warn(`Service "${g}" has been registered already!`):(s=ti({},s),ys.push({name:g,options:s}))}function lu(g){ys.some((s,_)=>{if(s.name===g)return ys.splice(_,1),!0})}function mf(g){return z1(g)>=0}function z1(g){return ys.map(s=>s.name).indexOf(g)}function W1(g){return s=>{let _=Zc(g,s),{createApp:A}=_;_.createVueApp=_.createApp=(R,S)=>A(R,S).use(G1,s),s.Vue=_}}var G1={install(g,s){Y1(g,s),dc(s).initApp(g)}};function Y1(g,s){let{mount:_}=g;g.mount=A=>{let R=_(A);return A==="#app"&&s.__registerApp(R),R}}function q1(g){let{UniShared:s,VueShared:_,VueReactivity:A}=g;var R=function(S,N,f,P){"use strict";var He=[];function Rt(i){P.pauseTracking();for(var l=He.length?He[He.length-1].component:null,d=l&&l.appContext.config.warnHandler,v=gn(),y=arguments.length,w=new Array(y>1?y-1:0),I=1;I<y;I++)w[I-1]=arguments[I];if(d)at(d,l,11,[i+w.join(""),l&&l.proxy,v.map($=>{var{vnode:te}=$;return"at <".concat(Gi(l,te.type),">")}).join(`
`),v]);else{var L=["[Vue warn]: ".concat(i),...w];v.length&&L.push(`
`,...B(v)),console.warn(...L)}P.resetTracking()}function gn(){var i=He[He.length-1];if(!i)return[];for(var l=[];i;){var d=l[0];d&&d.vnode===i?d.recurseCount++:l.push({vnode:i,recurseCount:0});var v=i.component&&i.component.parent;i=v&&v.vnode}return l}function B(i){var l=[];return i.forEach((d,v)=>{l.push(...v===0?[]:[`
`],...dt(d))}),l}function dt(i){var{vnode:l,recurseCount:d}=i,v=d>0?"... (".concat(d," recursive calls)"):"",y=l.component?l.component.parent==null:!1,w=" at <".concat(Gi(l.component,l.type,y)),I=">"+v;return l.props?[w,...pn(l.props),I]:[w+I]}function pn(i){var l=[],d=Object.keys(i);return d.slice(0,3).forEach(v=>{l.push(...Pn(v,i[v]))}),d.length>3&&l.push(" ..."),l}function Pn(i,l,d){return f.isString(l)?(l=JSON.stringify(l),d?l:["".concat(i,"=").concat(l)]):typeof l=="number"||typeof l=="boolean"||l==null?d?l:["".concat(i,"=").concat(l)]:P.isRef(l)?(l=Pn(i,P.toRaw(l.value),!0),d?l:["".concat(i,"=Ref<"),l,">"]):f.isFunction(l)?["".concat(i,"=fn").concat(l.name?"<".concat(l.name,">"):"")]:(l=P.toRaw(l),d?l:["".concat(i,"="),l])}function at(i,l,d,v){var y;try{y=v?i(...v):i()}catch(w){ne(w,l,d)}return y}function q(i,l,d,v){if(f.isFunction(i)){var y=at(i,l,d,v);return y&&f.isPromise(y)&&y.catch(L=>{ne(L,l,d)}),y}for(var w=[],I=0;I<i.length;I++)w.push(q(i[I],l,d,v));return w}function ne(i,l,d){if(l&&l.vnode,l){for(var v=l.parent,y=l.proxy,w=d;v;){var I=v.ec;if(I){for(var L=0;L<I.length;L++)if(I[L](i,y,w)===!1)return}v=v.parent}var $=l.appContext.config.errorHandler;if($){at($,null,10,[i,y,w]);return}}En(i)}function En(i,l,d){console.error(i)}var yn=!1,ln=!1,Un=[],on=0,kn=[],Hn=null,vn=0,an=[],mn=null,Rn=0,Br={then(i){setTimeout(()=>i(),0)}},ni=S.platform==="iOS",Ve=ni?Br:Promise.resolve(),ot=null,gt=null;function qt(i){var l=ot||Ve;return i?l.then(this?i.bind(this):i):l}function tn(i){for(var l=on+1,d=Un.length;l<d;){var v=l+d>>>1,y=Gr(Un[v]);y<i?l=v+1:d=v}return l}function Xt(i){(!Un.length||!Un.includes(i,yn&&i.allowRecurse?on+1:on))&&i!==gt&&(i.id==null?Un.push(i):Un.splice(tn(i.id),0,i),rr())}function rr(){!yn&&!ln&&(ln=!0,ot=Ve.then(Ji))}function sr(i){var l=Un.indexOf(i);l>on&&Un.splice(l,1)}function Li(i,l,d,v){f.isArray(i)?d.push(...i):(!l||!l.includes(i,i.allowRecurse?v+1:v))&&d.push(i),rr()}function Di(i){Li(i,Hn,kn,vn)}function xn(i){Li(i,mn,an,Rn)}function wr(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;if(kn.length){for(gt=l,Hn=[...new Set(kn)],kn.length=0,vn=0;vn<Hn.length;vn++)Hn[vn]();Hn=null,vn=0,gt=null,wr(i,l)}}function Wr(i){if(wr(),an.length){var l=[...new Set(an)];if(an.length=0,mn){mn.push(...l);return}for(mn=l,mn.sort((d,v)=>Gr(d)-Gr(v)),Rn=0;Rn<mn.length;Rn++)mn[Rn]();mn=null,Rn=0}}var Gr=i=>i.id==null?1/0:i.id;function Ji(i){ln=!1,yn=!0,wr(i),Un.sort((v,y)=>Gr(v)-Gr(y));var l=f.NOOP;try{for(on=0;on<Un.length;on++){var d=Un[on];d&&d.active!==!1&&at(d,null,14)}}finally{on=0,Un.length=0,Wr(),yn=!1,ot=null,(Un.length||kn.length||an.length)&&Ji(i)}}S.devtools=void 0;var Zi=[];function Io(i,l){var d,v;if(S.devtools=i,S.devtools)S.devtools.enabled=!0,Zi.forEach(w=>{var{event:I,args:L}=w;return S.devtools.emit(I,...L)}),Zi=[];else if(typeof window!="undefined"&&window.HTMLElement&&!((v=(d=window.navigator)===null||d===void 0?void 0:d.userAgent)===null||v===void 0?void 0:v.includes("jsdom"))){var y=l.__VUE_DEVTOOLS_HOOK_REPLAY__=l.__VUE_DEVTOOLS_HOOK_REPLAY__||[];y.push(w=>{Io(w,l)}),setTimeout(()=>{S.devtools||(l.__VUE_DEVTOOLS_HOOK_REPLAY__=null,Zi=[])},3e3)}else Zi=[]}function No(i,l){if(!i.isUnmounted){for(var d=i.vnode.props||f.EMPTY_OBJ,v=arguments.length,y=new Array(v>2?v-2:0),w=2;w<v;w++)y[w-2]=arguments[w];var I=y,L=l.startsWith("update:"),$=L&&l.slice(7);if($&&$ in d){var te="".concat($==="modelValue"?"model":$,"Modifiers"),{number:ae,trim:Re}=d[te]||f.EMPTY_OBJ;Re&&(I=y.map(lt=>lt.trim())),ae&&(I=y.map(f.toNumber))}var Q,ve=d[Q=f.toHandlerKey(l)]||d[Q=f.toHandlerKey(f.camelize(l))];!ve&&L&&(ve=d[Q=f.toHandlerKey(f.hyphenate(l))]),ve&&q(ve,i,6,I);var Ce=d[Q+"Once"];if(Ce){if(!i.emitted)i.emitted={};else if(i.emitted[Q])return;i.emitted[Q]=!0,q(Ce,i,6,I)}}}function hr(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,v=l.emitsCache,y=v.get(i);if(y!==void 0)return y;var w=i.emits,I={},L=!1;if(!f.isFunction(i)){var $=te=>{var ae=hr(te,l,!0);ae&&(L=!0,f.extend(I,ae))};!d&&l.mixins.length&&l.mixins.forEach($),i.extends&&$(i.extends),i.mixins&&i.mixins.forEach($)}return!w&&!L?(v.set(i,null),null):(f.isArray(w)?w.forEach(te=>I[te]=null):f.extend(I,w),v.set(i,I),I)}function Cn(i,l){return!i||!f.isOn(l)?!1:(l=l.slice(2).replace(/Once$/,""),f.hasOwn(i,l[0].toLowerCase()+l.slice(1))||f.hasOwn(i,f.hyphenate(l))||f.hasOwn(i,l))}var On=null,di=null;function Xi(i){var l=On;return On=i,di=i&&i.type.__scopeId||null,l}function Qi(i){di=i}function po(){di=null}var Ci=i=>lr;function lr(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:On;if(!l||i._n)return i;var d=function(){d._d&&Sn(-1);var v=Xi(l),y=i(...arguments);return Xi(v),d._d&&Sn(1),y};return d._n=!0,d._c=!0,d._d=!0,d}function Yr(){}function Sr(i){var{type:l,vnode:d,proxy:v,withProxy:y,props:w,propsOptions:[I],slots:L,attrs:$,emit:te,render:ae,renderCache:Re,data:Q,setupState:ve,ctx:Ce,inheritAttrs:lt}=i,mt,_e,se=Xi(i);try{if(d.shapeFlag&4){var be=y||v;mt=An(ae.call(be,be,Re,w,ve,Q,Ce)),_e=$}else{var Ge=l;mt=An(Ge.length>1?Ge(w,{attrs:$,slots:L,emit:te}):Ge(w,null)),_e=l.props?$:ko($)}}catch(De){Je.length=0,ne(De,i,1),mt=_n(Ft)}var Me=mt;if(_e&&lt!==!1){var rt=Object.keys(_e),{shapeFlag:Ze}=Me;rt.length&&Ze&(1|6)&&(I&&rt.some(f.isModelListener)&&(_e=Ro(_e,I)),Me=Xr(Me,_e))}return d.dirs&&(Me=Xr(Me),Me.dirs=Me.dirs?Me.dirs.concat(d.dirs):d.dirs),d.transition&&(Me.transition=d.transition),mt=Me,Xi(se),mt}function gr(i){for(var l,d=0;d<i.length;d++){var v=i[d];if(ir(v)){if(v.type!==Ft||v.children==="v-if"){if(l)return;l=v}}else return}return l}var ko=i=>{var l;for(var d in i)(d==="class"||d==="style"||f.isOn(d))&&((l||(l={}))[d]=i[d]);return l},Ro=(i,l)=>{var d={};for(var v in i)(!f.isModelListener(v)||!(v.slice(9)in l))&&(d[v]=i[v]);return d};function vo(i,l,d){var{props:v,children:y,component:w}=i,{props:I,children:L,patchFlag:$}=l,te=w.emitsOptions;if(l.dirs||l.transition)return!0;if(d&&$>=0){if($&1024)return!0;if($&16)return v?Mr(v,I,te):!!I;if($&8)for(var ae=l.dynamicProps,Re=0;Re<ae.length;Re++){var Q=ae[Re];if(I[Q]!==v[Q]&&!Cn(te,Q))return!0}}else return(y||L)&&(!L||!L.$stable)?!0:v===I?!1:v?I?Mr(v,I,te):!0:!!I;return!1}function Mr(i,l,d){var v=Object.keys(l);if(v.length!==Object.keys(i).length)return!0;for(var y=0;y<v.length;y++){var w=v[y];if(l[w]!==i[w]&&!Cn(d,w))return!0}return!1}function cr(i,l){for(var{vnode:d,parent:v}=i;v&&v.subTree===d;)(d=v.vnode).el=l,v=v.parent}var Ar=i=>i.__isSuspense,ri={name:"Suspense",__isSuspense:!0,process(i,l,d,v,y,w,I,L,$,te){i==null?eo(l,d,v,y,w,I,L,$,te):Fi(i,l,d,v,y,I,L,$,te)},hydrate:mo,create:Lr,normalize:_o},Wn=ri;function qr(i,l){var d=i.props&&i.props[l];f.isFunction(d)&&d()}function eo(i,l,d,v,y,w,I,L,$){var{p:te,o:{createElement:ae}}=$,Re=ae("div",l),Q=i.suspense=Lr(i,y,v,l,Re,d,w,I,L,$);te(null,Q.pendingBranch=i.ssContent,Re,null,v,Q,w,I),Q.deps>0?(qr(i,"onPending"),qr(i,"onFallback"),te(null,i.ssFallback,l,d,v,null,w,I),oi(Q,i.ssFallback)):Q.resolve()}function Fi(i,l,d,v,y,w,I,L,$){var{p:te,um:ae,o:{createElement:Re}}=$,Q=l.suspense=i.suspense;Q.vnode=l,l.el=i.el;var ve=l.ssContent,Ce=l.ssFallback,{activeBranch:lt,pendingBranch:mt,isInFallback:_e,isHydrating:se}=Q;if(mt)Q.pendingBranch=ve,Er(ve,mt)?(te(mt,ve,Q.hiddenContainer,null,y,Q,w,I,L),Q.deps<=0?Q.resolve():_e&&(te(lt,Ce,d,v,y,null,w,I,L),oi(Q,Ce))):(Q.pendingId++,se?(Q.isHydrating=!1,Q.activeBranch=mt):ae(mt,y,Q),Q.deps=0,Q.effects.length=0,Q.hiddenContainer=Re("div",d),_e?(te(null,ve,Q.hiddenContainer,null,y,Q,w,I,L),Q.deps<=0?Q.resolve():(te(lt,Ce,d,v,y,null,w,I,L),oi(Q,Ce))):lt&&Er(ve,lt)?(te(lt,ve,d,v,y,Q,w,I,L),Q.resolve(!0)):(te(null,ve,Q.hiddenContainer,null,y,Q,w,I,L),Q.deps<=0&&Q.resolve()));else if(lt&&Er(ve,lt))te(lt,ve,d,v,y,Q,w,I,L),oi(Q,ve);else if(qr(l,"onPending"),Q.pendingBranch=ve,Q.pendingId++,te(null,ve,Q.hiddenContainer,null,y,Q,w,I,L),Q.deps<=0)Q.resolve();else{var{timeout:be,pendingId:Ge}=Q;be>0?setTimeout(()=>{Q.pendingId===Ge&&Q.fallback(Ce)},be):be===0&&Q.fallback(Ce)}}function Lr(i,l,d,v,y,w,I,L,$,te){var ae=arguments.length>10&&arguments[10]!==void 0?arguments[10]:!1,{p:Re,m:Q,um:ve,n:Ce,o:{parentNode:lt,remove:mt}}=te,_e=f.toNumber(i.props&&i.props.timeout),se={vnode:i,parent:l,parentComponent:d,isSVG:I,container:v,hiddenContainer:y,anchor:w,deps:0,pendingId:0,timeout:typeof _e=="number"?_e:-1,activeBranch:null,pendingBranch:null,isInFallback:!0,isHydrating:ae,isUnmounted:!1,effects:[],resolve(){var be=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1,{vnode:Ge,activeBranch:Me,pendingBranch:rt,pendingId:Ze,effects:De,parentComponent:bt,container:yt}=se;if(se.isHydrating)se.isHydrating=!1;else if(!be){var Bt=Me&&rt.transition&&rt.transition.mode==="out-in";Bt&&(Me.transition.afterLeave=()=>{Ze===se.pendingId&&Q(rt,yt,jt,0)});var{anchor:jt}=se;Me&&(jt=Ce(Me),ve(Me,bt,se,!0)),Bt||Q(rt,yt,jt,0)}oi(se,rt),se.pendingBranch=null,se.isInFallback=!1;for(var ut=se.parent,D=!1;ut;){if(ut.pendingBranch){ut.effects.push(...De),D=!0;break}ut=ut.parent}D||xn(De),se.effects=[],qr(Ge,"onResolve")},fallback(be){if(!!se.pendingBranch){var{vnode:Ge,activeBranch:Me,parentComponent:rt,container:Ze,isSVG:De}=se;qr(Ge,"onFallback");var bt=Ce(Me),yt=()=>{!se.isInFallback||(Re(null,be,Ze,bt,rt,null,De,L,$),oi(se,be))},Bt=be.transition&&be.transition.mode==="out-in";Bt&&(Me.transition.afterLeave=yt),se.isInFallback=!0,ve(Me,rt,null,!0),Bt||yt()}},move(be,Ge,Me){se.activeBranch&&Q(se.activeBranch,be,Ge,Me),se.container=be},next(){return se.activeBranch&&Ce(se.activeBranch)},registerDep(be,Ge){var Me=!!se.pendingBranch;Me&&se.deps++;var rt=be.vnode.el;be.asyncDep.catch(Ze=>{ne(Ze,be,0)}).then(Ze=>{if(!(be.isUnmounted||se.isUnmounted||se.pendingId!==be.suspenseId)){be.asyncResolved=!0;var{vnode:De}=be;co(be,Ze,!1),rt&&(De.el=rt);var bt=!rt&&be.subTree.el;Ge(be,De,lt(rt||be.subTree.el),rt?null:Ce(be.subTree),se,I,$),bt&&mt(bt),cr(be,De.el),Me&&--se.deps===0&&se.resolve()}})},unmount(be,Ge){se.isUnmounted=!0,se.activeBranch&&ve(se.activeBranch,d,be,Ge),se.pendingBranch&&ve(se.pendingBranch,d,be,Ge)}};return se}function mo(i,l,d,v,y,w,I,L,$){var te=l.suspense=Lr(l,v,d,i.parentNode,document.createElement("div"),null,y,w,I,L,!0),ae=$(i,te.pendingBranch=l.ssContent,d,te,w,I);return te.deps===0&&te.resolve(),ae}function _o(i){var{shapeFlag:l,children:d}=i,v=l&32;i.ssContent=bo(v?d.default:d),i.ssFallback=v?bo(d.fallback):_n(Ft)}function bo(i){var l;if(f.isFunction(i)){var d=nn&&i._c;d&&(i._d=!1,wn()),i=i(),d&&(i._d=!0,l=Ct,un())}if(f.isArray(i)){var v=gr(i);i=v}return i=An(i),l&&!i.dynamicChildren&&(i.dynamicChildren=l.filter(y=>y!==i)),i}function ii(i,l){l&&l.pendingBranch?f.isArray(i)?l.effects.push(...i):l.effects.push(i):xn(i)}function oi(i,l){i.activeBranch=l;var{vnode:d,parentComponent:v}=i,y=d.el=l.el;v&&v.subTree===d&&(v.vnode.el=y,cr(v,y))}function Oi(i,l){if(fn){var d=fn.provides,v=fn.parent&&fn.parent.provides;v===d&&(d=fn.provides=Object.create(v)),d[i]=l,fn.type.mpType==="app"&&fn.appContext.app.provide(i,l)}}function hi(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,v=fn||On;if(v){var y=v.parent==null?v.vnode.appContext&&v.vnode.appContext.provides:v.parent.provides;if(y&&i in y)return y[i];if(arguments.length>1)return d&&f.isFunction(l)?l.call(v.proxy):l}}function Kn(i,l){return Ti(i,null,l)}function Cr(i,l){return Ti(i,null,{flush:"post"})}function Vi(i,l){return Ti(i,null,{flush:"sync"})}var xt={};function we(i,l,d){return Ti(i,l,d)}function Ti(i,l){var{immediate:d,deep:v,flush:y,onTrack:w,onTrigger:I}=arguments.length>2&&arguments[2]!==void 0?arguments[2]:f.EMPTY_OBJ,L=fn,$,te=!1,ae=!1;if(P.isRef(i)?($=()=>i.value,te=P.isShallow(i)):P.isReactive(i)?($=()=>i,v=!0):f.isArray(i)?(ae=!0,te=i.some(se=>P.isReactive(se)||P.isShallow(se)),$=()=>i.map(se=>{if(P.isRef(se))return se.value;if(P.isReactive(se))return Dr(se);if(f.isFunction(se))return at(se,L,2)})):f.isFunction(i)?l?$=()=>at(i,L,2):$=()=>{if(!(L&&L.isUnmounted))return Q&&Q(),q(i,L,3,[ve])}:$=f.NOOP,l&&v){var Re=$;$=()=>Dr(Re())}var Q,ve=se=>{Q=_e.onStop=()=>{at(se,L,4)}};if(S.isInSSRComponentSetup)return ve=f.NOOP,l?d&&q(l,L,3,[$(),ae?[]:void 0,ve]):$(),f.NOOP;var Ce=ae?[]:xt,lt=()=>{if(!!_e.active)if(l){var se=_e.run();(v||te||(ae?se.some((be,Ge)=>f.hasChanged(be,Ce[Ge])):f.hasChanged(se,Ce)))&&(Q&&Q(),q(l,L,3,[se,Ce===xt?void 0:Ce,ve]),Ce=se)}else _e.run()};lt.allowRecurse=!!l;var mt;y==="sync"?mt=lt:y==="post"?mt=()=>k(lt,L&&L.suspense):mt=()=>Di(lt);var _e=new P.ReactiveEffect($,mt);return l?d?lt():Ce=_e.run():y==="post"?k(_e.run.bind(_e),L&&L.suspense):_e.run(),()=>{_e.stop(),L&&L.scope&&f.remove(L.scope.effects,_e)}}function $i(i,l,d){var v=this.proxy,y=f.isString(i)?i.includes(".")?Kr(v,i):()=>v[i]:i.bind(v,v),w;f.isFunction(l)?w=l:(w=l.handler,d=l);var I=fn;Ir(this);var L=Ti(y,w.bind(v),d);return I?Ir(I):Wi(),L}function Kr(i,l){var d=l.split(".");return()=>{for(var v=i,y=0;y<d.length&&v;y++)v=v[d[y]];return v}}function Dr(i,l){if(!f.isObject(i)||i.__v_skip||(l=l||new Set,l.has(i)))return i;if(l.add(i),P.isRef(i))Dr(i.value,l);else if(f.isArray(i))for(var d=0;d<i.length;d++)Dr(i[d],l);else if(f.isSet(i)||f.isMap(i))i.forEach(y=>{Dr(y,l)});else if(f.isPlainObject(i))for(var v in i)Dr(i[v],l);return i}function jn(){var i={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return mi(()=>{i.isMounted=!0}),bi(()=>{i.isUnmounting=!0}),i}var Bn=[Function,Array],xo={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Bn,onEnter:Bn,onAfterEnter:Bn,onEnterCancelled:Bn,onBeforeLeave:Bn,onLeave:Bn,onAfterLeave:Bn,onLeaveCancelled:Bn,onBeforeAppear:Bn,onAppear:Bn,onAfterAppear:Bn,onAppearCancelled:Bn},setup(i,l){var{slots:d}=l,v=fr(),y=jn(),w;return()=>{var I=d.default&&Or(d.default(),!0);if(!(!I||!I.length)){var L=I[0];if(I.length>1){for(var $ of I)if($.type!==Ft){L=$;break}}var te=P.toRaw(i),{mode:ae}=te;if(y.isLeaving)return pi(L);var Re=Kt(L);if(!Re)return pi(L);var Q=gi(Re,te,y,v);Gn(Re,Q);var ve=v.subTree,Ce=ve&&Kt(ve),lt=!1,{getTransitionKey:mt}=Re.type;if(mt){var _e=mt();w===void 0?w=_e:_e!==w&&(w=_e,lt=!0)}if(Ce&&Ce.type!==Ft&&(!Er(Re,Ce)||lt)){var se=gi(Ce,te,y,v);if(Gn(Ce,se),ae==="out-in")return y.isLeaving=!0,se.afterLeave=()=>{y.isLeaving=!1,v.update()},pi(L);ae==="in-out"&&Re.type!==Ft&&(se.delayLeave=(be,Ge,Me)=>{var rt=Ut(y,Ce);rt[String(Ce.key)]=Ce,be._leaveCb=()=>{Ge(),be._leaveCb=void 0,delete Q.delayedLeave},Q.delayedLeave=Me})}return L}}}},Pi=xo;function Ut(i,l){var{leavingVNodes:d}=i,v=d.get(l.type);return v||(v=Object.create(null),d.set(l.type,v)),v}function gi(i,l,d,v){var{appear:y,mode:w,persisted:I=!1,onBeforeEnter:L,onEnter:$,onAfterEnter:te,onEnterCancelled:ae,onBeforeLeave:Re,onLeave:Q,onAfterLeave:ve,onLeaveCancelled:Ce,onBeforeAppear:lt,onAppear:mt,onAfterAppear:_e,onAppearCancelled:se}=l,be=String(i.key),Ge=Ut(d,i),Me=(De,bt)=>{De&&q(De,v,9,bt)},rt=(De,bt)=>{var yt=bt[1];Me(De,bt),f.isArray(De)?De.every(Bt=>Bt.length<=1)&&yt():De.length<=1&&yt()},Ze={mode:w,persisted:I,beforeEnter(De){var bt=L;if(!d.isMounted)if(y)bt=lt||L;else return;De._leaveCb&&De._leaveCb(!0);var yt=Ge[be];yt&&Er(i,yt)&&yt.el._leaveCb&&yt.el._leaveCb(),Me(bt,[De])},enter(De){var bt=$,yt=te,Bt=ae;if(!d.isMounted)if(y)bt=mt||$,yt=_e||te,Bt=se||ae;else return;var jt=!1,ut=De._enterCb=D=>{jt||(jt=!0,D?Me(Bt,[De]):Me(yt,[De]),Ze.delayedLeave&&Ze.delayedLeave(),De._enterCb=void 0)};bt?rt(bt,[De,ut]):ut()},leave(De,bt){var yt=String(i.key);if(De._enterCb&&De._enterCb(!0),d.isUnmounting)return bt();Me(Re,[De]);var Bt=!1,jt=De._leaveCb=ut=>{Bt||(Bt=!0,bt(),ut?Me(Ce,[De]):Me(ve,[De]),De._leaveCb=void 0,Ge[yt]===i&&delete Ge[yt])};Ge[yt]=i,Q?rt(Q,[De,jt]):jt()},clone(De){return gi(De,l,d,v)}};return Ze}function pi(i){if(to(i))return i=Xr(i),i.children=null,i}function Kt(i){return to(i)?i.children?i.children[0]:void 0:i}function Gn(i,l){i.shapeFlag&6&&i.component?Gn(i.component.subTree,l):i.shapeFlag&128?(i.ssContent.transition=l.clone(i.ssContent),i.ssFallback.transition=l.clone(i.ssFallback)):i.transition=l}function Or(i){for(var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1,d=arguments.length>2?arguments[2]:void 0,v=[],y=0,w=0;w<i.length;w++){var I=i[w],L=d==null?I.key:String(d)+String(I.key!=null?I.key:w);I.type===ze?(I.patchFlag&128&&y++,v=v.concat(Or(I.children,l,L))):(l||I.type!==Ft)&&v.push(L!=null?Xr(I,{key:L}):I)}if(y>1)for(var $=0;$<v.length;$++)v[$].patchFlag=-2;return v}function In(i){return f.isFunction(i)?{setup:i,name:i.name}:i}var Ii=i=>!!i.type.__asyncLoader;function Bo(i){f.isFunction(i)&&(i={loader:i});var{loader:l,loadingComponent:d,errorComponent:v,delay:y=200,timeout:w,suspensible:I=!0,onError:L}=i,$=null,te,ae=0,Re=()=>(ae++,$=null,Q()),Q=()=>{var ve;return $||(ve=$=l().catch(Ce=>{if(Ce=Ce instanceof Error?Ce:new Error(String(Ce)),L)return new Promise((lt,mt)=>{var _e=()=>lt(Re()),se=()=>mt(Ce);L(Ce,_e,se,ae+1)});throw Ce}).then(Ce=>ve!==$&&$?$:(Ce&&(Ce.__esModule||Ce[Symbol.toStringTag]==="Module")&&(Ce=Ce.default),te=Ce,Ce)))};return In({name:"AsyncComponentWrapper",__asyncLoader:Q,get __asyncResolved(){return te},setup(){var ve=fn;if(te)return()=>vi(te,ve);var Ce=se=>{$=null,ne(se,ve,13)};if(I&&ve.suspense||S.isInSSRComponentSetup)return Q().then(se=>()=>vi(se,ve)).catch(se=>(Ce(se),()=>v?_n(v,{error:se}):null));var lt=P.ref(!1),mt=P.ref(),_e=P.ref(!!y);return y&&setTimeout(()=>{_e.value=!1},y),w!=null&&setTimeout(()=>{if(!lt.value&&!mt.value){var se=new Error("Async component timed out after ".concat(w,"ms."));Ce(se),mt.value=se}},w),Q().then(()=>{lt.value=!0,ve.parent&&to(ve.parent.vnode)&&Xt(ve.parent.update)}).catch(se=>{Ce(se),mt.value=se}),()=>{if(lt.value&&te)return vi(te,ve);if(mt.value&&v)return _n(v,{error:mt.value});if(d&&!_e.value)return _n(d)}}})}function vi(i,l){var{vnode:{ref:d,props:v,children:y,shapeFlag:w},parent:I}=l,L=_n(i,v,y);return L.ref=d,L}var to=i=>i.type.__isKeepAlive,Zo={name:"KeepAlive",__isKeepAlive:!0,props:{include:[String,RegExp,Array],exclude:[String,RegExp,Array],max:[String,Number]},setup(i,l){var{slots:d}=l,v=fr(),y=v.ctx;if(!y.renderer)return()=>{var be=d.default&&d.default();return be&&be.length===1?be[0]:be};var w=new Map,I=new Set,L=null,$=v.suspense,{renderer:{p:te,m:ae,um:Re,o:{createElement:Q}}}=y,ve=Q("div",null);y.activate=(be,Ge,Me,rt,Ze)=>{var De=be.component;ae(be,Ge,Me,0,$),te(De.vnode,be,Ge,Me,De,$,rt,be.slotScopeIds,Ze),k(()=>{De.isDeactivated=!1,De.a&&f.invokeArrayFns(De.a);var bt=be.props&&be.props.onVnodeMounted;bt&&Ur(bt,De.parent,be)},$)},y.deactivate=be=>{var Ge=be.component;ae(be,ve,null,1,$),k(()=>{Ge.da&&f.invokeArrayFns(Ge.da);var Me=be.props&&be.props.onVnodeUnmounted;Me&&Ur(Me,Ge.parent,be),Ge.isDeactivated=!0},$)};function Ce(be){Hi(be),Re(be,v,$,!0)}function lt(be){w.forEach((Ge,Me)=>{var rt=Nr(Ge.type);rt&&(!be||!be(rt))&&mt(Me)})}function mt(be){var Ge=w.get(be);!L||Ge.type!==L.type?Ce(Ge):L&&Hi(L),w.delete(be),I.delete(be)}we(()=>[i.include,i.exclude],be=>{var[Ge,Me]=be;Ge&&lt(rt=>Jn(Ge,rt)),Me&&lt(rt=>!Jn(Me,rt))},{flush:"post",deep:!0});var _e=null,se=()=>{_e!=null&&w.set(_e,ai(v.subTree))};return mi(se),Zr(se),bi(()=>{w.forEach(be=>{var{subTree:Ge,suspense:Me}=v,rt=ai(Ge);if(be.type===rt.type){Hi(rt);var Ze=rt.component.da;Ze&&k(Ze,Me);return}Ce(be)})}),()=>{if(_e=null,!d.default)return null;var be=d.default(),Ge=be[0];if(be.length>1)return L=null,be;if(!ir(Ge)||!(Ge.shapeFlag&4)&&!(Ge.shapeFlag&128))return L=null,Ge;var Me=ai(Ge),rt=Me.type,Ze=Nr(Ii(Me)?Me.type.__asyncResolved||{}:rt),{include:De,exclude:bt,max:yt}=i;if(De&&(!Ze||!Jn(De,Ze))||bt&&Ze&&Jn(bt,Ze))return L=Me,Ge;var Bt=Me.key==null?rt:Me.key,jt=w.get(Bt);return Me.el&&(Me=Xr(Me),Ge.shapeFlag&128&&(Ge.ssContent=Me)),_e=Bt,jt?(Me.el=jt.el,Me.component=jt.component,Me.transition&&Gn(Me,Me.transition),Me.shapeFlag|=512,I.delete(Bt),I.add(Bt)):(I.add(Bt),yt&&I.size>parseInt(yt,10)&&mt(I.values().next().value)),Me.shapeFlag|=256,L=Me,Ar(Ge.type)?Ge:Me}}},Ui=Zo;function Jn(i,l){return f.isArray(i)?i.some(d=>Jn(d,l)):f.isString(i)?i.split(",").includes(l):i.test?i.test(l):!1}function pr(i,l){Fr(i,"a",l)}function Zn(i,l){Fr(i,"da",l)}function Fr(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:fn,v=i.__wdc||(i.__wdc=()=>{for(var w=d;w;){if(w.isDeactivated)return;w=w.parent}return i()});if(vr(l,v,d),d)for(var y=d.parent;y&&y.parent;)to(y.parent.vnode)&&Tr(v,l,d,y),y=y.parent}function Tr(i,l,d,v){var y=vr(l,i,v,!0);no(()=>{f.remove(v[l],y)},d)}function Hi(i){var l=i.shapeFlag;l&256&&(l-=256),l&512&&(l-=512),i.shapeFlag=l}function ai(i){return i.shapeFlag&128?i.ssContent:i}function vr(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:fn,v=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;if(d){if(N.isRootHook(i)&&d!==d.root&&(d=d.root,N.isRootImmediateHook(i))){var y=d.proxy;q(l.bind(y),d,i,N.ON_LOAD===i?[y.$page.options]:[])}var{__page_container__:w}=d.root.vnode;w&&w.onInjectHook(i);var I=d[i]||(d[i]=[]),L=l.__weh||(l.__weh=function(){if(!d.isUnmounted){P.pauseTracking(),Ir(d);for(var $=arguments.length,te=new Array($),ae=0;ae<$;ae++)te[ae]=arguments[ae];var Re=q(l,d,i,te);return Wi(),P.resetTracking(),Re}});return v?I.unshift(L):I.push(L),L}}var Jr=i=>function(l){var d=arguments.length>1&&arguments[1]!==void 0?arguments[1]:fn;return(!S.isInSSRComponentSetup||i==="sp")&&vr(i,l,d)},Ni=Jr("bm"),mi=Jr("m"),_i=Jr("bu"),Zr=Jr("u"),bi=Jr("bum"),no=Jr("um"),ji=Jr("sp"),ro=Jr("rtg"),x=Jr("rtc");function re(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:fn;vr("ec",i,l)}function he(i,l){var d=On;if(d===null)return i;for(var v=Pt(d)||d.proxy,y=i.dirs||(i.dirs=[]),w=0;w<l.length;w++){var[I,L,$,te=f.EMPTY_OBJ]=l[w];f.isFunction(I)&&(I={mounted:I,updated:I}),I.deep&&Dr(L),y.push({dir:I,instance:v,value:L,oldValue:void 0,arg:$,modifiers:te})}return i}function H(i,l,d,v){for(var y=i.dirs,w=l&&l.dirs,I=0;I<y.length;I++){var L=y[I];w&&(L.oldValue=w[I].value);var $=L.dir[v];$&&(P.pauseTracking(),q($,d,8,[i.el,L,i,l]),P.resetTracking())}}var M="components",J="directives";function X(i,l){return cn(M,i,!0,l)||i}var fe=Symbol();function en(i){return f.isString(i)?cn(M,i,!1)||i:i||fe}function Mn(i){return cn(J,i)}function cn(i,l){var d=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,v=On||fn;if(v){var y=v.type;if(i===M){var w=Nr(y,!1);if(w&&(w===l||w===f.camelize(l)||w===f.capitalize(f.camelize(l))))return y}var I=si(v[i]||y[i],l)||si(v.appContext[i],l);return!I&&d?y:I}}function si(i,l){return i&&(i[l]||i[f.camelize(l)]||i[f.capitalize(f.camelize(l))])}function mr(i,l,d,v){var y,w=d&&d[v];if(f.isArray(i)||f.isString(i)){y=new Array(i.length);for(var I=0,L=i.length;I<L;I++)y[I]=l(i[I],I,void 0,w&&w[I])}else if(typeof i=="number"){y=new Array(i);for(var $=0;$<i;$++)y[$]=l($+1,$,void 0,w&&w[$])}else if(f.isObject(i))if(i[Symbol.iterator])y=Array.from(i,(ve,Ce)=>l(ve,Ce,void 0,w&&w[Ce]));else{var te=Object.keys(i);y=new Array(te.length);for(var ae=0,Re=te.length;ae<Re;ae++){var Q=te[ae];y[ae]=l(i[Q],Q,ae,w&&w[ae])}}else y=[];return d&&(d[v]=y),y}function Xo(i,l){for(var d=0;d<l.length;d++){var v=l[d];if(f.isArray(v))for(var y=0;y<v.length;y++)i[v[y].name]=v[y].fn;else v&&(i[v.name]=v.fn)}return i}function jo(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},v=arguments.length>3?arguments[3]:void 0,y=arguments.length>4?arguments[4]:void 0;if(On.isCE||On.parent&&Ii(On.parent)&&On.parent.isCE)return _n("slot",l==="default"?null:{name:l},v&&v());var w=i[l];w&&w._c&&(w._d=!1),wn();var I=w&&Qo(w(d)),L=Ei(ze,{key:d.key||"_".concat(l)},I||(v?v():[]),I&&i._===1?64:-2);return!y&&L.scopeId&&(L.slotScopeIds=[L.scopeId+"-s"]),w&&w._c&&(w._d=!0),L}function Qo(i){return i.some(l=>ir(l)?!(l.type===Ft||l.type===ze&&!Qo(l.children)):!0)?i:null}function Mo(i){var l={};for(var d in i)l[f.toHandlerKey(d)]=i[d];return l}var Eo=i=>i?Va(i)?Pt(i)||i.proxy:Eo(i.parent):null,io=f.extend(Object.create(null),{$:i=>i,$el:i=>i.vnode.el,$data:i=>i.data,$props:i=>i.props,$attrs:i=>i.attrs,$slots:i=>i.slots,$refs:i=>i.refs,$parent:i=>Eo(i.parent),$root:i=>Eo(i.root),$emit:i=>i.emit,$options:i=>_r(i),$forceUpdate:i=>i.f||(i.f=()=>Xt(i.update)),$nextTick:i=>i.n||(i.n=qt.bind(i.proxy)),$watch:i=>$i.bind(i)}),xa={get(i,l){var{_:d}=i,{ctx:v,setupState:y,data:w,props:I,accessCache:L,type:$,appContext:te}=d,ae;if(l[0]!=="$"){var Re=L[l];if(Re!==void 0)switch(Re){case 1:return y[l];case 2:return w[l];case 4:return v[l];case 3:return I[l]}else{if(y!==f.EMPTY_OBJ&&f.hasOwn(y,l))return L[l]=1,y[l];if(w!==f.EMPTY_OBJ&&f.hasOwn(w,l))return L[l]=2,w[l];if((ae=d.propsOptions[0])&&f.hasOwn(ae,l))return L[l]=3,I[l];if(v!==f.EMPTY_OBJ&&f.hasOwn(v,l))return L[l]=4,v[l];ma&&(L[l]=0)}}var Q=io[l],ve,Ce;if(Q)return l==="$attrs"&&P.track(d,"get",l),Q(d);if((ve=$.__cssModules)&&(ve=ve[l]))return ve;if(v!==f.EMPTY_OBJ&&f.hasOwn(v,l))return L[l]=4,v[l];if(Ce=te.config.globalProperties,f.hasOwn(Ce,l))return Ce[l]},set(i,l,d){var{_:v}=i,{data:y,setupState:w,ctx:I}=v;return w!==f.EMPTY_OBJ&&f.hasOwn(w,l)?(w[l]=d,!0):y!==f.EMPTY_OBJ&&f.hasOwn(y,l)?(y[l]=d,!0):f.hasOwn(v.props,l)||l[0]==="$"&&l.slice(1)in v?!1:(I[l]=d,!0)},has(i,l){var{_:{data:d,setupState:v,accessCache:y,ctx:w,appContext:I,propsOptions:L}}=i,$;return!!y[l]||d!==f.EMPTY_OBJ&&f.hasOwn(d,l)||v!==f.EMPTY_OBJ&&f.hasOwn(v,l)||($=L[0])&&f.hasOwn($,l)||f.hasOwn(w,l)||f.hasOwn(io,l)||f.hasOwn(I.config.globalProperties,l)},defineProperty(i,l,d){return d.get!=null?i._.accessCache[l]=0:f.hasOwn(d,"value")&&this.set(i,l,d.value,null),Reflect.defineProperty(i,l,d)}},ea=f.extend({},xa,{get(i,l){if(l!==Symbol.unscopables)return xa.get(i,l,i)},has(i,l){var d=l[0]!=="_"&&!f.isGloballyWhitelisted(l);return d}}),ma=!0;function rs(i){var l=_r(i),d=i.proxy,v=i.ctx;ma=!1,l.beforeCreate&&Ba(l.beforeCreate,i,"bc");var{data:y,computed:w,methods:I,watch:L,provide:$,inject:te,created:ae,beforeMount:Re,mounted:Q,beforeUpdate:ve,updated:Ce,activated:lt,deactivated:mt,beforeDestroy:_e,beforeUnmount:se,destroyed:be,unmounted:Ge,render:Me,renderTracked:rt,renderTriggered:Ze,errorCaptured:De,serverPrefetch:bt,expose:yt,inheritAttrs:Bt,components:jt,directives:ut,filters:D}=l,K=null;if(te&&ta(te,v,K,i.appContext.config.unwrapInjectedRef),I)for(var le in I){var ue=I[le];f.isFunction(ue)&&(v[le]=ue.bind(d))}if(y){var Pe=y.call(d,d);f.isObject(Pe)&&(i.data=P.reactive(Pe))}if(ma=!0,w){var et=function(At){var Nt=w[At],sn=f.isFunction(Nt)?Nt.bind(d,d):f.isFunction(Nt.get)?Nt.get.bind(d,d):f.NOOP,bn=!f.isFunction(Nt)&&f.isFunction(Nt.set)?Nt.set.bind(d):f.NOOP,tr=So({get:sn,set:bn});Object.defineProperty(v,At,{enumerable:!0,configurable:!0,get:()=>tr.value,set:er=>tr.value=er})};for(var ft in w)et(ft)}if(L)for(var Ke in L)ur(L[Ke],v,d,Ke);if($){var it=f.isFunction($)?$.call(d):$;Reflect.ownKeys(it).forEach(At=>{Oi(At,it[At])})}ae&&Ba(ae,i,"c");function xe(At,Nt){f.isArray(Nt)?Nt.forEach(sn=>At(sn.bind(d))):Nt&&At(Nt.bind(d))}if(xe(Ni,Re),xe(mi,Q),xe(_i,ve),xe(Zr,Ce),xe(pr,lt),xe(Zn,mt),xe(re,De),xe(x,rt),xe(ro,Ze),xe(bi,se),xe(no,Ge),xe(ji,bt),f.isArray(yt))if(yt.length){var St=i.exposed||(i.exposed={});yt.forEach(At=>{Object.defineProperty(St,At,{get:()=>d[At],set:Nt=>d[At]=Nt})})}else i.exposed||(i.exposed={});Me&&i.render===f.NOOP&&(i.render=Me),Bt!=null&&(i.inheritAttrs=Bt),jt&&(i.components=jt),ut&&(i.directives=ut);var It=i.appContext.config.globalProperties.$applyOptions;It&&It(l,i,d)}function ta(i,l){var d=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1;f.isArray(i)&&(i=br(i));var v=function(w){var I=i[w],L=void 0;f.isObject(I)?"default"in I?L=hi(I.from||w,I.default,!0):L=hi(I.from||w):L=hi(I),P.isRef(L)&&d?Object.defineProperty(l,w,{enumerable:!0,configurable:!0,get:()=>L.value,set:$=>L.value=$}):l[w]=L};for(var y in i)v(y)}function Ba(i,l,d){q(f.isArray(i)?i.map(v=>v.bind(l.proxy)):i.bind(l.proxy),l,d)}function ur(i,l,d,v){var y=v.includes(".")?Kr(d,v):()=>d[v];if(f.isString(i)){var w=l[i];f.isFunction(w)&&we(y,w)}else if(f.isFunction(i))we(y,i.bind(d));else if(f.isObject(i))if(f.isArray(i))i.forEach(L=>ur(L,l,d,v));else{var I=f.isFunction(i.handler)?i.handler.bind(d):l[i.handler];f.isFunction(I)&&we(y,I,i)}}function _r(i){var l=i.type,{mixins:d,extends:v}=l,{mixins:y,optionsCache:w,config:{optionMergeStrategies:I}}=i.appContext,L=w.get(l),$;return L?$=L:!y.length&&!d&&!v?$=l:($={},y.length&&y.forEach(te=>na($,te,I,!0)),na($,l,I)),w.set(l,$),$}function na(i,l,d){var v=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,{mixins:y,extends:w}=l;w&&na(i,w,d,!0),y&&y.forEach($=>na(i,$,d,!0));for(var I in l)if(!(v&&I==="expose")){var L=Ma[I]||d&&d[I];i[I]=L?L(i[I],l[I]):l[I]}return i}var Ma={data:Vr,props:Lo,emits:Lo,methods:Lo,computed:Lo,beforeCreate:Xn,created:Xn,beforeMount:Xn,mounted:Xn,beforeUpdate:Xn,updated:Xn,beforeDestroy:Xn,beforeUnmount:Xn,destroyed:Xn,unmounted:Xn,activated:Xn,deactivated:Xn,errorCaptured:Xn,serverPrefetch:Xn,components:Lo,directives:Lo,watch:Ss,provide:Vr,inject:La};function Vr(i,l){return l?i?function(){return f.extend(f.isFunction(i)?i.call(this,this):i,f.isFunction(l)?l.call(this,this):l)}:l:i}function La(i,l){return Lo(br(i),br(l))}function br(i){if(f.isArray(i)){for(var l={},d=0;d<i.length;d++)l[i[d]]=i[d];return l}return i}function Xn(i,l){return i?[...new Set([].concat(i,l))]:l}function Lo(i,l){return i?f.extend(f.extend(Object.create(null),i),l):l}function Ss(i,l){if(!i)return l;if(!l)return i;var d=f.extend(Object.create(null),i);for(var v in l)d[v]=Xn(i[v],l[v]);return d}function zo(i,l,d){var v=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,y={},w={};f.def(w,lo,1),i.propsDefaults=Object.create(null),zn(i,l,y,w);for(var I in i.propsOptions[0])I in y||(y[I]=void 0);d?i.props=v?y:P.shallowReactive(y):i.type.props?i.props=y:i.props=w,i.attrs=w}function is(i,l,d,v){var{props:y,attrs:w,vnode:{patchFlag:I}}=i,L=P.toRaw(y),[$]=i.propsOptions,te=!1;if((v||I>0)&&!(I&16)){if(I&8)for(var ae=i.vnode.dynamicProps,Re=0;Re<ae.length;Re++){var Q=ae[Re];if(!Cn(i.emitsOptions,Q)){var ve=l[Q];if($)if(f.hasOwn(w,Q))ve!==w[Q]&&(w[Q]=ve,te=!0);else{var Ce=f.camelize(Q);y[Ce]=_a($,L,Ce,ve,i,!1)}else ve!==w[Q]&&(w[Q]=ve,te=!0)}}}else{zn(i,l,y,w)&&(te=!0);var lt;for(var mt in L)(!l||!f.hasOwn(l,mt)&&((lt=f.hyphenate(mt))===mt||!f.hasOwn(l,lt)))&&($?d&&(d[mt]!==void 0||d[lt]!==void 0)&&(y[mt]=_a($,L,mt,void 0,i,!0)):delete y[mt]);if(w!==L)for(var _e in w)(!l||!f.hasOwn(l,_e)&&!0)&&(delete w[_e],te=!0)}te&&P.trigger(i,"set","$attrs")}function zn(i,l,d,v){var[y,w]=i.propsOptions,I=!1,L;if(l){for(var $ in l)if(!f.isReservedProp($)){var te=l[$],ae=void 0;y&&f.hasOwn(y,ae=f.camelize($))?!w||!w.includes(ae)?d[ae]=te:(L||(L={}))[ae]=te:Cn(i.emitsOptions,$)||(!($ in v)||te!==v[$])&&(v[$]=te,I=!0)}}if(w)for(var Re=P.toRaw(d),Q=L||f.EMPTY_OBJ,ve=0;ve<w.length;ve++){var Ce=w[ve];d[Ce]=_a(y,Re,Ce,Q[Ce],i,!f.hasOwn(Q,Ce))}return I}function _a(i,l,d,v,y,w){var I=i[d];if(I!=null){var L=f.hasOwn(I,"default");if(L&&v===void 0){var $=I.default;if(I.type!==Function&&f.isFunction($)){var{propsDefaults:te}=y;d in te?v=te[d]:(Ir(y),v=te[d]=$.call(null,l),Wi())}else v=$}I[0]&&(w&&!L?v=!1:I[1]&&(v===""||v===f.hyphenate(d))&&(v=!0))}return v}function Wo(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,v=l.propsCache,y=v.get(i);if(y)return y;var w=i.props,I={},L=[],$=!1;if(!f.isFunction(i)){var te=be=>{$=!0;var[Ge,Me]=Wo(be,l,!0);f.extend(I,Ge),Me&&L.push(...Me)};!d&&l.mixins.length&&l.mixins.forEach(te),i.extends&&te(i.extends),i.mixins&&i.mixins.forEach(te)}if(!w&&!$)return v.set(i,f.EMPTY_ARR),f.EMPTY_ARR;if(f.isArray(w))for(var ae=0;ae<w.length;ae++){var Re=f.camelize(w[ae]);ki(Re)&&(I[Re]=f.EMPTY_OBJ)}else if(w)for(var Q in w){var ve=f.camelize(Q);if(ki(ve)){var Ce=w[Q],lt=I[ve]=f.isArray(Ce)||f.isFunction(Ce)?{type:Ce}:Ce;if(lt){var mt=oo(Boolean,lt.type),_e=oo(String,lt.type);lt[0]=mt>-1,lt[1]=_e<0||mt<_e,(mt>-1||f.hasOwn(lt,"default"))&&L.push(ve)}}}var se=[I,L];return v.set(i,se),se}function ki(i){return i[0]!=="$"}function ba(i){var l=i&&i.toString().match(/^\s*function (\w+)/);return l?l[1]:i===null?"null":""}function Da(i,l){return ba(i)===ba(l)}function oo(i,l){return f.isArray(l)?l.findIndex(d=>Da(d,i)):f.isFunction(l)&&Da(l,i)?0:-1}var ra=i=>i[0]==="_"||i==="$stable",yo=i=>f.isArray(i)?i.map(An):[An(i)],zi=(i,l,d)=>{if(l._n)return l;var v=lr(function(){return yo(l(...arguments))},d);return v._c=!1,v},Ea=(i,l,d)=>{var v=i._ctx;for(var y in i)if(!ra(y)){var w=i[y];f.isFunction(w)?l[y]=zi(y,w,v):w!=null&&function(){var I=yo(w);l[y]=()=>I}()}},ia=(i,l)=>{var d=yo(l);i.slots.default=()=>d},ya=(i,l)=>{if(i.vnode.shapeFlag&32){var d=l._;d?(i.slots=P.toRaw(l),f.def(l,"_",d)):Ea(l,i.slots={})}else i.slots={},l&&ia(i,l);f.def(i.slots,lo,1)},oa=(i,l,d)=>{var{vnode:v,slots:y}=i,w=!0,I=f.EMPTY_OBJ;if(v.shapeFlag&32){var L=l._;L?d&&L===1?w=!1:(f.extend(y,l),!d&&L===1&&delete y._):(w=!l.$stable,Ea(l,y)),I=l}else l&&(ia(i,l),I={default:1});if(w)for(var $ in y)!ra($)&&!($ in I)&&delete y[$]};function wa(){return{app:null,config:{isNativeTag:f.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}var As=0;function ao(i,l){return function(v){var y=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null;f.isFunction(v)||(v=Object.assign({},v)),y!=null&&!f.isObject(y)&&(y=null);var w=wa(),I=new Set,L=!1,$=w.app={_uid:As++,_component:v,_props:y,_container:null,_context:w,_instance:null,version:Ca,get config(){return w.config},set config(te){},use(te){for(var ae=arguments.length,Re=new Array(ae>1?ae-1:0),Q=1;Q<ae;Q++)Re[Q-1]=arguments[Q];return I.has(te)||(te&&f.isFunction(te.install)?(I.add(te),te.install($,...Re)):f.isFunction(te)&&(I.add(te),te($,...Re))),$},mixin(te){return w.mixins.includes(te)||w.mixins.push(te),$},component(te,ae){return ae?(w.components[te]=ae,$):w.components[te]},directive(te,ae){return ae?(w.directives[te]=ae,$):w.directives[te]},mount(te,ae,Re){if(!L){var Q=_n(v,y);return Q.appContext=w,ae&&l?l(Q,te):i(Q,te,Re),L=!0,$._container=te,te.__vue_app__=$,$._instance=Q.component,Pt(Q.component)||Q.component.proxy}},unmount(){L&&(i(null,$._container),delete $._container.__vue_app__)},provide(te,ae){return w.provides[te]=ae,$}};return $}}function li(i,l,d,v){var y=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1;if(f.isArray(i)){i.forEach((lt,mt)=>li(lt,l&&(f.isArray(l)?l[mt]:l),d,v,y));return}if(!(Ii(v)&&!y)){var w=v.shapeFlag&4?Pt(v.component)||v.component.proxy:v.el,I=y?null:w,{i:L,r:$}=i,te=l&&l.r,ae=L.refs===f.EMPTY_OBJ?L.refs={}:L.refs,Re=L.setupState;if(te!=null&&te!==$&&(f.isString(te)?(ae[te]=null,f.hasOwn(Re,te)&&(Re[te]=null)):P.isRef(te)&&(te.value=null)),f.isFunction($))at($,L,12,[I,ae]);else{var Q=f.isString($),ve=P.isRef($);if(Q||ve){var Ce=()=>{if(i.f){var lt=Q?ae[$]:$.value;y?f.isArray(lt)&&f.remove(lt,w):f.isArray(lt)?lt.includes(w)||lt.push(w):Q?(ae[$]=[w],f.hasOwn(Re,$)&&(Re[$]=ae[$])):($.value=[w],i.k&&(ae[i.k]=$.value))}else Q?(ae[$]=I,f.hasOwn(Re,$)&&(Re[$]=I)):ve&&($.value=I,i.k&&(ae[i.k]=I))};I?(Ce.id=-1,k(Ce,d)):Ce()}}}}var Ri=!1,so=i=>/svg/.test(i.namespaceURI)&&i.tagName!=="foreignObject",aa=i=>i.nodeType===8;function m(i){var{mt:l,p:d,o:{patchProp:v,createText:y,nextSibling:w,parentNode:I,remove:L,insert:$,createComment:te}}=i,ae=(_e,se)=>{if(!se.hasChildNodes()){d(null,_e,se),Wr(),se._vnode=_e;return}Ri=!1,Re(se.firstChild,_e,null,null,null),Wr(),se._vnode=_e,Ri&&console.error("Hydration completed but contains mismatches.")},Re=function(_e,se,be,Ge,Me){var rt=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1,Ze=aa(_e)&&_e.data==="[",De=()=>lt(_e,se,be,Ge,Me,Ze),{type:bt,ref:yt,shapeFlag:Bt,patchFlag:jt}=se,ut=_e.nodeType;se.el=_e,jt===-2&&(rt=!1,se.dynamicChildren=null);var D=null;switch(bt){case st:ut!==3?se.children===""?($(se.el=y("",_e.parentNode),I(_e),_e),D=_e):D=De():(_e.data!==se.children&&(Ri=!0,_e.data=se.children),D=w(_e));break;case Ft:ut!==8||Ze?D=De():D=w(_e);break;case ht:if(ut!==1&&ut!==3)D=De();else{D=_e;for(var K=!se.children.length,le=0;le<se.staticCount;le++)K&&(se.children+=D.nodeType===1?D.outerHTML:D.data),le===se.staticCount-1&&(se.anchor=D),D=w(D);return D}break;case ze:Ze?D=Ce(_e,se,be,Ge,Me,rt):D=De();break;default:if(Bt&1)ut!==1||se.type.toLowerCase()!==_e.tagName.toLowerCase()?D=De():D=Q(_e,se,be,Ge,Me,rt);else if(Bt&6){se.slotScopeIds=Me;var ue=I(_e);if(l(se,ue,null,be,Ge,so(ue),rt),D=Ze?mt(_e):w(_e),D&&aa(D)&&D.data==="teleport end"&&(D=w(D)),Ii(se)){var Pe;Ze?(Pe=_n(ze),Pe.anchor=D?D.previousSibling:ue.lastChild):Pe=_e.nodeType===3?Vo(""):_n("div"),Pe.el=_e,se.component.subTree=Pe}}else Bt&64?ut!==8?D=De():D=se.type.hydrate(_e,se,be,Ge,Me,rt,i,ve):Bt&128&&(D=se.type.hydrate(_e,se,be,Ge,so(I(_e)),Me,rt,i,Re))}return yt!=null&&li(yt,null,Ge,se),D},Q=(_e,se,be,Ge,Me,rt)=>{rt=rt||!!se.dynamicChildren;var{type:Ze,props:De,patchFlag:bt,shapeFlag:yt,dirs:Bt}=se,jt=Ze==="input"&&Bt||Ze==="option";if(jt||bt!==-1){if(Bt&&H(se,null,be,"created"),De)if(jt||!rt||bt&(16|32))for(var ut in De)(jt&&ut.endsWith("value")||f.isOn(ut)&&!f.isReservedProp(ut))&&v(_e,ut,null,De[ut],!1,void 0,be);else De.onClick&&v(_e,"onClick",null,De.onClick,!1,void 0,be);var D;if((D=De&&De.onVnodeBeforeMount)&&Ur(D,be,se),Bt&&H(se,null,be,"beforeMount"),((D=De&&De.onVnodeMounted)||Bt)&&ii(()=>{D&&Ur(D,be,se),Bt&&H(se,null,be,"mounted")},Ge),yt&16&&!(De&&(De.innerHTML||De.textContent)))for(var K=ve(_e.firstChild,se,_e,be,Ge,Me,rt);K;){Ri=!0;var le=K;K=K.nextSibling,L(le)}else yt&8&&_e.textContent!==se.children&&(Ri=!0,_e.textContent=se.children)}return _e.nextSibling},ve=(_e,se,be,Ge,Me,rt,Ze)=>{Ze=Ze||!!se.dynamicChildren;for(var De=se.children,bt=De.length,yt=0;yt<bt;yt++){var Bt=Ze?De[yt]:De[yt]=An(De[yt]);if(_e)_e=Re(_e,Bt,Ge,Me,rt,Ze);else{if(Bt.type===st&&!Bt.children)continue;Ri=!0,d(null,Bt,be,null,Ge,Me,so(be),rt)}}return _e},Ce=(_e,se,be,Ge,Me,rt)=>{var{slotScopeIds:Ze}=se;Ze&&(Me=Me?Me.concat(Ze):Ze);var De=I(_e),bt=ve(w(_e),se,De,be,Ge,Me,rt);return bt&&aa(bt)&&bt.data==="]"?w(se.anchor=bt):(Ri=!0,$(se.anchor=te("]",De),De,bt),bt)},lt=(_e,se,be,Ge,Me,rt)=>{if(Ri=!0,se.el=null,rt)for(var Ze=mt(_e);;){var De=w(_e);if(De&&De!==Ze)L(De);else break}var bt=w(_e),yt=I(_e);return L(_e),d(null,se,yt,bt,be,Ge,so(yt),Me),bt},mt=_e=>{for(var se=0;_e;)if(_e=w(_e),_e&&aa(_e)&&(_e.data==="["&&se++,_e.data==="]")){if(se===0)return w(_e);se--}return _e};return[ae,Re]}var k=ii;function z(i){return Z(i)}function j(i){return Z(i,m)}function Z(i,l){var d=f.getGlobalThis();d.__VUE__=!0;var{insert:v,remove:y,patchProp:w,forcePatchProp:I,createElement:L,createText:$,createComment:te,setText:ae,setElementText:Re,parentNode:Q,nextSibling:ve,setScopeId:Ce=f.NOOP,cloneNode:lt,insertStaticContent:mt}=i,_e=function(G,ie,ye){var Oe=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null,Fe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,Xe=arguments.length>5&&arguments[5]!==void 0?arguments[5]:null,ct=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,qe=arguments.length>7&&arguments[7]!==void 0?arguments[7]:null,Qe=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!!ie.dynamicChildren;if(G!==ie){G&&!Er(G,ie)&&(Oe=bn(G),St(G,Fe,Xe,!0),G=null),ie.patchFlag===-2&&(Qe=!1,ie.dynamicChildren=null);var{type:Ue,ref:kt,shapeFlag:Lt}=ie;switch(Ue){case st:se(G,ie,ye,Oe);break;case Ft:be(G,ie,ye,Oe);break;case ht:G==null&&Ge(ie,ye,Oe,ct);break;case ze:D(G,ie,ye,Oe,Fe,Xe,ct,qe,Qe);break;default:Lt&1?Ze(G,ie,ye,Oe,Fe,Xe,ct,qe,Qe):Lt&6?K(G,ie,ye,Oe,Fe,Xe,ct,qe,Qe):(Lt&64||Lt&128)&&Ue.process(G,ie,ye,Oe,Fe,Xe,ct,qe,Qe,er)}kt!=null&&Fe&&li(kt,G&&G.ref,Xe,ie||G,!ie)}},se=(G,ie,ye,Oe)=>{if(G==null)v(ie.el=$(ie.children,ye),ye,Oe);else{var Fe=ie.el=G.el;ie.children!==G.children&&ae(Fe,ie.children)}},be=(G,ie,ye,Oe)=>{G==null?v(ie.el=te(ie.children||"",ye),ye,Oe):ie.el=G.el},Ge=(G,ie,ye,Oe)=>{[G.el,G.anchor]=mt(G.children,ie,ye,Oe,G.el,G.anchor)},Me=(G,ie,ye)=>{for(var{el:Oe,anchor:Fe}=G,Xe;Oe&&Oe!==Fe;)Xe=ve(Oe),v(Oe,ie,ye),Oe=Xe;v(Fe,ie,ye)},rt=G=>{for(var{el:ie,anchor:ye}=G,Oe;ie&&ie!==ye;)Oe=ve(ie),y(ie),ie=Oe;y(ye)},Ze=(G,ie,ye,Oe,Fe,Xe,ct,qe,Qe)=>{ct=ct||ie.type==="svg",G==null?De(ie,ye,Oe,Fe,Xe,ct,qe,Qe):Bt(G,ie,Fe,Xe,ct,qe,Qe)},De=(G,ie,ye,Oe,Fe,Xe,ct,qe)=>{var Qe,Ue,{type:kt,props:Lt,shapeFlag:Dt,transition:rn,patchFlag:Hr,dirs:Yn}=G;if(G.el&&lt!==void 0&&Hr===-1)Qe=G.el=lt(G.el);else{if(Qe=G.el=L(G.type,ie),Dt&8?Re(Qe,G.children):Dt&16&&yt(G.children,Qe,null,Oe,Fe,Xe&&kt!=="foreignObject",ct,qe),Yn&&H(G,null,Oe,"created"),Lt){for(var jr in Lt)jr!=="value"&&!f.isReservedProp(jr)&&w(Qe,jr,null,Lt[jr],Xe,G.children,Oe,Fe,sn);"value"in Lt&&w(Qe,"value",null,Lt.value),(Ue=Lt.onVnodeBeforeMount)&&Ur(Ue,Oe,G)}bt(Qe,G,G.scopeId,ct,Oe)}Object.defineProperty(Qe,"__vueParentComponent",{value:Oe,enumerable:!1}),Yn&&H(G,null,Oe,"beforeMount");var zr=(!Fe||Fe&&!Fe.pendingBranch)&&rn&&!rn.persisted;zr&&rn.beforeEnter(Qe),v(Qe,ie,ye),((Ue=Lt&&Lt.onVnodeMounted)||zr||Yn)&&k(()=>{Ue&&Ur(Ue,Oe,G),zr&&rn.enter(Qe),Yn&&H(G,null,Oe,"mounted")},Fe)},bt=(G,ie,ye,Oe,Fe)=>{if(ye&&Ce(G,ye),Oe)for(var Xe=0;Xe<Oe.length;Xe++)Ce(G,Oe[Xe]);if(Fe){var ct=Fe.subTree;if(ie===ct){var qe=Fe.vnode;bt(G,qe,qe.scopeId,qe.slotScopeIds,Fe.parent)}}},yt=function(G,ie,ye,Oe,Fe,Xe,ct,qe){for(var Qe=arguments.length>8&&arguments[8]!==void 0?arguments[8]:0,Ue=Qe;Ue<G.length;Ue++){var kt=G[Ue]=qe?Qr(G[Ue]):An(G[Ue]);_e(null,kt,ie,ye,Oe,Fe,Xe,ct,qe)}},Bt=(G,ie,ye,Oe,Fe,Xe,ct)=>{var qe=ie.el=G.el,{patchFlag:Qe,dynamicChildren:Ue,dirs:kt}=ie;Qe|=G.patchFlag&16;var Lt=G.props||f.EMPTY_OBJ,Dt=ie.props||f.EMPTY_OBJ,rn;ye&&ee(ye,!1),(rn=Dt.onVnodeBeforeUpdate)&&Ur(rn,ye,ie,G),kt&&H(ie,G,ye,"beforeUpdate"),ye&&ee(ye,!0);var Hr=Fe&&ie.type!=="foreignObject";if(Ue?jt(G.dynamicChildren,Ue,qe,ye,Oe,Hr,Xe):ct||ft(G,ie,qe,null,ye,Oe,Hr,Xe,!1),Qe>0){if(Qe&16)ut(qe,ie,Lt,Dt,ye,Oe,Fe);else if(Qe&2&&Lt.class!==Dt.class&&w(qe,"class",null,Dt.class,Fe),Qe&4&&w(qe,"style",Lt.style,Dt.style,Fe),Qe&8)for(var Yn=ie.dynamicProps,jr=0;jr<Yn.length;jr++){var zr=Yn[jr],qi=Lt[zr],hs=Dt[zr];(hs!==qi||zr==="value"||I&&I(qe,zr))&&w(qe,zr,qi,hs,Fe,G.children,ye,Oe,sn)}Qe&1&&G.children!==ie.children&&Re(qe,ie.children)}else!ct&&Ue==null&&ut(qe,ie,Lt,Dt,ye,Oe,Fe);((rn=Dt.onVnodeUpdated)||kt)&&k(()=>{rn&&Ur(rn,ye,ie,G),kt&&H(ie,G,ye,"updated")},Oe)},jt=(G,ie,ye,Oe,Fe,Xe,ct)=>{for(var qe=0;qe<ie.length;qe++){var Qe=G[qe],Ue=ie[qe],kt=Qe.el&&(Qe.type===ze||!Er(Qe,Ue)||Qe.shapeFlag&(6|64))?Q(Qe.el):ye;_e(Qe,Ue,kt,null,Oe,Fe,Xe,ct,!0)}},ut=(G,ie,ye,Oe,Fe,Xe,ct)=>{if(ye!==Oe){for(var qe in Oe)if(!f.isReservedProp(qe)){var Qe=Oe[qe],Ue=ye[qe];(Qe!==Ue&&qe!=="value"||I&&I(G,qe))&&w(G,qe,Ue,Qe,ct,ie.children,Fe,Xe,sn)}if(ye!==f.EMPTY_OBJ)for(var kt in ye)!f.isReservedProp(kt)&&!(kt in Oe)&&w(G,kt,ye[kt],null,ct,ie.children,Fe,Xe,sn);"value"in Oe&&w(G,"value",ye.value,Oe.value)}},D=(G,ie,ye,Oe,Fe,Xe,ct,qe,Qe)=>{var Ue=ie.el=G?G.el:$("",ye),kt=ie.anchor=G?G.anchor:$("",ye),{patchFlag:Lt,dynamicChildren:Dt,slotScopeIds:rn}=ie;rn&&(qe=qe?qe.concat(rn):rn),G==null?(v(Ue,ye,Oe),v(kt,ye,Oe),yt(ie.children,ye,kt,Fe,Xe,ct,qe,Qe)):Lt>0&&Lt&64&&Dt&&G.dynamicChildren?(jt(G.dynamicChildren,Dt,ye,Fe,Xe,ct,qe),(ie.key!=null||Fe&&ie===Fe.subTree)&&ce(G,ie,!0)):ft(G,ie,ye,kt,Fe,Xe,ct,qe,Qe)},K=(G,ie,ye,Oe,Fe,Xe,ct,qe,Qe)=>{ie.slotScopeIds=qe,G==null?ie.shapeFlag&512?Fe.ctx.activate(ie,ye,Oe,ct,Qe):le(ie,ye,Oe,Fe,Xe,ct,Qe):ue(G,ie,Qe)},le=(G,ie,ye,Oe,Fe,Xe,ct)=>{var qe=G.component=Fn(G,Oe,Fe);if(to(G)&&(qe.ctx.renderer=er),Sa(qe),qe.asyncDep){if(Fe&&Fe.registerDep(qe,Pe),!G.el){var Qe=qe.subTree=_n(Ft);be(null,Qe,ie,ye)}return}if(Pe(qe,G,ie,ye,Fe,Xe,ct),qe.$wxsModules){var Ue=N.resolveOwnerEl(qe);if(Ue){Ue.setAttribute(N.ATTR_V_OWNER_ID,qe.uid);var{$renderjsModules:kt}=qe.type;kt&&Ue.setAttribute(N.ATTR_V_RENDERJS,kt)}}},ue=(G,ie,ye)=>{var Oe=ie.component=G.component;if(vo(G,ie,ye))if(Oe.asyncDep&&!Oe.asyncResolved){et(Oe,ie,ye);return}else Oe.next=ie,sr(Oe.update),Oe.update();else ie.el=G.el,Oe.vnode=ie},Pe=(G,ie,ye,Oe,Fe,Xe,ct)=>{var qe=()=>{if(G.isMounted){var{next:kr,bu:xs,u:Bs,parent:ho,vnode:qa}=G,gs=kr,Ia;ee(G,!1),kr?(kr.el=qa.el,et(G,kr,ct)):kr=qa,xs&&f.invokeArrayFns(xs),(Ia=kr.props&&kr.props.onVnodeBeforeUpdate)&&Ur(Ia,ho,kr,qa),ee(G,!0);var Ka=Sr(G),go=G.subTree;G.subTree=Ka,_e(go,Ka,Q(go.el),bn(go),G,Fe,Xe),kr.el=Ka.el,gs===null&&cr(G,Ka.el),Bs&&k(Bs,Fe),(Ia=kr.props&&kr.props.onVnodeUpdated)&&k(()=>Ur(Ia,ho,kr,qa),Fe)}else{var kt,{el:Lt,props:Dt}=ie,{bm:rn,m:Hr,parent:Yn}=G,jr=Ii(ie);if(ee(G,!1),rn&&f.invokeArrayFns(rn),!jr&&(kt=Dt&&Dt.onVnodeBeforeMount)&&Ur(kt,Yn,ie),ee(G,!0),Lt&&Ko){var zr=()=>{G.subTree=Sr(G),Ko(Lt,G.subTree,G,Fe,null)};jr?ie.type.__asyncLoader().then(()=>!G.isUnmounted&&zr()):zr()}else{var qi=G.subTree=Sr(G);_e(null,qi,ye,Oe,G,Fe,Xe),ie.el=qi.el}if(Hr&&k(Hr,Fe),!jr&&(kt=Dt&&Dt.onVnodeMounted)){var hs=ie;k(()=>Ur(kt,Yn,hs),Fe)}(ie.shapeFlag&256||Yn&&Ii(Yn.vnode)&&Yn.vnode.shapeFlag&256)&&G.a&&k(G.a,Fe),G.isMounted=!0,ie=ye=Oe=null}},Qe=G.effect=new P.ReactiveEffect(qe,()=>Xt(Ue),G.scope),Ue=G.update=()=>Qe.run();Ue.id=G.uid,ee(G,!0),Ue()},et=(G,ie,ye)=>{ie.component=G;var Oe=G.vnode.props;G.vnode=ie,G.next=null,is(G,ie.props,Oe,ye),oa(G,ie.children,ye),P.pauseTracking(),wr(void 0,G.update),P.resetTracking()},ft=function(G,ie,ye,Oe,Fe,Xe,ct,qe){var Qe=arguments.length>8&&arguments[8]!==void 0?arguments[8]:!1,Ue=G&&G.children,kt=G?G.shapeFlag:0,Lt=ie.children,{patchFlag:Dt,shapeFlag:rn}=ie;if(Dt>0){if(Dt&128){it(Ue,Lt,ye,Oe,Fe,Xe,ct,qe,Qe);return}else if(Dt&256){Ke(Ue,Lt,ye,Oe,Fe,Xe,ct,qe,Qe);return}}rn&8?(kt&16&&sn(Ue,Fe,Xe),Lt!==Ue&&Re(ye,Lt)):kt&16?rn&16?it(Ue,Lt,ye,Oe,Fe,Xe,ct,qe,Qe):sn(Ue,Fe,Xe,!0):(kt&8&&Re(ye,""),rn&16&&yt(Lt,ye,Oe,Fe,Xe,ct,qe,Qe))},Ke=(G,ie,ye,Oe,Fe,Xe,ct,qe,Qe)=>{G=G||f.EMPTY_ARR,ie=ie||f.EMPTY_ARR;var Ue=G.length,kt=ie.length,Lt=Math.min(Ue,kt),Dt;for(Dt=0;Dt<Lt;Dt++){var rn=ie[Dt]=Qe?Qr(ie[Dt]):An(ie[Dt]);_e(G[Dt],rn,ye,null,Fe,Xe,ct,qe,Qe)}Ue>kt?sn(G,Fe,Xe,!0,!1,Lt):yt(ie,ye,Oe,Fe,Xe,ct,qe,Qe,Lt)},it=(G,ie,ye,Oe,Fe,Xe,ct,qe,Qe)=>{for(var Ue=0,kt=ie.length,Lt=G.length-1,Dt=kt-1;Ue<=Lt&&Ue<=Dt;){var rn=G[Ue],Hr=ie[Ue]=Qe?Qr(ie[Ue]):An(ie[Ue]);if(Er(rn,Hr))_e(rn,Hr,ye,null,Fe,Xe,ct,qe,Qe);else break;Ue++}for(;Ue<=Lt&&Ue<=Dt;){var Yn=G[Lt],jr=ie[Dt]=Qe?Qr(ie[Dt]):An(ie[Dt]);if(Er(Yn,jr))_e(Yn,jr,ye,null,Fe,Xe,ct,qe,Qe);else break;Lt--,Dt--}if(Ue>Lt){if(Ue<=Dt)for(var zr=Dt+1,qi=zr<kt?ie[zr].el:Oe;Ue<=Dt;)_e(null,ie[Ue]=Qe?Qr(ie[Ue]):An(ie[Ue]),ye,qi,Fe,Xe,ct,qe,Qe),Ue++}else if(Ue>Dt)for(;Ue<=Lt;)St(G[Ue],Fe,Xe,!0),Ue++;else{var hs=Ue,kr=Ue,xs=new Map;for(Ue=kr;Ue<=Dt;Ue++){var Bs=ie[Ue]=Qe?Qr(ie[Ue]):An(ie[Ue]);Bs.key!=null&&xs.set(Bs.key,Ue)}var ho,qa=0,gs=Dt-kr+1,Ia=!1,Ka=0,go=new Array(gs);for(Ue=0;Ue<gs;Ue++)go[Ue]=0;for(Ue=hs;Ue<=Lt;Ue++){var Oo=G[Ue];if(qa>=gs){St(Oo,Fe,Xe,!0);continue}var Na=void 0;if(Oo.key!=null)Na=xs.get(Oo.key);else for(ho=kr;ho<=Dt;ho++)if(go[ho-kr]===0&&Er(Oo,ie[ho])){Na=ho;break}Na===void 0?St(Oo,Fe,Xe,!0):(go[Na-kr]=Ue+1,Na>=Ka?Ka=Na:Ia=!0,_e(Oo,ie[Na],ye,null,Fe,Xe,ct,qe,Qe),qa++)}var ql=Ia?Ee(go):f.EMPTY_ARR;for(ho=ql.length-1,Ue=gs-1;Ue>=0;Ue--){var Kl=kr+Ue,wl=ie[Kl],Ja=Kl+1<kt?ie[Kl+1].el:Oe;go[Ue]===0?_e(null,wl,ye,Ja,Fe,Xe,ct,qe,Qe):Ia&&(ho<0||Ue!==ql[ho]?xe(wl,ye,Ja,2):ho--)}}},xe=function(G,ie,ye,Oe){var Fe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,{el:Xe,type:ct,transition:qe,children:Qe,shapeFlag:Ue}=G;if(Ue&6){xe(G.component.subTree,ie,ye,Oe);return}if(Ue&128){G.suspense.move(ie,ye,Oe);return}if(Ue&64){ct.move(G,ie,ye,er);return}if(ct===ze){v(Xe,ie,ye);for(var kt=0;kt<Qe.length;kt++)xe(Qe[kt],ie,ye,Oe);v(G.anchor,ie,ye);return}if(ct===ht){Me(G,ie,ye);return}var Lt=Oe!==2&&Ue&1&&qe;if(Lt)if(Oe===0)qe.beforeEnter(Xe),v(Xe,ie,ye),k(()=>qe.enter(Xe),Fe);else{var{leave:Dt,delayLeave:rn,afterLeave:Hr}=qe,Yn=()=>v(Xe,ie,ye),jr=()=>{Dt(Xe,()=>{Yn(),Hr&&Hr()})};rn?rn(Xe,Yn,jr):jr()}else v(Xe,ie,ye)},St=function(G,ie,ye){var Oe=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,Fe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,{type:Xe,props:ct,ref:qe,children:Qe,dynamicChildren:Ue,shapeFlag:kt,patchFlag:Lt,dirs:Dt}=G;if(qe!=null&&li(qe,null,ye,G,!0),kt&256){ie.ctx.deactivate(G);return}var rn=kt&1&&Dt,Hr=!Ii(G),Yn;if(Hr&&(Yn=ct&&ct.onVnodeBeforeUnmount)&&Ur(Yn,ie,G),kt&6)Nt(G.component,ye,Oe);else{if(kt&128){G.suspense.unmount(ye,Oe);return}rn&&H(G,null,ie,"beforeUnmount"),kt&64?G.type.remove(G,ie,ye,Fe,er,Oe):Ue&&(Xe!==ze||Lt>0&&Lt&64)?sn(Ue,ie,ye,!1,!0):(Xe===ze&&Lt&(128|256)||!Fe&&kt&16)&&sn(Qe,ie,ye),Oe&&It(G)}(Hr&&(Yn=ct&&ct.onVnodeUnmounted)||rn)&&k(()=>{Yn&&Ur(Yn,ie,G),rn&&H(G,null,ie,"unmounted")},ye)},It=G=>{var{type:ie,el:ye,anchor:Oe,transition:Fe}=G;if(ie===ze){At(ye,Oe);return}if(ie===ht){rt(G);return}var Xe=()=>{y(ye),Fe&&!Fe.persisted&&Fe.afterLeave&&Fe.afterLeave()};if(G.shapeFlag&1&&Fe&&!Fe.persisted){var{leave:ct,delayLeave:qe}=Fe,Qe=()=>ct(ye,Xe);qe?qe(G.el,Xe,Qe):Qe()}else Xe()},At=(G,ie)=>{for(var ye;G!==ie;)ye=ve(G),y(G),G=ye;y(ie)},Nt=(G,ie,ye)=>{var{bum:Oe,scope:Fe,update:Xe,subTree:ct,um:qe}=G;Oe&&f.invokeArrayFns(Oe),Fe.stop(),Xe&&(Xe.active=!1,St(ct,G,ie,ye)),qe&&k(qe,ie),k(()=>{G.isUnmounted=!0},ie),ie&&ie.pendingBranch&&!ie.isUnmounted&&G.asyncDep&&!G.asyncResolved&&G.suspenseId===ie.pendingId&&(ie.deps--,ie.deps===0&&ie.resolve())},sn=function(G,ie,ye){for(var Oe=arguments.length>3&&arguments[3]!==void 0?arguments[3]:!1,Fe=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!1,Xe=arguments.length>5&&arguments[5]!==void 0?arguments[5]:0,ct=Xe;ct<G.length;ct++)St(G[ct],ie,ye,Oe,Fe)},bn=G=>G.shapeFlag&6?bn(G.component.subTree):G.shapeFlag&128?G.suspense.next():ve(G.anchor||G.el),tr=(G,ie,ye)=>{G==null?ie._vnode&&St(ie._vnode,null,null,!0):_e(ie._vnode||null,G,ie,null,null,null,ye),Wr(),ie._vnode=G},er={p:_e,um:St,m:xe,r:It,mt:le,mc:yt,pc:ft,pbc:jt,n:bn,o:i},Co,Ko;return l&&([Co,Ko]=l(er)),{render:tr,hydrate:Co,createApp:ao(tr,Co)}}function ee(i,l){var{effect:d,update:v}=i;d.allowRecurse=v.allowRecurse=l}function ce(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,v=i.children,y=l.children;if(f.isArray(v)&&f.isArray(y))for(var w=0;w<v.length;w++){var I=v[w],L=y[w];L.shapeFlag&1&&!L.dynamicChildren&&((L.patchFlag<=0||L.patchFlag===32)&&(L=y[w]=Qr(y[w]),L.el=I.el),d||ce(I,L))}}function Ee(i){var l=i.slice(),d=[0],v,y,w,I,L,$=i.length;for(v=0;v<$;v++){var te=i[v];if(te!==0){if(y=d[d.length-1],i[y]<te){l[v]=y,d.push(v);continue}for(w=0,I=d.length-1;w<I;)L=w+I>>1,i[d[L]]<te?w=L+1:I=L;te<i[d[w]]&&(w>0&&(l[v]=d[w-1]),d[w]=v)}}for(w=d.length,I=d[w-1];w-- >0;)d[w]=I,I=l[I];return d}var Te=i=>i.__isTeleport,Ie=i=>i&&(i.disabled||i.disabled===""),me=i=>typeof SVGElement!="undefined"&&i instanceof SVGElement,Be=(i,l)=>{var d=i&&i.to;if(f.isString(d))if(l){var v=l(d);return v}else return null;else return d},nt={__isTeleport:!0,process(i,l,d,v,y,w,I,L,$,te){var{mc:ae,pc:Re,pbc:Q,o:{insert:ve,querySelector:Ce,createText:lt,createComment:mt}}=te,_e=Ie(l.props),{shapeFlag:se,children:be,dynamicChildren:Ge}=l;if(i==null){var Me=l.el=lt("",d),rt=l.anchor=lt("",d);ve(Me,d,v),ve(rt,d,v);var Ze=l.target=Be(l.props,Ce),De=l.targetAnchor=lt("",d);Ze&&(ve(De,Ze),I=I||me(Ze));var bt=(ue,Pe)=>{se&16&&ae(be,ue,Pe,y,w,I,L,$)};_e?bt(d,rt):Ze&&bt(Ze,De)}else{l.el=i.el;var yt=l.anchor=i.anchor,Bt=l.target=i.target,jt=l.targetAnchor=i.targetAnchor,ut=Ie(i.props),D=ut?d:Bt,K=ut?yt:jt;if(I=I||me(Bt),Ge?(Q(i.dynamicChildren,Ge,D,y,w,I,L),ce(i,l,!0)):$||Re(i,l,D,K,y,w,I,L,!1),_e)ut||_t(l,d,yt,te,1);else if((l.props&&l.props.to)!==(i.props&&i.props.to)){var le=l.target=Be(l.props,Ce);le&&_t(l,le,null,te,0)}else ut&&_t(l,Bt,jt,te,1)}},remove(i,l,d,v,y,w){var{um:I,o:{remove:L}}=y,{shapeFlag:$,children:te,anchor:ae,targetAnchor:Re,target:Q,props:ve}=i;if(Q&&L(Re),(w||!Ie(ve))&&(L(ae),$&16))for(var Ce=0;Ce<te.length;Ce++){var lt=te[Ce];I(lt,l,d,!0,!!lt.dynamicChildren)}},move:_t,hydrate:Gt};function _t(i,l,d,v){var{o:{insert:y},m:w}=v,I=arguments.length>4&&arguments[4]!==void 0?arguments[4]:2;I===0&&y(i.targetAnchor,l,d);var{el:L,anchor:$,shapeFlag:te,children:ae,props:Re}=i,Q=I===2;if(Q&&y(L,l,d),(!Q||Ie(Re))&&te&16)for(var ve=0;ve<ae.length;ve++)w(ae[ve],l,d,2);Q&&y($,l,d)}function Gt(i,l,d,v,y,w,I,L){var{o:{nextSibling:$,parentNode:te,querySelector:ae}}=I,Re=l.target=Be(l.props,ae);if(Re){var Q=Re._lpa||Re.firstChild;if(l.shapeFlag&16)if(Ie(l.props))l.anchor=L($(i),l,te(i),d,v,y,w),l.targetAnchor=Q;else{l.anchor=$(i);for(var ve=Q;ve;)if(ve=$(ve),ve&&ve.nodeType===8&&ve.data==="teleport anchor"){l.targetAnchor=ve,Re._lpa=l.targetAnchor&&$(l.targetAnchor);break}L(Q,l,Re,d,v,y,w)}}return l.anchor&&$(l.anchor)}var tt=nt,ze=Symbol(void 0),st=Symbol(void 0),Ft=Symbol(void 0),ht=Symbol(void 0),Je=[],Ct=null;function wn(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:!1;Je.push(Ct=i?null:[])}function un(){Je.pop(),Ct=Je[Je.length-1]||null}var nn=1;function Sn(i){nn+=i}function Ht(i){return i.dynamicChildren=nn>0?Ct||f.EMPTY_ARR:null,un(),nn>0&&Ct&&Ct.push(i),i}function Ln(i,l,d,v,y,w){return Ht($t(i,l,d,v,y,w,!0))}function Ei(i,l,d,v,y){return Ht(_n(i,l,d,v,y,!0))}function ir(i){return i?i.__v_isVNode===!0:!1}function Er(i,l){return i.type===l.type&&i.key===l.key}function Do(i){}var lo="__vInternal",$r=i=>{var{key:l}=i;return l!=null?l:null},Fo=i=>{var{ref:l,ref_key:d,ref_for:v}=i;return l!=null?f.isString(l)||P.isRef(l)||f.isFunction(l)?{i:On,r:l,k:d,f:!!v}:l:null};function $t(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,v=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,y=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,w=arguments.length>5&&arguments[5]!==void 0?arguments[5]:i===ze?0:1,I=arguments.length>6&&arguments[6]!==void 0?arguments[6]:!1,L=arguments.length>7&&arguments[7]!==void 0?arguments[7]:!1,$={__v_isVNode:!0,__v_skip:!0,type:i,props:l,key:l&&$r(l),ref:l&&Fo(l),scopeId:di,slotScopeIds:null,children:d,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:w,patchFlag:v,dynamicProps:y,dynamicChildren:null,appContext:null};return L?(ei($,d),w&128&&i.normalize($)):d&&($.shapeFlag|=f.isString(d)?8:16),nn>0&&!I&&Ct&&($.patchFlag>0||w&6)&&$.patchFlag!==32&&Ct.push($),$}var _n=Fa;function Fa(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:null,d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:null,v=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,y=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,w=arguments.length>5&&arguments[5]!==void 0?arguments[5]:!1;if((!i||i===fe)&&(i=Ft),ir(i)){var I=Xr(i,l,!0);return d&&ei(I,d),nn>0&&!w&&Ct&&(I.shapeFlag&6?Ct[Ct.indexOf(i)]=I:Ct.push(I)),I.patchFlag|=-2,I}if(Yi(i)&&(i=i.__vccOpts),l){l=yi(l);var{class:L,style:$}=l;L&&!f.isString(L)&&(l.class=f.normalizeClass(L)),f.isObject($)&&(P.isProxy($)&&!f.isArray($)&&($=f.extend({},$)),l.style=f.normalizeStyle($))}var te=f.isString(i)?1:Ar(i)?128:Te(i)?64:f.isObject(i)?4:f.isFunction(i)?2:0;return $t(i,l,d,v,y,te,w,!0)}function yi(i){return i?P.isProxy(i)||lo in i?f.extend({},i):i:null}function Xr(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,{props:v,ref:y,patchFlag:w,children:I}=i,L=l?Pr(v||{},l):v,$={__v_isVNode:!0,__v_skip:!0,type:i.type,props:L,key:L&&$r(L),ref:l&&l.ref?d&&y?f.isArray(y)?y.concat(Fo(l)):[y,Fo(l)]:Fo(l):y,scopeId:i.scopeId,slotScopeIds:i.slotScopeIds,children:I,target:i.target,targetAnchor:i.targetAnchor,staticCount:i.staticCount,shapeFlag:i.shapeFlag,patchFlag:l&&i.type!==ze?w===-1?16:w|16:w,dynamicProps:i.dynamicProps,dynamicChildren:i.dynamicChildren,appContext:i.appContext,dirs:i.dirs,transition:i.transition,component:i.component,suspense:i.suspense,ssContent:i.ssContent&&Xr(i.ssContent),ssFallback:i.ssFallback&&Xr(i.ssFallback),el:i.el,anchor:i.anchor};return $}function Vo(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:" ",l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0;return _n(st,null,i,l)}function sa(i,l){var d=_n(ht,null,i);return d.staticCount=l,d}function Dn(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"",l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;return l?(wn(),Ei(Ft,null,i)):_n(Ft,null,i)}function An(i){return i==null||typeof i=="boolean"?_n(Ft):f.isArray(i)?_n(ze,null,i.slice()):typeof i=="object"?Qr(i):_n(st,null,String(i))}function Qr(i){return i.el===null||i.memo?i:Xr(i)}function ei(i,l){var d=0,{shapeFlag:v}=i;if(l==null)l=null;else if(f.isArray(l))d=16;else if(typeof l=="object")if(v&(1|64)){var y=l.default;y&&(y._c&&(y._d=!1),ei(i,y()),y._c&&(y._d=!0));return}else{d=32;var w=l._;!w&&!(lo in l)?l._ctx=On:w===3&&On&&(On.slots._===1?l._=1:(l._=2,i.patchFlag|=1024))}else f.isFunction(l)?(l={default:l,_ctx:On},d=32):(l=String(l),v&64?(d=16,l=[Vo(l)]):d=8);i.children=l,i.shapeFlag|=d}function Pr(){for(var i={},l=0;l<arguments.length;l++){var d=l<0||arguments.length<=l?void 0:arguments[l];for(var v in d)if(v==="class")i.class!==d.class&&(i.class=f.normalizeClass([i.class,d.class]));else if(v==="style")i.style=f.normalizeStyle([i.style,d.style]);else if(f.isOn(v)){var y=i[v],w=d[v];w&&y!==w&&!(f.isArray(y)&&y.includes(w))&&(i[v]=y?[].concat(y,w):w)}else v!==""&&(i[v]=d[v])}return i}function Ur(i,l,d){var v=arguments.length>3&&arguments[3]!==void 0?arguments[3]:null;q(i,l,7,[d,v])}var os=wa(),la=0;function Fn(i,l,d){var v=i.type,y=(l?l.appContext:i.appContext)||os,w={uid:la++,vnode:i,type:v,parent:l,appContext:y,root:null,next:null,subTree:null,effect:null,update:null,scope:new P.EffectScope(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:l?l.provides:Object.create(y.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Wo(v,y),emitsOptions:hr(v,y),emit:null,emitted:null,propsDefaults:f.EMPTY_OBJ,inheritAttrs:v.inheritAttrs,ctx:f.EMPTY_OBJ,data:f.EMPTY_OBJ,props:f.EMPTY_OBJ,attrs:f.EMPTY_OBJ,slots:f.EMPTY_OBJ,refs:f.EMPTY_OBJ,setupState:f.EMPTY_OBJ,setupContext:null,suspense:d,suspenseId:d?d.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return w.ctx={_:w},w.root=l?l.root:w,w.emit=No.bind(null,w),i.ce&&i.ce(w),w}var fn=null,fr=()=>fn||On,Ir=i=>{fn=i,i.scope.on()},Wi=()=>{fn&&fn.scope.off(),fn=null};function Va(i){return i.vnode.shapeFlag&4}S.isInSSRComponentSetup=!1;function Sa(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!1;S.isInSSRComponentSetup=l;var{props:d,children:v}=i.vnode,y=Va(i);zo(i,d,y,l),ya(i,v);var w=y?Go(i,l):void 0;return S.isInSSRComponentSetup=!1,w}function Go(i,l){var d=i.type;i.accessCache=Object.create(null),i.proxy=P.markRaw(new Proxy(i.ctx,xa));var{setup:v}=d;if(v){var y=i.setupContext=v.length>1?Ot(i):null;Ir(i),P.pauseTracking();var w=at(v,i,0,[i.props,y]);if(P.resetTracking(),Wi(),f.isPromise(w)){if(w.then(Wi,Wi),l)return w.then(I=>{co(i,I,l)}).catch(I=>{ne(I,i,0)});i.asyncDep=w}else co(i,w,l)}else Cs(i,l)}function co(i,l,d){f.isFunction(l)?i.type.__ssrInlineRender?i.ssrRender=l:i.render=l:f.isObject(l)&&(i.setupState=P.proxyRefs(l)),Cs(i,d)}var Mt,wo;function as(i){Mt=i,wo=l=>{l.render._rc&&(l.withProxy=new Proxy(l.ctx,ea))}}var Aa=()=>!Mt;function Cs(i,l,d){var v=i.type;if(!i.render){if(!l&&Mt&&!v.render){var y=v.template;if(y){var{isCustomElement:w,compilerOptions:I}=i.appContext.config,{delimiters:L,compilerOptions:$}=v,te=f.extend(f.extend({isCustomElement:w,delimiters:L},I),$);v.render=Mt(y,te)}}i.render=v.render||f.NOOP,wo&&wo(i)}Ir(i),P.pauseTracking(),rs(i),P.resetTracking(),Wi()}function Ne(i){return new Proxy(i.attrs,{get(l,d){return P.track(i,"get","$attrs"),l[d]}})}function Ot(i){var l=v=>{i.exposed=v||{}},d;return{get attrs(){return d||(d=Ne(i))},slots:i.slots,emit:i.emit,expose:l}}function Pt(i){if(i.exposed)return i.exposeProxy||(i.exposeProxy=new Proxy(P.proxyRefs(P.markRaw(i.exposed)),{get(l,d){if(d in l)return l[d];if(d in io)return io[d](i)}}))}var Tn=/(?:^|[-_])(\w)/g,Qn=i=>i.replace(Tn,l=>l.toUpperCase()).replace(/[-_]/g,"");function Nr(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return f.isFunction(i)?i.displayName||i.name:i.name||l&&i.__name}function Gi(i,l){var d=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!1,v=Nr(l);if(!v&&l.__file){var y=l.__file.match(/([^/\\]+)\.\w+$/);y&&(v=y[1])}if(!v&&i&&i.parent){var w=I=>{for(var L in I)if(I[L]===l)return L};v=w(i.components||i.parent.type.components)||w(i.appContext.components)}return v?Qn(v):d?"App":"Anonymous"}function Yi(i){return f.isFunction(i)&&"__vccOpts"in i}var So=(i,l)=>P.computed(i,l,S.isInSSRComponentSetup);function Yo(){return null}function $a(){return null}function Zs(i){}function ca(i,l){return null}function Os(){return ss().slots}function Xs(){return ss().attrs}function ss(){var i=fr();return i.setupContext||(i.setupContext=Ot(i))}function Qs(i,l){var d=f.isArray(i)?i.reduce((w,I)=>(w[I]={},w),{}):i;for(var v in l){var y=d[v];y?f.isArray(y)||f.isFunction(y)?d[v]={type:y,default:l[v]}:y.default=l[v]:y===null&&(d[v]={default:l[v]})}return d}function el(i,l){var d={},v=function(w){l.includes(w)||Object.defineProperty(d,w,{enumerable:!0,get:()=>i[w]})};for(var y in i)v(y);return d}function tl(i){var l=fr(),d=i();return Wi(),f.isPromise(d)&&(d=d.catch(v=>{throw Ir(l),v})),[d,()=>Ir(l)]}function Ua(i,l,d){var v=arguments.length;return v===2?f.isObject(l)&&!f.isArray(l)?ir(l)?_n(i,null,[l]):_n(i,l):_n(i,null,l):(v>3?d=Array.prototype.slice.call(arguments,2):v===3&&ir(d)&&(d=[d]),_n(i,l,d))}var Ha=Symbol(""),Hl=()=>{{var i=hi(Ha);return i||Rt("Server rendering context not provided. Make sure to only call useSSRContext() conditionally in the server build."),i}};function nl(){}function rl(i,l,d,v){var y=d[v];if(y&&uo(y,i))return y;var w=l();return w.memo=i.slice(),d[v]=w}function uo(i,l){var d=i.memo;if(d.length!=l.length)return!1;for(var v=0;v<d.length;v++)if(f.hasChanged(d[v],l[v]))return!1;return nn>0&&Ct&&Ct.push(i),!0}var Ca="3.2.37",ja={createComponentInstance:Fn,setupComponent:Sa,renderComponentRoot:Sr,setCurrentRenderingInstance:Xi,isVNode:ir,normalizeVNode:An},za=ja,ua=null,Oa=null;function Ta(i,l){return i==="input"?new N.UniInputElement(i,l):i==="textarea"?new N.UniTextAreaElement(i,l):new N.UniElement(i,l)}function Ts(i,l){return new N.UniTextNode(i,l)}function Wa(i,l){return new N.UniCommentNode(i,l)}var ls,cs={insert:(i,l,d)=>{l.insertBefore(i,d||null)},remove:i=>{var l=i.parentNode;l&&l.removeChild(i)},createElement:(i,l)=>Ta(i,l),createText:(i,l)=>Ts(i,l),createComment:(i,l)=>Wa(i,l),setText:(i,l)=>{i.nodeValue=l},setElementText:(i,l)=>{i.textContent=l},parentNode:i=>i.parentNode,nextSibling:i=>i.nextSibling,setScopeId(i,l){i.setAttribute(l,"")},cloneNode(i){var l=i.cloneNode(!0);return"_value"in i&&(l._value=i._value),l},insertStaticContent(i,l,d){var v=ls||(ls=Ta("div"));v.innerHTML=i;for(var y=v.firstChild,w=y,I=w;w;)I=w,cs.insert(w,l,d),w=v.firstChild;return[y,I]}};function il(i,l){l==null&&(l=""),i.setAttribute("class",l)}function Ga(i,l,d){if(!d)i.removeAttribute("style");else if(f.isString(d))l!==d&&i.setAttribute("style",d);else{var v={},y=l&&!f.isString(l);if(y){for(var w in l)d[w]==null&&(v[w]="");for(var I in d){var L=d[I];L!==l[I]&&(v[I]=L)}}else for(var $ in d)v[$]=d[$];Object.keys(v).length&&i.setAttribute("style",v)}}function ci(i,l,d){d==null?i.removeAttribute(l):i.setAttribute(l,d)}function fo(i,l,d,v){i.addEventListener(l,d,v)}function Ps(i,l,d,v){i.removeEventListener(l,d,v)}function ol(i,l,d,v){var y=arguments.length>4&&arguments[4]!==void 0?arguments[4]:null,w=i._vei||(i._vei={}),I=w[l];if(v&&I)I.value=v;else{var[L,$]=us(l);if(v){var te=w[l]=sl(v,y);fo(i,L,te,$)}else I&&(Ps(i,L,I,$),w[l]=void 0)}}var al=/(?:Once|Passive|Capture)$/;function us(i){var l;if(al.test(i)){l={};for(var d;d=i.match(al);)i=i.slice(0,i.length-d[0].length),l[d[0].toLowerCase()]=!0}return[f.hyphenate(i.slice(2)),l]}function sl(i,l){var d=y=>{q(d.value,l,5,[y])};d.value=i;var v=new Set;return f.isArray(d.value)?d.value.forEach(y=>{y.modifiers&&y.modifiers.forEach(w=>{v.add(w)})}):(d.value.modifiers&&d.value.modifiers.forEach(y=>{v.add(y)}),Is(d,l)),d.modifiers=[...v],d}function Is(i,l){if(!!l){var{$wxsModules:d}=l;if(!!d){var v=i.value.toString();!d.find(y=>v.indexOf("."+y+".")>-1)||(i.wxsEvent=i.value())}}}var ll=function(i,l,d,v){var y=arguments.length>6?arguments[6]:void 0;switch(l){case"class":il(i,v);break;case"style":Ga(i,d,v);break;default:if(f.isOn(l))f.isModelListener(l)||ol(i,l,d,v,y);else{if(f.isObject(v)){var w=d===v;if(v=N.JSON_PROTOCOL+JSON.stringify(v),w&&i.getAttribute(l)===v)return}else if(d===v)return;ci(i,l,v)}break}};function jl(){var i=arguments.length>0&&arguments[0]!==void 0?arguments[0]:"$style";{var l=fr();if(!l)return f.EMPTY_OBJ;var d=l.type.__cssModules;if(!d)return f.EMPTY_OBJ;var v=d[i];return v||f.EMPTY_OBJ}}function cl(i){var l=fr();if(!!l){var d=()=>Ya(l.subTree,i(l.proxy));mi(()=>Kn(d,{flush:"post"})),Zr(d)}}function Ya(i,l){if(i.shapeFlag&128){var d=i.suspense;i=d.activeBranch,d.pendingBranch&&!d.isHydrating&&d.effects.push(()=>{Ya(d.activeBranch,l)})}for(;i.component;)i=i.component.subTree;if(i.shapeFlag&1&&i.el)Ns(i.el,l);else if(i.type===ze)i.children.forEach(w=>Ya(w,l));else if(i.type===ht)for(var{el:v,anchor:y}=i;v&&(Ns(v,l),v!==y);)v=v.nextSibling}function Ns(i,l){if(i.nodeType===1)for(var d in l)i.setAttribute("--".concat(d),l[d])}var Ao="transition",Pa="animation",fs=(i,l)=>{var{slots:d}=l;return Ua(Pi,fl(i),d)};fs.displayName="Transition";var ul={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},zl=fs.props=f.extend({},Pi.props,ul),qo=function(i){var l=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];f.isArray(i)?i.forEach(d=>d(...l)):i&&i(...l)},ks=i=>i?f.isArray(i)?i.some(l=>l.length>1):i.length>1:!1;function fl(i){var l={};for(var d in i)d in ul||(l[d]=i[d]);if(i.css===!1)return l;var{name:v="v",type:y,duration:w,enterFromClass:I="".concat(v,"-enter-from"),enterActiveClass:L="".concat(v,"-enter-active"),enterToClass:$="".concat(v,"-enter-to"),appearFromClass:te=I,appearActiveClass:ae=L,appearToClass:Re=$,leaveFromClass:Q="".concat(v,"-leave-from"),leaveActiveClass:ve="".concat(v,"-leave-active"),leaveToClass:Ce="".concat(v,"-leave-to")}=i,lt=dl(w),mt=lt&&lt[0],_e=lt&&lt[1],{onBeforeEnter:se,onEnter:be,onEnterCancelled:Ge,onLeave:Me,onLeaveCancelled:rt,onBeforeAppear:Ze=se,onAppear:De=be,onAppearCancelled:bt=Ge}=l,yt=(ut,D,K)=>{fa(ut,D?Re:$),fa(ut,D?ae:L),K&&K()},Bt=(ut,D)=>{fa(ut,Ce),fa(ut,ve),D&&D()},jt=ut=>(D,K)=>{var le=ut?De:be,ue=()=>yt(D,ut,K);qo(le,[D,ue]),hl(()=>{fa(D,ut?te:I),$o(D,ut?Re:$),ks(le)||gl(D,y,mt,ue)})};return f.extend(l,{onBeforeEnter(ut){qo(se,[ut]),$o(ut,I),$o(ut,L)},onBeforeAppear(ut){qo(Ze,[ut]),$o(ut,te),$o(ut,ae)},onEnter:jt(!1),onAppear:jt(!0),onLeave(ut,D){var K=()=>Bt(ut,D);$o(ut,Q),ml(),$o(ut,ve),hl(()=>{fa(ut,Q),$o(ut,Ce),ks(Me)||gl(ut,y,_e,K)}),qo(Me,[ut,K])},onEnterCancelled(ut){yt(ut,!1),qo(Ge,[ut])},onAppearCancelled(ut){yt(ut,!0),qo(bt,[ut])},onLeaveCancelled(ut){Bt(ut),qo(rt,[ut])}})}function dl(i){if(i==null)return null;if(f.isObject(i))return[Rs(i.enter),Rs(i.leave)];var l=Rs(i);return[l,l]}function Rs(i){var l=f.toNumber(i);return l}function $o(i,l){l.split(/\s+/).forEach(d=>d&&i.classList.add(d)),(i._vtc||(i._vtc=new Set)).add(l)}function fa(i,l){l.split(/\s+/).forEach(v=>v&&i.classList.remove(v));var{_vtc:d}=i;d&&(d.delete(l),d.size||(i._vtc=void 0))}function hl(i){requestAnimationFrame(()=>{requestAnimationFrame(i)})}var Wl=0;function gl(i,l,d,v){var y=i._endId=++Wl,w=()=>{y===i._endId&&v()};if(d)return setTimeout(w,d);var{type:I,timeout:L,propCount:$}=ds(i,l);if(!I)return v();var te=I+"end",ae=0,Re=()=>{i.removeEventListener(te,Q),w()},Q=ve=>{ve.target===i&&++ae>=$&&Re()};setTimeout(()=>{ae<$&&Re()},L+1),i.addEventListener(te,Q)}function ds(i,l){var d=window.getComputedStyle(i),v=Ce=>(d[Ce]||"").split(", "),y=v(Ao+"Delay"),w=v(Ao+"Duration"),I=pl(y,w),L=v(Pa+"Delay"),$=v(Pa+"Duration"),te=pl(L,$),ae=null,Re=0,Q=0;l===Ao?I>0&&(ae=Ao,Re=I,Q=w.length):l===Pa?te>0&&(ae=Pa,Re=te,Q=$.length):(Re=Math.max(I,te),ae=Re>0?I>te?Ao:Pa:null,Q=ae?ae===Ao?w.length:$.length:0);var ve=ae===Ao&&/\b(transform|all)(,|$)/.test(d[Ao+"Property"]);return{type:ae,timeout:Re,propCount:Q,hasTransform:ve}}function pl(i,l){for(;i.length<l.length;)i=i.concat(i);return Math.max(...l.map((d,v)=>vl(d)+vl(i[v])))}function vl(i){return Number(i.slice(0,-1).replace(",","."))*1e3}function ml(){return document.body.offsetHeight}var _l=new WeakMap,bl=new WeakMap,El={name:"TransitionGroup",props:f.extend({},zl,{tag:String,moveClass:String}),setup(i,l){var{slots:d}=l,v=fr(),y=jn(),w,I;return Zr(()=>{if(!!w.length){var L=i.moveClass||"".concat(i.name||"v","-move");if(!!c(w[0].el,v.vnode.el,L)){w.forEach(Gl),w.forEach(Yl);var $=w.filter(o);ml(),$.forEach(te=>{var ae=te.el,Re=ae.style;$o(ae,L),Re.transform=Re.webkitTransform=Re.transitionDuration="";var Q=ae._moveCb=ve=>{ve&&ve.target!==ae||(!ve||/transform$/.test(ve.propertyName))&&(ae.removeEventListener("transitionend",Q),ae._moveCb=null,fa(ae,L))};ae.addEventListener("transitionend",Q)})}}}),()=>{var L=P.toRaw(i),$=fl(L),te=L.tag||ze;w=I,I=d.default?Or(d.default()):[];for(var ae=0;ae<I.length;ae++){var Re=I[ae];Re.key!=null&&Gn(Re,gi(Re,$,y,v))}if(w)for(var Q=0;Q<w.length;Q++){var ve=w[Q];Gn(ve,gi(ve,$,y,v)),_l.set(ve,ve.el.getBoundingClientRect())}return _n(te,null,I)}}},yl=El;function Gl(i){var l=i.el;l._moveCb&&l._moveCb(),l._enterCb&&l._enterCb()}function Yl(i){bl.set(i,i.el.getBoundingClientRect())}function o(i){var l=_l.get(i),d=bl.get(i),v=l.left-d.left,y=l.top-d.top;if(v||y){var w=i.el.style;return w.transform=w.webkitTransform="translate(".concat(v,"px,").concat(y,"px)"),w.transitionDuration="0s",i}}function c(i,l,d){var v=i.cloneNode();i._vtc&&i._vtc.forEach(I=>{I.split(/\s+/).forEach(L=>L&&v.classList.remove(L))}),d.split(/\s+/).forEach(I=>I&&v.classList.add(I)),v.style.display="none";var y=l.nodeType===1?l:l.parentNode;y.appendChild(v);var{hasTransform:w}=ds(v);return y.removeChild(v),w}var p=i=>{var l=i.props["onUpdate:modelValue"];return f.isArray(l)?d=>f.invokeArrayFns(l,d):l},E={created(i,l,d){var{value:v,modifiers:{trim:y,number:w}}=l;i.value=v==null?"":v,i._assign=p(d),fo(i,"input",I=>{var L=I.detail.value,$=i.pageNode;i.pageNode=null,i.value=L,i.pageNode=$,y?L=L.trim():w&&(L=f.toNumber(L)),i._assign(L)})},beforeUpdate(i,l,d){var{value:v}=l;i._assign=p(d);var y=v==null?"":v;i.value!==y&&(i.value=y)}},T=E,C=["ctrl","shift","alt","meta"],V={stop:i=>i.stopPropagation(),prevent:i=>i.preventDefault(),self:i=>i.target!==i.currentTarget,ctrl:i=>!i.ctrlKey,shift:i=>!i.shiftKey,alt:i=>!i.altKey,meta:i=>!i.metaKey,left:i=>"button"in i&&i.button!==0,middle:i=>"button"in i&&i.button!==1,right:i=>"button"in i&&i.button!==2,exact:(i,l)=>C.some(d=>i["".concat(d,"Key")]&&!l.includes(d))},W=(i,l)=>{var d=function(v){for(var y=0;y<l.length;y++){var w=V[l[y]];if(w&&w(v,l))return}for(var I=arguments.length,L=new Array(I>1?I-1:0),$=1;$<I;$++)L[$-1]=arguments[$];return i(v,...L)};return d.modifiers=l,d},Y={esc:"escape",space:" ",up:"arrow-up",left:"arrow-left",right:"arrow-right",down:"arrow-down",delete:"backspace"},oe=(i,l)=>d=>{if("key"in d){var v=f.hyphenate(d.key);if(l.some(y=>y===v||Y[y]===v))return i(d)}},je={beforeMount(i,l){var{value:d}=l;Ye(i,d)},updated(i,l){var{value:d,oldValue:v}=l;!d!=!v&&Ye(i,d)},beforeUnmount(i,l){var{value:d}=l;Ye(i,d)}};function Ye(i,l){i.setAttribute(".vShow",!!l)}var pe=f.extend({patchProp:ll,forcePatchProp:N.forcePatchProp},cs),$e;function We(){return $e||($e=z(pe))}var vt=function(){We().render(...arguments)},wt=function(){var i=We().createApp(...arguments),{mount:l}=i;return i.mount=d=>(f.isString(d)&&(d=Wa(d)),d&&l(d,!1,!1)),i},Ae=wt;function de(){}function Le(){}return Object.defineProperty(S,"camelize",{enumerable:!0,get:function(){return f.camelize}}),Object.defineProperty(S,"capitalize",{enumerable:!0,get:function(){return f.capitalize}}),Object.defineProperty(S,"normalizeClass",{enumerable:!0,get:function(){return f.normalizeClass}}),Object.defineProperty(S,"normalizeProps",{enumerable:!0,get:function(){return f.normalizeProps}}),Object.defineProperty(S,"normalizeStyle",{enumerable:!0,get:function(){return f.normalizeStyle}}),Object.defineProperty(S,"toDisplayString",{enumerable:!0,get:function(){return f.toDisplayString}}),Object.defineProperty(S,"toHandlerKey",{enumerable:!0,get:function(){return f.toHandlerKey}}),Object.defineProperty(S,"EffectScope",{enumerable:!0,get:function(){return P.EffectScope}}),Object.defineProperty(S,"ReactiveEffect",{enumerable:!0,get:function(){return P.ReactiveEffect}}),Object.defineProperty(S,"customRef",{enumerable:!0,get:function(){return P.customRef}}),Object.defineProperty(S,"effect",{enumerable:!0,get:function(){return P.effect}}),Object.defineProperty(S,"effectScope",{enumerable:!0,get:function(){return P.effectScope}}),Object.defineProperty(S,"getCurrentScope",{enumerable:!0,get:function(){return P.getCurrentScope}}),Object.defineProperty(S,"isProxy",{enumerable:!0,get:function(){return P.isProxy}}),Object.defineProperty(S,"isReactive",{enumerable:!0,get:function(){return P.isReactive}}),Object.defineProperty(S,"isReadonly",{enumerable:!0,get:function(){return P.isReadonly}}),Object.defineProperty(S,"isRef",{enumerable:!0,get:function(){return P.isRef}}),Object.defineProperty(S,"isShallow",{enumerable:!0,get:function(){return P.isShallow}}),Object.defineProperty(S,"markRaw",{enumerable:!0,get:function(){return P.markRaw}}),Object.defineProperty(S,"onScopeDispose",{enumerable:!0,get:function(){return P.onScopeDispose}}),Object.defineProperty(S,"proxyRefs",{enumerable:!0,get:function(){return P.proxyRefs}}),Object.defineProperty(S,"reactive",{enumerable:!0,get:function(){return P.reactive}}),Object.defineProperty(S,"readonly",{enumerable:!0,get:function(){return P.readonly}}),Object.defineProperty(S,"ref",{enumerable:!0,get:function(){return P.ref}}),Object.defineProperty(S,"shallowReactive",{enumerable:!0,get:function(){return P.shallowReactive}}),Object.defineProperty(S,"shallowReadonly",{enumerable:!0,get:function(){return P.shallowReadonly}}),Object.defineProperty(S,"shallowRef",{enumerable:!0,get:function(){return P.shallowRef}}),Object.defineProperty(S,"stop",{enumerable:!0,get:function(){return P.stop}}),Object.defineProperty(S,"toRaw",{enumerable:!0,get:function(){return P.toRaw}}),Object.defineProperty(S,"toRef",{enumerable:!0,get:function(){return P.toRef}}),Object.defineProperty(S,"toRefs",{enumerable:!0,get:function(){return P.toRefs}}),Object.defineProperty(S,"triggerRef",{enumerable:!0,get:function(){return P.triggerRef}}),Object.defineProperty(S,"unref",{enumerable:!0,get:function(){return P.unref}}),S.BaseTransition=Pi,S.Comment=Ft,S.Fragment=ze,S.KeepAlive=Ui,S.Static=ht,S.Suspense=Wn,S.Teleport=tt,S.Text=st,S.Transition=fs,S.TransitionGroup=yl,S.callWithAsyncErrorHandling=q,S.callWithErrorHandling=at,S.cloneVNode=Xr,S.compatUtils=Oa,S.computed=So,S.createApp=wt,S.createBlock=Ei,S.createComment=Wa,S.createCommentVNode=Dn,S.createElement=Ta,S.createElementBlock=Ln,S.createElementVNode=$t,S.createHydrationRenderer=j,S.createPropsRestProxy=el,S.createRenderer=z,S.createSSRApp=Ae,S.createSlots=Xo,S.createStaticVNode=sa,S.createTextNode=Ts,S.createTextVNode=Vo,S.createVNode=_n,S.createVueApp=wt,S.defineAsyncComponent=Bo,S.defineComponent=In,S.defineEmits=$a,S.defineExpose=Zs,S.defineProps=Yo,S.getCurrentInstance=fr,S.getTransitionRawChildren=Or,S.guardReactiveProps=yi,S.h=Ua,S.handleError=ne,S.initCustomFormatter=nl,S.inject=hi,S.injectHook=vr,S.isMemoSame=uo,S.isRuntimeOnly=Aa,S.isVNode=ir,S.mergeDefaults=Qs,S.mergeProps=Pr,S.nextTick=qt,S.onActivated=pr,S.onBeforeActivate=de,S.onBeforeDeactivate=Le,S.onBeforeMount=Ni,S.onBeforeUnmount=bi,S.onBeforeUpdate=_i,S.onDeactivated=Zn,S.onErrorCaptured=re,S.onMounted=mi,S.onRenderTracked=x,S.onRenderTriggered=ro,S.onServerPrefetch=ji,S.onUnmounted=no,S.onUpdated=Zr,S.openBlock=wn,S.popScopeId=po,S.provide=Oi,S.pushScopeId=Qi,S.queuePostFlushCb=xn,S.registerRuntimeCompiler=as,S.render=vt,S.renderList=mr,S.renderSlot=jo,S.resolveComponent=X,S.resolveDirective=Mn,S.resolveDynamicComponent=en,S.resolveFilter=ua,S.resolveTransitionHooks=gi,S.setBlockTracking=Sn,S.setDevtoolsHook=Io,S.setTransitionHooks=Gn,S.ssrContextKey=Ha,S.ssrUtils=za,S.toHandlers=Mo,S.transformVNodeArgs=Do,S.useAttrs=Xs,S.useCssModule=jl,S.useCssVars=cl,S.useSSRContext=Hl,S.useSlots=Os,S.useTransitionState=jn,S.vModelDynamic=T,S.vModelText=E,S.vShow=je,S.version=Ca,S.warn=Rt,S.watch=we,S.watchEffect=Kn,S.watchPostEffect=Cr,S.watchSyncEffect=Vi,S.withAsyncContext=tl,S.withCtx=lr,S.withDefaults=ca,S.withDirectives=he,S.withKeys=oe,S.withMemo=rl,S.withModifiers=W,S.withScopeId=Ci,Object.defineProperty(S,"__esModule",{value:!0}),S}({},s,_,A);return R.__TYPE__="vue",R}function Rp(g,s,_){let A=_.Vue,R=_.setTimeout,S=_.clearTimeout,N=_.setInterval,f=_.clearInterval,P=_.__uniConfig,He=_.__uniRoutes,Rt=_.VueShared,gn=_.UniShared;var B=function(q,ne,En){"use strict";var yn="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",ln=function(){let e=new Uint8Array(256);for(var t=0;t<yn.length;t++)e[yn.charCodeAt(t)]=t;return e}();function Un(e){var t=new Uint8Array(e),n,r=t.length,a="";for(n=0;n<r;n+=3)a+=yn[t[n]>>2],a+=yn[(t[n]&3)<<4|t[n+1]>>4],a+=yn[(t[n+1]&15)<<2|t[n+2]>>6],a+=yn[t[n+2]&63];return r%3===2?a=a.substring(0,a.length-1)+"=":r%3===1&&(a=a.substring(0,a.length-2)+"=="),a}function on(e){var t=e.length*.75,n=e.length,r,a=0,u,h,b,U;e[e.length-1]==="="&&(t--,e[e.length-2]==="="&&t--);var O=new ArrayBuffer(t),F=new Uint8Array(O);for(r=0;r<n;r+=4)u=ln[e.charCodeAt(r)],h=ln[e.charCodeAt(r+1)],b=ln[e.charCodeAt(r+2)],U=ln[e.charCodeAt(r+3)],F[a++]=u<<2|h>>4,F[a++]=(h&15)<<4|b>>2,F[a++]=(b&3)<<6|U&63;return O}let kn=["original","compressed"],Hn=["album","camera"],vn=["GET","OPTIONS","HEAD","POST","PUT","DELETE","TRACE","CONNECT","PATCH"];function an(e,t){return!e||t.indexOf(e)===-1?t[0]:e}function mn(e,t){return!q.isArray(e)||e.length===0||e.find(n=>t.indexOf(n)===-1)?t:e}function Rn(e,t){console.warn(`${e}: ${t}`)}function Br(e,t,n,r){r||(r=Rn);for(let a in n){let u=Ve(a,t[a],n[a],!q.hasOwn(t,a));q.isString(u)&&r(e,u)}}function ni(e,t,n,r){if(!n)return;if(!q.isArray(n))return Br(e,t[0]||Object.create(null),n,r);let a=n.length,u=t.length;for(let h=0;h<a;h++){let b=n[h],U=Object.create(null);u>h&&(U[b.name]=t[h]),Br(e,U,{[b.name]:b},r)}}function Ve(e,t,n,r){q.isPlainObject(n)||(n={type:n});let{type:a,required:u,validator:h}=n;if(u&&r)return'Missing required args: "'+e+'"';if(!(t==null&&!u)){if(a!=null){let b=!1,U=q.isArray(a)?a:[a],O=[];for(let F=0;F<U.length&&!b;F++){let{valid:ge,expectedType:Se}=gt(t,U[F]);O.push(Se||""),b=ge}if(!b)return qt(e,t,O)}if(h)return h(t)}}let ot=q.makeMap("String,Number,Boolean,Function,Symbol");function gt(e,t){let n,r=tn(t);if(ot(r)){let a=typeof e;n=a===r.toLowerCase(),!n&&a==="object"&&(n=e instanceof t)}else r==="Object"?n=q.isObject(e):r==="Array"?n=q.isArray(e):n=e instanceof t||q.toRawType(e)===tn(t);return{valid:n,expectedType:r}}function qt(e,t,n){let r=`Invalid args: type check failed for args "${e}". Expected ${n.map(q.capitalize).join(", ")}`,a=n[0],u=q.toRawType(t),h=Xt(t,a),b=Xt(t,u);return n.length===1&&rr(a)&&!sr(a,u)&&(r+=` with value ${h}`),r+=`, got ${u} `,rr(u)&&(r+=`with value ${b}.`),r}function tn(e){let t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:""}function Xt(e,t){return t==="String"?`"${e}"`:t==="Number"?`${Number(e)}`:`${e}`}function rr(e){return["string","number","boolean"].some(n=>e.toLowerCase()===n)}function sr(...e){return e.some(t=>t.toLowerCase()==="boolean")}function Li(e){return function(){try{return e.apply(e,arguments)}catch(t){console.error(t)}}}let Di=1,xn={};function wr(e,t,n,r=!1){return xn[e]={name:t,keepAlive:r,callback:n},e}function Wr(e,t,n){if(typeof e=="number"){let r=xn[e];if(r)return r.keepAlive||delete xn[e],r.callback(t,n)}return t}function Gr(e){for(let t in xn)if(xn[t].name===e)return!0;return!1}function Ji(e,t){for(let n in xn){let r=xn[n];r.callback===t&&r.name===e&&delete xn[n]}}function Zi(e){at.off("api."+e)}function Io(e){at.on("api."+e,t=>{for(let n in xn){let r=xn[n];r.name===e&&r.callback(t)}})}function No(e,t){return wr(Di++,e,t,!0)}let hr="success",Cn="fail",On="complete";function di(e){let t={};for(let n in e){let r=e[n];q.isFunction(r)&&(t[n]=Li(r),delete e[n])}return t}function Xi(e,t){return!e||e.indexOf(":fail")===-1?t+":ok":t+e.substring(e.indexOf(":fail"))}function Qi(e,t={},{beforeAll:n,beforeSuccess:r}={}){q.isPlainObject(t)||(t={});let{success:a,fail:u,complete:h}=di(t),b=q.isFunction(a),U=q.isFunction(u),O=q.isFunction(h),F=Di++;return wr(F,e,ge=>{ge=ge||{},ge.errMsg=Xi(ge.errMsg,e),q.isFunction(n)&&n(ge),ge.errMsg===e+":ok"?(q.isFunction(r)&&r(ge,t),b&&a(ge)):U&&u(ge),O&&h(ge)}),F}let po="success",Ci="fail",lr="complete",Yr={},Sr={};function gr(e){return function(t){return e(t)||t}}function ko(e,t){let n=!1;for(let r=0;r<e.length;r++){let a=e[r];if(n)n=Promise.resolve(gr(a));else{let u=a(t);if(q.isPromise(u)&&(n=Promise.resolve(u)),u===!1)return{then(){},catch(){}}}}return n||{then(r){return r(t)},catch(){}}}function Ro(e,t={}){return[po,Ci,lr].forEach(n=>{let r=e[n];if(!q.isArray(r))return;let a=t[n];t[n]=function(h){ko(r,h).then(b=>q.isFunction(a)&&a(b)||b)}}),t}function vo(e,t){let n=[];q.isArray(Yr.returnValue)&&n.push(...Yr.returnValue);let r=Sr[e];return r&&q.isArray(r.returnValue)&&n.push(...r.returnValue),n.forEach(a=>{t=a(t)||t}),t}function Mr(e){let t=Object.create(null);Object.keys(Yr).forEach(r=>{r!=="returnValue"&&(t[r]=Yr[r].slice())});let n=Sr[e];return n&&Object.keys(n).forEach(r=>{r!=="returnValue"&&(t[r]=(t[r]||[]).concat(n[r]))}),t}function cr(e,t,n,r){let a=Mr(e);return a&&Object.keys(a).length?q.isArray(a.invoke)?ko(a.invoke,n).then(h=>t(Ro(a,h),...r)):t(Ro(a,n),...r):t(n,...r)}function Ar(e){return!!(q.isPlainObject(e)&&[hr,Cn,On].find(t=>q.isFunction(e[t])))}function ri(e){return e}function Wn(e,t){return(n={},...r)=>Ar(n)?vo(e,cr(e,t,n,r)):vo(e,new Promise((a,u)=>{cr(e,t,q.extend(n,{success:a,fail:u}),r)}))}function qr(e,t){let n=e[0];if(!t||!q.isPlainObject(t.formatArgs)&&q.isPlainObject(n))return;let r=t.formatArgs,a=Object.keys(r);for(let u=0;u<a.length;u++){let h=a[u],b=r[h];if(q.isFunction(b)){let U=b(e[0][h],n);if(q.isString(U))return U}else q.hasOwn(n,h)||(n[h]=b)}}function eo(e,t,n){return Wr(e,q.extend(n||{},{errMsg:t+":ok"}))}function Fi(e,t,n,r){return Wr(e,q.extend({errMsg:t+":fail"+(n?" "+n:"")},r))}function Lr(e,t,n,r){if(r&&r.beforeInvoke){let u=r.beforeInvoke(t);if(q.isString(u))return u}let a=qr(t,r);if(a)return a}function mo(e){if(!q.isFunction(e))throw new Error('Invalid args: type check failed for args "callback". Expected Function')}function _o(e,t,n){return r=>{mo(r);let a=Lr(e,[r],void 0,n);if(a)throw new Error(a);let u=!Gr(e);No(e,r),u&&(Io(e),t())}}function bo(e,t,n){return r=>{mo(r);let a=Lr(e,[r],void 0,n);if(a)throw new Error(a);e=e.replace("off","on"),Ji(e,r),Gr(e)||(Zi(e),t())}}function ii(e){return!e||q.isString(e)?e:e.stack?(console.error(e.message+ne.LINEFEED+e.stack),e.message):e}function oi(e,t,n,r){return a=>{let u=Qi(e,a,r),h=Lr(e,[a],n,r);return h?Fi(u,e,h):t(a,{resolve:b=>eo(u,e,b),reject:(b,U)=>Fi(u,e,ii(b),U)})}}function Oi(e,t,n,r){return(...a)=>{let u=Lr(e,a,n,r);if(u)throw new Error(u);return t.apply(null,a)}}function hi(e,t,n,r){return oi(e,t,n,r)}function Kn(e,t,n){return _o(e,t,n)}function Cr(e,t,n){return bo(e,t,n)}function Vi(e,t,n,r){return Wn(e,oi(e,t,void 0,r))}function xt(e,t,n,r){return Oi(e,t,void 0,r)}function we(e,t,n,r){return Wn(e,hi(e,t,void 0,r))}let Ti="base64ToArrayBuffer",$i=[{name:"base64",type:String,required:!0}],Kr="arrayBufferToBase64",Dr=[{name:"arrayBuffer",type:[ArrayBuffer,Uint8Array],required:!0}],jn=xt(Ti,e=>on(e),$i),Bn=xt(Kr,e=>Un(e),Dr);function xo(){if(typeof __SYSTEM_INFO__!="undefined")return window.__SYSTEM_INFO__;let{resolutionWidth:e}=s.screen.getCurrentSize()||{resolutionWidth:0};return{platform:(s.os.name||"").toLowerCase(),pixelRatio:s.screen.scale,windowWidth:Math.round(e)}}function Pi(e,t,n){e.$page.meta.isNVue?gi(e,t,n):Ut(e,t,n)}function Ut(e,t,n){at.invokeViewMethod("requestComponentInfo",{reqs:t.map(r=>(r.component&&(r.component=r.component.$el.nodeId),r))},e.$page.id,n)}function gi(e,t,n){let r=pi(t),a=new Array(r.length);Kt(r,e.$el,a),Gn(e.$requireNativePlugin("dom"),a,0,[],u=>{n(u)})}function pi(e){let t=[];for(let n=0;n<e.length;n++){let r=e[n].selector;r.indexOf("#")===0&&t.push(r.substring(1))}return t}function Kt(e,t,n){let r=t.children;if(!q.isArray(r))return!1;for(let a=0;a<r.length;a++){let u=r[a];if(u.attr){let h=e.indexOf(u.attr.id);if(h>=0&&(n[h]={id:e[h],ref:u.ref,dataset:ne.parseNVueDataset(u.attr)},e.length===1))break}u.children&&Kt(e,u,n)}}function Gn(e,t,n,r,a){let u=t[n];e.getComponentRect(u.ref,h=>{h.size.id=u.id,h.size.dataset=u.dataset,r.push(h.size),n+=1,n<t.length?Gn(e,t,n,r,a):a(r)})}function Or(e,t){at.invokeViewMethod("setPageMeta",t,e.$page.id)}let In=e=>e!==null&&typeof e=="object",Ii=["{","}"];class Bo{constructor(){this._caches=Object.create(null)}interpolate(t,n,r=Ii){if(!n)return[t];let a=this._caches[t];return a||(a=Zo(t,r),this._caches[t]=a),Ui(a,n)}}let vi=/^(?:\d)+/,to=/^(?:\w)+/;function Zo(e,[t,n]){let r=[],a=0,u="";for(;a<e.length;){let h=e[a++];if(h===t){u&&r.push({type:"text",value:u}),u="";let b="";for(h=e[a++];h!==void 0&&h!==n;)b+=h,h=e[a++];let U=h===n,O=vi.test(b)?"list":U&&to.test(b)?"named":"unknown";r.push({value:b,type:O})}else u+=h}return u&&r.push({type:"text",value:u}),r}function Ui(e,t){let n=[],r=0,a=Array.isArray(t)?"list":In(t)?"named":"unknown";if(a==="unknown")return n;for(;r<e.length;){let u=e[r];switch(u.type){case"text":n.push(u.value);break;case"list":n.push(t[parseInt(u.value,10)]);break;case"named":a==="named"&&n.push(t[u.value]);break;case"unknown":break}r++}return n}let Jn="zh-Hans",pr="zh-Hant",Zn="en",Fr="fr",Tr="es",Hi=Object.prototype.hasOwnProperty,ai=(e,t)=>Hi.call(e,t),vr=new Bo;function Jr(e,t){return!!t.find(n=>e.indexOf(n)!==-1)}function Ni(e,t){return t.find(n=>e.indexOf(n)===0)}function mi(e,t){if(!e)return;if(e=e.trim().replace(/_/g,"-"),t&&t[e])return e;if(e=e.toLowerCase(),e==="chinese")return Jn;if(e.indexOf("zh")===0)return e.indexOf("-hans")>-1?Jn:e.indexOf("-hant")>-1||Jr(e,["-tw","-hk","-mo","-cht"])?pr:Jn;let n=Ni(e,[Zn,Fr,Tr]);if(n)return n}class _i{constructor({locale:t,fallbackLocale:n,messages:r,watcher:a,formater:u}){this.locale=Zn,this.fallbackLocale=Zn,this.message={},this.messages={},this.watchers=[],n&&(this.fallbackLocale=n),this.formater=u||vr,this.messages=r||{},this.setLocale(t||Zn),a&&this.watchLocale(a)}setLocale(t){let n=this.locale;this.locale=mi(t,this.messages)||this.fallbackLocale,this.messages[this.locale]||(this.messages[this.locale]={}),this.message=this.messages[this.locale],n!==this.locale&&this.watchers.forEach(r=>{r(this.locale,n)})}getLocale(){return this.locale}watchLocale(t){let n=this.watchers.push(t)-1;return()=>{this.watchers.splice(n,1)}}add(t,n,r=!0){let a=this.messages[t];a?r?Object.assign(a,n):Object.keys(n).forEach(u=>{ai(a,u)||(a[u]=n[u])}):this.messages[t]=n}f(t,n,r){return this.formater.interpolate(t,n,r).join("")}t(t,n,r){let a=this.message;return typeof n=="string"?(n=mi(n,this.messages),n&&(a=this.messages[n])):r=n,ai(a,t)?this.formater.interpolate(a[t],r).join(""):(console.warn(`Cannot translate the value of keypath ${t}. Use the value of keypath as default.`),t)}}function Zr(e,t){e.$watchLocale?e.$watchLocale(n=>{t.setLocale(n)}):e.$watch(()=>e.$locale,n=>{t.setLocale(n)})}function bi(){return typeof dt!="undefined"&&dt.getLocale?dt.getLocale():typeof global!="undefined"&&global.getLocale?global.getLocale():Zn}function no(e,t={},n,r){typeof e!="string"&&([e,t]=[t,e]),typeof e!="string"&&(e=bi()),typeof n!="string"&&(n=typeof P!="undefined"&&P.fallbackLocale||Zn);let a=new _i({locale:e,fallbackLocale:n,messages:t,watcher:r}),u=(h,b)=>{if(typeof pn!="function")u=function(U,O){return a.t(U,O)};else{let U=!1;u=function(O,F){let ge=pn().$vm;return ge&&(ge.$locale,U||(U=!0,Zr(ge,a))),a.t(O,F)}}return u(h,b)};return{i18n:a,f(h,b,U){return a.f(h,b,U)},t(h,b){return u(h,b)},add(h,b,U=!0){return a.add(h,b,U)},watch(h){return a.watchLocale(h)},getLocale(){return a.getLocale()},setLocale(h){return a.setLocale(h)}}}function ji(e,t){return e.indexOf(t[0])>-1}let ro=ne.once(()=>typeof P!="undefined"&&P.locales&&!!Object.keys(P.locales).length),x;function re(){let e=dt.getLocale(),t=P.locales;return t[e]||t[P.fallbackLocale]||t.en||{}}function he(e){return ji(e,ne.I18N_JSON_DELIMITERS)?X().f(e,re(),ne.I18N_JSON_DELIMITERS):e}function H(e,t){if(t.length===1){if(e){let r=e[t[0]];if(q.isString(r)&&ji(r,ne.I18N_JSON_DELIMITERS))return e}return}let n=t.shift();return H(e&&e[n],t)}function M(e,t){return t.map(n=>J(e,n))}function J(e,t){let n=H(e,t);if(!n)return!1;let r=t[t.length-1],a=n[r];return Object.defineProperty(n,r,{get(){return he(a)},set(u){a=u}}),!0}function X(){if(!x){let e;if(typeof pn=="function"?e=g.requireModule("plus").getLanguage():e=s.webview.currentWebview().getStyle().locale,x=no(e),ro()){let t=Object.keys(P.locales||{});t.length&&t.forEach(n=>x.add(n,P.locales[n])),x.setLocale(e)}}return x}function fe(e,t,n){return t.reduce((r,a,u)=>(r[e+a]=n[u],r),{})}let en=ne.once(()=>{let e="uni.app.",t=["quit"];X().add(Zn,fe(e,t,["Press back button again to exit"]),!1),X().add(Tr,fe(e,t,["Pulse otra vez para salir"]),!1),X().add(Fr,fe(e,t,["Appuyez \xE0 nouveau pour quitter l'application"]),!1),X().add(Jn,fe(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u5E94\u7528"]),!1),X().add(pr,fe(e,t,["\u518D\u6309\u4E00\u6B21\u9000\u51FA\u61C9\u7528"]),!1)}),Mn=ne.once(()=>{let e="uni.showActionSheet.",t=["cancel"];X().add(Zn,fe(e,t,["Cancel"]),!1),X().add(Tr,fe(e,t,["Cancelar"]),!1),X().add(Fr,fe(e,t,["Annuler"]),!1),X().add(Jn,fe(e,t,["\u53D6\u6D88"]),!1),X().add(pr,fe(e,t,["\u53D6\u6D88"]),!1)}),cn=ne.once(()=>{let e="uni.showModal.",t=["cancel","confirm"];X().add(Zn,fe(e,t,["Cancel","OK"]),!1),X().add(Tr,fe(e,t,["Cancelar","OK"]),!1),X().add(Fr,fe(e,t,["Annuler","OK"]),!1),X().add(Jn,fe(e,t,["\u53D6\u6D88","\u786E\u5B9A"]),!1),X().add(pr,fe(e,t,["\u53D6\u6D88","\u78BA\u5B9A"]),!1)}),si=ne.once(()=>{let e="uni.chooseImage.",t=["cancel","sourceType.album","sourceType.camera"];X().add(Zn,fe(e,t,["Cancel","Album","Camera"]),!1),X().add(Tr,fe(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),X().add(Fr,fe(e,t,["Annuler","Album","Cam\xE9ra"]),!1),X().add(Jn,fe(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),X().add(pr,fe(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),mr=ne.once(()=>{let e="uni.chooseVideo.",t=["cancel","sourceType.album","sourceType.camera"];X().add(Zn,fe(e,t,["Cancel","Album","Camera"]),!1),X().add(Tr,fe(e,t,["Cancelar","\xC1lbum","C\xE1mara"]),!1),X().add(Fr,fe(e,t,["Annuler","Album","Cam\xE9ra"]),!1),X().add(Jn,fe(e,t,["\u53D6\u6D88","\u4ECE\u76F8\u518C\u9009\u62E9","\u62CD\u6444"]),!1),X().add(pr,fe(e,t,["\u53D6\u6D88","\u5F9E\u76F8\u518A\u9078\u64C7","\u62CD\u651D"]),!1)}),Xo=ne.once(()=>{let e="uni.previewImage.",t=["cancel","button.save","save.success","save.fail"];X().add(Zn,fe(e,t,["Cancel","Save Image","Saved successfully","Save failed"]),!1),X().add(Tr,fe(e,t,["Cancelar","Guardar imagen","Guardado exitosamente","Error al guardar"]),!1),X().add(Fr,fe(e,t,["Annuler","Guardar imagen","Enregistr\xE9 avec succ\xE8s","\xC9chec de la sauvegarde"]),!1),X().add(Jn,fe(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u56FE\u50CF","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u6210\u529F","\u4FDD\u5B58\u56FE\u50CF\u5230\u76F8\u518C\u5931\u8D25"]),!1),X().add(pr,fe(e,t,["\u53D6\u6D88","\u4FDD\u5B58\u5716\u50CF","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u6210\u529F","\u4FDD\u5B58\u5716\u50CF\u5230\u76F8\u518A\u5931\u6557"]),!1)}),jo=ne.once(()=>{let e="uni.setClipboardData.",t=["success","fail"];X().add(Zn,fe(e,t,["Content copied","Copy failed, please copy manually"]),!1),X().add(Tr,fe(e,t,["Contenido copiado","Error al copiar, copie manualmente"]),!1),X().add(Fr,fe(e,t,["Contenu copi\xE9","\xC9chec de la copie, copiez manuellement"]),!1),X().add(Jn,fe(e,t,["\u5185\u5BB9\u5DF2\u590D\u5236","\u590D\u5236\u5931\u8D25\uFF0C\u8BF7\u624B\u52A8\u590D\u5236"]),!1),X().add(pr,fe(e,t,["\u5167\u5BB9\u5DF2\u5FA9\u5236","\u5FA9\u5236\u5931\u6557\uFF0C\u8ACB\u624B\u52D5\u5FA9\u88FD"]),!1)}),Qo=ne.once(()=>{let e="uni.scanCode.",t=["title","album","fail","flash.on","flash.off"];X().add(Zn,fe(e,t,["Scan code","Album","Recognition failure","Tap to turn light on","Tap to turn light off"]),!1),X().add(Tr,fe(e,t,["C\xF3digo de escaneo","\xC1lbum","\xC9chec de la reconnaissance","Toque para encender la luz","Toque para apagar la luz"]),!1),X().add(Fr,fe(e,t,["Code d\u2019analyse","Album","Fallo de reconocimiento","Appuyez pour activer l'\xE9clairage","Appuyez pour d\xE9sactiver l'\xE9clairage"]),!1),X().add(Jn,fe(e,t,["\u626B\u7801","\u76F8\u518C","\u8BC6\u522B\u5931\u8D25","\u8F7B\u89E6\u7167\u4EAE","\u8F7B\u89E6\u5173\u95ED"]),!1),X().add(pr,fe(e,t,["\u6383\u78BC","\u76F8\u518A","\u8B58\u5225\u5931\u6557","\u8F15\u89F8\u7167\u4EAE","\u8F15\u89F8\u95DC\u9589"]),!1)}),Mo=ne.once(()=>{let e="uni.startSoterAuthentication.",t=["authContent"];X().add(Zn,fe(e,t,["Fingerprint recognition"]),!1),X().add(Tr,fe(e,t,["Reconocimiento de huellas dactilares"]),!1),X().add(Fr,fe(e,t,["Reconnaissance de l'empreinte digitale"]),!1),X().add(Jn,fe(e,t,["\u6307\u7EB9\u8BC6\u522B\u4E2D..."]),!1),X().add(pr,fe(e,t,["\u6307\u7D0B\u8B58\u5225\u4E2D..."]),!1)});function Eo(e){if(ro())return M(e,[["titleText"],["searchInput","placeholder"]])}function io(e){if(ro()){let t="caption";return M(e,[["contentdown",t],["contentover",t],["contentrefresh",t]])}}function xa(e){let t=new ne.Emitter;return{on(n,r){return t.on(n,r)},once(n,r){return t.once(n,r)},off(n,r){return t.off(n,r)},emit(n,...r){return t.emit(n,...r)},subscribe(n,r,a=!1){t[a?"once":"on"](`${e}.${n}`,r)},unsubscribe(n,r){t.off(`${e}.${n}`,r)},subscribeHandler(n,r,a){t.emit(`${e}.${n}`,r,a)}}}let ea="invokeViewApi",ma="invokeServiceApi";function rs(e){return e=e+"",e.indexOf("rpx")!==-1||e.indexOf("upx")!==-1}function ta(e,t=!1){if(t)return Ba(e);if(q.isString(e)){let n=parseInt(e)||0;return rs(e)?dt.upx2px(n):n}return e}function Ba(e){return rs(e)?e.replace(/(\d+(\.\d+)?)[ru]px/g,(t,n)=>dt.upx2px(parseFloat(n))+"px"):e}function ur(e){let t=ne.resolveComponentInstance(e);if(t.$page)return t.$page.id;if(!t.$)return;let n=t.$.root.proxy;if(n&&n.$page)return n.$page.id}function _r(){let e=Pn(),t=e.length;if(t)return e[t-1]}function na(){let e=_r();if(e)return e.$page.meta}function Ma(){let e=na();return e?e.id:-1}function Vr(){let e=_r();if(e)return e.$vm}let La=["navigationBar","pullToRefresh"];function br(){return JSON.parse(JSON.stringify(P.globalStyle||{}))}function Xn(e,t){let n=br(),r=q.extend({id:t},n,e);La.forEach(u=>{r[u]=q.extend({},n[u],e[u])});let{navigationBar:a}=r;return a.titleText&&a.titleImage&&(a.titleText=""),r}function Lo(e){return JSON.parse(ta(JSON.stringify(e),!0))}function Ss(e){return e.offset&&(e.offset=ta(e.offset)),e.height&&(e.height=ta(e.height)),e.range&&(e.range=ta(e.range)),e}function zo(e,t,n,r,a){let{id:u,route:h}=r;return{id:u,path:ne.addLeadingSlash(h),route:h,fullPath:t,options:n,meta:r,openType:e,eventChannel:a,statusBarStyle:r.navigationBar.titleColor==="#000000"?"dark":"light"}}function is(e,t,n){let r=e.$[t];!q.isArray(r)||n.__weh&&q.remove(r,n.__weh)}function zn(e,t,n){if(q.isString(e))n=t,t=e,e=Vr();else if(typeof e=="number"){let a=Pn().find(u=>u.$page.id===e);a?e=a.$vm:e=Vr()}if(!e)return;if(e.__call_hook)return e.__call_hook(t,n);let r=e.$[t];return r&&ne.invokeArrayFns(r,n)}function _a(e){if(e.indexOf("/")===0)return e;let t="",n=Pn();return n.length&&(t=n[n.length-1].$page.route),Wo(t,e)}function Wo(e,t){if(t.indexOf("/")===0)return t;if(t.indexOf("./")===0)return Wo(e,t.slice(2));let n=t.split("/"),r=n.length,a=0;for(;a<r&&n[a]==="..";a++);n.splice(0,a),t=n.join("/");let u=e.length>0?e.split("/"):[];return u.splice(u.length-a-1,a+1),ne.addLeadingSlash(u.concat(n).join("/"))}function ki(e,t=!1){return t?He.find(n=>n.path===e||n.alias===e):He.find(n=>n.path===e)}function ba(e){let t=ki(e);if(t)return t.meta}function Da(e,t,n){let r=ki(ne.addLeadingSlash(t));if(r){let{meta:u}=r;delete u.tabBarIndex,u.isQuit=u.isTabBar=!1}let a=ki(ne.addLeadingSlash(n));if(a){let{meta:u}=a;u.tabBarIndex=e,u.isQuit=u.isTabBar=!0;let h=P.tabBar;h&&h.list&&h.list[e]&&(h.list[e].pagePath=ne.removeLeadingSlash(n))}}let oo,ra,yo;function zi(){return typeof window=="object"&&typeof navigator=="object"&&typeof document=="object"?"webview":"v8"}function Ea(){return oo.webview.currentWebview().id}let ia,ya,oa={};function wa(e){let t=e.data&&e.data.__message;if(!t||!t.__page)return;let n=t.__page,r=oa[n];r&&r(t),t.keep||delete oa[n]}function As(e,t){zi()==="v8"?yo?(ia&&ia.close(),ia=new yo(Ea()),ia.onmessage=wa):ya||(ya=ra.requireModule("globalEvent"),ya.addEventListener("plusMessage",wa)):window.__plusMessage=wa,oa[e]=t}class ao{constructor(t){this.webview=t}sendMessage(t){let n=JSON.parse(JSON.stringify({__message:{data:t}})),r=this.webview.id;yo?new yo(r).postMessage(n):oo.webview.postMessageToUniNView&&oo.webview.postMessageToUniNView(n,r)}close(){this.webview.close()}}function li({context:e={},url:t,data:n={},style:r={},onMessage:a,onClose:u}){oo=e.plus||s,ra=e.weex||(typeof g=="object"?g:null),yo=e.BroadcastChannel||(typeof BroadcastChannel=="object"?BroadcastChannel:null);let h={autoBackButton:!0,titleSize:"17px"},b=`page${Date.now()}`;r=q.extend({},r),r.titleNView!==!1&&r.titleNView!=="none"&&(r.titleNView=q.extend(h,r.titleNView));let U={top:0,bottom:0,usingComponents:{},popGesture:"close",scrollIndicator:"none",animationType:"pop-in",animationDuration:200,uniNView:{path:`/${t}.js`,defaultFontSize:16,viewport:oo.screen.resolutionWidth}};r=q.extend(U,r);let O=oo.webview.create("",b,r,{extras:{from:Ea(),runtime:zi(),data:n,useGlobalEvent:!yo}});return O.addEventListener("close",u),As(b,F=>{q.isFunction(a)&&a(F.data),F.keep||O.close("auto")}),O.show(r.animationType,r.animationDuration),new ao(O)}let Ri=(e,t)=>at.emit("api."+e,t),so=1;function aa(){return Ma()+"."+ea}let m=(e,t,n,r)=>{let{subscribe:a,publishHandler:u}=at,h=r?so++:0;r&&a(ea+"."+h,r,!0),u(aa(),{id:h,name:e,args:t},n)},k=(e,t,n,r)=>{let{subscribe:a,unsubscribe:u,publishHandler:h}=at,b=so++,U=ea+"."+b;return a(U,n),h(aa(),{id:b,name:e,args:t},r),()=>{u(U)}},z=Object.create(null);function j(){at.subscribe(ma,ee)}function Z(e,t){z[e]||(z[e]=t)}function ee({id:e,name:t,args:n},r){let a=h=>{e&&at.publishHandler(ma+"."+e,h,r)},u=z[t];u?u(n,a):a({})}let ce=q.extend(xa("view"),{invokeOnCallback:Ri,invokeViewMethod:m,invokeViewMethodKeepAlive:k});function Ee(){let{on:e}=at;e(ne.ON_RESIZE,Te),e(ne.ON_APP_ENTER_FOREGROUND,Ie),e(ne.ON_APP_ENTER_BACKGROUND,me)}function Te(e){zn(_r(),ne.ON_RESIZE,e),at.invokeOnCallback("onWindowResize",e)}function Ie(e){let t=_r();zn(pn(),ne.ON_SHOW,e),zn(t,ne.ON_SHOW)}function me(){zn(pn(),ne.ON_HIDE),zn(_r(),ne.ON_HIDE)}let Be=[ne.ON_PAGE_SCROLL,ne.ON_REACH_BOTTOM];function nt(){Be.forEach(e=>at.subscribe(e,_t(e)))}function _t(e){return(t,n)=>{zn(parseInt(n),e,t)}}function Gt(){Ee(),nt()}function tt(e){e.$vm=e,e.$mpType="app";let t=En.ref(X().getLocale());Object.defineProperty(e,"$locale",{get(){return t.value},set(n){t.value=n}})}function ze(e,t){e.route=t.route,e.$vm=e,e.$page=t,e.$mpType="page",t.meta.isTabBar&&(e.$.__isTabBar=!0,e.$.__isActive=!0)}function st(){return{path:"",query:{},scene:1001,referrerInfo:{appId:"",extraData:{}}}}function Ft(e,t){let n=e.$options||{};n.globalData=q.extend(n.globalData||{},t),Object.defineProperty(e,"globalData",{get(){return n.globalData},set(r){n.globalData=r}})}function ht(e){if(e.indexOf("//")===0)return"https:"+e;if(ne.SCHEME_RE.test(e)||ne.DATA_RE.test(e))return e;if(Ct(e))return"file://"+Je(e);let t="file://"+Je("_www");if(e.indexOf("/")===0)return e.startsWith("/storage/")||e.startsWith("/sdcard/")||e.includes("/Containers/Data/Application/")?"file://"+e:t+e;if(e.indexOf("../")===0||e.indexOf("./")===0){if(typeof __id__=="string")return t+Wo(ne.addLeadingSlash(__id__),e);{let n=_r();if(n)return t+Wo(ne.addLeadingSlash(n.route),e)}}return e}let Je=ne.cacheStringFunction(e=>s.io.convertLocalFileSystemURL(e).replace(/^\/?apps\//,"/android_asset/apps/").replace(/\/$/,""));function Ct(e){return e.indexOf("_www")===0||e.indexOf("_doc")===0||e.indexOf("_documents")===0||e.indexOf("_downloads")===0}let wn="success",un="fail",Sn=[wn,un,"complete"];function Ht(e,t,n,r){if(!e)return;if(typeof n=="undefined")return e[t]();let[,a]=Er(n,r);return Object.keys(a).length?e[t](Do(t,a)):e[t]()}function Ln(e,t,n,r){if(!e)return;let[a,u]=Er(n,r);return Object.keys(u).length?e[t](a,Do(t,u)):e[t](a)}function Ei(e,t){let n=ir(e,t.$el);return n||console.error("Can not find `"+e+"`")}function ir(e,t){if(!e||!t)return;if(t.attr&&t.attr.id===e)return t;let n=t.children;if(!!n)for(let r=0,a=n.length;r<a;r++){let u=ir(e,n[r]);if(u)return u}}function Er(e={},t){let n=Object.create(null),r=function(u){let h=e[u];q.isFunction(h)&&(n[u]=h,delete e[u])};return Sn.forEach(r),t&&t.forEach(r),[e,n]}function Do(e,t){return function(r){let a=r.type;delete r.type;let u=t[a];if(a===wn?r.errMsg=`${e}:ok`:a===un&&(r.errMsg=e+":fail "+(r.msg?" "+r.msg:"")),delete r.code,delete r.msg,q.isFunction(u)&&u(r),a===wn||a===un){let h=t.complete;q.isFunction(h)&&h(r)}}}let lo={play(e){return Ht(e,"play")},pause(e){return Ht(e,"pause")},seek(e,t){return Ln(e,"seek",t.position)},stop(e){return Ht(e,"stop")},sendDanmu(e,t){return Ln(e,"sendDanmu",t)},playbackRate(e,t){return Ln(e,"playbackRate",t.rate)},requestFullScreen(e,t={}){return Ln(e,"requestFullScreen",t)},exitFullScreen(e){return Ht(e,"exitFullScreen")},showStatusBar(e){return Ht(e,"showStatusBar")},hideStatusBar(e){return Ht(e,"hideStatusBar")}};function $r(e,t,n,r){let a=Pn().find(u=>u.$page.id===t);if(a==null?void 0:a.$page.meta.isNVue){let u=a.$vm;return lo[n](Ei(e,u),r)}at.invokeViewMethod("video."+e,{videoId:e,type:n,data:r},t)}let Fo={getCenterLocation(e,t){return Ht(e,"getCenterLocation",t)},moveToLocation(e,t){return Ln(e,"moveToLocation",t)},translateMarker(e,t){return Ln(e,"translateMarker",t,["animationEnd"])},includePoints(e,t){return Ln(e,"includePoints",t)},getRegion(e,t){return Ht(e,"getRegion",t)},getScale(e,t){return Ht(e,"getScale",t)},addCustomLayer(e,t){return Ln(e,"addCustomLayer",t)},removeCustomLayer(e,t){return Ln(e,"removeCustomLayer",t)},addGroundOverlay(e,t){return Ln(e,"addGroundOverlay",t)},removeGroundOverlay(e,t){return Ln(e,"removeGroundOverlay",t)},updateGroundOverlay(e,t){return Ln(e,"updateGroundOverlay",t)},initMarkerCluster(e,t){return Ln(e,"initMarkerCluster",t)},addMarkers(e,t){return Ln(e,"addMarkers",t)},removeMarkers(e,t){return Ln(e,"removeMarkers",t)},moveAlong(e,t){return Ln(e,"moveAlong",t)},openMapApp(e,t){return Ln(e,"openMapApp",t)},on(e,t){return e.on(t.name,t.callback)}};function $t(e,t,n,r,a){let u=Pn().find(h=>h.$page.id===t);if(u==null?void 0:u.$page.meta.isNVue){let h=u.$vm;return Fo[n](Ei(e,h),r)}at.invokeViewMethod("map."+e,{type:n,data:r},t,a)}function _n(e){return`IntersectionObserver.${e}`}function Fa({reqId:e,component:t,options:n,callback:r},a){let u=_n(e);at.invokeViewMethod("addIntersectionObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:u},a),at.subscribe(u,r)}function yi({reqId:e,component:t},n){at.invokeViewMethod("removeIntersectionObserver",{reqId:e,component:t.$el.nodeId},n),at.unsubscribe(_n(e))}function Xr(e){return`MediaQueryObserver.${e}`}function Vo({reqId:e,component:t,options:n,callback:r},a){let u=Xr(e);at.invokeViewMethod("addMediaQueryObserver",{reqId:e,component:t.$el.nodeId,options:n,eventName:u},a),at.subscribe(u,r)}function sa({reqId:e,component:t},n){at.invokeViewMethod("removeMediaQueryObserver",{reqId:e,component:t.$el.nodeId},n),at.unsubscribe(Xr(e))}let Dn=200,An=["unknown","none","ethernet","wifi","2g","3g","4g","5g"],Qr="_doc/uniapp_temp",ei=`${Qr}_${Date.now()}`;function Pr(e){let t=e.split("/");return t[t.length-1]}function Ur(e){let t=e.split(".");return t.length>1?"."+t[t.length-1]:""}let os="backbutton";function la(){dt.navigateBack({from:"backbutton",success(){}})}let Fn=st(),fn=st();function fr(){return q.extend({},fn)}function Ir(){return q.extend({},Fn)}function Wi({path:e,query:t,referrerInfo:n}){q.extend(Fn,{path:e,query:t?ne.parseQuery(t):{},referrerInfo:n||{}})}function Va({path:e,query:t,referrerInfo:n}){return q.extend(fn,{path:e,query:t?ne.parseQuery(t):{},referrerInfo:n||{},channel:s.runtime.channel,launcher:s.runtime.launcher}),q.extend(Fn,fn),q.extend({},fn)}function Sa(){let e=g.requireModule("plus");if(e.getRedirectInfo){let{path:t,query:n,extraData:r,userAction:a,fromAppid:u}=e.getRedirectInfo()||{},h={appId:u,extraData:{}};return r&&(h.extraData=r),{path:t||"",query:n?"?"+n:"",referrerInfo:h,userAction:a}}}function Go(e){var t={exports:{}};return e(t,t.exports),t.exports}var co=Go(function(e,t){var n=typeof Uint8Array!="undefined"&&typeof Uint16Array!="undefined"&&typeof Int32Array!="undefined";function r(h,b){return Object.prototype.hasOwnProperty.call(h,b)}t.assign=function(h){for(var b=Array.prototype.slice.call(arguments,1);b.length;){var U=b.shift();if(!!U){if(typeof U!="object")throw new TypeError(U+"must be non-object");for(var O in U)r(U,O)&&(h[O]=U[O])}}return h},t.shrinkBuf=function(h,b){return h.length===b?h:h.subarray?h.subarray(0,b):(h.length=b,h)};var a={arraySet:function(h,b,U,O,F){if(b.subarray&&h.subarray){h.set(b.subarray(U,U+O),F);return}for(var ge=0;ge<O;ge++)h[F+ge]=b[U+ge]},flattenChunks:function(h){var b,U,O,F,ge,Se;for(O=0,b=0,U=h.length;b<U;b++)O+=h[b].length;for(Se=new Uint8Array(O),F=0,b=0,U=h.length;b<U;b++)ge=h[b],Se.set(ge,F),F+=ge.length;return Se}},u={arraySet:function(h,b,U,O,F){for(var ge=0;ge<O;ge++)h[F+ge]=b[U+ge]},flattenChunks:function(h){return[].concat.apply([],h)}};t.setTyped=function(h){h?(t.Buf8=Uint8Array,t.Buf16=Uint16Array,t.Buf32=Int32Array,t.assign(t,a)):(t.Buf8=Array,t.Buf16=Array,t.Buf32=Array,t.assign(t,u))},t.setTyped(n)}),Mt=co,wo=4,as=0,Aa=1,Cs=2;function Ne(e){for(var t=e.length;--t>=0;)e[t]=0}var Ot=0,Pt=1,Tn=2,Qn=3,Nr=258,Gi=29,Yi=256,So=Yi+1+Gi,Yo=30,$a=19,Zs=2*So+1,ca=15,Os=16,Xs=7,ss=256,Qs=16,el=17,tl=18,Ua=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],Ha=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],Hl=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],nl=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],rl=512,uo=new Array((So+2)*2);Ne(uo);var Ca=new Array(Yo*2);Ne(Ca);var ja=new Array(rl);Ne(ja);var za=new Array(Nr-Qn+1);Ne(za);var ua=new Array(Gi);Ne(ua);var Oa=new Array(Yo);Ne(Oa);function Ta(e,t,n,r,a){this.static_tree=e,this.extra_bits=t,this.extra_base=n,this.elems=r,this.max_length=a,this.has_stree=e&&e.length}var Ts,Wa,ls;function cs(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function il(e){return e<256?ja[e]:ja[256+(e>>>7)]}function Ga(e,t){e.pending_buf[e.pending++]=t&255,e.pending_buf[e.pending++]=t>>>8&255}function ci(e,t,n){e.bi_valid>Os-n?(e.bi_buf|=t<<e.bi_valid&65535,Ga(e,e.bi_buf),e.bi_buf=t>>Os-e.bi_valid,e.bi_valid+=n-Os):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=n)}function fo(e,t,n){ci(e,n[t*2],n[t*2+1])}function Ps(e,t){var n=0;do n|=e&1,e>>>=1,n<<=1;while(--t>0);return n>>>1}function ol(e){e.bi_valid===16?(Ga(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=e.bi_buf&255,e.bi_buf>>=8,e.bi_valid-=8)}function al(e,t){var n=t.dyn_tree,r=t.max_code,a=t.stat_desc.static_tree,u=t.stat_desc.has_stree,h=t.stat_desc.extra_bits,b=t.stat_desc.extra_base,U=t.stat_desc.max_length,O,F,ge,Se,ke,Et,Tt=0;for(Se=0;Se<=ca;Se++)e.bl_count[Se]=0;for(n[e.heap[e.heap_max]*2+1]=0,O=e.heap_max+1;O<Zs;O++)F=e.heap[O],Se=n[n[F*2+1]*2+1]+1,Se>U&&(Se=U,Tt++),n[F*2+1]=Se,!(F>r)&&(e.bl_count[Se]++,ke=0,F>=b&&(ke=h[F-b]),Et=n[F*2],e.opt_len+=Et*(Se+ke),u&&(e.static_len+=Et*(a[F*2+1]+ke)));if(Tt!==0){do{for(Se=U-1;e.bl_count[Se]===0;)Se--;e.bl_count[Se]--,e.bl_count[Se+1]+=2,e.bl_count[U]--,Tt-=2}while(Tt>0);for(Se=U;Se!==0;Se--)for(F=e.bl_count[Se];F!==0;)ge=e.heap[--O],!(ge>r)&&(n[ge*2+1]!==Se&&(e.opt_len+=(Se-n[ge*2+1])*n[ge*2],n[ge*2+1]=Se),F--)}}function us(e,t,n){var r=new Array(ca+1),a=0,u,h;for(u=1;u<=ca;u++)r[u]=a=a+n[u-1]<<1;for(h=0;h<=t;h++){var b=e[h*2+1];b!==0&&(e[h*2]=Ps(r[b]++,b))}}function sl(){var e,t,n,r,a,u=new Array(ca+1);for(n=0,r=0;r<Gi-1;r++)for(ua[r]=n,e=0;e<1<<Ua[r];e++)za[n++]=r;for(za[n-1]=r,a=0,r=0;r<16;r++)for(Oa[r]=a,e=0;e<1<<Ha[r];e++)ja[a++]=r;for(a>>=7;r<Yo;r++)for(Oa[r]=a<<7,e=0;e<1<<Ha[r]-7;e++)ja[256+a++]=r;for(t=0;t<=ca;t++)u[t]=0;for(e=0;e<=143;)uo[e*2+1]=8,e++,u[8]++;for(;e<=255;)uo[e*2+1]=9,e++,u[9]++;for(;e<=279;)uo[e*2+1]=7,e++,u[7]++;for(;e<=287;)uo[e*2+1]=8,e++,u[8]++;for(us(uo,So+1,u),e=0;e<Yo;e++)Ca[e*2+1]=5,Ca[e*2]=Ps(e,5);Ts=new Ta(uo,Ua,Yi+1,So,ca),Wa=new Ta(Ca,Ha,0,Yo,ca),ls=new Ta(new Array(0),Hl,0,$a,Xs)}function Is(e){var t;for(t=0;t<So;t++)e.dyn_ltree[t*2]=0;for(t=0;t<Yo;t++)e.dyn_dtree[t*2]=0;for(t=0;t<$a;t++)e.bl_tree[t*2]=0;e.dyn_ltree[ss*2]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function ll(e){e.bi_valid>8?Ga(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function jl(e,t,n,r){ll(e),r&&(Ga(e,n),Ga(e,~n)),Mt.arraySet(e.pending_buf,e.window,t,n,e.pending),e.pending+=n}function cl(e,t,n,r){var a=t*2,u=n*2;return e[a]<e[u]||e[a]===e[u]&&r[t]<=r[n]}function Ya(e,t,n){for(var r=e.heap[n],a=n<<1;a<=e.heap_len&&(a<e.heap_len&&cl(t,e.heap[a+1],e.heap[a],e.depth)&&a++,!cl(t,r,e.heap[a],e.depth));)e.heap[n]=e.heap[a],n=a,a<<=1;e.heap[n]=r}function Ns(e,t,n){var r,a,u=0,h,b;if(e.last_lit!==0)do r=e.pending_buf[e.d_buf+u*2]<<8|e.pending_buf[e.d_buf+u*2+1],a=e.pending_buf[e.l_buf+u],u++,r===0?fo(e,a,t):(h=za[a],fo(e,h+Yi+1,t),b=Ua[h],b!==0&&(a-=ua[h],ci(e,a,b)),r--,h=il(r),fo(e,h,n),b=Ha[h],b!==0&&(r-=Oa[h],ci(e,r,b)));while(u<e.last_lit);fo(e,ss,t)}function Ao(e,t){var n=t.dyn_tree,r=t.stat_desc.static_tree,a=t.stat_desc.has_stree,u=t.stat_desc.elems,h,b,U=-1,O;for(e.heap_len=0,e.heap_max=Zs,h=0;h<u;h++)n[h*2]!==0?(e.heap[++e.heap_len]=U=h,e.depth[h]=0):n[h*2+1]=0;for(;e.heap_len<2;)O=e.heap[++e.heap_len]=U<2?++U:0,n[O*2]=1,e.depth[O]=0,e.opt_len--,a&&(e.static_len-=r[O*2+1]);for(t.max_code=U,h=e.heap_len>>1;h>=1;h--)Ya(e,n,h);O=u;do h=e.heap[1],e.heap[1]=e.heap[e.heap_len--],Ya(e,n,1),b=e.heap[1],e.heap[--e.heap_max]=h,e.heap[--e.heap_max]=b,n[O*2]=n[h*2]+n[b*2],e.depth[O]=(e.depth[h]>=e.depth[b]?e.depth[h]:e.depth[b])+1,n[h*2+1]=n[b*2+1]=O,e.heap[1]=O++,Ya(e,n,1);while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],al(e,t),us(n,U,e.bl_count)}function Pa(e,t,n){var r,a=-1,u,h=t[0*2+1],b=0,U=7,O=4;for(h===0&&(U=138,O=3),t[(n+1)*2+1]=65535,r=0;r<=n;r++)u=h,h=t[(r+1)*2+1],!(++b<U&&u===h)&&(b<O?e.bl_tree[u*2]+=b:u!==0?(u!==a&&e.bl_tree[u*2]++,e.bl_tree[Qs*2]++):b<=10?e.bl_tree[el*2]++:e.bl_tree[tl*2]++,b=0,a=u,h===0?(U=138,O=3):u===h?(U=6,O=3):(U=7,O=4))}function fs(e,t,n){var r,a=-1,u,h=t[0*2+1],b=0,U=7,O=4;for(h===0&&(U=138,O=3),r=0;r<=n;r++)if(u=h,h=t[(r+1)*2+1],!(++b<U&&u===h)){if(b<O)do fo(e,u,e.bl_tree);while(--b!==0);else u!==0?(u!==a&&(fo(e,u,e.bl_tree),b--),fo(e,Qs,e.bl_tree),ci(e,b-3,2)):b<=10?(fo(e,el,e.bl_tree),ci(e,b-3,3)):(fo(e,tl,e.bl_tree),ci(e,b-11,7));b=0,a=u,h===0?(U=138,O=3):u===h?(U=6,O=3):(U=7,O=4)}}function ul(e){var t;for(Pa(e,e.dyn_ltree,e.l_desc.max_code),Pa(e,e.dyn_dtree,e.d_desc.max_code),Ao(e,e.bl_desc),t=$a-1;t>=3&&e.bl_tree[nl[t]*2+1]===0;t--);return e.opt_len+=3*(t+1)+5+5+4,t}function zl(e,t,n,r){var a;for(ci(e,t-257,5),ci(e,n-1,5),ci(e,r-4,4),a=0;a<r;a++)ci(e,e.bl_tree[nl[a]*2+1],3);fs(e,e.dyn_ltree,t-1),fs(e,e.dyn_dtree,n-1)}function qo(e){var t=4093624447,n;for(n=0;n<=31;n++,t>>>=1)if(t&1&&e.dyn_ltree[n*2]!==0)return as;if(e.dyn_ltree[9*2]!==0||e.dyn_ltree[10*2]!==0||e.dyn_ltree[13*2]!==0)return Aa;for(n=32;n<Yi;n++)if(e.dyn_ltree[n*2]!==0)return Aa;return as}var ks=!1;function fl(e){ks||(sl(),ks=!0),e.l_desc=new cs(e.dyn_ltree,Ts),e.d_desc=new cs(e.dyn_dtree,Wa),e.bl_desc=new cs(e.bl_tree,ls),e.bi_buf=0,e.bi_valid=0,Is(e)}function dl(e,t,n,r){ci(e,(Ot<<1)+(r?1:0),3),jl(e,t,n,!0)}function Rs(e){ci(e,Pt<<1,3),fo(e,ss,uo),ol(e)}function $o(e,t,n,r){var a,u,h=0;e.level>0?(e.strm.data_type===Cs&&(e.strm.data_type=qo(e)),Ao(e,e.l_desc),Ao(e,e.d_desc),h=ul(e),a=e.opt_len+3+7>>>3,u=e.static_len+3+7>>>3,u<=a&&(a=u)):a=u=n+5,n+4<=a&&t!==-1?dl(e,t,n,r):e.strategy===wo||u===a?(ci(e,(Pt<<1)+(r?1:0),3),Ns(e,uo,Ca)):(ci(e,(Tn<<1)+(r?1:0),3),zl(e,e.l_desc.max_code+1,e.d_desc.max_code+1,h+1),Ns(e,e.dyn_ltree,e.dyn_dtree)),Is(e),r&&ll(e)}function fa(e,t,n){return e.pending_buf[e.d_buf+e.last_lit*2]=t>>>8&255,e.pending_buf[e.d_buf+e.last_lit*2+1]=t&255,e.pending_buf[e.l_buf+e.last_lit]=n&255,e.last_lit++,t===0?e.dyn_ltree[n*2]++:(e.matches++,t--,e.dyn_ltree[(za[n]+Yi+1)*2]++,e.dyn_dtree[il(t)*2]++),e.last_lit===e.lit_bufsize-1}var hl=fl,Wl=dl,gl=$o,ds=fa,pl=Rs,vl={_tr_init:hl,_tr_stored_block:Wl,_tr_flush_block:gl,_tr_tally:ds,_tr_align:pl};function ml(e,t,n,r){for(var a=e&65535|0,u=e>>>16&65535|0,h=0;n!==0;){h=n>2e3?2e3:n,n-=h;do a=a+t[r++]|0,u=u+a|0;while(--h);a%=65521,u%=65521}return a|u<<16|0}var _l=ml;function bl(){for(var e,t=[],n=0;n<256;n++){e=n;for(var r=0;r<8;r++)e=e&1?3988292384^e>>>1:e>>>1;t[n]=e}return t}var El=bl();function yl(e,t,n,r){var a=El,u=r+n;e^=-1;for(var h=r;h<u;h++)e=e>>>8^a[(e^t[h])&255];return e^-1}var Gl=yl,Yl={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},o=vl,c=_l,p=Gl,E=Yl,T=0,C=1,V=3,W=4,Y=5,oe=0,je=1,Ye=-2,pe=-3,$e=-5,We=-1,vt=1,wt=2,Ae=3,de=4,Le=0,i=2,l=8,d=9,v=15,y=8,w=29,I=256,L=I+1+w,$=30,te=19,ae=2*L+1,Re=15,Q=3,ve=258,Ce=ve+Q+1,lt=32,mt=42,_e=69,se=73,be=91,Ge=103,Me=113,rt=666,Ze=1,De=2,bt=3,yt=4,Bt=3;function jt(e,t){return e.msg=E[t],t}function ut(e){return(e<<1)-(e>4?9:0)}function D(e){for(var t=e.length;--t>=0;)e[t]=0}function K(e){var t=e.state,n=t.pending;n>e.avail_out&&(n=e.avail_out),n!==0&&(Mt.arraySet(e.output,t.pending_buf,t.pending_out,n,e.next_out),e.next_out+=n,t.pending_out+=n,e.total_out+=n,e.avail_out-=n,t.pending-=n,t.pending===0&&(t.pending_out=0))}function le(e,t){o._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,K(e.strm)}function ue(e,t){e.pending_buf[e.pending++]=t}function Pe(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=t&255}function et(e,t,n,r){var a=e.avail_in;return a>r&&(a=r),a===0?0:(e.avail_in-=a,Mt.arraySet(t,e.input,e.next_in,a,n),e.state.wrap===1?e.adler=c(e.adler,t,a,n):e.state.wrap===2&&(e.adler=p(e.adler,t,a,n)),e.next_in+=a,e.total_in+=a,a)}function ft(e,t){var n=e.max_chain_length,r=e.strstart,a,u,h=e.prev_length,b=e.nice_match,U=e.strstart>e.w_size-Ce?e.strstart-(e.w_size-Ce):0,O=e.window,F=e.w_mask,ge=e.prev,Se=e.strstart+ve,ke=O[r+h-1],Et=O[r+h];e.prev_length>=e.good_match&&(n>>=2),b>e.lookahead&&(b=e.lookahead);do if(a=t,!(O[a+h]!==Et||O[a+h-1]!==ke||O[a]!==O[r]||O[++a]!==O[r+1])){r+=2,a++;do;while(O[++r]===O[++a]&&O[++r]===O[++a]&&O[++r]===O[++a]&&O[++r]===O[++a]&&O[++r]===O[++a]&&O[++r]===O[++a]&&O[++r]===O[++a]&&O[++r]===O[++a]&&r<Se);if(u=ve-(Se-r),r=Se-ve,u>h){if(e.match_start=t,h=u,u>=b)break;ke=O[r+h-1],Et=O[r+h]}}while((t=ge[t&F])>U&&--n!==0);return h<=e.lookahead?h:e.lookahead}function Ke(e){var t=e.w_size,n,r,a,u,h;do{if(u=e.window_size-e.lookahead-e.strstart,e.strstart>=t+(t-Ce)){Mt.arraySet(e.window,e.window,t,t,0),e.match_start-=t,e.strstart-=t,e.block_start-=t,r=e.hash_size,n=r;do a=e.head[--n],e.head[n]=a>=t?a-t:0;while(--r);r=t,n=r;do a=e.prev[--n],e.prev[n]=a>=t?a-t:0;while(--r);u+=t}if(e.strm.avail_in===0)break;if(r=et(e.strm,e.window,e.strstart+e.lookahead,u),e.lookahead+=r,e.lookahead+e.insert>=Q)for(h=e.strstart-e.insert,e.ins_h=e.window[h],e.ins_h=(e.ins_h<<e.hash_shift^e.window[h+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[h+Q-1])&e.hash_mask,e.prev[h&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=h,h++,e.insert--,!(e.lookahead+e.insert<Q)););}while(e.lookahead<Ce&&e.strm.avail_in!==0)}function it(e,t){var n=65535;for(n>e.pending_buf_size-5&&(n=e.pending_buf_size-5);;){if(e.lookahead<=1){if(Ke(e),e.lookahead===0&&t===T)return Ze;if(e.lookahead===0)break}e.strstart+=e.lookahead,e.lookahead=0;var r=e.block_start+n;if((e.strstart===0||e.strstart>=r)&&(e.lookahead=e.strstart-r,e.strstart=r,le(e,!1),e.strm.avail_out===0)||e.strstart-e.block_start>=e.w_size-Ce&&(le(e,!1),e.strm.avail_out===0))return Ze}return e.insert=0,t===W?(le(e,!0),e.strm.avail_out===0?bt:yt):(e.strstart>e.block_start&&(le(e,!1),e.strm.avail_out===0),Ze)}function xe(e,t){for(var n,r;;){if(e.lookahead<Ce){if(Ke(e),e.lookahead<Ce&&t===T)return Ze;if(e.lookahead===0)break}if(n=0,e.lookahead>=Q&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+Q-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),n!==0&&e.strstart-n<=e.w_size-Ce&&(e.match_length=ft(e,n)),e.match_length>=Q)if(r=o._tr_tally(e,e.strstart-e.match_start,e.match_length-Q),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=Q){e.match_length--;do e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+Q-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart;while(--e.match_length!==0);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else r=o._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(r&&(le(e,!1),e.strm.avail_out===0))return Ze}return e.insert=e.strstart<Q-1?e.strstart:Q-1,t===W?(le(e,!0),e.strm.avail_out===0?bt:yt):e.last_lit&&(le(e,!1),e.strm.avail_out===0)?Ze:De}function St(e,t){for(var n,r,a;;){if(e.lookahead<Ce){if(Ke(e),e.lookahead<Ce&&t===T)return Ze;if(e.lookahead===0)break}if(n=0,e.lookahead>=Q&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+Q-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=Q-1,n!==0&&e.prev_length<e.max_lazy_match&&e.strstart-n<=e.w_size-Ce&&(e.match_length=ft(e,n),e.match_length<=5&&(e.strategy===vt||e.match_length===Q&&e.strstart-e.match_start>4096)&&(e.match_length=Q-1)),e.prev_length>=Q&&e.match_length<=e.prev_length){a=e.strstart+e.lookahead-Q,r=o._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-Q),e.lookahead-=e.prev_length-1,e.prev_length-=2;do++e.strstart<=a&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+Q-1])&e.hash_mask,n=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart);while(--e.prev_length!==0);if(e.match_available=0,e.match_length=Q-1,e.strstart++,r&&(le(e,!1),e.strm.avail_out===0))return Ze}else if(e.match_available){if(r=o._tr_tally(e,0,e.window[e.strstart-1]),r&&le(e,!1),e.strstart++,e.lookahead--,e.strm.avail_out===0)return Ze}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(r=o._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<Q-1?e.strstart:Q-1,t===W?(le(e,!0),e.strm.avail_out===0?bt:yt):e.last_lit&&(le(e,!1),e.strm.avail_out===0)?Ze:De}function It(e,t){for(var n,r,a,u,h=e.window;;){if(e.lookahead<=ve){if(Ke(e),e.lookahead<=ve&&t===T)return Ze;if(e.lookahead===0)break}if(e.match_length=0,e.lookahead>=Q&&e.strstart>0&&(a=e.strstart-1,r=h[a],r===h[++a]&&r===h[++a]&&r===h[++a])){u=e.strstart+ve;do;while(r===h[++a]&&r===h[++a]&&r===h[++a]&&r===h[++a]&&r===h[++a]&&r===h[++a]&&r===h[++a]&&r===h[++a]&&a<u);e.match_length=ve-(u-a),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=Q?(n=o._tr_tally(e,1,e.match_length-Q),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(n=o._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),n&&(le(e,!1),e.strm.avail_out===0))return Ze}return e.insert=0,t===W?(le(e,!0),e.strm.avail_out===0?bt:yt):e.last_lit&&(le(e,!1),e.strm.avail_out===0)?Ze:De}function At(e,t){for(var n;;){if(e.lookahead===0&&(Ke(e),e.lookahead===0)){if(t===T)return Ze;break}if(e.match_length=0,n=o._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,n&&(le(e,!1),e.strm.avail_out===0))return Ze}return e.insert=0,t===W?(le(e,!0),e.strm.avail_out===0?bt:yt):e.last_lit&&(le(e,!1),e.strm.avail_out===0)?Ze:De}function Nt(e,t,n,r,a){this.good_length=e,this.max_lazy=t,this.nice_length=n,this.max_chain=r,this.func=a}var sn;sn=[new Nt(0,0,0,0,it),new Nt(4,4,8,4,xe),new Nt(4,5,16,8,xe),new Nt(4,6,32,32,xe),new Nt(4,4,16,16,St),new Nt(8,16,32,32,St),new Nt(8,16,128,128,St),new Nt(8,32,128,256,St),new Nt(32,128,258,1024,St),new Nt(32,258,258,4096,St)];function bn(e){e.window_size=2*e.w_size,D(e.head),e.max_lazy_match=sn[e.level].max_lazy,e.good_match=sn[e.level].good_length,e.nice_match=sn[e.level].nice_length,e.max_chain_length=sn[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=Q-1,e.match_available=0,e.ins_h=0}function tr(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=l,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new Mt.Buf16(ae*2),this.dyn_dtree=new Mt.Buf16((2*$+1)*2),this.bl_tree=new Mt.Buf16((2*te+1)*2),D(this.dyn_ltree),D(this.dyn_dtree),D(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new Mt.Buf16(Re+1),this.heap=new Mt.Buf16(2*L+1),D(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new Mt.Buf16(2*L+1),D(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function er(e){var t;return!e||!e.state?jt(e,Ye):(e.total_in=e.total_out=0,e.data_type=i,t=e.state,t.pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?mt:Me,e.adler=t.wrap===2?0:1,t.last_flush=T,o._tr_init(t),oe)}function Co(e){var t=er(e);return t===oe&&bn(e.state),t}function Ko(e,t){return!e||!e.state||e.state.wrap!==2?Ye:(e.state.gzhead=t,oe)}function G(e,t,n,r,a,u){if(!e)return Ye;var h=1;if(t===We&&(t=6),r<0?(h=0,r=-r):r>15&&(h=2,r-=16),a<1||a>d||n!==l||r<8||r>15||t<0||t>9||u<0||u>de)return jt(e,Ye);r===8&&(r=9);var b=new tr;return e.state=b,b.strm=e,b.wrap=h,b.gzhead=null,b.w_bits=r,b.w_size=1<<b.w_bits,b.w_mask=b.w_size-1,b.hash_bits=a+7,b.hash_size=1<<b.hash_bits,b.hash_mask=b.hash_size-1,b.hash_shift=~~((b.hash_bits+Q-1)/Q),b.window=new Mt.Buf8(b.w_size*2),b.head=new Mt.Buf16(b.hash_size),b.prev=new Mt.Buf16(b.w_size),b.lit_bufsize=1<<a+6,b.pending_buf_size=b.lit_bufsize*4,b.pending_buf=new Mt.Buf8(b.pending_buf_size),b.d_buf=1*b.lit_bufsize,b.l_buf=(1+2)*b.lit_bufsize,b.level=t,b.strategy=u,b.method=n,Co(e)}function ie(e,t){return G(e,t,l,v,y,Le)}function ye(e,t){var n,r,a,u;if(!e||!e.state||t>Y||t<0)return e?jt(e,Ye):Ye;if(r=e.state,!e.output||!e.input&&e.avail_in!==0||r.status===rt&&t!==W)return jt(e,e.avail_out===0?$e:Ye);if(r.strm=e,n=r.last_flush,r.last_flush=t,r.status===mt)if(r.wrap===2)e.adler=0,ue(r,31),ue(r,139),ue(r,8),r.gzhead?(ue(r,(r.gzhead.text?1:0)+(r.gzhead.hcrc?2:0)+(r.gzhead.extra?4:0)+(r.gzhead.name?8:0)+(r.gzhead.comment?16:0)),ue(r,r.gzhead.time&255),ue(r,r.gzhead.time>>8&255),ue(r,r.gzhead.time>>16&255),ue(r,r.gzhead.time>>24&255),ue(r,r.level===9?2:r.strategy>=wt||r.level<2?4:0),ue(r,r.gzhead.os&255),r.gzhead.extra&&r.gzhead.extra.length&&(ue(r,r.gzhead.extra.length&255),ue(r,r.gzhead.extra.length>>8&255)),r.gzhead.hcrc&&(e.adler=p(e.adler,r.pending_buf,r.pending,0)),r.gzindex=0,r.status=_e):(ue(r,0),ue(r,0),ue(r,0),ue(r,0),ue(r,0),ue(r,r.level===9?2:r.strategy>=wt||r.level<2?4:0),ue(r,Bt),r.status=Me);else{var h=l+(r.w_bits-8<<4)<<8,b=-1;r.strategy>=wt||r.level<2?b=0:r.level<6?b=1:r.level===6?b=2:b=3,h|=b<<6,r.strstart!==0&&(h|=lt),h+=31-h%31,r.status=Me,Pe(r,h),r.strstart!==0&&(Pe(r,e.adler>>>16),Pe(r,e.adler&65535)),e.adler=1}if(r.status===_e)if(r.gzhead.extra){for(a=r.pending;r.gzindex<(r.gzhead.extra.length&65535)&&!(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>a&&(e.adler=p(e.adler,r.pending_buf,r.pending-a,a)),K(e),a=r.pending,r.pending===r.pending_buf_size));)ue(r,r.gzhead.extra[r.gzindex]&255),r.gzindex++;r.gzhead.hcrc&&r.pending>a&&(e.adler=p(e.adler,r.pending_buf,r.pending-a,a)),r.gzindex===r.gzhead.extra.length&&(r.gzindex=0,r.status=se)}else r.status=se;if(r.status===se)if(r.gzhead.name){a=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>a&&(e.adler=p(e.adler,r.pending_buf,r.pending-a,a)),K(e),a=r.pending,r.pending===r.pending_buf_size)){u=1;break}r.gzindex<r.gzhead.name.length?u=r.gzhead.name.charCodeAt(r.gzindex++)&255:u=0,ue(r,u)}while(u!==0);r.gzhead.hcrc&&r.pending>a&&(e.adler=p(e.adler,r.pending_buf,r.pending-a,a)),u===0&&(r.gzindex=0,r.status=be)}else r.status=be;if(r.status===be)if(r.gzhead.comment){a=r.pending;do{if(r.pending===r.pending_buf_size&&(r.gzhead.hcrc&&r.pending>a&&(e.adler=p(e.adler,r.pending_buf,r.pending-a,a)),K(e),a=r.pending,r.pending===r.pending_buf_size)){u=1;break}r.gzindex<r.gzhead.comment.length?u=r.gzhead.comment.charCodeAt(r.gzindex++)&255:u=0,ue(r,u)}while(u!==0);r.gzhead.hcrc&&r.pending>a&&(e.adler=p(e.adler,r.pending_buf,r.pending-a,a)),u===0&&(r.status=Ge)}else r.status=Ge;if(r.status===Ge&&(r.gzhead.hcrc?(r.pending+2>r.pending_buf_size&&K(e),r.pending+2<=r.pending_buf_size&&(ue(r,e.adler&255),ue(r,e.adler>>8&255),e.adler=0,r.status=Me)):r.status=Me),r.pending!==0){if(K(e),e.avail_out===0)return r.last_flush=-1,oe}else if(e.avail_in===0&&ut(t)<=ut(n)&&t!==W)return jt(e,$e);if(r.status===rt&&e.avail_in!==0)return jt(e,$e);if(e.avail_in!==0||r.lookahead!==0||t!==T&&r.status!==rt){var U=r.strategy===wt?At(r,t):r.strategy===Ae?It(r,t):sn[r.level].func(r,t);if((U===bt||U===yt)&&(r.status=rt),U===Ze||U===bt)return e.avail_out===0&&(r.last_flush=-1),oe;if(U===De&&(t===C?o._tr_align(r):t!==Y&&(o._tr_stored_block(r,0,0,!1),t===V&&(D(r.head),r.lookahead===0&&(r.strstart=0,r.block_start=0,r.insert=0))),K(e),e.avail_out===0))return r.last_flush=-1,oe}return t!==W?oe:r.wrap<=0?je:(r.wrap===2?(ue(r,e.adler&255),ue(r,e.adler>>8&255),ue(r,e.adler>>16&255),ue(r,e.adler>>24&255),ue(r,e.total_in&255),ue(r,e.total_in>>8&255),ue(r,e.total_in>>16&255),ue(r,e.total_in>>24&255)):(Pe(r,e.adler>>>16),Pe(r,e.adler&65535)),K(e),r.wrap>0&&(r.wrap=-r.wrap),r.pending!==0?oe:je)}function Oe(e){var t;return!e||!e.state?Ye:(t=e.state.status,t!==mt&&t!==_e&&t!==se&&t!==be&&t!==Ge&&t!==Me&&t!==rt?jt(e,Ye):(e.state=null,t===Me?jt(e,pe):oe))}function Fe(e,t){var n=t.length,r,a,u,h,b,U,O,F;if(!e||!e.state||(r=e.state,h=r.wrap,h===2||h===1&&r.status!==mt||r.lookahead))return Ye;for(h===1&&(e.adler=c(e.adler,t,n,0)),r.wrap=0,n>=r.w_size&&(h===0&&(D(r.head),r.strstart=0,r.block_start=0,r.insert=0),F=new Mt.Buf8(r.w_size),Mt.arraySet(F,t,n-r.w_size,r.w_size,0),t=F,n=r.w_size),b=e.avail_in,U=e.next_in,O=e.input,e.avail_in=n,e.next_in=0,e.input=t,Ke(r);r.lookahead>=Q;){a=r.strstart,u=r.lookahead-(Q-1);do r.ins_h=(r.ins_h<<r.hash_shift^r.window[a+Q-1])&r.hash_mask,r.prev[a&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=a,a++;while(--u);r.strstart=a,r.lookahead=Q-1,Ke(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=Q-1,r.match_available=0,e.next_in=U,e.input=O,e.avail_in=b,r.wrap=h,oe}var Xe=ie,ct=G,qe=Co,Qe=er,Ue=Ko,kt=ye,Lt=Oe,Dt=Fe,rn="pako deflate (from Nodeca project)",Hr={deflateInit:Xe,deflateInit2:ct,deflateReset:qe,deflateResetKeep:Qe,deflateSetHeader:Ue,deflate:kt,deflateEnd:Lt,deflateSetDictionary:Dt,deflateInfo:rn},Yn=!0,jr=!0;try{String.fromCharCode.apply(null,[0])}catch(e){Yn=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){jr=!1}for(var zr=new Mt.Buf8(256),qi=0;qi<256;qi++)zr[qi]=qi>=252?6:qi>=248?5:qi>=240?4:qi>=224?3:qi>=192?2:1;zr[254]=zr[254]=1;var hs=function(e){var t,n,r,a,u,h=e.length,b=0;for(a=0;a<h;a++)n=e.charCodeAt(a),(n&64512)===55296&&a+1<h&&(r=e.charCodeAt(a+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),a++)),b+=n<128?1:n<2048?2:n<65536?3:4;for(t=new Mt.Buf8(b),u=0,a=0;u<b;a++)n=e.charCodeAt(a),(n&64512)===55296&&a+1<h&&(r=e.charCodeAt(a+1),(r&64512)===56320&&(n=65536+(n-55296<<10)+(r-56320),a++)),n<128?t[u++]=n:n<2048?(t[u++]=192|n>>>6,t[u++]=128|n&63):n<65536?(t[u++]=224|n>>>12,t[u++]=128|n>>>6&63,t[u++]=128|n&63):(t[u++]=240|n>>>18,t[u++]=128|n>>>12&63,t[u++]=128|n>>>6&63,t[u++]=128|n&63);return t};function kr(e,t){if(t<65534&&(e.subarray&&jr||!e.subarray&&Yn))return String.fromCharCode.apply(null,Mt.shrinkBuf(e,t));for(var n="",r=0;r<t;r++)n+=String.fromCharCode(e[r]);return n}var xs=function(e){return kr(e,e.length)},Bs=function(e){for(var t=new Mt.Buf8(e.length),n=0,r=t.length;n<r;n++)t[n]=e.charCodeAt(n);return t},ho=function(e,t){var n,r,a,u,h=t||e.length,b=new Array(h*2);for(r=0,n=0;n<h;){if(a=e[n++],a<128){b[r++]=a;continue}if(u=zr[a],u>4){b[r++]=65533,n+=u-1;continue}for(a&=u===2?31:u===3?15:7;u>1&&n<h;)a=a<<6|e[n++]&63,u--;if(u>1){b[r++]=65533;continue}a<65536?b[r++]=a:(a-=65536,b[r++]=55296|a>>10&1023,b[r++]=56320|a&1023)}return kr(b,r)},qa=function(e,t){var n;for(t=t||e.length,t>e.length&&(t=e.length),n=t-1;n>=0&&(e[n]&192)===128;)n--;return n<0||n===0?t:n+zr[e[n]]>t?n:t},gs={string2buf:hs,buf2binstring:xs,binstring2buf:Bs,buf2string:ho,utf8border:qa};function Ia(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var Ka=Ia,go=Hr,Oo=gs,Na=Ka,ql=Object.prototype.toString,Kl=0,wl=4,Ja=0,If=1,Nf=2,Qp=-1,ev=0,tv=8;function Ms(e){if(!(this instanceof Ms))return new Ms(e);this.options=Mt.assign({level:Qp,method:tv,chunkSize:16384,windowBits:15,memLevel:8,strategy:ev,to:""},e||{});var t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Na,this.strm.avail_out=0;var n=go.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(n!==Ja)throw new Error(E[n]);if(t.header&&go.deflateSetHeader(this.strm,t.header),t.dictionary){var r;if(typeof t.dictionary=="string"?r=Oo.string2buf(t.dictionary):ql.call(t.dictionary)==="[object ArrayBuffer]"?r=new Uint8Array(t.dictionary):r=t.dictionary,n=go.deflateSetDictionary(this.strm,r),n!==Ja)throw new Error(E[n]);this._dict_set=!0}}Ms.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,a,u;if(this.ended)return!1;u=t===~~t?t:t===!0?wl:Kl,typeof e=="string"?n.input=Oo.string2buf(e):ql.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new Mt.Buf8(r),n.next_out=0,n.avail_out=r),a=go.deflate(n,u),a!==If&&a!==Ja)return this.onEnd(a),this.ended=!0,!1;(n.avail_out===0||n.avail_in===0&&(u===wl||u===Nf))&&(this.options.to==="string"?this.onData(Oo.buf2binstring(Mt.shrinkBuf(n.output,n.next_out))):this.onData(Mt.shrinkBuf(n.output,n.next_out)))}while((n.avail_in>0||n.avail_out===0)&&a!==If);return u===wl?(a=go.deflateEnd(this.strm),this.onEnd(a),this.ended=!0,a===Ja):(u===Nf&&(this.onEnd(Ja),n.avail_out=0),!0)},Ms.prototype.onData=function(e){this.chunks.push(e)},Ms.prototype.onEnd=function(e){e===Ja&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=Mt.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function du(e,t){var n=new Ms(t);if(n.push(e,!0),n.err)throw n.msg||E[n.err];return n.result}function nv(e,t){return t=t||{},t.raw=!0,du(e,t)}function rv(e,t){return t=t||{},t.gzip=!0,du(e,t)}var iv=Ms,ov=du,av=nv,sv=rv,lv={Deflate:iv,deflate:ov,deflateRaw:av,gzip:sv},Ec=30,cv=12,uv=function(t,n){var r,a,u,h,b,U,O,F,ge,Se,ke,Et,Tt,Jt,Vt,Nn,Vn,Qt,pt,dn,Zt,zt,hn,ar,Wt;r=t.state,a=t.next_in,ar=t.input,u=a+(t.avail_in-5),h=t.next_out,Wt=t.output,b=h-(n-t.avail_out),U=h+(t.avail_out-257),O=r.dmax,F=r.wsize,ge=r.whave,Se=r.wnext,ke=r.window,Et=r.hold,Tt=r.bits,Jt=r.lencode,Vt=r.distcode,Nn=(1<<r.lenbits)-1,Vn=(1<<r.distbits)-1;e:do{Tt<15&&(Et+=ar[a++]<<Tt,Tt+=8,Et+=ar[a++]<<Tt,Tt+=8),Qt=Jt[Et&Nn];t:for(;;){if(pt=Qt>>>24,Et>>>=pt,Tt-=pt,pt=Qt>>>16&255,pt===0)Wt[h++]=Qt&65535;else if(pt&16){dn=Qt&65535,pt&=15,pt&&(Tt<pt&&(Et+=ar[a++]<<Tt,Tt+=8),dn+=Et&(1<<pt)-1,Et>>>=pt,Tt-=pt),Tt<15&&(Et+=ar[a++]<<Tt,Tt+=8,Et+=ar[a++]<<Tt,Tt+=8),Qt=Vt[Et&Vn];n:for(;;){if(pt=Qt>>>24,Et>>>=pt,Tt-=pt,pt=Qt>>>16&255,pt&16){if(Zt=Qt&65535,pt&=15,Tt<pt&&(Et+=ar[a++]<<Tt,Tt+=8,Tt<pt&&(Et+=ar[a++]<<Tt,Tt+=8)),Zt+=Et&(1<<pt)-1,Zt>O){t.msg="invalid distance too far back",r.mode=Ec;break e}if(Et>>>=pt,Tt-=pt,pt=h-b,Zt>pt){if(pt=Zt-pt,pt>ge&&r.sane){t.msg="invalid distance too far back",r.mode=Ec;break e}if(zt=0,hn=ke,Se===0){if(zt+=F-pt,pt<dn){dn-=pt;do Wt[h++]=ke[zt++];while(--pt);zt=h-Zt,hn=Wt}}else if(Se<pt){if(zt+=F+Se-pt,pt-=Se,pt<dn){dn-=pt;do Wt[h++]=ke[zt++];while(--pt);if(zt=0,Se<dn){pt=Se,dn-=pt;do Wt[h++]=ke[zt++];while(--pt);zt=h-Zt,hn=Wt}}}else if(zt+=Se-pt,pt<dn){dn-=pt;do Wt[h++]=ke[zt++];while(--pt);zt=h-Zt,hn=Wt}for(;dn>2;)Wt[h++]=hn[zt++],Wt[h++]=hn[zt++],Wt[h++]=hn[zt++],dn-=3;dn&&(Wt[h++]=hn[zt++],dn>1&&(Wt[h++]=hn[zt++]))}else{zt=h-Zt;do Wt[h++]=Wt[zt++],Wt[h++]=Wt[zt++],Wt[h++]=Wt[zt++],dn-=3;while(dn>2);dn&&(Wt[h++]=Wt[zt++],dn>1&&(Wt[h++]=Wt[zt++]))}}else if((pt&64)===0){Qt=Vt[(Qt&65535)+(Et&(1<<pt)-1)];continue n}else{t.msg="invalid distance code",r.mode=Ec;break e}break}}else if((pt&64)===0){Qt=Jt[(Qt&65535)+(Et&(1<<pt)-1)];continue t}else if(pt&32){r.mode=cv;break e}else{t.msg="invalid literal/length code",r.mode=Ec;break e}break}}while(a<u&&h<U);dn=Tt>>3,a-=dn,Tt-=dn<<3,Et&=(1<<Tt)-1,t.next_in=a,t.next_out=h,t.avail_in=a<u?5+(u-a):5-(a-u),t.avail_out=h<U?257+(U-h):257-(h-U),r.hold=Et,r.bits=Tt},Sl=15,kf=852,Rf=592,xf=0,hu=1,Bf=2,fv=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],dv=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],hv=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],gv=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64],pv=function(t,n,r,a,u,h,b,U){var O=U.bits,F=0,ge=0,Se=0,ke=0,Et=0,Tt=0,Jt=0,Vt=0,Nn=0,Vn=0,Qt,pt,dn,Zt,zt,hn=null,ar=0,Wt,pa=new Mt.Buf16(Sl+1),Yc=new Mt.Buf16(Sl+1),qc=null,Xg=0,Qg,Kc,Jc;for(F=0;F<=Sl;F++)pa[F]=0;for(ge=0;ge<a;ge++)pa[n[r+ge]]++;for(Et=O,ke=Sl;ke>=1&&pa[ke]===0;ke--);if(Et>ke&&(Et=ke),ke===0)return u[h++]=1<<24|64<<16|0,u[h++]=1<<24|64<<16|0,U.bits=1,0;for(Se=1;Se<ke&&pa[Se]===0;Se++);for(Et<Se&&(Et=Se),Vt=1,F=1;F<=Sl;F++)if(Vt<<=1,Vt-=pa[F],Vt<0)return-1;if(Vt>0&&(t===xf||ke!==1))return-1;for(Yc[1]=0,F=1;F<Sl;F++)Yc[F+1]=Yc[F]+pa[F];for(ge=0;ge<a;ge++)n[r+ge]!==0&&(b[Yc[n[r+ge]]++]=ge);if(t===xf?(hn=qc=b,Wt=19):t===hu?(hn=fv,ar-=257,qc=dv,Xg-=257,Wt=256):(hn=hv,qc=gv,Wt=-1),Vn=0,ge=0,F=Se,zt=h,Tt=Et,Jt=0,dn=-1,Nn=1<<Et,Zt=Nn-1,t===hu&&Nn>kf||t===Bf&&Nn>Rf)return 1;for(;;){Qg=F-Jt,b[ge]<Wt?(Kc=0,Jc=b[ge]):b[ge]>Wt?(Kc=qc[Xg+b[ge]],Jc=hn[ar+b[ge]]):(Kc=32+64,Jc=0),Qt=1<<F-Jt,pt=1<<Tt,Se=pt;do pt-=Qt,u[zt+(Vn>>Jt)+pt]=Qg<<24|Kc<<16|Jc|0;while(pt!==0);for(Qt=1<<F-1;Vn&Qt;)Qt>>=1;if(Qt!==0?(Vn&=Qt-1,Vn+=Qt):Vn=0,ge++,--pa[F]===0){if(F===ke)break;F=n[r+b[ge]]}if(F>Et&&(Vn&Zt)!==dn){for(Jt===0&&(Jt=Et),zt+=Se,Tt=F-Jt,Vt=1<<Tt;Tt+Jt<ke&&(Vt-=pa[Tt+Jt],!(Vt<=0));)Tt++,Vt<<=1;if(Nn+=1<<Tt,t===hu&&Nn>kf||t===Bf&&Nn>Rf)return 1;dn=Vn&Zt,u[dn]=Et<<24|Tt<<16|zt-h|0}}return Vn!==0&&(u[zt+Vn]=F-Jt<<24|64<<16|0),U.bits=Et,0},vv=uv,Jl=pv,mv=0,Mf=1,Lf=2,Df=4,_v=5,yc=6,Ls=0,bv=1,Ev=2,Jo=-2,Ff=-3,Vf=-4,yv=-5,$f=8,Uf=1,Hf=2,jf=3,zf=4,Wf=5,Gf=6,Yf=7,qf=8,Kf=9,Jf=10,wc=11,Za=12,gu=13,Zf=14,pu=15,Xf=16,Qf=17,ed=18,td=19,Sc=20,Ac=21,nd=22,rd=23,id=24,od=25,ad=26,vu=27,sd=28,ld=29,dr=30,cd=31,wv=32,Sv=852,Av=592,Cv=15,Ov=Cv;function ud(e){return(e>>>24&255)+(e>>>8&65280)+((e&65280)<<8)+((e&255)<<24)}function Tv(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new Mt.Buf16(320),this.work=new Mt.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function fd(e){var t;return!e||!e.state?Jo:(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=t.wrap&1),t.mode=Uf,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new Mt.Buf32(Sv),t.distcode=t.distdyn=new Mt.Buf32(Av),t.sane=1,t.back=-1,Ls)}function dd(e){var t;return!e||!e.state?Jo:(t=e.state,t.wsize=0,t.whave=0,t.wnext=0,fd(e))}function hd(e,t){var n,r;return!e||!e.state||(r=e.state,t<0?(n=0,t=-t):(n=(t>>4)+1,t<48&&(t&=15)),t&&(t<8||t>15))?Jo:(r.window!==null&&r.wbits!==t&&(r.window=null),r.wrap=n,r.wbits=t,dd(e))}function gd(e,t){var n,r;return e?(r=new Tv,e.state=r,r.window=null,n=hd(e,t),n!==Ls&&(e.state=null),n):Jo}function Pv(e){return gd(e,Ov)}var pd=!0,mu,_u;function Iv(e){if(pd){var t;for(mu=new Mt.Buf32(512),_u=new Mt.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(Jl(Mf,e.lens,0,288,mu,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;Jl(Lf,e.lens,0,32,_u,0,e.work,{bits:5}),pd=!1}e.lencode=mu,e.lenbits=9,e.distcode=_u,e.distbits=5}function vd(e,t,n,r){var a,u=e.state;return u.window===null&&(u.wsize=1<<u.wbits,u.wnext=0,u.whave=0,u.window=new Mt.Buf8(u.wsize)),r>=u.wsize?(Mt.arraySet(u.window,t,n-u.wsize,u.wsize,0),u.wnext=0,u.whave=u.wsize):(a=u.wsize-u.wnext,a>r&&(a=r),Mt.arraySet(u.window,t,n-r,a,u.wnext),r-=a,r?(Mt.arraySet(u.window,t,n-r,r,0),u.wnext=r,u.whave=u.wsize):(u.wnext+=a,u.wnext===u.wsize&&(u.wnext=0),u.whave<u.wsize&&(u.whave+=a))),0}function Nv(e,t){var n,r,a,u,h,b,U,O,F,ge,Se,ke,Et,Tt,Jt=0,Vt,Nn,Vn,Qt,pt,dn,Zt,zt,hn=new Mt.Buf8(4),ar,Wt,pa=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&e.avail_in!==0)return Jo;n=e.state,n.mode===Za&&(n.mode=gu),h=e.next_out,a=e.output,U=e.avail_out,u=e.next_in,r=e.input,b=e.avail_in,O=n.hold,F=n.bits,ge=b,Se=U,zt=Ls;e:for(;;)switch(n.mode){case Uf:if(n.wrap===0){n.mode=gu;break}for(;F<16;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}if(n.wrap&2&&O===35615){n.check=0,hn[0]=O&255,hn[1]=O>>>8&255,n.check=p(n.check,hn,2,0),O=0,F=0,n.mode=Hf;break}if(n.flags=0,n.head&&(n.head.done=!1),!(n.wrap&1)||(((O&255)<<8)+(O>>8))%31){e.msg="incorrect header check",n.mode=dr;break}if((O&15)!==$f){e.msg="unknown compression method",n.mode=dr;break}if(O>>>=4,F-=4,Zt=(O&15)+8,n.wbits===0)n.wbits=Zt;else if(Zt>n.wbits){e.msg="invalid window size",n.mode=dr;break}n.dmax=1<<Zt,e.adler=n.check=1,n.mode=O&512?Jf:Za,O=0,F=0;break;case Hf:for(;F<16;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}if(n.flags=O,(n.flags&255)!==$f){e.msg="unknown compression method",n.mode=dr;break}if(n.flags&57344){e.msg="unknown header flags set",n.mode=dr;break}n.head&&(n.head.text=O>>8&1),n.flags&512&&(hn[0]=O&255,hn[1]=O>>>8&255,n.check=p(n.check,hn,2,0)),O=0,F=0,n.mode=jf;case jf:for(;F<32;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}n.head&&(n.head.time=O),n.flags&512&&(hn[0]=O&255,hn[1]=O>>>8&255,hn[2]=O>>>16&255,hn[3]=O>>>24&255,n.check=p(n.check,hn,4,0)),O=0,F=0,n.mode=zf;case zf:for(;F<16;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}n.head&&(n.head.xflags=O&255,n.head.os=O>>8),n.flags&512&&(hn[0]=O&255,hn[1]=O>>>8&255,n.check=p(n.check,hn,2,0)),O=0,F=0,n.mode=Wf;case Wf:if(n.flags&1024){for(;F<16;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}n.length=O,n.head&&(n.head.extra_len=O),n.flags&512&&(hn[0]=O&255,hn[1]=O>>>8&255,n.check=p(n.check,hn,2,0)),O=0,F=0}else n.head&&(n.head.extra=null);n.mode=Gf;case Gf:if(n.flags&1024&&(ke=n.length,ke>b&&(ke=b),ke&&(n.head&&(Zt=n.head.extra_len-n.length,n.head.extra||(n.head.extra=new Array(n.head.extra_len)),Mt.arraySet(n.head.extra,r,u,ke,Zt)),n.flags&512&&(n.check=p(n.check,r,ke,u)),b-=ke,u+=ke,n.length-=ke),n.length))break e;n.length=0,n.mode=Yf;case Yf:if(n.flags&2048){if(b===0)break e;ke=0;do Zt=r[u+ke++],n.head&&Zt&&n.length<65536&&(n.head.name+=String.fromCharCode(Zt));while(Zt&&ke<b);if(n.flags&512&&(n.check=p(n.check,r,ke,u)),b-=ke,u+=ke,Zt)break e}else n.head&&(n.head.name=null);n.length=0,n.mode=qf;case qf:if(n.flags&4096){if(b===0)break e;ke=0;do Zt=r[u+ke++],n.head&&Zt&&n.length<65536&&(n.head.comment+=String.fromCharCode(Zt));while(Zt&&ke<b);if(n.flags&512&&(n.check=p(n.check,r,ke,u)),b-=ke,u+=ke,Zt)break e}else n.head&&(n.head.comment=null);n.mode=Kf;case Kf:if(n.flags&512){for(;F<16;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}if(O!==(n.check&65535)){e.msg="header crc mismatch",n.mode=dr;break}O=0,F=0}n.head&&(n.head.hcrc=n.flags>>9&1,n.head.done=!0),e.adler=n.check=0,n.mode=Za;break;case Jf:for(;F<32;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}e.adler=n.check=ud(O),O=0,F=0,n.mode=wc;case wc:if(n.havedict===0)return e.next_out=h,e.avail_out=U,e.next_in=u,e.avail_in=b,n.hold=O,n.bits=F,Ev;e.adler=n.check=1,n.mode=Za;case Za:if(t===_v||t===yc)break e;case gu:if(n.last){O>>>=F&7,F-=F&7,n.mode=vu;break}for(;F<3;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}switch(n.last=O&1,O>>>=1,F-=1,O&3){case 0:n.mode=Zf;break;case 1:if(Iv(n),n.mode=Sc,t===yc){O>>>=2,F-=2;break e}break;case 2:n.mode=Qf;break;case 3:e.msg="invalid block type",n.mode=dr}O>>>=2,F-=2;break;case Zf:for(O>>>=F&7,F-=F&7;F<32;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}if((O&65535)!==(O>>>16^65535)){e.msg="invalid stored block lengths",n.mode=dr;break}if(n.length=O&65535,O=0,F=0,n.mode=pu,t===yc)break e;case pu:n.mode=Xf;case Xf:if(ke=n.length,ke){if(ke>b&&(ke=b),ke>U&&(ke=U),ke===0)break e;Mt.arraySet(a,r,u,ke,h),b-=ke,u+=ke,U-=ke,h+=ke,n.length-=ke;break}n.mode=Za;break;case Qf:for(;F<14;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}if(n.nlen=(O&31)+257,O>>>=5,F-=5,n.ndist=(O&31)+1,O>>>=5,F-=5,n.ncode=(O&15)+4,O>>>=4,F-=4,n.nlen>286||n.ndist>30){e.msg="too many length or distance symbols",n.mode=dr;break}n.have=0,n.mode=ed;case ed:for(;n.have<n.ncode;){for(;F<3;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}n.lens[pa[n.have++]]=O&7,O>>>=3,F-=3}for(;n.have<19;)n.lens[pa[n.have++]]=0;if(n.lencode=n.lendyn,n.lenbits=7,ar={bits:n.lenbits},zt=Jl(mv,n.lens,0,19,n.lencode,0,n.work,ar),n.lenbits=ar.bits,zt){e.msg="invalid code lengths set",n.mode=dr;break}n.have=0,n.mode=td;case td:for(;n.have<n.nlen+n.ndist;){for(;Jt=n.lencode[O&(1<<n.lenbits)-1],Vt=Jt>>>24,Nn=Jt>>>16&255,Vn=Jt&65535,!(Vt<=F);){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}if(Vn<16)O>>>=Vt,F-=Vt,n.lens[n.have++]=Vn;else{if(Vn===16){for(Wt=Vt+2;F<Wt;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}if(O>>>=Vt,F-=Vt,n.have===0){e.msg="invalid bit length repeat",n.mode=dr;break}Zt=n.lens[n.have-1],ke=3+(O&3),O>>>=2,F-=2}else if(Vn===17){for(Wt=Vt+3;F<Wt;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}O>>>=Vt,F-=Vt,Zt=0,ke=3+(O&7),O>>>=3,F-=3}else{for(Wt=Vt+7;F<Wt;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}O>>>=Vt,F-=Vt,Zt=0,ke=11+(O&127),O>>>=7,F-=7}if(n.have+ke>n.nlen+n.ndist){e.msg="invalid bit length repeat",n.mode=dr;break}for(;ke--;)n.lens[n.have++]=Zt}}if(n.mode===dr)break;if(n.lens[256]===0){e.msg="invalid code -- missing end-of-block",n.mode=dr;break}if(n.lenbits=9,ar={bits:n.lenbits},zt=Jl(Mf,n.lens,0,n.nlen,n.lencode,0,n.work,ar),n.lenbits=ar.bits,zt){e.msg="invalid literal/lengths set",n.mode=dr;break}if(n.distbits=6,n.distcode=n.distdyn,ar={bits:n.distbits},zt=Jl(Lf,n.lens,n.nlen,n.ndist,n.distcode,0,n.work,ar),n.distbits=ar.bits,zt){e.msg="invalid distances set",n.mode=dr;break}if(n.mode=Sc,t===yc)break e;case Sc:n.mode=Ac;case Ac:if(b>=6&&U>=258){e.next_out=h,e.avail_out=U,e.next_in=u,e.avail_in=b,n.hold=O,n.bits=F,vv(e,Se),h=e.next_out,a=e.output,U=e.avail_out,u=e.next_in,r=e.input,b=e.avail_in,O=n.hold,F=n.bits,n.mode===Za&&(n.back=-1);break}for(n.back=0;Jt=n.lencode[O&(1<<n.lenbits)-1],Vt=Jt>>>24,Nn=Jt>>>16&255,Vn=Jt&65535,!(Vt<=F);){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}if(Nn&&(Nn&240)===0){for(Qt=Vt,pt=Nn,dn=Vn;Jt=n.lencode[dn+((O&(1<<Qt+pt)-1)>>Qt)],Vt=Jt>>>24,Nn=Jt>>>16&255,Vn=Jt&65535,!(Qt+Vt<=F);){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}O>>>=Qt,F-=Qt,n.back+=Qt}if(O>>>=Vt,F-=Vt,n.back+=Vt,n.length=Vn,Nn===0){n.mode=ad;break}if(Nn&32){n.back=-1,n.mode=Za;break}if(Nn&64){e.msg="invalid literal/length code",n.mode=dr;break}n.extra=Nn&15,n.mode=nd;case nd:if(n.extra){for(Wt=n.extra;F<Wt;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}n.length+=O&(1<<n.extra)-1,O>>>=n.extra,F-=n.extra,n.back+=n.extra}n.was=n.length,n.mode=rd;case rd:for(;Jt=n.distcode[O&(1<<n.distbits)-1],Vt=Jt>>>24,Nn=Jt>>>16&255,Vn=Jt&65535,!(Vt<=F);){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}if((Nn&240)===0){for(Qt=Vt,pt=Nn,dn=Vn;Jt=n.distcode[dn+((O&(1<<Qt+pt)-1)>>Qt)],Vt=Jt>>>24,Nn=Jt>>>16&255,Vn=Jt&65535,!(Qt+Vt<=F);){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}O>>>=Qt,F-=Qt,n.back+=Qt}if(O>>>=Vt,F-=Vt,n.back+=Vt,Nn&64){e.msg="invalid distance code",n.mode=dr;break}n.offset=Vn,n.extra=Nn&15,n.mode=id;case id:if(n.extra){for(Wt=n.extra;F<Wt;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}n.offset+=O&(1<<n.extra)-1,O>>>=n.extra,F-=n.extra,n.back+=n.extra}if(n.offset>n.dmax){e.msg="invalid distance too far back",n.mode=dr;break}n.mode=od;case od:if(U===0)break e;if(ke=Se-U,n.offset>ke){if(ke=n.offset-ke,ke>n.whave&&n.sane){e.msg="invalid distance too far back",n.mode=dr;break}ke>n.wnext?(ke-=n.wnext,Et=n.wsize-ke):Et=n.wnext-ke,ke>n.length&&(ke=n.length),Tt=n.window}else Tt=a,Et=h-n.offset,ke=n.length;ke>U&&(ke=U),U-=ke,n.length-=ke;do a[h++]=Tt[Et++];while(--ke);n.length===0&&(n.mode=Ac);break;case ad:if(U===0)break e;a[h++]=n.length,U--,n.mode=Ac;break;case vu:if(n.wrap){for(;F<32;){if(b===0)break e;b--,O|=r[u++]<<F,F+=8}if(Se-=U,e.total_out+=Se,n.total+=Se,Se&&(e.adler=n.check=n.flags?p(n.check,a,Se,h-Se):c(n.check,a,Se,h-Se)),Se=U,(n.flags?O:ud(O))!==n.check){e.msg="incorrect data check",n.mode=dr;break}O=0,F=0}n.mode=sd;case sd:if(n.wrap&&n.flags){for(;F<32;){if(b===0)break e;b--,O+=r[u++]<<F,F+=8}if(O!==(n.total&4294967295)){e.msg="incorrect length check",n.mode=dr;break}O=0,F=0}n.mode=ld;case ld:zt=bv;break e;case dr:zt=Ff;break e;case cd:return Vf;case wv:default:return Jo}return e.next_out=h,e.avail_out=U,e.next_in=u,e.avail_in=b,n.hold=O,n.bits=F,(n.wsize||Se!==e.avail_out&&n.mode<dr&&(n.mode<vu||t!==Df))&&vd(e,e.output,e.next_out,Se-e.avail_out),ge-=e.avail_in,Se-=e.avail_out,e.total_in+=ge,e.total_out+=Se,n.total+=Se,n.wrap&&Se&&(e.adler=n.check=n.flags?p(n.check,a,Se,e.next_out-Se):c(n.check,a,Se,e.next_out-Se)),e.data_type=n.bits+(n.last?64:0)+(n.mode===Za?128:0)+(n.mode===Sc||n.mode===pu?256:0),(ge===0&&Se===0||t===Df)&&zt===Ls&&(zt=yv),zt}function kv(e){if(!e||!e.state)return Jo;var t=e.state;return t.window&&(t.window=null),e.state=null,Ls}function Rv(e,t){var n;return!e||!e.state||(n=e.state,(n.wrap&2)===0)?Jo:(n.head=t,t.done=!1,Ls)}function xv(e,t){var n=t.length,r,a,u;return!e||!e.state||(r=e.state,r.wrap!==0&&r.mode!==wc)?Jo:r.mode===wc&&(a=1,a=c(a,t,n,0),a!==r.check)?Ff:(u=vd(e,t,n,n),u?(r.mode=cd,Vf):(r.havedict=1,Ls))}var Bv=dd,Mv=hd,Lv=fd,Dv=Pv,Fv=gd,Vv=Nv,$v=kv,Uv=Rv,Hv=xv,jv="pako inflate (from Nodeca project)",zv={inflateReset:Bv,inflateReset2:Mv,inflateResetKeep:Lv,inflateInit:Dv,inflateInit2:Fv,inflate:Vv,inflateEnd:$v,inflateGetHeader:Uv,inflateSetDictionary:Hv,inflateInfo:jv},Wv={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};function Gv(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var Yv=Gv,Al=zv,Rr=Wv,qv=Yv,md=Object.prototype.toString;function Ds(e){if(!(this instanceof Ds))return new Ds(e);this.options=Mt.assign({chunkSize:16384,windowBits:0,to:""},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,t.windowBits===0&&(t.windowBits=-15)),t.windowBits>=0&&t.windowBits<16&&!(e&&e.windowBits)&&(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&(t.windowBits&15)===0&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new Na,this.strm.avail_out=0;var n=Al.inflateInit2(this.strm,t.windowBits);if(n!==Rr.Z_OK)throw new Error(E[n]);if(this.header=new qv,Al.inflateGetHeader(this.strm,this.header),t.dictionary&&(typeof t.dictionary=="string"?t.dictionary=Oo.string2buf(t.dictionary):md.call(t.dictionary)==="[object ArrayBuffer]"&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(n=Al.inflateSetDictionary(this.strm,t.dictionary),n!==Rr.Z_OK)))throw new Error(E[n])}Ds.prototype.push=function(e,t){var n=this.strm,r=this.options.chunkSize,a=this.options.dictionary,u,h,b,U,O,F=!1;if(this.ended)return!1;h=t===~~t?t:t===!0?Rr.Z_FINISH:Rr.Z_NO_FLUSH,typeof e=="string"?n.input=Oo.binstring2buf(e):md.call(e)==="[object ArrayBuffer]"?n.input=new Uint8Array(e):n.input=e,n.next_in=0,n.avail_in=n.input.length;do{if(n.avail_out===0&&(n.output=new Mt.Buf8(r),n.next_out=0,n.avail_out=r),u=Al.inflate(n,Rr.Z_NO_FLUSH),u===Rr.Z_NEED_DICT&&a&&(u=Al.inflateSetDictionary(this.strm,a)),u===Rr.Z_BUF_ERROR&&F===!0&&(u=Rr.Z_OK,F=!1),u!==Rr.Z_STREAM_END&&u!==Rr.Z_OK)return this.onEnd(u),this.ended=!0,!1;n.next_out&&(n.avail_out===0||u===Rr.Z_STREAM_END||n.avail_in===0&&(h===Rr.Z_FINISH||h===Rr.Z_SYNC_FLUSH))&&(this.options.to==="string"?(b=Oo.utf8border(n.output,n.next_out),U=n.next_out-b,O=Oo.buf2string(n.output,b),n.next_out=U,n.avail_out=r-U,U&&Mt.arraySet(n.output,n.output,b,U,0),this.onData(O)):this.onData(Mt.shrinkBuf(n.output,n.next_out))),n.avail_in===0&&n.avail_out===0&&(F=!0)}while((n.avail_in>0||n.avail_out===0)&&u!==Rr.Z_STREAM_END);return u===Rr.Z_STREAM_END&&(h=Rr.Z_FINISH),h===Rr.Z_FINISH?(u=Al.inflateEnd(this.strm),this.onEnd(u),this.ended=!0,u===Rr.Z_OK):(h===Rr.Z_SYNC_FLUSH&&(this.onEnd(Rr.Z_OK),n.avail_out=0),!0)},Ds.prototype.onData=function(e){this.chunks.push(e)},Ds.prototype.onEnd=function(e){e===Rr.Z_OK&&(this.options.to==="string"?this.result=this.chunks.join(""):this.result=Mt.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};function bu(e,t){var n=new Ds(t);if(n.push(e,!0),n.err)throw n.msg||E[n.err];return n.result}function Kv(e,t){return t=t||{},t.raw=!0,bu(e,t)}var Jv=Ds,Zv=bu,Xv=Kv,Qv=bu,em={Inflate:Jv,inflate:Zv,inflateRaw:Xv,ungzip:Qv},tm=lv,nm=em,rm=Mt.assign,_d={};rm(_d,tm,nm,Rr);var bd=_d;let im="upx2px",om=[{name:"upx",type:[Number,String],required:!0}],am=1e-4,sm=750,Ed=!1,Eu=0,yd=0,wd=960,Sd=375;function lm(){let{platform:e,pixelRatio:t,windowWidth:n}=xo();Eu=n,yd=t,Ed=e==="ios"}function Ad(e,t){let n=Number(e);return isNaN(n)?t:n}function cm(){let e=P.globalStyle||{};wd=Ad(e.rpxCalcMaxDeviceWidth,960),Sd=Ad(e.rpxCalcBaseDeviceWidth,375)}let um=xt(im,(e,t)=>{if(Eu===0&&(lm(),cm()),e=Number(e),e===0)return 0;let n=t||Eu;n=n<=wd?n:Sd;let r=e/sm*n;return r<0&&(r=-r),r=Math.floor(r+am),r===0&&(yd===1||!Ed?r=1:r=.5),e<0?-r:r},om),fm="addInterceptor",dm="removeInterceptor",Cd=[{name:"method",type:[String,Object],required:!0}],hm=Cd;function Od(e,t){Object.keys(t).forEach(n=>{q.isFunction(t[n])&&(e[n]=gm(e[n],t[n]))})}function Td(e,t){!e||!t||Object.keys(t).forEach(n=>{let r=e[n],a=t[n];q.isArray(r)&&q.isFunction(a)&&q.remove(r,a)})}function gm(e,t){let n=t?e?e.concat(t):q.isArray(t)?t:[t]:e;return n&&pm(n)}function pm(e){let t=[];for(let n=0;n<e.length;n++)t.indexOf(e[n])===-1&&t.push(e[n]);return t}let vm=xt(fm,(e,t)=>{q.isString(e)&&q.isPlainObject(t)?Od(Sr[e]||(Sr[e]={}),t):q.isPlainObject(e)&&Od(Yr,e)},Cd),mm=xt(dm,(e,t)=>{q.isString(e)?q.isPlainObject(t)?Td(Sr[e],t):delete Sr[e]:q.isPlainObject(e)&&Td(Yr,e)},hm),_m={},bm="$on",Pd=[{name:"event",type:String,required:!0},{name:"callback",type:Function,required:!0}],Em="$once",ym=Pd,wm="$off",Sm=[{name:"event",type:[String,Array]},{name:"callback",type:Function}],Am="$emit",Cm=[{name:"event",type:String,required:!0}],Fs=new ne.Emitter,Om=xt(bm,(e,t)=>(Fs.on(e,t),()=>Fs.off(e,t)),Pd),Tm=xt(Em,(e,t)=>(Fs.once(e,t),()=>Fs.off(e,t)),ym),Pm=xt(wm,(e,t)=>{if(!e){Fs.e={};return}q.isArray(e)||(e=[e]),e.forEach(n=>Fs.off(n,t))},Sm),Im=xt(Am,(e,...t)=>{Fs.emit(e,...t)},Cm),Id=[{name:"id",type:String,required:!0}],Nm="createVideoContext",km="createMapContext",Rm=Id,xm="createCanvasContext",Bm=[{name:"canvasId",type:String,required:!0},{name:"componentInstance",type:Object}],Mm="createInnerAudioContext",Lm="createLivePusherContext",Dm=Id.concat({name:"componentInstance",type:Object}),Fm=[.5,.8,1,1.25,1.5,2];class yu{constructor(t,n){this.id=t,this.pageId=n}play(){$r(this.id,this.pageId,"play")}pause(){$r(this.id,this.pageId,"pause")}stop(){$r(this.id,this.pageId,"stop")}seek(t){$r(this.id,this.pageId,"seek",{position:t})}sendDanmu(t){$r(this.id,this.pageId,"sendDanmu",t)}playbackRate(t){~Fm.indexOf(t)||(t=1),$r(this.id,this.pageId,"playbackRate",{rate:t})}requestFullScreen(t={}){$r(this.id,this.pageId,"requestFullScreen",t)}exitFullScreen(){$r(this.id,this.pageId,"exitFullScreen")}showStatusBar(){$r(this.id,this.pageId,"showStatusBar")}hideStatusBar(){$r(this.id,this.pageId,"hideStatusBar")}}let Vm=xt(Nm,(e,t)=>t?new yu(e,ur(t)):new yu(e,ur(Vr()))),$m=(e,t)=>{let n=t.errMsg||"";new RegExp("\\:\\s*fail").test(n)?e.fail&&e.fail(t):e.success&&e.success(t),e.complete&&e.complete(t)},xi=(e,t,n,r)=>{$t(e,t,n,r,a=>{r&&$m(r,a)})};class wu{constructor(t,n){this.id=t,this.pageId=n}getCenterLocation(t){xi(this.id,this.pageId,"getCenterLocation",t)}moveToLocation(t){xi(this.id,this.pageId,"moveToLocation",t)}getScale(t){xi(this.id,this.pageId,"getScale",t)}getRegion(t){xi(this.id,this.pageId,"getRegion",t)}includePoints(t){xi(this.id,this.pageId,"includePoints",t)}translateMarker(t){xi(this.id,this.pageId,"translateMarker",t)}$getAppMap(){return s.maps.getMapById(this.pageId+"-map-"+this.id)}addCustomLayer(t){xi(this.id,this.pageId,"addCustomLayer",t)}removeCustomLayer(t){xi(this.id,this.pageId,"removeCustomLayer",t)}addGroundOverlay(t){xi(this.id,this.pageId,"addGroundOverlay",t)}removeGroundOverlay(t){xi(this.id,this.pageId,"removeGroundOverlay",t)}updateGroundOverlay(t){xi(this.id,this.pageId,"updateGroundOverlay",t)}initMarkerCluster(t){xi(this.id,this.pageId,"initMarkerCluster",t)}addMarkers(t){xi(this.id,this.pageId,"addMarkers",t)}removeMarkers(t){xi(this.id,this.pageId,"removeMarkers",t)}moveAlong(t){xi(this.id,this.pageId,"moveAlong",t)}openMapApp(t){xi(this.id,this.pageId,"openMapApp",t)}on(t){xi(this.id,this.pageId,"on",t)}}let Um=xt(km,(e,t)=>t?new wu(e,ur(t)):new wu(e,ur(Vr())),Rm);function ps(e,t){return function(n,r){n?r[e]=Math.round(n):typeof t!="undefined"&&(r[e]=t)}}let Nd=ps("width"),kd=ps("height"),Hm="canvasGetImageData",Rd={formatArgs:{x:ps("x"),y:ps("y"),width:Nd,height:kd}},xd={canvasId:{type:String,required:!0},x:{type:Number,required:!0},y:{type:Number,required:!0},width:{type:Number,required:!0},height:{type:Number,required:!0}},jm="canvasPutImageData",zm=Rd,Wm=q.extend({data:{type:Uint8ClampedArray,required:!0}},xd,{height:{type:Number}}),Bd={PNG:"png",JPG:"jpg",JPEG:"jpg"},Gm="canvasToTempFilePath",Ym={formatArgs:{x:ps("x",0),y:ps("y",0),width:Nd,height:kd,destWidth:ps("destWidth"),destHeight:ps("destHeight"),fileType(e,t){e=(e||"").toUpperCase();let n=Bd[e];n||(n=Bd.PNG),t.fileType=n},quality(e,t){t.quality=e&&e>0&&e<1?e:1}}},qm={x:Number,y:Number,width:Number,height:Number,destWidth:Number,destHeight:Number,canvasId:{type:String,required:!0},fileType:String,quality:Number};function Cc(e,t,n,r,a){at.invokeViewMethod(`canvas.${e}`,{type:n,data:r},t,u=>{a&&a(u)})}var Km=["scale","rotate","translate","setTransform","transform"],Jm=["drawImage","fillText","fill","stroke","fillRect","strokeRect","clearRect","strokeText"],Zm=["setFillStyle","setTextAlign","setStrokeStyle","setGlobalAlpha","setShadow","setFontSize","setLineCap","setLineJoin","setLineWidth","setMiterLimit","setTextBaseline","setLineDash"];function Xm(e,t){let r=document.createElement("canvas").getContext("2d");return r.font=t,r.measureText(e).width||0}let Md={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgrey:"#a9a9a9",darkgreen:"#006400",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",grey:"#808080",green:"#008000",greenyellow:"#adff2f",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgrey:"#d3d3d3",lightgreen:"#90ee90",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370db",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#db7093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",rebeccapurple:"#663399",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32",transparent:"#00000000"};function Su(e){e=e||"#000000";var t=null;if((t=/^#([0-9|A-F|a-f]{6})$/.exec(e))!=null){let r=parseInt(t[1].slice(0,2),16),a=parseInt(t[1].slice(2,4),16),u=parseInt(t[1].slice(4),16);return[r,a,u,255]}if((t=/^#([0-9|A-F|a-f]{3})$/.exec(e))!=null){let r=t[1].slice(0,1),a=t[1].slice(1,2),u=t[1].slice(2,3);return r=parseInt(r+r,16),a=parseInt(a+a,16),u=parseInt(u+u,16),[r,a,u,255]}if((t=/^rgb\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r){return Math.min(255,parseInt(r.trim()))}).concat(255);if((t=/^rgba\((.+)\)$/.exec(e))!=null)return t[1].split(",").map(function(r,a){return a===3?Math.floor(255*parseFloat(r.trim())):Math.min(255,parseInt(r.trim()))});var n=e.toLowerCase();if(q.hasOwn(Md,n)){t=/^#([0-9|A-F|a-f]{6,8})$/.exec(Md[n]);let r=parseInt(t[1].slice(0,2),16),a=parseInt(t[1].slice(2,4),16),u=parseInt(t[1].slice(4,6),16),h=parseInt(t[1].slice(6,8),16);return h=h>=0?h:255,[r,a,u,h]}return console.error("unsupported color:"+e),[0,0,0,255]}class Ld{constructor(t,n){this.type=t,this.data=n,this.colorStop=[]}addColorStop(t,n){this.colorStop.push([t,Su(n)])}}class Qm{constructor(t,n){this.type="pattern",this.data=t,this.colorStop=n}}class e_{constructor(t){this.width=t}}class Zl{constructor(t,n){this.id=t,this.pageId=n,this.actions=[],this.path=[],this.subpath=[],this.drawingState=[],this.state={lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}draw(t=!1,n){var r=[...this.actions];this.actions=[],this.path=[],Cc(this.id,this.pageId,"actionsChanged",{actions:r,reserve:t},n)}createLinearGradient(t,n,r,a){return new Ld("linear",[t,n,r,a])}createCircularGradient(t,n,r){return new Ld("radial",[t,n,r])}createPattern(t,n){if(n===void 0)console.error("Failed to execute 'createPattern' on 'CanvasContext': 2 arguments required, but only 1 present.");else if(["repeat","repeat-x","repeat-y","no-repeat"].indexOf(n)<0)console.error("Failed to execute 'createPattern' on 'CanvasContext': The provided type ('"+n+"') is not one of 'repeat', 'no-repeat', 'repeat-x', or 'repeat-y'.");else return new Qm(t,n)}measureText(t){let n=this.state.font,r=0;{let a=s.webview.all().find(u=>u.getURL().endsWith("www/__uniappview.html"));a&&(r=Number(a.evalJSSync(`(${Xm.toString()})(${JSON.stringify(t)},${JSON.stringify(n)})`)))}return new e_(r)}save(){this.actions.push({method:"save",data:[]}),this.drawingState.push(this.state)}restore(){this.actions.push({method:"restore",data:[]}),this.state=this.drawingState.pop()||{lineDash:[0,0],shadowOffsetX:0,shadowOffsetY:0,shadowBlur:0,shadowColor:[0,0,0,0],font:"10px sans-serif",fontSize:10,fontWeight:"normal",fontStyle:"normal",fontFamily:"sans-serif"}}beginPath(){this.path=[],this.subpath=[],this.path.push({method:"beginPath",data:[]})}moveTo(t,n){this.path.push({method:"moveTo",data:[t,n]}),this.subpath=[[t,n]]}lineTo(t,n){this.path.length===0&&this.subpath.length===0?this.path.push({method:"moveTo",data:[t,n]}):this.path.push({method:"lineTo",data:[t,n]}),this.subpath.push([t,n])}quadraticCurveTo(t,n,r,a){this.path.push({method:"quadraticCurveTo",data:[t,n,r,a]}),this.subpath.push([r,a])}bezierCurveTo(t,n,r,a,u,h){this.path.push({method:"bezierCurveTo",data:[t,n,r,a,u,h]}),this.subpath.push([u,h])}arc(t,n,r,a,u,h=!1){this.path.push({method:"arc",data:[t,n,r,a,u,h]}),this.subpath.push([t,n])}rect(t,n,r,a){this.path.push({method:"rect",data:[t,n,r,a]}),this.subpath=[[t,n]]}arcTo(t,n,r,a,u){this.path.push({method:"arcTo",data:[t,n,r,a,u]}),this.subpath.push([r,a])}clip(){this.actions.push({method:"clip",data:[...this.path]})}closePath(){this.path.push({method:"closePath",data:[]}),this.subpath.length&&(this.subpath=[this.subpath.shift()])}clearActions(){this.actions=[],this.path=[],this.subpath=[]}getActions(){var t=[...this.actions];return this.clearActions(),t}set lineDashOffset(t){this.actions.push({method:"setLineDashOffset",data:[t]})}set globalCompositeOperation(t){this.actions.push({method:"setGlobalCompositeOperation",data:[t]})}set shadowBlur(t){this.actions.push({method:"setShadowBlur",data:[t]})}set shadowColor(t){this.actions.push({method:"setShadowColor",data:[t]})}set shadowOffsetX(t){this.actions.push({method:"setShadowOffsetX",data:[t]})}set shadowOffsetY(t){this.actions.push({method:"setShadowOffsetY",data:[t]})}set font(t){var n=this;this.state.font=t;var r=t.match(/^(([\w\-]+\s)*)(\d+r?px)(\/(\d+\.?\d*(r?px)?))?\s+(.*)/);if(r){var a=r[1].trim().split(/\s/),u=parseFloat(r[3]),h=r[7],b=[];a.forEach(function(O,F){["italic","oblique","normal"].indexOf(O)>-1?(b.push({method:"setFontStyle",data:[O]}),n.state.fontStyle=O):["bold","normal"].indexOf(O)>-1?(b.push({method:"setFontWeight",data:[O]}),n.state.fontWeight=O):F===0?(b.push({method:"setFontStyle",data:["normal"]}),n.state.fontStyle="normal"):F===1&&U()}),a.length===1&&U(),a=b.map(function(O){return O.data[0]}).join(" "),this.state.fontSize=u,this.state.fontFamily=h,this.actions.push({method:"setFont",data:[`${a} ${u}px ${h}`]})}else console.warn("Failed to set 'font' on 'CanvasContext': invalid format.");function U(){b.push({method:"setFontWeight",data:["normal"]}),n.state.fontWeight="normal"}}get font(){return this.state.font}set fillStyle(t){this.setFillStyle(t)}set strokeStyle(t){this.setStrokeStyle(t)}set globalAlpha(t){t=Math.floor(255*parseFloat(t)),this.actions.push({method:"setGlobalAlpha",data:[t]})}set textAlign(t){this.actions.push({method:"setTextAlign",data:[t]})}set lineCap(t){this.actions.push({method:"setLineCap",data:[t]})}set lineJoin(t){this.actions.push({method:"setLineJoin",data:[t]})}set lineWidth(t){this.actions.push({method:"setLineWidth",data:[t]})}set miterLimit(t){this.actions.push({method:"setMiterLimit",data:[t]})}set textBaseline(t){this.actions.push({method:"setTextBaseline",data:[t]})}}let t_=ne.once(()=>{[...Km,...Jm].forEach(function(e){function t(n){switch(n){case"fill":case"stroke":return function(){this.actions.push({method:n+"Path",data:[...this.path]})};case"fillRect":return function(r,a,u,h){this.actions.push({method:"fillPath",data:[{method:"rect",data:[r,a,u,h]}]})};case"strokeRect":return function(r,a,u,h){this.actions.push({method:"strokePath",data:[{method:"rect",data:[r,a,u,h]}]})};case"fillText":case"strokeText":return function(r,a,u,h){var b=[r.toString(),a,u];typeof h=="number"&&b.push(h),this.actions.push({method:n,data:b})};case"drawImage":return function(r,a,u,h,b,U,O,F,ge){ge===void 0&&(U=a,O=u,F=h,ge=b,a=void 0,u=void 0,h=void 0,b=void 0);var Se;function ke(Et){return typeof Et=="number"}Se=ke(a)&&ke(u)&&ke(h)&&ke(b)?[r,U,O,F,ge,a,u,h,b]:ke(F)&&ke(ge)?[r,U,O,F,ge]:[r,U,O],this.actions.push({method:n,data:Se})};default:return function(...r){this.actions.push({method:n,data:r})}}}Zl.prototype[e]=t(e)}),Zm.forEach(function(e){function t(n){switch(n){case"setFillStyle":case"setStrokeStyle":return function(r){typeof r!="object"?this.actions.push({method:n,data:["normal",Su(r)]}):this.actions.push({method:n,data:[r.type,r.data,r.colorStop]})};case"setGlobalAlpha":return function(r){r=Math.floor(255*parseFloat(r)),this.actions.push({method:n,data:[r]})};case"setShadow":return function(r,a,u,h){h=Su(h),this.actions.push({method:n,data:[r,a,u,h]}),this.state.shadowBlur=u,this.state.shadowColor=h,this.state.shadowOffsetX=r,this.state.shadowOffsetY=a};case"setLineDash":return function(r,a){r=r||[0,0],a=a||0,this.actions.push({method:n,data:[r,a]}),this.state.lineDash=r};case"setFontSize":return function(r){this.state.font=this.state.font.replace(/\d+\.?\d*px/,r+"px"),this.state.fontSize=r,this.actions.push({method:n,data:[r]})};default:return function(...r){this.actions.push({method:n,data:r})}}}Zl.prototype[e]=t(e)})}),n_=xt(xm,(e,t)=>{if(t_(),t)return new Zl(e,ur(t));let n=ur(Vr());if(n)return new Zl(e,n);at.emit(ne.ON_ERROR,"createCanvasContext:fail")},Bm),r_=we(Hm,({canvasId:e,x:t,y:n,width:r,height:a},{resolve:u,reject:h})=>{let b=ur(Vr());if(!b){h();return}function U(O){if(O.errMsg&&O.errMsg.indexOf("fail")!==-1){h("",O);return}let F=O.data;F&&F.length&&(O.compressed&&(F=bd.inflateRaw(F)),O.data=new Uint8ClampedArray(F)),delete O.compressed,u(O)}Cc(e,b,"getImageData",{x:t,y:n,width:r,height:a},U)},xd,Rd),i_=we(jm,({canvasId:e,data:t,x:n,y:r,width:a,height:u},{resolve:h,reject:b})=>{var U=ur(Vr());if(!U){b();return}let O,F=()=>{Cc(e,U,"putImageData",{data:t,x:n,y:r,width:a,height:u,compressed:O},ge=>{if(ge.errMsg&&ge.errMsg.indexOf("fail")!==-1){b();return}h(ge)})};s.os.name!=="iOS"||typeof __WEEX_DEVTOOL__=="boolean"?(t=bd.deflateRaw(t,{to:"string"}),O=!0):t=Array.prototype.slice.call(t),F()},Wm,zm),o_=we(Gm,({x:e=0,y:t=0,width:n,height:r,destWidth:a,destHeight:u,canvasId:h,fileType:b,quality:U},{resolve:O,reject:F})=>{var ge=ur(Vr());if(!ge){F();return}let Se=`${ei}/canvas`;Cc(h,ge,"toTempFilePath",{x:e,y:t,width:n,height:r,destWidth:a,destHeight:u,fileType:b,quality:U,dirname:Se},ke=>{if(ke.errMsg&&ke.errMsg.indexOf("fail")!==-1){F("",ke);return}O(ke)})},qm,Ym),Dd=["onCanplay","onPlay","onPause","onStop","onEnded","onTimeUpdate","onError","onWaiting","onSeeking","onSeeked"],a_=["offCanplay","offPlay","offPause","offStop","offEnded","offTimeUpdate","offError","offWaiting","offSeeking","offSeeked"],s_={thresholds:[0],initialRatio:0,observeAll:!1},l_=["top","right","bottom","left"],c_=1;function Fd(e={}){return l_.map(t=>`${Number(e[t])||0}px`).join(" ")}class Vd{constructor(t,n){this._pageId=ur(t),this._component=t,this._options=q.extend({},s_,n)}relativeTo(t,n){return this._options.relativeToSelector=t,this._options.rootMargin=Fd(n),this}relativeToViewport(t){return this._options.relativeToSelector=void 0,this._options.rootMargin=Fd(t),this}observe(t,n){!q.isFunction(n)||(this._options.selector=t,this._reqId=c_++,Fa({reqId:this._reqId,component:this._component,options:this._options,callback:n},this._pageId))}disconnect(){this._reqId&&yi({reqId:this._reqId,component:this._component},this._pageId)}}let u_=xt("createIntersectionObserver",(e,t)=>(e=ne.resolveComponentInstance(e),e&&!ur(e)&&(t=e,e=null),e?new Vd(e,t):new Vd(Vr(),t))),f_=1;class $d{constructor(t){this._pageId=t.$page&&t.$page.id,this._component=t}observe(t,n){!q.isFunction(n)||(this._reqId=f_++,Vo({reqId:this._reqId,component:this._component,options:t,callback:n},this._pageId))}disconnect(){this._reqId&&sa({reqId:this._reqId,component:this._component},this._pageId)}}let d_=xt("createMediaQueryObserver",e=>(e=ne.resolveComponentInstance(e),e&&!ur(e)&&(e=null),e?new $d(e):new $d(Vr()))),h_=0,Au={};function g_(e,t,n,r){let a={options:r},u=r&&("success"in r||"fail"in r||"complete"in r);if(u){let h=String(h_++);a.callbackId=h,Au[h]=r}at.invokeViewMethod(`editor.${e}`,{type:n,data:a},t,({callbackId:h,data:b})=>{u&&(ne.callOptions(Au[h],b),delete Au[h])})}class p_{constructor(t,n){this.id=t,this.pageId=n}format(t,n){this._exec("format",{name:t,value:n})}insertDivider(){this._exec("insertDivider")}insertImage(t){this._exec("insertImage",t)}insertText(t){this._exec("insertText",t)}setContents(t){this._exec("setContents",t)}getContents(t){this._exec("getContents",t)}clear(t){this._exec("clear",t)}removeFormat(t){this._exec("removeFormat",t)}undo(t){this._exec("undo",t)}redo(t){this._exec("redo",t)}blur(t){this._exec("blur",t)}getSelectionText(t){this._exec("getSelectionText",t)}scrollIntoView(t){this._exec("scrollIntoView",t)}_exec(t,n){g_(this.id,this.pageId,t,n)}}let v_={canvas:Zl,map:wu,video:yu,editor:p_};function Ud(e){if(e&&e.contextInfo){let{id:t,type:n,page:r}=e.contextInfo,a=v_[n];e.context=new a(t,r),delete e.contextInfo}}class Cu{constructor(t,n,r,a){this._selectorQuery=t,this._component=n,this._selector=r,this._single=a}boundingClientRect(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,rect:!0,size:!0},t),this._selectorQuery}fields(t,n){return this._selectorQuery._push(this._selector,this._component,this._single,t,n),this._selectorQuery}scrollOffset(t){return this._selectorQuery._push(this._selector,this._component,this._single,{id:!0,dataset:!0,scrollOffset:!0},t),this._selectorQuery}context(t){return this._selectorQuery._push(this._selector,this._component,this._single,{context:!0},t),this._selectorQuery}node(t){return this._selectorQuery}}class m_{constructor(t){this._component=void 0,this._page=t,this._queue=[],this._queueCb=[]}exec(t){return Pi(this._page,this._queue,n=>{let r=this._queueCb;n.forEach((a,u)=>{q.isArray(a)?a.forEach(Ud):Ud(a);let h=r[u];q.isFunction(h)&&h.call(this,a)}),q.isFunction(t)&&t.call(this,n)}),this._nodesRef}in(t){return this._component=ne.resolveComponentInstance(t),this}select(t){return this._nodesRef=new Cu(this,this._component,t,!0)}selectAll(t){return this._nodesRef=new Cu(this,this._component,t,!1)}selectViewport(){return this._nodesRef=new Cu(this,null,"",!0)}_push(t,n,r,a,u){this._queue.push({component:n,selector:t,single:r,fields:a}),this._queueCb.push(u)}}let __=xt("createSelectorQuery",e=>(e=ne.resolveComponentInstance(e),e&&!ur(e)&&(e=null),new m_(e||Vr()))),b_="createAnimation",E_={formatArgs:{}},y_={duration:Number,timingFunction:String,delay:Number,transformOrigin:String},w_={duration:400,timingFunction:"linear",delay:0,transformOrigin:"50% 50% 0"};class Hd{constructor(t){this.actions=[],this.currentTransform={},this.currentStepAnimates=[],this.option=q.extend({},w_,t)}_getOption(t){let n={transition:q.extend({},this.option,t),transformOrigin:""};return n.transformOrigin=n.transition.transformOrigin,delete n.transition.transformOrigin,n}_pushAnimates(t,n){this.currentStepAnimates.push({type:t,args:n})}_converType(t){return t.replace(/[A-Z]/g,n=>`-${n.toLowerCase()}`)}_getValue(t){return typeof t=="number"?`${t}px`:t}export(){let t=this.actions;return this.actions=[],{actions:t}}step(t){return this.currentStepAnimates.forEach(n=>{n.type!=="style"?this.currentTransform[n.type]=n:this.currentTransform[`${n.type}.${n.args[0]}`]=n}),this.actions.push({animates:Object.values(this.currentTransform),option:this._getOption(t)}),this.currentStepAnimates=[],this}}let S_=ne.once(()=>{let e=["matrix","matrix3d","rotate","rotate3d","rotateX","rotateY","rotateZ","scale","scale3d","scaleX","scaleY","scaleZ","skew","skewX","skewY","translate","translate3d","translateX","translateY","translateZ"],t=["opacity","backgroundColor"],n=["width","height","left","right","top","bottom"];e.concat(t,n).forEach(r=>{Hd.prototype[r]=function(...a){return t.concat(n).includes(r)?this._pushAnimates("style",[this._converType(r),n.includes(r)?this._getValue(a[0]):a[0]]):this._pushAnimates(r,a),this}})}),A_=xt(b_,e=>(S_(),new Hd(e)),y_,E_),jd="onTabBarMidButtonTap",C_=Kn(jd,()=>{}),O_="onWindowResize",T_="offWindowResize",P_=Kn(O_,()=>{}),I_=Cr(T_,()=>{}),zd="setLocale",N_="getLocale",Wd="onLocaleChange",Ou=xt(N_,()=>{let e=pn({allowDefault:!0});return e&&e.$vm?e.$vm.$locale:X().getLocale()}),k_=Kn(Wd,()=>{}),R_=xt(zd,e=>{let t=pn();return t&&t.$vm.$locale!==e?(t.$vm.$locale=e,Pn().forEach(a=>{at.publishHandler(zd,e,a.$page.id)}),g.requireModule("plus").setLanguage(e),at.invokeOnCallback(Wd,{locale:e}),!0):!1}),x_=we("setPageMeta",(e,{resolve:t})=>{t(Or(Vr(),e))}),Gd="getSelectedTextRange",B_=we(Gd,(e,{resolve:t,reject:n})=>{at.invokeViewMethod(Gd,{},Ma(),r=>{typeof r.end=="undefined"&&typeof r.start=="undefined"?n("no focused"):t(r)})}),Oc={[ne.ON_UNHANDLE_REJECTION]:[],[ne.ON_PAGE_NOT_FOUND]:[],[ne.ON_ERROR]:[],[ne.ON_SHOW]:[],[ne.ON_HIDE]:[]};function Xl(e,t){let n=pn({allowDefault:!0});if(n&&n.$vm)return En.injectHook(e,t,n.$vm.$);Oc[e].push(t)}function M_(e){Object.keys(Oc).forEach(t=>{Oc[t].forEach(n=>{En.injectHook(t,n,e)})})}function Ql(e,t){let n=pn({allowDefault:!0});if(n&&n.$vm)return is(n.$vm,e,t);q.remove(Oc[e],t)}function L_(e){Xl(ne.ON_UNHANDLE_REJECTION,e)}function D_(e){Ql(ne.ON_UNHANDLE_REJECTION,e)}function F_(e){Xl(ne.ON_PAGE_NOT_FOUND,e)}function V_(e){Ql(ne.ON_PAGE_NOT_FOUND,e)}function $_(e){Xl(ne.ON_ERROR,e)}function U_(e){Ql(ne.ON_ERROR,e)}function H_(e){Xl(ne.ON_SHOW,e)}function j_(e){Ql(ne.ON_SHOW,e)}function z_(e){Xl(ne.ON_HIDE,e)}function W_(e){Ql(ne.ON_HIDE,e)}let G_=xt("getEnterOptionsSync",()=>Ir()),Y_=xt("getLaunchOptionsSync",()=>fr()),ec,Tu,Pu;function Yd(e){try{return JSON.parse(e)}catch(t){}return e}function q_(e){if(e.type==="enabled")Pu=!0;else if(e.type==="clientId")ec=e.cid,Tu=e.errMsg,qd(ec,e.errMsg);else if(e.type==="pushMsg"){let t={type:"receive",data:Yd(e.message)};for(let n=0;n<vs.length&&(vs[n](t),!t.stopped);n++);}else e.type==="click"&&vs.forEach(t=>{t({type:"click",data:Yd(e.message)})})}let Iu=[];function qd(e,t){Iu.forEach(n=>{n(e,t)}),Iu.length=0}let K_=we("getPushClientId",(e,{resolve:t,reject:n})=>{Promise.resolve().then(()=>{typeof Pu=="undefined"&&(Pu=!1,ec="",Tu="unipush is not enabled"),Iu.push((r,a)=>{r?t({cid:r}):n(a)}),typeof ec!="undefined"&&qd(ec,Tu)})}),vs=[],J_=e=>{vs.indexOf(e)===-1&&vs.push(e)},Z_=e=>{if(!e)vs.length=0;else{let t=vs.indexOf(e);t>-1&&vs.splice(t,1)}},X_="canIUse",Q_=[{name:"schema",type:String,required:!0}],eb="getBackgroundAudioManager",tb="makePhoneCall",nb={phoneNumber:String},rb="addPhoneContact",ib={formatArgs:{firstName(e){if(!e)return"addPhoneContact:fail parameter error: parameter.firstName should not be empty;"}}},ob={firstName:{type:String,required:!0},photoFilePath:String,nickName:String,lastName:String,middleName:String,remark:String,mobilePhoneNumber:String,weChatNumber:String,addressCountry:String,addressState:String,addressCity:String,addressStreet:String,addressPostalCode:String,organization:String,title:String,workFaxNumber:String,workPhoneNumber:String,hostNumber:String,email:String,url:String,workAddressCountry:String,workAddressState:String,workAddressCity:String,workAddressStreet:String,workAddressPostalCode:String,homeFaxNumber:String,homePhoneNumber:String,homeAddressCountry:String,homeAddressState:String,homeAddressCity:String,homeAddressStreet:String,homeAddressPostalCode:String},ab="getClipboardData",sb="setClipboardData",lb={formatArgs:{showToast:!0},beforeInvoke(){jo()},beforeSuccess(e,t){if(!t.showToast)return;let{t:n}=X(),r=n("uni.setClipboardData.success");r&&dt.showToast({title:r,icon:"success",mask:!1})}},cb={data:{type:String,required:!0},showToast:{type:Boolean}},Kd="onAccelerometer",ub="offAccelerometer",fb="startAccelerometer",db="stopAccelerometer",Jd="onCompass",hb="offCompass",gb="startCompass",pb="stopCompass",vb="vibrateShort",mb="vibrateLong",Zd="onBluetoothDeviceFound",Xd="onBluetoothAdapterStateChange",Qd="onBLEConnectionStateChange",eh="onBLECharacteristicValueChange",_b="startBluetoothDevicesDiscovery",bb={services:Array,allowDuplicatesKey:Boolean,interval:Number},Eb="getConnectedBluetoothDevices",yb={services:{type:Array,required:!0}},wb="createBLEConnection",Sb={deviceId:{type:String,required:!0}},Ab="closeBLEConnection",Cb={deviceId:{type:String,required:!0}},Ob="getBLEDeviceServices",Tb={deviceId:{type:String,required:!0}},Pb="getBLEDeviceCharacteristics",Ib={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0}},Nb="notifyBLECharacteristicValueChange",kb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},state:{type:Boolean,required:!0}},Rb="readBLECharacteristicValue",xb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0}},Bb="writeBLECharacteristicValue",Mb={deviceId:{type:String,required:!0},serviceId:{type:String,required:!0},characteristicId:{type:String,required:!0},value:{type:Array,required:!0}},Lb="setBLEMTU",Db={deviceId:{type:String,required:!0},mtu:{type:Number,required:!0}},Fb="getBLEDeviceRSSI",Vb={deviceId:{type:String,required:!0}},th="onBeaconUpdate",nh="onBeaconServiceChange",$b="getBeacons",Ub="startBeaconDiscovery",Hb={uuids:{type:Array,required:!0}},jb="stopBeaconDiscovery",zb="getScreenBrightness",Wb="setScreenBrightness",Gb="setKeepScreenOn",Yb="soterAuthentication",qb="checkIsSoterEnrolledInDevice",Kb=["fingerPrint","facial","speech"],Jb={formatArgs:{checkAuthMode(e,t){if(!e||!Kb.includes(e))return"checkAuthMode \u586B\u5199\u9519\u8BEF"}}},Zb={checkAuthMode:String},Xb="checkIsSoterEnrolledInDevice",Qb={formatArgs:{requestAuthModes(e,t){if(!e.includes("fingerPrint")&&!e.includes("facial"))return"requestAuthModes \u586B\u5199\u9519\u8BEF"}}},e0={requestAuthModes:{type:Array,required:!0},challenge:String,authContent:String},t0="scanCode",n0={onlyFromCamera:Boolean,scanType:Array,autoDecodeCharSet:Boolean,sound:String},r0=["default","none"],i0={formatArgs:{sound(e,t){r0.includes(e)||(t.sound="none")}}},o0="getSystemSetting",a0="getAppAuthorizeSetting",s0="openAppAuthorizeSetting",l0="getStorage",rh={key:{type:String,required:!0}},c0="getStorageSync",ih=[{name:"key",type:String,required:!0}],u0="setStorage",f0={key:{type:String,required:!0},data:{required:!0}},d0="setStorageSync",h0=[{name:"key",type:String,required:!0},{name:"data",required:!0}],oh="removeStorage",g0=rh,p0=ih,v0="saveFile",m0={formatArgs:{tempFilePath(e,t){t.tempFilePath=ht(e)}}},_0={tempFilePath:{type:String,required:!0}},b0="getSavedFileList",E0="removeSavedFile",y0={formatArgs:{filePath(e,t){t.filePath=ht(e)}}},w0={filePath:{type:String,required:!0}},S0="getFileInfo",A0={formatArgs:{filePath(e,t){t.filePath=ht(e)}}},C0={filePath:{type:String,required:!0}},O0="getSavedFileInfo",T0={formatArgs:{filePath(e,t){t.filePath=ht(e)}}},P0={filePath:{type:String,required:!0}},I0="openDocument",N0={formatArgs:{filePath(e,t){t.filePath=ht(e)}}},k0={filePath:{type:String,required:!0},fileType:String},R0="hideKeyboard",x0="showKeyboard",B0="chooseLocation",M0={keyword:String,latitude:Number,longitude:Number},L0="getLocation",ah=["wgs84","gcj02"],D0={formatArgs:{type(e,t){e=(e||"").toLowerCase(),ah.indexOf(e)===-1?t.type=ah[0]:t.type=e},altitude(e,t){t.altitude=e||!1}}},F0={type:String,altitude:Boolean},V0="openLocation",sh=(e,t)=>{if(t===void 0)return`${e} should not be empty.`;if(typeof t!="number"){let n=typeof t;return n=n[0].toUpperCase()+n.substring(1),`Expected Number, got ${n} with value ${JSON.stringify(t)}.`}},$0={formatArgs:{latitude(e,t){let n=sh("latitude",e);if(n)return n;t.latitude=e},longitude(e,t){let n=sh("longitude",e);if(n)return n;t.longitude=e},scale(e,t){e=Math.floor(e),t.scale=e>=5&&e<=18?e:18}}},U0={latitude:Number,longitude:Number,scale:Number,name:String,address:String},H0="chooseImage",j0={formatArgs:{count(e,t){(!e||e<=0)&&(t.count=9)},sizeType(e,t){t.sizeType=mn(e,kn)},sourceType(e,t){t.sourceType=mn(e,Hn)},extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},z0={count:Number,sizeType:[Array,String],sourceType:Array,extension:Array},W0="chooseVideo",G0={formatArgs:{sourceType(e,t){t.sourceType=mn(e,Hn)},compressed:!0,maxDuration:60,camera:"back",extension(e,t){if(e instanceof Array&&e.length===0)return"param extension should not be empty.";e||(t.extension=["*"])}}},Y0={sourceType:Array,compressed:Boolean,maxDuration:Number,camera:String,extension:Array},q0="getImageInfo",K0={formatArgs:{src(e,t){t.src=ht(e)}}},J0={src:{type:String,required:!0}},Z0="previewImage",X0={formatArgs:{urls(e,t){t.urls=e.map(n=>q.isString(n)&&n?ht(n):"")},current(e,t){typeof e=="number"?t.current=e>0&&e<t.urls.length?e:0:q.isString(e)&&e&&(t.current=ht(e))}}},Q0={urls:{type:Array,required:!0},current:{type:[Number,String]}},eE="closePreviewImage",tE="getVideoInfo",nE={formatArgs:{src(e,t){t.src=ht(e)}}},rE={src:{type:String,required:!0}},iE="saveImageToPhotosAlbum",oE={formatArgs:{filePath(e,t){t.filePath=ht(e)}}},aE={filePath:{type:String,required:!0}},sE="saveVideoToPhotosAlbum",lE={formatArgs:{filePath(e,t){t.filePath=ht(e)}}},cE={filePath:{type:String,required:!0}},uE="getRecorderManager",fE="compressImage",dE={formatArgs:{src(e,t){t.src=ht(e)}}},hE={src:{type:String,required:!0}},gE="compressVideo",pE={formatArgs:{src(e,t){t.src=ht(e)}}},vE={src:{type:String,required:!0},quality:String,bitrate:Number,fps:Number,resolution:Number},mE="request",_E={JSON:"json"},bE=["text","arraybuffer"],EE="text",lh=encodeURIComponent;function yE(e,t){let n=e.split("#"),r=n[1]||"";n=n[0].split("?");let a=n[1]||"";e=n[0];let u=a.split("&").filter(b=>b),h={};u.forEach(b=>{let U=b.split("=");h[U[0]]=U[1]});for(let b in t)if(q.hasOwn(t,b)){let U=t[b];typeof U=="undefined"||U===null?U="":q.isPlainObject(U)&&(U=JSON.stringify(U)),h[lh(b)]=lh(U)}return a=Object.keys(h).map(b=>`${b}=${h[b]}`).join("&"),e+(a?"?"+a:"")+(r?"#"+r:"")}let wE={method:String,data:[Object,String,Array,ArrayBuffer],url:{type:String,required:!0},header:Object,dataType:String,responseType:String,withCredentials:Boolean},SE={formatArgs:{method(e,t){t.method=an((e||"").toUpperCase(),vn)},data(e,t){t.data=e||""},url(e,t){t.method===vn[0]&&q.isPlainObject(t.data)&&Object.keys(t.data).length&&(t.url=yE(e,t.data))},header(e,t){let n=t.header=e||{};t.method!==vn[0]&&(Object.keys(n).find(r=>r.toLowerCase()==="content-type")||(n["Content-Type"]="application/json"))},dataType(e,t){t.dataType=(e||_E.JSON).toLowerCase()},responseType(e,t){t.responseType=(e||"").toLowerCase(),bE.indexOf(t.responseType)===-1&&(t.responseType=EE)}}},AE="configMTLS",CE={certificates:{type:Array,required:!0}},OE={formatArgs:{certificates(e){if(e.some(t=>q.toRawType(t.host)!=="String"))return"\u53C2\u6570\u914D\u7F6E\u9519\u8BEF\uFF0C\u8BF7\u786E\u8BA4\u540E\u91CD\u8BD5"}}},TE="downloadFile",PE={formatArgs:{header(e,t){t.header=e||{}}}},IE={url:{type:String,required:!0},header:Object,timeout:Number},NE="uploadFile",kE={formatArgs:{filePath(e,t){e&&(t.filePath=ht(e))},header(e,t){t.header=e||{}},formData(e,t){t.formData=e||{}}}},RE={url:{type:String,required:!0},files:Array,filePath:String,name:String,header:Object,formData:Object,timeout:Number},xE="connectSocket",BE={formatArgs:{header(e,t){t.header=e||{}},method(e,t){t.method=an((e||"").toUpperCase(),vn)},protocols(e,t){q.isString(e)&&(t.protocols=[e])}}},ME={url:{type:String,required:!0},header:{type:Object},method:String,protocols:[Array,String]},LE="sendSocketMessage",DE={data:[String,ArrayBuffer]},FE="closeSocket",VE={code:Number,reason:String};function $E(e){if(!q.isString(e))return e;let t=e.indexOf("?");if(t===-1)return e;let n=e.slice(t+1).trim().replace(/^(\?|#|&)/,"");if(!n)return e;e=e.slice(0,t);let r=[];return n.split("&").forEach(a=>{let u=a.replace(/\+/g," ").split("="),h=u.shift(),b=u.length>0?u.join("="):"";r.push(h+"="+encodeURIComponent(b))}),r.length?e+"?"+r.join("&"):e}let UE=["slide-in-right","slide-in-left","slide-in-top","slide-in-bottom","fade-in","zoom-out","zoom-fade-out","pop-in","none"],HE=["slide-out-right","slide-out-left","slide-out-top","slide-out-bottom","fade-out","zoom-in","zoom-fade-in","pop-out","none"],Cl={url:{type:String,required:!0}},Nu="navigateTo",ku="redirectTo",ch="reLaunch",Tc="switchTab",jE="navigateBack",Ru="preloadPage",uh="unPreloadPage",zE=q.extend({},Cl,fh(UE)),WE=q.extend({delta:{type:Number}},fh(HE)),GE=Cl,YE=Cl,qE=Cl,KE=Cl,JE=Cl,ZE=Ic(Nu),XE=Ic(ku),QE=Ic(ch),ey=Ic(Tc),ty={formatArgs:{delta(e,t){e=parseInt(e+"")||1,t.delta=Math.min(Pn().length-1,e)}}};function fh(e){return{animationType:{type:String,validator(t){if(t&&e.indexOf(t)===-1)return"`"+t+"` is not supported for `animationType` (supported values are: `"+e.join("`|`")+"`)"}},animationDuration:{type:Number}}}let Pc;function ny(){Pc=""}function Ic(e){return{formatArgs:{url:ry(e)},beforeAll:ny}}function ry(e){return function(n,r){if(!n)return'Missing required args: "url"';n=_a(n);let a=n.split("?")[0],u=ki(a,!0);if(!u)return"page `"+n+"` is not found";if(e===Nu||e===ku){if(u.meta.isTabBar)return`can not ${e} a tabbar page`}else if(e===Tc&&!u.meta.isTabBar)return"can not switch to no-tabBar page";if((e===Tc||e===Ru)&&u.meta.isTabBar&&r.openType!=="appLaunch"&&(n=a),u.meta.isEntry&&(n=n.replace(u.alias,"/")),r.url=$E(n),e!==uh){if(e===Ru){if(!u.meta.isNVue)return"can not preload vue page";if(u.meta.isTabBar){let h=Pn(),b=u.path.slice(1);if(h.find(U=>U.route===b))return"tabBar page `"+b+"` already exists"}return}if(Pc===n&&r.openType!=="appLaunch")return`${Pc} locked`;P.ready&&(Pc=n)}}}let iy="hideLoading",oy="hideToast",dh="loadFontFace",ay={family:{type:String,required:!0},source:{type:String,required:!0},desc:Object},sy=["#ffffff","#000000"],ly="setNavigationBarColor",cy={formatArgs:{animation(e,t){e||(e={duration:0,timingFunc:"linear"}),t.animation={duration:e.duration||0,timingFunc:e.timingFunc||"linear"}}}},uy={frontColor:{type:String,required:!0,validator(e){if(sy.indexOf(e)===-1)return`invalid frontColor "${e}"`}},backgroundColor:{type:String,required:!0},animation:Object},fy="setNavigationBarTitle",dy={title:{type:String,required:!0}},hy="showNavigationBarLoading",gy="hideNavigationBarLoading",hh="pageScrollTo",py={scrollTop:Number,selector:String,duration:Number},vy={formatArgs:{duration:300}},my="showActionSheet",_y={itemList:{type:Array,required:!0},title:String,itemColor:String,popover:Object},by={formatArgs:{itemColor:"#000"}},Ey="showLoading",yy={title:String,mask:Boolean},wy={formatArgs:{title:"",mask:!1}},Sy="showModal",Ay={title:String,content:String,showCancel:Boolean,cancelText:String,cancelColor:String,confirmText:String,confirmColor:String},Cy={beforeInvoke(){cn()},formatArgs:{title:"",content:"",showCancel:!0,cancelText(e,t){if(!q.hasOwn(t,"cancelText")){let{t:n}=X();t.cancelText=n("uni.showModal.cancel")}},cancelColor:"#000",confirmText(e,t){if(!q.hasOwn(t,"confirmText")){let{t:n}=X();t.confirmText=n("uni.showModal.confirm")}},confirmColor:ne.PRIMARY_COLOR}},Oy="showToast",Ty=["success","loading","none","error"],Py={title:String,icon:String,image:String,duration:Number,mask:Boolean},Iy={formatArgs:{title:"",icon(e,t){t.icon=an(e,Ty)},image(e,t){e?t.image=ht(e):t.image=""},duration:1500,mask:!1}},Ny="startPullDownRefresh",ky="stopPullDownRefresh",tc={index:{type:Number,required:!0}},ms={beforeInvoke(){let e=na();if(e&&!e.isTabBar)return"not TabBar page"},formatArgs:{index(e){if(!P.tabBar.list[e])return"tabbar item not found"}}},Ry="setTabBarItem",xy=q.extend({text:String,iconPath:String,selectedIconPath:String,pagePath:String},tc),By={beforeInvoke:ms.beforeInvoke,formatArgs:q.extend({pagePath(e,t){e&&(t.pagePath=ne.removeLeadingSlash(e))}},ms.formatArgs)},My="setTabBarStyle",Ly={color:String,selectedColor:String,backgroundColor:String,backgroundImage:String,backgroundRepeat:String,borderStyle:String},Dy=/^(linear|radial)-gradient\(.+?\);?$/,Fy={beforeInvoke:ms.beforeInvoke,formatArgs:{backgroundImage(e,t){e&&!Dy.test(e)&&(t.backgroundImage=ht(e))},borderStyle(e,t){e&&(t.borderStyle=e==="white"?"white":"black")}}},Vy="hideTabBar",gh={animation:Boolean},$y="showTabBar",Uy=gh,Hy="hideTabBarRedDot",jy=tc,zy=ms,Wy="showTabBarRedDot",Gy=tc,Yy=ms,qy="removeTabBarBadge",Ky=tc,Jy=ms,Zy="setTabBarBadge",Xy=q.extend({text:{type:String,required:!0}},tc),Qy={beforeInvoke:ms.beforeInvoke,formatArgs:q.extend({text(e,t){ne.getLen(e)>=4&&(t.text="...")}},ms.formatArgs)},ew="getProvider",tw={service:{type:String,required:!0}},nw="login",rw={provider:String,scopes:[String,Array],timeout:Number,univerifyStyle:Object,onlyAuthorize:Boolean},iw="getUserInfo",ow={provider:String,withCredentials:Boolean,timeout:Number,lang:String},aw="ggetUserProfilegetUserProfile",sw={provider:String,withCredentials:Boolean,timeout:Number,lang:String},lw="preLogin",cw={UNIVERIFY:"univerify"},uw={formatArgs:{provider(e,t){if(Object.values(cw).indexOf(String(e))<0)return"provider error"}}},fw={provider:{type:String,required:!0}},dw="closeAuthView",hw="getCheckBoxState",gw="getUniverifyManager",pw="share",ph=["WXSceneSession","WXSceneTimeline","WXSceneFavorite"],vw={formatArgs:{scene(e,t){let{provider:n,openCustomerServiceChat:r}=t;if(n==="weixin"&&!r&&(!e||!ph.includes(e)))return`\u5206\u4EAB\u5230\u5FAE\u4FE1\u65F6\uFF0Cscene\u5FC5\u987B\u4E3A\u4EE5\u4E0B\u5176\u4E2D\u4E00\u4E2A\uFF1A${ph.join("\u3001")}`},summary(e,t){if(t.type===1&&!e)return"\u5206\u4EAB\u7EAF\u6587\u672C\u65F6\uFF0Csummary\u5FC5\u586B"},href(e,t){if(t.type===0&&!e)return"\u5206\u4EAB\u56FE\u6587\u65F6\uFF0Chref\u5FC5\u586B"},imageUrl(e,t){if([0,2,5].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u56FE\u6587\u3001\u7EAF\u56FE\u7247\u3001\u5C0F\u7A0B\u5E8F\u65F6\uFF0CimageUrl\u5FC5\u586B\uFF0C\u63A8\u8350\u4F7F\u7528\u5C0F\u4E8E20Kb\u7684\u56FE\u7247"},mediaUrl(e,t){if([3,4].includes(Number(t.type))&&!e)return"\u5206\u4EAB\u97F3\u4E50\u3001\u89C6\u9891\u65F6\uFF0CmediaUrl\u5FC5\u586B"},miniProgram(e,t){if(t.type===5&&!e)return"\u5206\u4EAB\u5C0F\u7A0B\u5E8F\u65F6\uFF0CminiProgram\u5FC5\u586B"},corpid(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 corpid \u5FC5\u586B"},customerUrl(e,t){if(t.openCustomerServiceChat&&!e)return"\u4F7F\u7528\u6253\u5F00\u5BA2\u670D\u529F\u80FD\u65F6 customerUrl \u5FC5\u586B"}}},mw={provider:{type:String,required:!0},type:Number,title:String,scene:String,summary:String,href:String,imageUrl:String,mediaUrl:String,miniProgram:Object},_w="shareWithSystem",vh=["text","image"],bw={formatArgs:{type(e,t){if(e&&!vh.includes(e))return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E\u3002\u53EA\u652F\u6301text\u3001image";t.type=an(e,vh)}}},Ew={type:String,summary:String,href:String,imageUrl:String},yw="requestPayment",ww={provider:{type:String,required:!0},orderInfo:{type:[String,Object],required:!0},timeStamp:String,nonceStr:String,package:String,signType:String,paySign:String},Sw="createPushMessage",Aw={formatArgs:{content(e){if(!e)return"content is required"}}},Cw="createRewardedVideoAd",Ow={formatArgs:{adpid:"",adUnitId:""}},Tw={adpid:String,adUnitId:String},Pw="createFullScreenVideoAd",Iw={formatArgs:{adpid:""}},Nw={adpid:String},kw="createInterstitialAd",Rw={formatArgs:{adpid:"",adUnitId:""}},xw={adpid:String,adUnitId:String},Bw="createInteractiveAd",Mw={formatArgs:{adpid(e,t){if(!e)return"adpid should not be empty.";e&&(t.adpid=e)},provider(e,t){if(!e)return"provider should not be empty.";e&&(t.provider=e)}}},Lw={adpid:{type:String,required:!0},provider:{type:String,required:!0}};function Vs(e,t){return function(r){delete r.code,delete r.message,q.isFunction(t)&&(r=t(r)),e(r)}}function or(e,t){return function(r){r=r||{},t=r.message||t||"",delete r.message,e(t,q.extend({code:0},r))}}function Ol(e,t){return function(){e()(function(r){r&&(delete r.code,delete r.message),at.invokeOnCallback(t,r)})}}function ui(e,t,n){return function(r,{resolve:a,reject:u}){e()(q.extend({},q.isFunction(t)?t(r):r,{success:Vs(a,n),fail:or(u)}))}}function nc(e=""){if(!(P.tabBar&&q.isArray(P.tabBar.list)))return!1;try{if(!e){let n=Pn();if(!n.length)return!1;let r=n[n.length-1];return r?r.$page.meta.isTabBar:!1}/^\//.test(e)||(e=ne.addLeadingSlash(e));let t=ki(e);return t&&t.meta.isTabBar}catch(t){}return!1}let da="__TYPE",Dw="uni-storage-keys";function xu(e){let t=["object","string","number","boolean","undefined"];try{let n=q.isString(e)?JSON.parse(e):e,r=n.type;if(t.indexOf(r)>=0){let a=Object.keys(n);if(a.length===2&&"data"in n){if(typeof n.data===r)return n.data;if(r==="object"&&/^\d{4}-\d{2}-\d{2}T\d{2}\:\d{2}\:\d{2}\.\d{3}Z$/.test(n.data))return new Date(n.data)}else if(a.length===1)return""}}catch(n){}}let Fw=xt(d0,(e,t)=>{let n=typeof t,r=n==="string"?t:JSON.stringify({type:n,data:t});try{n==="string"&&xu(r)!==void 0?s.storage.setItem(e+da,n):s.storage.removeItem(e+da),s.storage.setItem(e,r)}catch(a){}},h0),Vw=we(u0,({key:e,data:t},{resolve:n,reject:r})=>{let a=typeof t,u=a==="string"?t:JSON.stringify({type:a,data:t});try{let h=s.storage;a==="string"&&xu(u)!==void 0?h.setItemAsync(e+da,a):h.removeItemAsync(e+da),h.setItemAsync(e,u,n,or(r))}catch(h){r(h.message)}},f0);function Bu(e,t){let n=t;if(e!=="string"||e==="string"&&t==='{"type":"undefined"}')try{let r=JSON.parse(t),a=xu(r);if(a!==void 0)n=a;else if(e&&(n=r,q.isString(r))){r=JSON.parse(r);let u=typeof r;u==="number"&&e==="date"?n=new Date(r):u===(["null","array"].indexOf(e)<0?e:"object")&&(n=r)}}catch(r){}return n}let $w=xt(c0,(e,t)=>{let n=s.storage.getItem(e),a=(s.storage.getItem(e+da)||"").toLowerCase();return q.isString(n)?Bu(a,n):""},ih),Uw=we(l0,({key:e},{resolve:t,reject:n})=>{let r=s.storage;r.getItemAsync(e,function(a){r.getItemAsync(e+da,function(u){let b=(u.data||"").toLowerCase();t({data:Bu(b,a.data)})},function(){t({data:Bu("",a.data)})})},or(n))},rh),Hw=xt(oh,e=>{s.storage.removeItem(e+da),s.storage.removeItem(e)},p0),jw=we(oh,({key:e},{resolve:t,reject:n})=>{s.storage.removeItemAsync(e+da),s.storage.removeItemAsync(e,t,or(n))},g0),zw=xt("clearStorageSync",()=>{s.storage.clear()}),Ww=we("clearStorage",(e,{resolve:t,reject:n})=>{s.storage.clearAsync(t,or(n))}),mh=xt("getStorageInfoSync",()=>{let e=s.storage.getLength()||0,t=[],n=0;for(let r=0;r<e;r++){let a=s.storage.key(r);if(a!==Dw&&(a.indexOf(da)<0||a.indexOf(da)+da.length!==a.length)){let u=s.storage.getItem(a);n+=a.length+u.length,t.push(a)}}return{keys:t,currentSize:Math.ceil(n*2/1024),limitSize:Number.MAX_VALUE}}),Gw=we("getStorageInfo",(e,{resolve:t})=>{t(mh())}),Yw=we(S0,(e,{resolve:t,reject:n})=>{s.io.getFileInfo(q.extend(e,{success:Vs(t),fail:or(n)}))},C0,A0),qw=0,_h="uniapp_save",Kw=`_doc/${_h}`;function Jw(e,t){t=t||function(){},s.io.requestFileSystem(s.io.PRIVATE_DOC,n=>{n.root.getDirectory(_h,{create:!0},e,t)},t)}let Zw=we(v0,({tempFilePath:e},{resolve:t,reject:n})=>{let r=or(n),a=`${Date.now()}${qw++}${Ur(e)}`;s.io.resolveLocalFileSystemURL(e,u=>{Jw(h=>{u.copyTo(h,a,()=>{let b=Kw+"/"+a;t({savedFilePath:b})},r)},r)},r)},_0,m0),Xw="uniapp_save";function Qw(e,t){t=t||function(){},s.io.requestFileSystem(s.io.PRIVATE_DOC,n=>{n.root.getDirectory(Xw,{create:!0},e,t)},t)}let eS=we(b0,(e,{resolve:t,reject:n})=>{let r=or(n);Qw(a=>{var u=a.createReader(),h=[];u.readEntries(b=>{b&&b.length?b.forEach(U=>{U.getMetadata(O=>{h.push({filePath:s.io.convertAbsoluteFileSystem(U.fullPath),createTime:O.modificationTime.getTime(),size:O.size}),h.length===b.length&&t({fileList:h})},r,!1)}):t({fileList:h})},r)},r)}),tS=we(O0,({filePath:e},{resolve:t,reject:n})=>{let r=or(n);s.io.resolveLocalFileSystemURL(e,a=>{a.getMetadata(u=>{t({createTime:u.modificationTime.getTime(),size:u.size})},r,!1)},r)},P0,T0),nS=we(E0,({filePath:e},{resolve:t,reject:n})=>{let r=or(n);s.io.resolveLocalFileSystemURL(e,a=>{a.remove(()=>{t()},r)},r)},w0,y0),rS=we(I0,({filePath:e,fileType:t},{resolve:n,reject:r})=>{let a=or(r);s.runtime.openDocument(ht(e),void 0,n,a)},k0,N0),iS=xt(X_,e=>!!q.hasOwn(dt,e),Q_),Mu;function oS(){return Mu=Mu||s.device.uuid,Mu}let rc,Lu=!0,nr;function aS(e,t,n){!nr||(e==="none"?(nr.hideTabBarRedDot({index:t}),nr.removeTabBarBadge({index:t})):e==="text"?nr.setTabBarBadge({index:t,text:n}):e==="redDot"&&nr.showTabBarRedDot({index:t}))}function sS(e,t,n,r,a,u){let h={index:e};if(t!==void 0&&(h.text=t),n&&(h.iconPath=ht(n)),r&&(h.selectedIconPath=ht(r)),u!==void 0&&(h.iconfont=u),a!==void 0){h.visible=rc.list[e].visible=a,delete h.index;let b=rc.list.map(U=>({visible:U.visible}));b[e]=h,nr&&nr.setTabBarItems({list:b})}else nr&&nr.setTabBarItem(h)}function lS(e){nr&&nr.setTabBarStyle(e)}function cS(e){Lu=!1,nr&&nr.hideTabBar({animation:e})}function uS(e){Lu=!0,nr&&nr.showTabBar({animation:e})}let Nc=[];var fi={id:"0",init(e,t){e&&e.list.length&&(rc=e);try{nr=g.requireModule("uni-tabview")}catch(n){console.log(`uni.requireNativePlugin("uni-tabview") error ${n}`)}nr.onMaskClick(()=>{Nc.forEach(n=>{n()})}),nr&&nr.onClick(({index:n})=>{t(rc.list[n],n)}),nr&&nr.onMidButtonClick(()=>at.invokeOnCallback(jd))},indexOf(e){let t=this.config,n=t&&t.list&&t.list.length;if(n){for(let r=0;r<n;r++)if(t.list[r].pagePath===e||t.list[r].pagePath===`${e}.html`)return r}return-1},switchTab(e){let t=this.indexOf(e);return t>=0?(nr&&nr.switchSelect({index:t}),!0):!1},setTabBarBadge:aS,setTabBarItem:sS,setTabBarStyle:lS,hideTabBar:cS,showTabBar:uS,append(e){nr&&nr.append({id:e.id},({code:t})=>{t!==0&&R(()=>{this.append(e)},20)})},get config(){return rc||P.tabBar},get visible(){return Lu},get height(){let e=this.config;return(e&&e.height?parseFloat(e.height):ne.TABBAR_HEIGHT)+s.navigator.getSafeAreaInsets().deviceBottom},get cover(){let e=this.config;return e&&["extralight","light","dark"].indexOf(e.blurEffect)>=0},setStyle({mask:e}){nr.setMask({color:e})},addEventListener(e,t){Nc.push(t)},removeEventListener(e,t){let n=Nc.indexOf(t);Nc.splice(n,1)}};function kc(){let e=_r();return e?e.$getAppWebview():null}function bh(e){return e?e.$getAppWebview():kc()}let Eh=null;function yh(){return Eh}function Du(e){Eh=e}function Fu(){return s.navigator.isImmersedStatusbar()?Math.round(s.os.name==="iOS"?s.navigator.getSafeAreaInsets().top:s.navigator.getStatusbarHeight()):0}function wh(){let e=s.navigator.getStatusBarStyle();return e==="UIStatusBarStyleBlackTranslucent"||e==="UIStatusBarStyleBlackOpaque"||e==="null"?e="light":e==="UIStatusBarStyleDefault"&&(e="dark"),e}function fS(){let{resolutionWidth:e,resolutionHeight:t}=s.screen.getCurrentSize()||{resolutionWidth:0,resolutionHeight:0};return{screenWidth:Math.round(e),screenHeight:Math.round(t)}}let Sh=xt("getWindowInfo",()=>{let e=s.os.name.toLowerCase()==="ios",{screenWidth:t,screenHeight:n}=fS(),r=Fu(),a,u={height:0,cover:!1},h=kc();if(h){let Et=h.getStyle(),Tt=Et&&Et.titleNView;Tt&&Tt.type&&Tt.type!=="none"&&(u.height=Tt.type==="transparent"?0:r+ne.NAVBAR_HEIGHT,u.cover=Tt.type==="transparent"||Tt.type==="float"),a=h.getSafeAreaInsets()}else a=s.navigator.getSafeAreaInsets();let b={height:0,cover:!1};nc()&&(b.height=fi.visible?fi.height:0,b.cover=fi.cover);let U=u.cover?u.height:0,O=b.cover?b.height:0,F=n-u.height-b.height,ge=n-(u.cover?0:u.height)-(b.cover?0:b.height),Se=t;(!b.height||b.cover)&&!a.bottom&&a.deviceBottom&&(F-=a.deviceBottom,ge-=a.deviceBottom),a=e?a:{left:0,right:0,top:u.height&&!u.cover?0:r,bottom:0};let ke={left:a.left,right:Se-a.right,top:a.top,bottom:ge-a.bottom,width:Se-a.left-a.right,height:ge-a.top-a.bottom};return{pixelRatio:s.screen.scale,screenWidth:t,screenHeight:n,windowWidth:Se,windowHeight:F,statusBarHeight:r,safeArea:ke,safeAreaInsets:{top:a.top,right:a.right,bottom:a.bottom,left:a.left},windowTop:U,windowBottom:O,screenTop:n-F}}),ka,Rc=!0;function Vu(){if(!Rc)return;let{getSystemInfoSync:e}=g.requireModule("plus");if(ka=e(),q.isString(ka))try{ka=JSON.parse(ka)}catch(t){}}let Ah=xt("getDeviceInfo",()=>{Vu();let{deviceBrand:e="",deviceModel:t,osName:n,osVersion:r,deviceOrientation:a,deviceType:u}=ka,h=e.toLowerCase(),b=n.toLowerCase();return{brand:h,deviceBrand:h,deviceModel:t,devicePixelRatio:s.screen.scale,deviceId:oS(),deviceOrientation:a,deviceType:u,model:t,platform:b,system:`${b==="ios"?"iOS":"Android"} ${r}`}}),Ch=xt("getAppBaseInfo",()=>{Vu();let{hostPackageName:e,hostName:t,hostVersion:n,hostLanguage:r,osLanguage:a,hostTheme:u,appId:h,appName:b,appVersion:U,appVersionCode:O}=ka;return{appId:h,appName:b,appVersion:U,appVersionCode:O,appLanguage:Ou?Ou():a,enableDebug:!1,hostPackageName:e,hostName:t,hostVersion:n,hostLanguage:r,hostTheme:u,hostFontSizeSetting:void 0,hostSDKVersion:void 0,language:a,SDKVersion:"",theme:void 0,version:s.runtime.innerVersion}}),Oh=xt("getSystemInfoSync",()=>{Rc=!0,Vu(),Rc=!1;let e=Sh(),t=Ah(),n=Ch();Rc=!0;let r={fontSizeSetting:n.hostFontSizeSetting,osName:ka.osName.toLowerCase()};ka.hostName&&(r.hostSDKVersion=ka.uniRuntimeVersion);let a=q.extend(ka,e,t,n,r);return delete a.screenTop,delete a.enableDebug,delete a.theme,ne.sortObject(a)}),dS=we("getSystemInfo",(e,{resolve:t})=>t(Oh())),Tl=null,hS=Kn(Jd,()=>{Th()}),gS=Cr(hb,()=>{Ph()}),Th=we(gb,(e,{resolve:t,reject:n})=>{Tl||(Tl=s.orientation.watchOrientation(r=>{at.invokeOnCallback(Jd,{direction:r.magneticHeading})},r=>{n(r.message),Tl=null},{frequency:Dn})),R(t,Dn)}),Ph=we(pb,(e,{resolve:t})=>{Tl&&(s.orientation.clearWatch(Tl),Tl=null),t()}),pS=we(vb,(e,{resolve:t})=>{s.device.vibrate(15),t()}),vS=we(mb,(e,{resolve:t})=>{s.device.vibrate(400),t()}),Pl=null,mS=Kn(Kd,()=>{Ih()}),_S=Cr(ub,()=>{Nh()}),Ih=we(fb,(e,{resolve:t,reject:n})=>{Pl||(Pl=s.accelerometer.watchAcceleration(r=>{at.invokeOnCallback(Kd,{x:r&&r.xAxis||0,y:r&&r.yAxis||0,z:r&&r.zAxis||0})},r=>{Pl=null,n(`startAccelerometer:fail ${r.message}`)},{frequency:Dn})),R(t,Dn)}),Nh=we(db,(e,{resolve:t})=>{Pl&&(s.accelerometer.clearWatch(Pl),Pl=null),t()}),bS=Kn(Zd,Ol(()=>s.bluetooth.onBluetoothDeviceFound.bind(s.bluetooth),Zd)),ES=Kn(Xd,Ol(()=>s.bluetooth.onBluetoothAdapterStateChange.bind(s.bluetooth),Xd)),yS=Kn(Qd,Ol(()=>s.bluetooth.onBLEConnectionStateChange.bind(s.bluetooth),Qd)),wS=Kn(eh,Ol(()=>s.bluetooth.onBLECharacteristicValueChange.bind(s.bluetooth),eh)),SS=we("openBluetoothAdapter",ui(()=>s.bluetooth.openBluetoothAdapter.bind(s.bluetooth))),AS=we("closeBluetoothAdapter",ui(()=>s.bluetooth.closeBluetoothAdapter.bind(s.bluetooth))),CS=we("getBluetoothAdapterState",ui(()=>s.bluetooth.getBluetoothAdapterState.bind(s.bluetooth))),OS=we(_b,ui(()=>s.bluetooth.startBluetoothDevicesDiscovery.bind(s.bluetooth)),bb),TS=we("stopBluetoothDevicesDiscovery",ui(()=>s.bluetooth.stopBluetoothDevicesDiscovery.bind(s.bluetooth))),PS=we("getBluetoothDevices",ui(()=>s.bluetooth.getBluetoothDevices.bind(s.bluetooth))),IS=we(Eb,ui(()=>s.bluetooth.getConnectedBluetoothDevices.bind(s.bluetooth)),yb),NS=we(wb,ui(()=>s.bluetooth.createBLEConnection.bind(s.bluetooth)),Sb),kS=we(Ab,ui(()=>s.bluetooth.closeBLEConnection.bind(s.bluetooth)),Cb),RS=we(Ob,ui(()=>s.bluetooth.getBLEDeviceServices.bind(s.bluetooth)),Tb),xS=we(Pb,ui(()=>s.bluetooth.getBLEDeviceCharacteristics.bind(s.bluetooth)),Ib),BS=we(Nb,ui(()=>s.bluetooth.notifyBLECharacteristicValueChange.bind(s.bluetooth)),kb),MS=we(Rb,ui(()=>s.bluetooth.readBLECharacteristicValue.bind(s.bluetooth)),xb),LS=we(Bb,ui(()=>s.bluetooth.writeBLECharacteristicValue.bind(s.bluetooth)),Mb),DS=we(Lb,ui(()=>s.bluetooth.setBLEMTU.bind(s.bluetooth)),Db),FS=we(Fb,ui(()=>s.bluetooth.getBLEDeviceRSSI.bind(s.bluetooth)),Vb),VS=Kn(th,Ol(()=>s.ibeacon.onBeaconUpdate.bind(s.ibeacon),th)),$S=Kn(nh,Ol(()=>s.ibeacon.onBeaconServiceChange.bind(s.ibeacon),nh)),US=we($b,ui(()=>s.ibeacon.getBeacons.bind(s.ibeacon))),HS=we(Ub,ui(()=>s.ibeacon.startBeaconDiscovery.bind(s.ibeacon)),Hb),jS=we(jb,ui(()=>s.ibeacon.stopBeaconDiscovery.bind(s.ibeacon))),zS=we(tb,({phoneNumber:e},{resolve:t})=>(s.device.dial(e),t()),nb),WS={name:{givenName:"firstName",middleName:"middleName",familyName:"lastName"},nickname:"nickName",photos:{type:"url",value:"photoFilePath"},note:"remark",phoneNumbers:[{type:"mobile",value:"mobilePhoneNumber"},{type:"work",value:"workPhoneNumber"},{type:"company",value:"hostNumber"},{type:"home fax",value:"homeFaxNumber"},{type:"work fax",value:"workFaxNumber"}],emails:[{type:"home",value:"email"}],urls:[{type:"other",value:"url"}],organizations:[{type:"company",name:"organization",title:"title"}],ims:[{type:"other",value:"weChatNumber"}],addresses:[{type:"other",preferred:!0,country:"addressCountry",region:"addressState",locality:"addressCity",streetAddress:"addressStreet",postalCode:"addressPostalCode"},{type:"home",country:"homeAddressCountry",region:"homeAddressState",locality:"homeAddressCity",streetAddress:"homeAddressStreet",postalCode:"homeAddressPostalCode"},{type:"company",country:"workAddressCountry",region:"workAddressState",locality:"workAddressCity",streetAddress:"workAddressStreet",postalCode:"workAddressPostalCode"}]},GS=["type","preferred"];function $u(e,t,n){let r=0;return Object.keys(n).forEach(a=>{let u=n[a];typeof u!=="object"?GS.indexOf(a)!==-1?e[a]=n[a]:typeof t[u]!="undefined"?(r++,e[a]=t[u]):delete e[a]:u instanceof Array?(e[a]=[],u.forEach(b=>{let U={};$u(U,t,b)&&e[a].push(U)}),e[a].length?r++:delete e[a]):(e[a]={},$u(e[a],t,u)?r++:delete e[a])}),r}let YS=we(rb,(e,{resolve:t,reject:n})=>{!e.photoFilePath&&(e.photoFilePath=""),s.contacts.getAddressBook(s.contacts.ADDRESSBOOK_PHONE,r=>{let a=r.create();$u(a,e,WS),a.save(()=>t(),u=>n())},r=>n())},ob,ib);function Uo(e){return typeof g!="undefined"?g.requireModule(e):__requireNativePlugin__(e)}function kh(e,t,n){return Uo("plus").sendNativeEvent(e,t,n)}let qS=we(ab,(e,{resolve:t,reject:n})=>{Uo("clipboard").getString(a=>{a.result==="success"?t({data:a.data}):n("getClipboardData:fail")})}),KS=we(sb,(e,{resolve:t})=>{Uo("clipboard").setString(e.data),t()},cb,lb),Rh="onNetworkStatusChange";function xh(){Bh().then(({networkType:e})=>{at.invokeOnCallback(Rh,{isConnected:e!=="none",networkType:e})})}let JS=Kn(Rh,()=>{s.globalEvent.addEventListener("netchange",xh)}),ZS=Cr("offNetworkStatusChange",()=>{s.globalEvent.removeEventListener("netchange",xh)}),Bh=we("getNetworkType",(e,{resolve:t})=>{let n=An[s.networkinfo.getCurrentType()]||"unknown";return t({networkType:n})});function Mh(){if(s.os.name.toLowerCase()!=="ios")return!1;let t=Uo("faceID");return!!(t&&t.isSupport())}function Lh(){return!!(s.fingerprint&&s.fingerprint.isSupport())}let Dh=e=>{let t=[];return Lh()&&t.push("fingerPrint"),Mh()&&t.push("facial"),e&&e({supportMode:t}),{supportMode:t,errMsg:"checkIsSupportSoterAuthentication:ok"}},XS=we(Yb,(e,{resolve:t,reject:n})=>{Dh(t)}),Fh=({checkAuthMode:e,resolve:t,reject:n})=>{let r=(u,h)=>n&&n(u,h),a=u=>t&&t(u);if(e==="fingerPrint"){if(Lh()){let u=s.fingerprint.isKeyguardSecure()&&s.fingerprint.isEnrolledFingerprints();return a({isEnrolled:u}),{isEnrolled:u,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}else if(e==="facial"){if(Mh()){let u=Uo("faceID"),h=u&&u.isKeyguardSecure()&&u.isEnrolledFaceID();return a({isEnrolled:h}),{isEnrolled:h,errMsg:"checkIsSoterEnrolledInDevice:ok"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}}return r("not support",{isEnrolled:!1}),{isEnrolled:!1,errMsg:"checkIsSoterEnrolledInDevice:fail not support"}},QS=we(qb,({checkAuthMode:e},{resolve:t,reject:n})=>{Fh({checkAuthMode:e,resolve:t,reject:n})},Zb,Jb),eA=we(Xb,({requestAuthModes:e,challenge:t=!1,authContent:n},{resolve:r,reject:a})=>{Mo();let{t:u}=X(),h=Dh().supportMode;if(h.length===0)return{authMode:"fingerPrint",errCode:90001,errMsg:"startSoterAuthentication:fail"};let b=[];if(e.map((F,ge)=>{h.indexOf(F)>-1&&b.push(F)}),b.length===0)return{authMode:"fingerPrint",errCode:90003,errMsg:"startSoterAuthentication:fail no corresponding mode"};let U=[];if(b.map((F,ge)=>{Fh({checkAuthMode:F}).isEnrolled&&U.push(F)}),U.length===0)return{authMode:b[0],errCode:90011,errMsg:`startSoterAuthentication:fail no ${b[0]} enrolled`};let O=U[0];O==="fingerPrint"?(s.os.name.toLowerCase()==="android"&&(s.nativeUI.showWaiting(n||u("uni.startSoterAuthentication.authContent")).onclose=function(){s.fingerprint.cancel()}),s.fingerprint.authenticate(()=>{s.nativeUI.closeWaiting(),r({authMode:O,errCode:0})},F=>{let ge={authMode:O};switch(F.code){case F.AUTHENTICATE_MISMATCH:break;case F.AUTHENTICATE_OVERLIMIT:s.nativeUI.closeWaiting(),a("authenticate freeze. please try again later",q.extend(ge,{errCode:90010}));break;case F.CANCEL:s.nativeUI.closeWaiting(),a("cancel",q.extend(ge,{errCode:90008}));break;default:s.nativeUI.closeWaiting(),a("",q.extend(ge,{errCode:90007}));break}},{message:n})):O==="facial"&&Uo("faceID").authenticate({message:n},ge=>{let Se={authMode:O};if(ge.type==="success"&&ge.code===0)r({authMode:O,errCode:0});else switch(ge.code){case 4:a("",q.extend(Se,{errCode:90009}));break;case 5:a("authenticate freeze. please try again later",q.extend(Se,{errCode:90010}));break;case 6:a("",q.extend(Se,{errCode:90008}));break;default:a("",q.extend(Se,{errCode:90007}));break}})},e0,Qb),tA=we(t0,(e,{resolve:t,reject:n})=>{Qo();let{t:r}=X(),u=wh()!=="light",h,b=!1,U=li({url:"__uniappscan",data:Object.assign({},e,{messages:{fail:r("uni.scanCode.fail"),"flash.on":r("uni.scanCode.flash.on"),"flash.off":r("uni.scanCode.flash.off")}}),style:{animationType:e.animationType||"pop-in",titleNView:{autoBackButton:!0,type:"float",titleText:e.titleText||r("uni.scanCode.title"),titleColor:"#ffffff",backgroundColor:"rgba(0,0,0,0)",buttons:e.onlyFromCamera?[]:[{text:e.albumText||r("uni.scanCode.album"),fontSize:"17px",width:"60px",onclick:()=>{U.sendMessage({type:"gallery"})}}]},popGesture:"close",background:"#000000",backButtonAutoControl:"close"},onMessage({event:O,detail:F}){h=F,b=O==="marked"},onClose(){u&&s.navigator.setStatusBarStyle("dark"),h?b?(delete h.message,t(h)):n(h.message):n("cancel")}});u&&(s.navigator.setStatusBarStyle("light"),U.webview.addEventListener("popGesture",({type:O,result:F})=>{O==="start"?s.navigator.setStatusBarStyle("dark"):O==="end"&&!F&&s.navigator.setStatusBarStyle("light")}))},n0,i0),nA=Kn(ne.ON_THEME_CHANGE,()=>{at.on(ne.ON_THEME_CHANGE,e=>{at.invokeOnCallback(ne.ON_THEME_CHANGE,e)})}),rA=we(zb,(e,{resolve:t})=>{let n=s.screen.getBrightness(!1);t({value:n})}),iA=we(Wb,(e,{resolve:t})=>{s.screen.setBrightness(e.value,!1),t()}),oA=we(Gb,(e,{resolve:t})=>{s.device.setWakelock(!!e.keepScreenOn),t()}),aA=xt(o0,()=>{let{getSystemSetting:e}=g.requireModule("plus"),t=e();try{typeof t=="string"&&(t=JSON.parse(t))}catch(n){}return t}),Vh=xt(a0,()=>{let{getAppAuthorizeSetting:e}=g.requireModule("plus"),t=e();try{typeof t=="string"&&(t=JSON.parse(t))}catch(n){}for(let n in t)q.hasOwn(t,n)&&t[n]==="undefined"&&(t[n]=void 0);return t}),sA=we(s0,(e,{resolve:t,reject:n})=>{let{openAppAuthorizeSetting:r}=g.requireModule("plus");r(u=>{u.type==="success"?t():n()})}),lA=we(q0,(e,{resolve:t,reject:n})=>{let r=ei+"/download/";s.io.getImageInfo(q.extend(e,{savePath:r,filename:r,success:Vs(t),fail:or(n)}))},J0,K0),cA=we(tE,(e,{resolve:t,reject:n})=>{s.io.getVideoInfo({filePath:e.src,success:r=>{t({orientation:r.orientation,type:r.type,duration:r.duration,size:r.size,height:r.height,width:r.width,fps:r.fps||30,bitrate:r.bitrate})},fail:or(n)})},rE,nE),uA=we(Z0,({current:e=0,indicator:t="number",loop:n=!1,urls:r,longPressActions:a},{resolve:u,reject:h})=>{Xo();let{t:b}=X();r=r.map(O=>ht(O));let U=Number(e);isNaN(U)?(e=r.indexOf(ht(e)),e=e<0?0:e):e=U,s.nativeUI.previewImage(r,{current:e,indicator:t,loop:n,onLongPress:function(O){let F=[],ge="",Se=a&&q.isPlainObject(a);Se?(F=a.itemList?a.itemList:[],ge=a.itemColor?a.itemColor:"#000000"):(F=[b("uni.previewImage.button.save")],ge="#000000");let ke={buttons:F.map(Et=>({title:Et,color:ge})),cancel:b("uni.previewImage.cancel")};s.nativeUI.actionSheet(ke,Et=>{if(Et.index>0){if(Se){q.isFunction(a.success)&&a.success({tapIndex:Et.index-1,index:O.index});return}s.gallery.save(O.url,()=>{s.nativeUI.toast(b("uni.previewImage.save.success"))},function(){s.nativeUI.toast(b("uni.previewImage.save.fail"))})}else Se&&q.isFunction(a.fail)&&a.fail({errMsg:"showActionSheet:fail cancel"})})}}),u()},Q0,X0),fA=we(eE,(e,{resolve:t,reject:n})=>{try{s.nativeUI.closePreviewImage(),t()}catch(r){n()}}),Uu,Il=!1,Hu,Nl=(e,t={})=>{dA(q.extend({state:e},t))},ic={start({duration:e=6e4,sampleRate:t,numberOfChannels:n,encodeBitRate:r,format:a="mp3",frameSize:u}={}){if(Il)return Nl("start");Uu=s.audio.getRecorder(),Uu.record({format:a,samplerate:t?String(t):"",filename:ei+"/recorder/"},h=>Nl("stop",{tempFilePath:h}),h=>Nl("error",{errMsg:h.message})),Hu=R(()=>{ic.stop()},e),Nl("start"),Il=!0},stop(){Il&&(Uu.stop(),Il=!1,Hu&&S(Hu))},pause(){Il&&Nl("error",{errMsg:"Unsupported operation: pause"})},resume(){Il&&Nl("error",{errMsg:"Unsupported operation: resume"})}},$s={pause:null,resume:null,start:null,stop:null,error:null};function dA(e){let t=e.state;delete e.state,delete e.errMsg,t&&q.isFunction($s[t])&&$s[t](e)}class hA{constructor(){}onError(t){$s.error=t}onFrameRecorded(t){}onInterruptionBegin(t){}onInterruptionEnd(t){}onPause(t){$s.pause=t}onResume(t){$s.resume=t}onStart(t){$s.start=t}onStop(t){$s.stop=t}pause(){ic.pause()}resume(){ic.resume()}start(t={}){ic.start(t)}stop(){ic.stop()}}let $h,gA=xt(uE,()=>$h||($h=new hA)),pA=we(sE,(e,{resolve:t,reject:n})=>{s.gallery.save(e.filePath,Vs(t),or(n))},cE,lE),vA=we(iE,(e,{resolve:t,reject:n})=>{s.gallery.save(e.filePath,Vs(t),or(n))},aE,oE),mA=we(fE,(e,{resolve:t,reject:n})=>{let r=`${ei}/compressed/${Date.now()}_${Pr(e.src)}`;s.zip.compressImage(q.extend({},e,{dst:r}),()=>{t({tempFilePath:r})},n)},hE,dE),_A=we(gE,(e,{resolve:t,reject:n})=>{let r=`${ei}/compressed/${Date.now()}_${Pr(e.src)}`;s.zip.compressVideo(q.extend({},e,{filename:r}),()=>{t({tempFilePath:r})},n)},vE,pE);function bA(e){return new Promise((t,n)=>{s.io.resolveLocalFileSystemURL(e,function(r){r.getMetadata(t,n,!1)},n)})}let EA=we(H0,({count:e,sizeType:t,sourceType:n,crop:r}={},{resolve:a,reject:u})=>{si();let{t:h}=X(),b=or(u);function U(ge){let Se=[],ke=[];Promise.all(ge.map(Et=>bA(Et))).then(Et=>{Et.forEach((Tt,Jt)=>{let Vt=ge[Jt];ke.push(Vt),Se.push({path:Vt,size:Tt.size})}),a({tempFilePaths:ke,tempFiles:Se})}).catch(b)}function O(){s.camera.getCamera().captureImage(Se=>U([Se]),b,{filename:ei+"/camera/",resolution:"high",crop:r,sizeType:t})}function F(){s.gallery.pick(({files:ge})=>U(ge),b,{maximum:e,multiple:!0,system:!1,filename:ei+"/gallery/",permissionAlert:!0,crop:r,sizeType:t})}if(n.length===1){if(n.includes("album")){F();return}else if(n.includes("camera")){O();return}}s.nativeUI.actionSheet({cancel:h("uni.chooseImage.cancel"),buttons:[{title:h("uni.chooseImage.sourceType.camera")},{title:h("uni.chooseImage.sourceType.album")}]},ge=>{switch(ge.index){case 1:O();break;case 2:F();break;default:b();break}})},z0,j0),yA=we(W0,({sourceType:e,compressed:t,maxDuration:n,camera:r},{resolve:a,reject:u})=>{mr();let{t:h}=X(),b=or(u);function U(ge){s.io.getVideoInfo({filePath:ge,success(Se){let ke={errMsg:"chooseVideo:ok",tempFilePath:ge,size:Se.size,duration:Se.duration,width:Se.width,height:Se.height};a(ke)},fail:b})}function O(){s.gallery.pick(({files:ge})=>U(ge[0]),b,{filter:"video",system:!1,multiple:!0,maximum:1,filename:ei+"/gallery/",permissionAlert:!0,videoCompress:t})}function F(){s.camera.getCamera().startVideoCapture(U,b,{index:r==="front"?"2":"1",videoMaximumDuration:n,filename:ei+"/camera/",videoCompress:t})}if(e.length===1){if(e.includes("album")){O();return}else if(e.includes("camera")){F();return}}s.nativeUI.actionSheet({cancel:h("uni.chooseVideo.cancel"),buttons:[{title:h("uni.chooseVideo.sourceType.camera")},{title:h("uni.chooseVideo.sourceType.album")}]},ge=>{switch(ge.index){case 1:F();break;case 2:O();break;default:b();break}})},Y0,G0),wA=we(x0,(e,{resolve:t})=>{s.key.showSoftKeybord(),t()}),SA=we(R0,(e,{resolve:t})=>{s.key.hideSoftKeybord(),t()});function Uh(e){at.invokeOnCallback(ne.ON_KEYBOARD_HEIGHT_CHANGE,e)}let AA=Kn(ne.ON_KEYBOARD_HEIGHT_CHANGE,()=>{at.on(ne.ON_KEYBOARD_HEIGHT_CHANGE,Uh)}),CA=Cr(ne.ON_KEYBOARD_HEIGHT_CHANGE,()=>{at.off(ne.ON_KEYBOARD_HEIGHT_CHANGE,Uh)});class OA{constructor(t){this._callbacks=[],this._downloader=t,t.addEventListener("statechanged",(n,r)=>{n.downloadedSize&&n.totalSize&&this._callbacks.forEach(a=>{a({progress:Math.round(n.downloadedSize/n.totalSize*100),totalBytesWritten:n.downloadedSize,totalBytesExpectedToWrite:n.totalSize})})})}abort(){this._downloader.abort()}onProgressUpdate(t){!q.isFunction(t)||this._callbacks.push(t)}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}onHeadersReceived(t){throw new Error("Method not implemented.")}offHeadersReceived(t){throw new Error("Method not implemented.")}}let TA=Vi(TE,({url:e,header:t,timeout:n},{resolve:r,reject:a})=>{n=(n||P.networkTimeout&&P.networkTimeout.request||60*1e3)/1e3;let u=s.downloader.createDownload(e,{timeout:n,filename:ei+"/download/",retry:0,retryInterval:0},(b,U)=>{U?r({tempFilePath:b.filename,statusCode:U}):a(`statusCode: ${U}`)}),h=new OA(u);for(let b in t)q.hasOwn(t,b)&&u.setRequestHeader(b,t[b]);return u.start(),h},IE,PE),PA=e=>{let t=e["Set-Cookie"]||e["set-cookie"],n=[];if(!t)return[];t[0]==="["&&t[t.length-1]==="]"&&(t=t.slice(1,-1));let r=t.split(";");for(let a=0;a<r.length;a++)r[a].indexOf("Expires=")!==-1||r[a].indexOf("expires=")!==-1?n.push(r[a].replace(",","")):n.push(r[a]);return n=n.join(";").split(","),n};function IA(e,t){if(q.isString(e.data)&&e.data.charCodeAt(0)===65279&&(e.data=e.data.slice(1)),e.statusCode=parseInt(String(e.statusCode),10),q.isPlainObject(e.header)&&(e.header=Object.keys(e.header).reduce(function(n,r){let a=e.header[r];return q.isArray(a)?n[r]=a.join(","):q.isString(a)&&(n[r]=a),n},{})),t.dataType&&t.dataType.toLowerCase()==="json")try{e.data=JSON.parse(e.data)}catch(n){}return e}class NA{constructor(t){this._requestTask=t}abort(){this._requestTask.abort()}offHeadersReceived(){}onHeadersReceived(){}}let kA=Vi(mE,(e,{resolve:t,reject:n})=>{let{header:r,method:a,data:u,timeout:h,url:b,responseType:U,sslVerify:O,firstIpv4:F,tls:ge}=e,Se;for(let pt in r)if(pt.toLowerCase()==="content-type"){Se=r[pt];break}a!=="GET"&&Se.indexOf("application/json")===0&&q.isPlainObject(u)&&(u=JSON.stringify(u));let ke=Uo("stream"),Et={},Tt,Jt,Vt=!1;for(let pt in r)if(!Vt&&pt.toLowerCase()==="content-type"){if(Vt=!0,Et["Content-Type"]=r[pt],a!=="GET"&&r[pt].indexOf("application/x-www-form-urlencoded")===0&&!q.isString(u)&&!(u instanceof ArrayBuffer)){let dn=[];for(let Zt in u)q.hasOwn(u,Zt)&&dn.push(encodeURIComponent(Zt)+"="+encodeURIComponent(u[Zt]));u=dn.join("&")}}else Et[pt]=r[pt];!Vt&&a==="POST"&&(Et["Content-Type"]="application/x-www-form-urlencoded; charset=UTF-8"),h&&(Tt=R(()=>{Jt=!0,n("timeout")},h+200));let Nn={method:a,url:b.trim(),headers:Et,type:U==="arraybuffer"?"base64":"text",timeout:h||6e5,sslVerify:!O,firstIpv4:F,tls:ge},Vn=!1;a!=="GET"&&(toString.call(u)==="[object ArrayBuffer]"?Vn=!0:Nn.body=q.isString(u)?u:JSON.stringify(u));let Qt=({ok:pt,status:dn,data:Zt,headers:zt,errorMsg:hn})=>{if(Jt)return;Tt&&S(Tt);let ar=dn;if(ar>0)t(IA({data:pt&&U==="arraybuffer"?jn(Zt):Zt,statusCode:ar,header:zt,cookies:PA(zt)},e));else{let Wt="abort statusCode:"+ar;hn&&(Wt=Wt+" "+hn),n(Wt)}};return Vn?ke.fetchWithArrayBuffer({"@type":"binary",base64:Bn(u)},Nn,Qt):ke.fetch(Nn,Qt),new NA({abort(){Jt=!0,Tt&&S(Tt),n("abort")}})},wE,SE),RA=we(AE,({certificates:e},{resolve:t,reject:n})=>{Uo("stream").configMTLS(e,({type:a,code:u,message:h})=>{switch(a){case"success":t({code:u});break;case"fail":n(h,{code:u});break}})},CE,OE),kl=[],Rl={},ju={open:"",close:"",error:"",message:""},oc;function xA(e){let t=String(Date.now()),n;try{oc||(oc=Uo("uni-webSocket"),BA(oc)),oc.WebSocket({id:t,url:e.url,protocol:q.isArray(e.protocols)?e.protocols.join(","):e.protocols,header:e.header})}catch(r){n=r}return{socket:oc,socketId:t,errMsg:n}}function BA(e){e.onopen(t=>{let n=Rl[t.id];!n||n._socketOnOpen()}),e.onmessage(t=>{let n=Rl[t.id];!n||n._socketOnMessage(t)}),e.onerror(t=>{let n=Rl[t.id];!n||n._socketOnError()}),e.onclose(t=>{let n=Rl[t.id];!n||n._socketOnClose()})}class MA{constructor(t,n){this.id=n,this._socket=t,this._callbacks={open:[],close:[],error:[],message:[]},this.CLOSED=3,this.CLOSING=2,this.CONNECTING=0,this.OPEN=1,this.readyState=this.CLOSED,!!this._socket}_socketOnOpen(){this.readyState=this.OPEN,this.socketStateChange("open")}_socketOnMessage(t){this.socketStateChange("message",{data:typeof t.data=="object"?jn(t.data.base64):t.data})}_socketOnError(){this.socketStateChange("error"),this.onErrorOrClose()}_socketOnClose(){this.socketStateChange("close"),this.onErrorOrClose()}onErrorOrClose(){this.readyState=this.CLOSED,delete Rl[this.id];let t=kl.indexOf(this);t>=0&&kl.splice(t,1)}socketStateChange(t,n={}){let r=t==="message"?n:{};this===kl[0]&&ju[t]&&at.invokeOnCallback(ju[t],r),this._callbacks[t].forEach(a=>{q.isFunction(a)&&a(r)})}send(t,n=!0){this.readyState!==this.OPEN&&ne.callOptions(t,"sendSocketMessage:fail WebSocket is not connected");try{this._socket.send({id:this.id,data:typeof t.data=="object"?{"@type":"binary",base64:Bn(t.data)}:t.data}),n&&ne.callOptions(t,"sendSocketMessage:ok")}catch(r){n&&ne.callOptions(t,`sendSocketMessage:fail ${r}`)}}close(t,n=!0){this.readyState=this.CLOSING;try{this._socket.close(q.extend({id:this.id,args:t})),n&&ne.callOptions(t,"closeSocket:ok")}catch(r){n&&ne.callOptions(t,`closeSocket:fail ${r}`)}}onOpen(t){this._callbacks.open.push(t)}onClose(t){this._callbacks.close.push(t)}onError(t){this._callbacks.error.push(t)}onMessage(t){this._callbacks.message.push(t)}}let LA=Vi(xE,({url:e,protocols:t,header:n,method:r},{resolve:a,reject:u})=>{let{socket:h,socketId:b,errMsg:U}=xA({url:e,protocols:t,header:n,method:r}),O=new MA(h,b);return U?R(()=>{u(U)},0):(kl.push(O),Rl[b]=O),R(()=>{a()},0),O},ME,BE),DA=we(LE,(e,{resolve:t,reject:n})=>{let r=kl[0];if(!r||r.readyState!==r.OPEN){n("WebSocket is not connected");return}r.send({data:e.data},!1),t()},DE),FA=we(FE,(e,{resolve:t,reject:n})=>{let r=kl[0];if(!r){n("WebSocket is not connected");return}r.readyState=r.CLOSING,r.close(e,!1),t()},VE);function xc(e){let t=`onSocket${q.capitalize(e)}`;return Kn(t,()=>{ju[e]=t})}let VA=xc("open"),$A=xc("error"),UA=xc("message"),HA=xc("close");class jA{constructor(t){this._callbacks=[],this._uploader=t,t.addEventListener("statechanged",(n,r)=>{n.uploadedSize&&n.totalSize&&this._callbacks.forEach(a=>{a({progress:parseInt(String(n.uploadedSize/n.totalSize*100)),totalBytesSent:n.uploadedSize,totalBytesExpectedToSend:n.totalSize})})})}abort(){this._uploader.abort()}onProgressUpdate(t){!q.isFunction(t)||this._callbacks.push(t)}onHeadersReceived(){}offProgressUpdate(t){let n=this._callbacks.indexOf(t);n>=0&&this._callbacks.splice(n,1)}offHeadersReceived(){}}let zA=Vi(NE,({url:e,timeout:t,header:n,formData:r,files:a,filePath:u,name:h},{resolve:b,reject:U})=>{let O=s.uploader.createUpload(e,{timeout:t,retry:0,retryInterval:0},(ge,Se)=>{Se?b({data:ge.responseText,statusCode:Se}):U(`statusCode: ${Se}`)});for(let ge in n)q.hasOwn(n,ge)&&O.setRequestHeader(ge,String(n[ge]));for(let ge in r)q.hasOwn(r,ge)&&O.addData(ge,String(r[ge]));a&&a.length?a.forEach(ge=>{O.addFile(ht(ge.uri),{key:ge.name||"file"})}):O.addFile(ht(u),{key:h});let F=new jA(O);return O.start(),F},RE,kE),_s={},WA=["play","canplay","ended","stop","waiting","seeking","seeked","pause"],Hh="playback",GA=e=>{let t=_s[e];!t||t.initStateChage||(t.initStateChage=!0,t.addEventListener("error",n=>{jh({state:"error",audioId:e,errMsg:"MediaError",errCode:n.code})}),WA.forEach(n=>{t.addEventListener(n,()=>{n==="play"?t.isStopped=!1:n==="stop"&&(t.isStopped=!0),jh({state:n,audioId:e})})}))};function YA(){let e=`${Date.now()}${Math.random()}`,t=_s[e]=s.audio.createPlayer("");return t.src="",t.volume=1,t.startTime=0,t.setSessionCategory(Hh),{errMsg:"createAudioInstance:ok",audioId:e}}function qA({audioId:e,src:t,startTime:n,autoplay:r=!1,loop:a=!1,obeyMuteSwitch:u,volume:h,sessionCategory:b=Hh,playbackRate:U}){let O=_s[e];if(O){let F={loop:a,autoplay:r};if(t){let ge=ht(t);O.src!==ge&&(O.src=F.src=ge)}n&&(O.startTime=F.startTime=n),typeof h=="number"&&(O.volume=F.volume=h),O.setStyles(F),b&&O.setSessionCategory(b),U&&O.playbackRate&&O.playbackRate(U),GA(e)}return{errMsg:"setAudioState:ok"}}function KA({audioId:e}){let t=_s[e];if(!t)return{errMsg:"getAudioState:fail"};let{src:n,startTime:r,volume:a}=t;return{errMsg:"getAudioState:ok",duration:1e3*(t.getDuration()||0),currentTime:t.isStopped?0:1e3*t.getPosition(),paused:t.isPaused(),src:n,volume:a,startTime:1e3*r,buffered:1e3*t.getBuffered()}}function JA({operationType:e,audioId:t,currentTime:n}){let r=_s[t];switch(e){case"play":case"pause":case"stop":r[e==="play"&&r.isPaused()?"resume":e]();break;case"seek":typeof n!="undefined"&&r.seekTo(n/1e3);break}return{errMsg:"operateAudio:ok"}}let zu=Object.create(null),jh=({state:e,audioId:t,errMsg:n,errCode:r})=>{let a=zu[t];if(a)if(zh(a,e,n,r),e==="play"){let u=a.currentTime;a.__timing=N(()=>{a.currentTime!==u&&zh(a,"timeUpdate")},200)}else(e==="pause"||e==="stop"||e==="error")&&f(a.__timing)},ZA=[{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"autoplay",default:!1,cache:!0},{name:"loop",default:!1,cache:!0},{name:"obeyMuteSwitch",default:!0,readonly:!0,cache:!0},{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"buffered",readonly:!0},{name:"volume"},{name:"playbackRate",cache:!0}];class Wu{constructor(t){this.id=t,this._callbacks={},this._options={},Dd.forEach(n=>{this._callbacks[n]=[]}),ZA.forEach(n=>{let r=n.name;Object.defineProperty(this,r,{get:()=>{let a=n.cache?this._options:KA({audioId:this.id}),u=r in a?a[r]:n.default;return typeof u=="number"&&r!=="volume"?u/1e3:u},set:n.readonly?void 0:a=>{this._options[r]=a,qA(q.extend({},this._options,{audioId:this.id}))}})}),XA()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t*1e3})}destroy(){f(this.__timing),_s[this.id]&&(_s[this.id].close(),delete _s[this.id]),delete zu[this.id]}_operate(t,n){JA(q.extend({},n,{audioId:this.id,operationType:t}))}}let XA=ne.once(()=>{Dd.forEach(e=>{Wu.prototype[e]=function(t){q.isFunction(t)&&this._callbacks[e].push(t)}}),a_.forEach(e=>{Wu.prototype[e]=function(t){let n=this._callbacks[e],r=n.indexOf(t);r>=0&&n.splice(r,1)}})});function zh(e,t,n,r){let a=`on${q.capitalize(t)}`;e._callbacks[a].forEach(u=>{q.isFunction(u)&&u(t==="error"?{errMsg:n,errCode:r}:{})})}let QA=xt(Mm,()=>{let{audioId:e}=YA(),t=new Wu(e);return zu[e]=t,t}),eC=["canplay","play","pause","stop","ended","timeUpdate","prev","next","error","waiting"],Wh={canplay:[],play:[],pause:[],stop:[],ended:[],timeUpdate:[],prev:[],next:[],error:[],waiting:[]},Yt,Gu=null,tC=250,nC=["play","pause","ended","stop","canplay"];function rC(){Bc(),Gu=N(()=>{xl({state:"timeUpdate"})},tC)}function Bc(){Gu!==null&&f(Gu)}function iC(){if(Yt)return;let e=at.invokeOnCallback;Yt=s.audio.createPlayer({autoplay:!0,backgroundControl:!0}),Yt.src=Yt.title=Yt.epname=Yt.singer=Yt.coverImgUrl=Yt.webUrl="",Yt.startTime=0,nC.forEach(t=>{Yt.addEventListener(t,()=>{t==="play"?(Yt.isStopped=!1,rC()):t==="stop"&&(Yt.isStopped=!0),(t==="pause"||t==="ended"||t==="stop")&&Bc();let n=`onMusic${t[0].toUpperCase()+t.slice(1)}`;e(n,{dataUrl:Yt.src,errMsg:`${n}:ok`}),xl({state:t,dataUrl:Yt.src})})}),Yt.addEventListener("waiting",()=>{Bc(),xl({state:"waiting",dataUrl:Yt.src})}),Yt.addEventListener("error",t=>{Bc(),e("onMusicError",{dataUrl:Yt.src,errMsg:"Error:"+t.message}),xl({state:"error",dataUrl:Yt.src,errMsg:t.message,errCode:t.code})}),Yt.addEventListener("prev",()=>{xl({state:"prev"})}),Yt.addEventListener("next",()=>{xl({state:"next"})})}function oC(){let e={duration:0,currentTime:0,paused:!1,src:"",buffered:0,title:"",epname:"",singer:"",coverImgUrl:"",webUrl:"",startTime:0,errMsg:"getBackgroundAudioState:ok"};if(Yt){let t={duration:Yt.getDuration()||0,currentTime:Yt.isStopped?0:Yt.getPosition(),paused:Yt.isPaused(),src:Yt.src,buffered:Yt.getBuffered(),title:Yt.title,epname:Yt.epname,singer:Yt.singer,coverImgUrl:Yt.coverImgUrl,webUrl:Yt.webUrl,startTime:Yt.startTime};e=q.extend(e,t)}return e}function Gh(e,t){iC();let n=["src","startTime","coverImgUrl","webUrl","singer","epname","title"];if(t==="playbackRate"){let a=e[t];Yt.playbackRate&&Yt.playbackRate(parseFloat(a));return}let r={};Object.keys(e).forEach(a=>{if(n.indexOf(a)>=0){let u=e[a];a===n[0]&&u&&(u=ht(u)),Yt[a]=r[a]=u}}),Yt.setStyles(r)}function aC({operationType:e,src:t,position:n,api:r="operateMusicPlayer",title:a,coverImgUrl:u}){var h=["resume","pause","stop"];return h.indexOf(e)>0?Yt&&Yt[e]():e==="play"?(Gh({src:t,startTime:n,title:a,coverImgUrl:u}),Yt.play()):e==="seek"&&Yt&&Yt.seekTo(n),{errMsg:`${r}:ok`}}function sC({operationType:e,src:t,startTime:n,currentTime:r}){return aC({operationType:e,src:t,position:n||r||0,api:"operateBackgroundAudio"})}function xl({state:e,errMsg:t,errCode:n,dataUrl:r}){Wh[e].forEach(a=>{q.isFunction(a)&&a(e==="error"?{errMsg:t,errCode:n}:{})})}let lC=ne.once(()=>{eC.forEach(e=>{Yh.prototype[`on${q.capitalize(e)}`]=function(t){Wh[e].push(t)}})}),cC=[{name:"duration",readonly:!0},{name:"currentTime",readonly:!0},{name:"paused",readonly:!0},{name:"src",cache:!0},{name:"startTime",default:0,cache:!0},{name:"buffered",readonly:!0},{name:"title",cache:!0},{name:"epname",cache:!0},{name:"singer",cache:!0},{name:"coverImgUrl",cache:!0},{name:"webUrl",cache:!0},{name:"protocol",readonly:!0,default:"http"},{name:"playbackRate",default:1,cache:!0}];class Yh{constructor(){this._options={},cC.forEach(t=>{let n=t.name;Object.defineProperty(this,n,{get:()=>{let r=t.cache?this._options:oC();return n in r?r[n]:t.default},set:t.readonly?void 0:r=>{this._options[n]=r,Gh(this._options,n)}})}),lC()}play(){this._operate("play")}pause(){this._operate("pause")}stop(){this._operate("stop")}seek(t){this._operate("seek",{currentTime:t})}_operate(t,n){sC(q.extend({},n,{operationType:t}))}}let qh,uC=xt(eb,()=>qh||(qh=new Yh));class fC{constructor(t,n){this.id=t,this.ctx=n}start(t){return Ht(this.ctx,"start",t)}stop(t){return Ht(this.ctx,"stop",t)}pause(t){return Ht(this.ctx,"pause",t)}resume(t){return Ht(this.ctx,"resume",t)}switchCamera(t){return Ht(this.ctx,"switchCamera",t)}snapshot(t){return Ht(this.ctx,"snapshot",t)}toggleTorch(t){return Ht(this.ctx,"toggleTorch",t)}playBGM(t){return Ln(this.ctx,"playBGM",t)}stopBGM(t){return Ht(this.ctx,"stopBGM",t)}pauseBGM(t){return Ht(this.ctx,"pauseBGM",t)}resumeBGM(t){return Ht(this.ctx,"resumeBGM",t)}setBGMVolume(t){return Ln(this.ctx,"setBGMVolume",t)}startPreview(t){return Ht(this.ctx,"startPreview",t)}stopPreview(t){return Ht(this.ctx,"stopPreview",t)}}function bs(e,t,n,r){at.invokeViewMethod("livepusher."+e,{livePusherId:e,type:n,data:r},t)}class dC{constructor(t,n){this.id=t,this.pageId=n}start(){bs(this.id,this.pageId,"start")}stop(){bs(this.id,this.pageId,"stop")}pause(){bs(this.id,this.pageId,"pause")}resume(){bs(this.id,this.pageId,"resume")}switchCamera(){bs(this.id,this.pageId,"switchCamera")}startPreview(){bs(this.id,this.pageId,"preview")}stopPreview(){bs(this.id,this.pageId,"stop")}snapshot(){bs(this.id,this.pageId,"snapshot")}}let hC=xt(Lm,(e,t)=>{if(t.$page.meta.isNVue){if(!t)return console.warn("uni.createLivePusherContext: 2 arguments required, but only 1 present");let n=Ei(e,t);return n?new fC(e,n):console.warn("Can not find `"+e+"`")}return new dC(e,t.$page.id)},Dm),wi=3.141592653589793,Mc=6378245,Lc=.006693421622965943;function gC(e,t){if(t=+t,e=+e,Kh(e,t))return[e,t];let n=Jh(e-105,t-35),r=Zh(e-105,t-35),a=t/180*wi,u=Math.sin(a);u=1-Lc*u*u;let h=Math.sqrt(u);n=n*180/(Mc*(1-Lc)/(u*h)*wi),r=r*180/(Mc/h*Math.cos(a)*wi);let b=t+n,U=e+r;return[e*2-U,t*2-b]}function pC(e,t){if(t=+t,e=+e,Kh(e,t))return[e,t];let n=Jh(e-105,t-35),r=Zh(e-105,t-35),a=t/180*wi,u=Math.sin(a);u=1-Lc*u*u;let h=Math.sqrt(u);n=n*180/(Mc*(1-Lc)/(u*h)*wi),r=r*180/(Mc/h*Math.cos(a)*wi);let b=t+n;return[e+r,b]}let Kh=function(e,t){return e<72.004||e>137.8347||t<.8293||t>55.8271||!1},Jh=function(e,t){let n=-100+2*e+3*t+.2*t*t+.1*e*t+.2*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*wi)+20*Math.sin(2*e*wi))*2/3,n+=(20*Math.sin(t*wi)+40*Math.sin(t/3*wi))*2/3,n+=(160*Math.sin(t/12*wi)+320*Math.sin(t*wi/30))*2/3,n},Zh=function(e,t){let n=300+e+2*t+.1*e*e+.1*e*t+.1*Math.sqrt(Math.abs(e));return n+=(20*Math.sin(6*e*wi)+20*Math.sin(2*e*wi))*2/3,n+=(20*Math.sin(e*wi)+40*Math.sin(e/3*wi))*2/3,n+=(150*Math.sin(e/12*wi)+300*Math.sin(e/30*wi))*2/3,n};function Xh(e,t,n){let r=t.coords;if(e!==t.coordsType){let a;e==="wgs84"?a=gC(r.longitude,r.latitude):e==="gcj02"&&(a=pC(r.longitude,r.latitude)),a&&(r.longitude=a[0],r.latitude=a[1])}n({type:e,altitude:r.altitude||0,latitude:r.latitude,longitude:r.longitude,speed:r.speed,accuracy:r.accuracy,address:t.address,errMsg:"getLocation:ok"})}let vC=we(L0,({type:e="wgs84",geocode:t=!1,altitude:n=!1,highAccuracyExpireTime:r,isHighAccuracy:a=!1},{resolve:u,reject:h})=>{s.geolocation.getCurrentPosition(b=>{Xh(e,b,u)},b=>{if(b.code===1501){Xh(e,b,u);return}h("getLocation:fail "+b.message)},{geocode:t,enableHighAccuracy:a||n,timeout:r,coordsType:e})},F0,D0),mC=we(B0,(e,{resolve:t,reject:n})=>{let a=wh()!=="light",u,h=li({url:"__uniappchooselocation",data:e,style:{animationType:e.animationType||"slide-in-bottom",titleNView:!1,popGesture:"close",scrollIndicator:"none"},onMessage({event:b,detail:U}){b==="selected"&&(u=U)},onClose(){a&&s.navigator.setStatusBarStyle("dark"),u?t(u):n("cancel")}});a&&(s.navigator.setStatusBarStyle("light"),h.webview.addEventListener("popGesture",({type:b,result:U})=>{b==="start"?s.navigator.setStatusBarStyle("dark"):b==="end"&&!U&&s.navigator.setStatusBarStyle("light")}))},M0),_C=we(V0,(e,{resolve:t,reject:n})=>(li({url:"__uniappopenlocation",data:e,style:{titleNView:{type:"transparent"},popGesture:"close",backButtonAutoControl:"close"},onClose(){n("cancel")}}),t()),U0,$0),bC=we(Sy,({title:e="",content:t="",showCancel:n=!0,cancelText:r,cancelColor:a,confirmText:u,confirmColor:h,editable:b=!1,placeholderText:U=""}={},{resolve:O})=>{let F=n?[r,u]:[u],ge=b?U:F;t=t||" ",s.nativeUI[b?"prompt":"confirm"](t,Se=>{if(n){let ke=Se.index===1,Et={confirm:ke,cancel:Se.index===0||Se.index===-1};ke&&b&&(Et.content=Se.value),O(Et)}else{let ke={confirm:Se.index===0,cancel:!1};b&&(ke.content=Se.value),O(ke)}},e,ge,F)},Ay,Cy),EC=we(my,({itemList:e=[],itemColor:t="#000000",title:n="",popover:r},{resolve:a,reject:u})=>{Mn();let{t:h}=X(),b={title:n,cancel:h("uni.showActionSheet.cancel"),buttons:e.map(U=>({title:U,color:t}))};s.nativeUI.actionSheet(q.extend(b,{popover:r}),U=>{U.index>0?a({tapIndex:U.index-1}):u("showActionSheet:fail cancel")})},_y,by),ac,Yu=!1,Dc="",Fc,yC=we(Ey,(e,t)=>Qh(q.extend({},e,{type:"loading",icon:"loading"}),t),yy,wy),Qh=({title:e="",icon:t="success",image:n="",duration:r=1500,mask:a=!1,position:u,type:h="toast",style:b},{resolve:U,reject:O})=>{if(Vc(""),Dc=h,["top","center","bottom"].includes(String(u)))s.nativeUI.toast(e,{verticalAlign:u}),Yu=!0;else{t&&!~["success","loading","error","none"].indexOf(t)&&(t="success");let F={modal:a,back:"transmit",padding:"10px",size:"16px"};!n&&(!t||t==="none")?F.loading={display:"none"}:(F.width="140px",F.height="112px"),n?F.loading={display:"block",height:"55px",icon:n,interval:r}:["success","error"].indexOf(t)!==-1&&(F.loading={display:"block",height:"55px",icon:t==="success"?"__uniappsuccess.png":"__uniapperror.png",interval:r});try{ac=s.nativeUI.showWaiting(e,q.extend(F,b))}catch(ge){O(`${ge}`)}}return Dc==="toast"&&(Fc=R(()=>{Vc("")},r)),U()},wC=we(Oy,Qh,Py,Iy),SC=we(oy,(e,t)=>Vc("toast",t)),AC=we(iy,(e,t)=>Vc("loading",t));function Vc(e="toast",t){return e&&e!==Dc||(Fc&&(S(Fc),Fc=null),Yu?s.nativeUI.closeToast():ac&&ac.close&&ac.close(),ac=null,Yu=!1,Dc=""),t&&t.resolve()}let CC=we(Ny,(e,{resolve:t,reject:n})=>{let r=yh();if(r&&r.endPullToRefresh(),r=kc(),!r)return n();r.beginPullToRefresh(),Du(r),t()}),OC=we(ky,(e,{resolve:t,reject:n})=>{let r=yh()||kc();if(!r)return n();r.endPullToRefresh(),Du(null),t()}),TC=we(dh,(e,{resolve:t,reject:n})=>{let r=ur(Vr());at.invokeViewMethod(dh,e,r,a=>{a?n(a):t()})},ay),PC=we(hh,(e,{resolve:t})=>{let n=ur(Vr());at.invokeViewMethod(hh,e,n,t)},py,vy),IC=we(fy,({__page__:e,title:t},{resolve:n,reject:r})=>{let a=bh(e);if(a){let u=a.getStyle();u&&u.titleNView&&a.setStyle({titleNView:{titleText:t}}),n()}else r()},dy),NC=we(hy,(e,{resolve:t})=>{s.nativeUI.showWaiting("",{modal:!1}),t()}),kC=we(gy,(e,{resolve:t})=>{s.nativeUI.closeWaiting(),t()});function RC(e){let t=Pn();!t.length||(t[t.length-1].$page.statusBarStyle=e)}let xC=we(ly,({__page__:e,frontColor:t,backgroundColor:n},{resolve:r,reject:a})=>{let u=bh(e);if(u){let h={};t&&(h.titleColor=t),n&&(h.backgroundColor=n);let b=t==="#000000"?"dark":"light";s.navigator.setStatusBarStyle(b),RC(b);let U=u.getStyle();U&&U.titleNView&&(U.titleNView.autoBackButton&&(h.backButton=h.backButton||{},h.backButton.color=t),u.setStyle({titleNView:h})),r()}else a()},uy,cy),BC=we(Zy,({index:e,text:t},{resolve:n,reject:r})=>{fi.setTabBarBadge("text",e,t),n()},Xy,Qy),MC=we(Ry,({index:e,text:t,iconPath:n,selectedIconPath:r,pagePath:a,visible:u,iconfont:h},{resolve:b})=>{if(fi.setTabBarItem(e,t,n,r,u,h),a){let U=P.tabBar.list[e];if(U){let O=U.pagePath,F=ne.removeLeadingSlash(a);F!==O&&Da(e,O,F)}}b()},xy,By),LC=we(My,(e={},{resolve:t,reject:n})=>{if(!nc())return n("not TabBar page");let r={black:"rgba(0,0,0,0.4)",white:"rgba(255,255,255,0.4)"},a=e.borderStyle;a&&a in r&&(e.borderStyle=r[a]),fi.setTabBarStyle(e),t()},Ly,Fy),DC=we(Vy,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!nc())return n("not TabBar page");fi.hideTabBar(Boolean(r)),t()},gh),FC=we($y,(e,{resolve:t,reject:n})=>{let r=e&&e.animation;if(!nc())return n("not TabBar page");fi.showTabBar(Boolean(r)),t()},Uy),VC=we(Wy,({index:e},{resolve:t,reject:n})=>{fi.setTabBarBadge("redDot",e),t()},Gy,Yy),eg=e=>fi.setTabBarBadge("none",e),$C=we(qy,({index:e},{resolve:t,reject:n})=>{eg(e),t()},Ky,Jy),UC=we(Hy,({index:e},{resolve:t,reject:n})=>{eg(e),t()},jy,zy),tg="vdSync",HC="__uniapp__service",Bl="onWebviewReady",jC=0,zC="webviewInserted",WC="webviewRemoved",ng="UniAppSubNVue";class GC{constructor(t,n){this.callbacks=[];let r=this.webview=s.webview.getWebviewById(t);if(this.isSub=n||!1,r.__uniapp_mask_id){let a=this.maskWebview=r.__uniapp_mask_id==="0"?{setStyle({mask:h}){Uo("uni-tabview").setMask({color:h})}}:s.webview.getWebviewById(r.__uniapp_mask_id),u=function(){a.setStyle({mask:"none"})};r.addEventListener("hide",u),r.addEventListener("close",u)}}show(...t){if(this.maskWebview){let n=this.webview.__uniapp_mask;this.maskWebview.setStyle({mask:n})}this.webview.show(...t)}hide(...t){this.webview.hide(...t)}setStyle(t){this.webview.setStyle(t)}initMessage(){if(this.messageReady)return;this.messageReady=!0;let t=r=>{if(r.data&&r.data.type===ng){let a=r.data.target;a.id===this.webview.id&&a.isSub===this.isSub&&this.callbacks.forEach(u=>{u({origin:this.webview.__uniapp_host,data:r.data.data})})}};Uo("globalEvent").addEventListener("plusMessage",t),this.webview.addEventListener("close",()=>{this.callbacks.length=0})}postMessage(t){s.webview.postMessageToUniNView({type:ng,data:t,target:{id:this.webview.id,isSub:!this.isSub}},HC)}onMessage(t){this.initMessage(),this.callbacks.push(t)}}let YC=function(e,t){return new GC(e,t)},sc,rg=s.navigator.setStatusBarStyle;function qC(e){rg=e}function ig(e){sc=e,rg(e)}s.navigator.setStatusBarStyle=ig;function Xa(e){if(!e){let t=_r();if(!t||(e=t.$page.statusBarStyle,!e||e===sc))return}e!==sc&&(sc=e,s.navigator.setStatusBarStyle(e))}function KC(e,t,n,r,a,u,h){s!==n&&(A=En=e,g=t,s=n,qC(s.navigator.setStatusBarStyle),s.navigator.setStatusBarStyle=ig,R=r,S=a,N=u,f=h),P.serviceReady=!0}function JC(){let e=["ArrayBuffer","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array"],t={};for(let n=0;n<e.length;n++){let r=e[n];t[r]=global[r]}return t}let og={oauth(e){s.oauth.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{t=t,e(t)})},share(e){s.share.getServices(t=>{t=t;let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{e(t)})},payment(e){s.payment.getChannels(t=>{let n=[];t.forEach(({id:r})=>{n.push(r)}),e(null,n,t)},t=>{e(t)})},push(e){if(typeof g!="undefined"||typeof s!="undefined"){let t=s.push.getClientInfo();e(null,[t.id],[t])}else e(null,[])}},ZC=we(ew,({service:e},{resolve:t,reject:n})=>{og[e]?og[e]((r,a=[],u=[])=>{r?n(r.message):t({service:e,provider:a,providers:u.map(h=>(typeof h.serviceReady=="boolean"&&(h.isAppExist=h.serviceReady),typeof h.nativeClient=="boolean"&&(h.isAppExist=h.nativeClient),h))})}):n("service not found")},tw),$c;function lc(e){return new Promise((t,n)=>{s.oauth.getServices(r=>{let a=r.find(({id:u})=>u===e);a?t(a):n(new Error("provider not find"))},n)})}let ag=we(nw,(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",a=or(n),u=r==="apple",h=u?{scope:"email"}:e.univerifyStyle?{univerifyStyle:eO(e.univerifyStyle,a)}:{};lc(r).then(b=>{function U(){if(e.onlyAuthorize&&r==="weixin"){b.authorize(({code:O})=>{t({code:O,authResult:""})},a);return}b.login(O=>{let F=O.target.authResult,ge=O.target.appleInfo;t({code:F.code,authResult:F,appleInfo:ge})},a,h)}u||r==="univerify"?U():b.logout(U,U)}).catch(a)},rw),sg=(e,{resolve:t,reject:n})=>{let r=e.provider||"weixin",a=or(n);lc(r).then(u=>{u.getUserInfo(h=>{let b={nickName:""};if(r==="weixin"){let O=u.userInfo;O&&(b={openId:O.openid,nickName:O.nickname,gender:O.sex,city:O.city,province:O.province,country:O.country,avatarUrl:O.headimgurl,unionId:O.unionid})}else if(r==="apple"){let O=u.appleInfo;O&&(b={openId:O.user,fullName:O.fullName,email:O.email,authorizationCode:O.authorizationCode,identityToken:O.identityToken,realUserStatus:O.realUserStatus})}else b=u.userInfo,b&&(b.openId=b.openId||b.openid||u.authResult.openid,b.nickName=b.nickName||b.nickname,b.avatarUrl=b.avatarUrl||b.headimgurl);let U={};e.data&&e.data.api_name==="webapi_getuserinfo"?U.data={data:JSON.stringify(b),rawData:"",signature:"",encryptedData:"",iv:""}:U.userInfo=b,t(U)},a)}).catch(()=>{n("\u8BF7\u5148\u8C03\u7528 uni.login")})},XC=we(iw,sg,ow),QC=we(aw,sg,sw),lg=we(lw,({provider:e},{resolve:t,reject:n})=>{let r=Vs(t),a=or(n);lc(e).then(u=>u.preLogin(r,a)).catch(a)},fw,uw),cg=()=>lc("univerify").then(e=>e.closeAuthView()),ug=xt(dw,cg),fg=we(hw,(e,{resolve:t,reject:n})=>{let r=Vs(t),a=or(n);try{lc("univerify").then(u=>{let h=u.getCheckBoxState();r({state:h})})}catch(u){a(u)}});function eO(e,t){return q.isPlainObject(e)&&q.isPlainObject(e.buttons)&&q.toTypeString(e.buttons.list)==="[object Array]"&&e.buttons.list.forEach((n,r)=>{e.buttons.list[r].onclick=function(){let a={code:"30008",message:"\u7528\u6237\u70B9\u51FB\u4E86\u81EA\u5B9A\u4E49\u6309\u94AE",index:r,provider:n.provider};q.isPlainObject($c)?$c._triggerUniverifyButtonsClick(a):cg().then(()=>{t(a)})}}),e}class tO{constructor(){this.provider="univerify",this.eventName="api.univerifyButtonsClick"}close(){return ug()}login(t){return ag(this._getOptions(t))}getCheckBoxState(t){return fg(t)}preLogin(t){return lg(this._getOptions(t))}onButtonsClick(t){at.on(this.eventName,t)}offButtonsClick(t){at.off(this.eventName,t)}_triggerUniverifyButtonsClick(t){at.emit(this.eventName,t)}_getOptions(t={}){return q.extend({},t,{provider:this.provider})}}let nO=xt(gw,()=>$c||($c=new tO)),rO=we(Sw,(e,{resolve:t,reject:n})=>{let r=Vh();if(r.notificationAuthorized!=="authorized")return n("notificationAuthorized: "+r.notificationAuthorized);let a=q.extend({},e);delete a.content,delete a.payload,s.push.createMessage(e.content,e.payload,a),t()},void 0,Aw),iO=xt("registerRuntime",e=>{q.extend(jsRuntime,e)}),oO={0:{name:"web",title:"\u56FE\u6587"},1:{name:"text",title:"\u7EAF\u6587\u5B57"},2:{name:"image",title:"\u7EAF\u56FE\u7247"},3:{name:"music",title:"\u97F3\u4E50"},4:{name:"video",title:"\u89C6\u9891"},5:{name:"miniProgram",title:"\u5C0F\u7A0B\u5E8F"}},aO=e=>{e.type=e.type||0;let{provider:t,type:n,title:r,summary:a,href:u,imageUrl:h,mediaUrl:b,scene:U,miniProgram:O,openCustomerServiceChat:F,corpid:ge,customerUrl:Se}=e;q.isString(h)&&h&&(h=ht(h));let ke=oO[n];if(ke){let Et={provider:t,type:ke.name,title:r,content:a,href:u,pictures:[h],thumbs:h?[h]:void 0,media:b,miniProgram:O,extra:{scene:U},openCustomerServiceChat:F,corpid:ge,url:Se};return t==="weixin"&&(n===1||n===2)&&delete Et.thumbs,Et}return"\u5206\u4EAB\u53C2\u6570 type \u4E0D\u6B63\u786E"},dg=function(e,t,n,r,a="share"){let u=or(r),h=t.openCustomerServiceChat?"openCustomerServiceChat":"send";try{e[h](t,()=>{n()},u)}catch(b){u({message:`${t.provider} ${h} \u65B9\u6CD5\u8C03\u7528\u5931\u8D25`})}},sO=we(pw,(e,{resolve:t,reject:n})=>{let r=aO(e),a=or(n);if(q.isString(r))return n(r);s.share.getServices(u=>{let h=u.find(({id:b})=>b===r.provider);h?h.authenticated?dg(h,r,t,n):h.authorize(()=>dg(h,r,t,n),a):n("service not found")},a)},mw,vw),lO=we(_w,({type:e,imageUrl:t,summary:n,href:r},{resolve:a,reject:u})=>{let h=or(u);q.isString(t)&&t&&(t=ht(t)),s.share.sendWithSystem({type:e,pictures:t?[t]:void 0,content:n,href:r},()=>a(),h)},Ew,bw),cO=we(yw,(e,{resolve:t,reject:n})=>{let r=e.provider,a=or(n);s.payment.getChannels(u=>{let h=u.find(({id:b})=>b===r);h?s.payment.request(h,e.orderInfo,b=>{t(b)},a):n("service not found")},a)},ww),hg=kh,uO=we("navigateToMiniProgram",(e,{resolve:t,reject:n})=>{hg("navigateToUniMP",e,r=>{if(r.errMsg&&r.errMsg.indexOf(":ok")===-1)return n(r.errMsg.split(" ")[1]);t()})}),gg=[];function pg(e){gg.push(e)}let fO=pg;function dO(e,t){gg.forEach(n=>n(e,t))}let To={load:"load",close:"close",error:"error",adClicked:"adClicked"};class vg{constructor(){this._callbacks={}}onLoad(t){this._addEventListener(To.load,t)}onClose(t){this._addEventListener(To.close,t)}onError(t){this._addEventListener(To.error,t)}offLoad(t){this._removeEventListener(To.load,t)}offClose(t){this._removeEventListener(To.close,t)}offError(t){this._removeEventListener(To.error,t)}_addEventListener(t,n){!q.isFunction(n)||(this._callbacks[t]||(this._callbacks[t]=[]),this._callbacks[t].push(n))}_removeEventListener(t,n){let r=this._callbacks[t],a=r.indexOf(n);a>-1&&r.splice(a,1)}_dispatchEvent(t,n){this._callbacks[t].forEach(r=>{r(n||{})})}}class qu extends vg{constructor(t,n){super();this.preload=!0,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this.preload=n.preload!==void 0?n.preload:!1;let r=this._adInstance=t;r.onLoad(()=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(To.load,{})}),r.onClose(a=>{this._isLoaded=!1,this._isLoading=!1,this._dispatchEvent(To.close,a),this.preload===!0&&this._loadAd()}),r.onError(a=>{this._isLoading=!1;let u={code:a.code,errMsg:a.message};this._dispatchEvent(To.error,u);let h=new Error(JSON.stringify(u));this._loadPromiseReject!=null&&(this._loadPromiseReject(h),this._loadPromiseReject=null),this._showPromiseReject!=null&&(this._showPromiseReject(h),this._showPromiseReject=null)}),r.onAdClicked&&r.onAdClicked(()=>{this._dispatchEvent(To.adClicked,{})})}getProvider(){return this._adInstance.getProvider()}load(){return new Promise((t,n)=>{this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading&&(this._isLoaded?t(""):this._loadAd())})}show(){return new Promise((t,n)=>{this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading&&(this._isLoaded?(this._showAd(),t("")):this._loadAd())})}destroy(){this._adInstance.destroy()}_loadAd(){this._isLoaded=!1,this._isLoading=!0,this._adInstance.load()}_showAd(){this._adInstance.show()}}class hO extends qu{constructor(t){super(s.ad.createRewardedVideoAd(t),t);this._loadAd()}}let gO=xt(Cw,e=>new hO(e),Tw,Ow);class pO extends qu{constructor(t){super(s.ad.createFullScreenVideoAd(t),t);this.preload=!1}}let vO=xt(Pw,e=>new pO(e),Nw,Iw);class mO extends qu{constructor(t){super(s.ad.createInterstitialAd(t),t);this.preload=!1,this._loadAd()}}let _O=xt(kw,e=>new mO(e),xw,Rw),ha={},Us={};function bO(e){let t=e.provider;if(ha[t]||(ha[t]={}),typeof ha[t].plugin=="object"){e.success(ha[t].plugin);return}if(Us[t]||(Us[t]=[]),Us[t].push(e),ha[t].status===!0){e.__plugin=ha[t].plugin;return}ha[t].status=!0;let n=Uo(t);if(!n||!n.initSDK){Us[t].forEach(r=>{r.fail({code:-1,message:"provider ["+t+"] invalid"})}),Us[t].length=0,ha[t].status=!1;return}ha[t].plugin=n,e.__plugin=n,n.initSDK(r=>{let a=r.code===1||r.code==="1";a?ha[t].plugin=n:ha[t].status=!1,Us[t].forEach(u=>{a?u.success(u.__plugin):u.fail(r)}),Us[t].length=0})}class EO extends vg{constructor(t){super();this._adpid="",this._provider="",this._userData=null,this._isLoaded=!1,this._isLoading=!1,this._loadPromiseResolve=null,this._loadPromiseReject=null,this._showPromiseResolve=null,this._showPromiseReject=null,this._adInstance=null,this._adError="",this._adpid=t.adpid,this._provider=t.provider,this._userData=t.userData,R(()=>{this._init()})}_init(){this._adError="",bO({provider:this._provider,success:t=>{this._adInstance=t,this._userData&&this.bindUserData(this._userData),this._loadAd()},fail:t=>{this._adError=t,this._loadPromiseReject!=null&&(this._loadPromiseReject(this._createError(t)),this._loadPromiseReject=null),this._dispatchEvent(To.error,t)}})}getProvider(){return this._provider}load(){return new Promise((t,n)=>{if(this._loadPromiseResolve=t,this._loadPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?t(""):this._loadAd()}})}show(){return new Promise((t,n)=>{if(this._showPromiseResolve=t,this._showPromiseReject=n,!this._isLoading){if(this._adError){this._init();return}this._isLoaded?(this._showAd(),t("")):this._loadAd()}})}reportExposure(){this._adInstance!==null&&this._adInstance.reportExposure()}bindUserData(t){this._adInstance!==null&&this._adInstance.bindUserData(t)}destroy(){this._adInstance!==null&&this._adInstance.destroy&&this._adInstance.destroy({adpid:this._adpid})}_loadAd(){if(this._adInstance!==null){if(this._isLoading===!0)return;this._isLoading=!0,this._adInstance.loadData({adpid:this._adpid},t=>{this._isLoaded=!0,this._isLoading=!1,this._loadPromiseResolve!=null&&(this._loadPromiseResolve(),this._loadPromiseResolve=null),this._showPromiseResolve!=null&&(this._showPromiseResolve(),this._showPromiseResolve=null,this._showAd()),this._dispatchEvent(To.load,t)},t=>{this._isLoading=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(To.error,t)})}}_showAd(){this._adInstance!==null&&this._isLoaded===!0&&this._adInstance.show({adpid:this._adpid},()=>{this._isLoaded=!1},t=>{this._isLoaded=!1,this._showPromiseReject!=null&&(this._showPromiseReject(this._createError(t)),this._showPromiseReject=null),this._dispatchEvent(To.error,t)})}_createError(t){return new Error(JSON.stringify(t))}}let yO=xt(Bw,e=>new EO(e),Lw,Mw),mg=s.os.name==="Android"&&parseInt(s.os.version)<6,wO=mg?"slide-in-right":"pop-in",Uc=300,_g=mg?"slide-out-right":"pop-out",SO="_www/__uniappview.html",AO="webviewId",CO="uniMPNativeEvent",bg;function Eg(){return bg}function OO(e){let t=e.$.appContext;bg=q.extend(t.app,{mountPage(n,r,a){let u=En.createVNode(n,r);u.appContext=t,u.__page_container__=a,En.render(u,a);let h=u.component.proxy;return h.__page_container__=a,h},unmountPage:n=>{let{__page_container__:r}=n;r&&(r.isUnmounted=!0,En.render(null,r))}})}let Qa=[];function Hc(e){if(!e.$page.meta.isNVue)return Qa.push(e);let n=Qa.findIndex(r=>r.$page.id===e.$page.id);n>-1?Qa.splice(n,1,e):Qa.push(e)}function cc(e){return Qa.find(t=>t.$page.id===e)}function Ku(){return Qa}function TO(){let e=[];return Qa.forEach(t=>{t.$.__isTabBar?t.$.__isActive&&e.push(t):e.push(t)}),e}function PO(){let e=_r();!e||uc(e)}function uc(e){let t=Qa.findIndex(n=>n===e);t!==-1&&(e.$page.meta.isNVue||Eg().unmountPage(e),Qa.splice(t,1))}function IO(e,t,n){n&&t.isNVue&&(e.uniNView={path:n,defaultFontSize:P.defaultFontSize,viewport:P.viewport})}let NO=/^#[a-z0-9]{6}$/i;function yg(e){return e&&(NO.test(e)||e==="transparent")}function kO(e,t){let{backgroundColor:n}=t;!n||!yg(n)||(e.background||(e.background=n),e.backgroundColorTop||(e.backgroundColorTop=n))}function RO(e,t){e.popGesture==="hide"&&delete e.popGesture,t.isQuit&&(e.popGesture=s.os.name==="iOS"?"appback":"none")}function xO(e,t){if(!t.enablePullDownRefresh)return;let n=Ss(q.extend({},s.os.name==="Android"?MO:LO,t.pullToRefresh));e.pullToRefresh=BO(n,t)}function BO(e,t){let n=io(e);if(!n)return e;let[r,a,u]=n;return(r||a||u)&&dt.onLocaleChange(()=>{let h=s.webview.getWebviewById(t.id+"");if(!h)return;let b={support:!0};r&&(b.contentdown={caption:e.contentdown.caption}),a&&(b.contentover={caption:e.contentover.caption}),u&&(b.contentrefresh={caption:e.contentrefresh.caption}),h.setStyle({pullToRefresh:b})}),e}let MO={support:!0,style:"circle"},LO={support:!0,style:"default",height:"50px",range:"200px",contentdown:{caption:""},contentover:{caption:""},contentrefresh:{caption:""}};function DO(e,t){let{navigationBar:n}=t;if(n.style==="custom")return!1;let r=!0;t.isQuit&&(r=!1);let a={autoBackButton:r};Object.keys(n).forEach(u=>{let h=n[u];u==="backgroundColor"?a.backgroundColor=yg(h)?h:ne.BACKGROUND_COLOR:u==="titleImage"&&h?a.tags=VO(h):u==="buttons"&&q.isArray(h)?a.buttons=h.map((b,U)=>(b.onclick=$O(U),b)):a[u]=h}),e.titleNView=FO(a,t)}function FO(e,t){let n=Eo(e);if(!n)return e;let[r,a]=n;return(r||a)&&dt.onLocaleChange(()=>{let u=s.webview.getWebviewById(t.id+"");if(!u)return;let h={};r&&(h.titleText=e.titleText),a&&(h.searchInput={placeholder:e.searchInput.placeholder}),u.setStyle({titleNView:h})}),e}function VO(e){return[{tag:"img",src:e,position:{left:"auto",top:"auto",width:"auto",height:"26px"}}]}function $O(e){return function(n){n.index=e,zn(ne.ON_NAVIGATION_BAR_BUTTON_TAP,n)}}function wg(e,t,n){let r={bounce:"vertical"};return Object.keys(t).forEach(a=>{UO.indexOf(a)===-1&&(r[a]=t[a])}),n.id!=="1"&&IO(r,t,e),RO(r,t),kO(r,t),DO(r,t),xO(r,t),r}let UO=["id","route","isNVue","isQuit","isEntry","isTabBar","tabBarIndex","windowTop","topWindow","leftWindow","rightWindow","maxWidth","usingComponents","disableScroll","enablePullDownRefresh","navigationBar","pullToRefresh","onReachBottomDistance","pageOrientation","backgroundColor"],Sg=2;function Ag(){return Sg}function Cg(){return Sg++}function Og(e){return e}function Tg(e,t){let n=t?ne.stringifyQuery(t,Og):"";return{path:e.slice(1),query:n&&n.slice(1)}}function HO(e,t,n){let r=n?ne.stringifyQuery(n,Og):"";return{isTab:e,arguments:JSON.stringify({path:t.slice(1),query:r&&r.slice(1)})}}function jO({path:e,query:t,routeOptions:n,webviewExtras:r}){let a=Cg(),u=wg(e,n.meta,{id:a+""});return u.uniPageUrl=Tg(e,t),u.isTab=!!n.meta.isTabBar,s.webview.create("",String(a),u,q.extend({nvue:!0,__path__:e,__query__:JSON.stringify(t)},r))}let Bi;function Pg(e){Bi=e}function zO(){return Bi}function WO(){return(!Bi||Bi.__uniapp_route)&&(Bi=s.webview.create(SO,String(Cg()),{contentAdjust:!1})),Bi}function GO(e){let{popupSubNVueWebviews:t}=e;!t||e.addEventListener("close",()=>{Object.keys(t).forEach(n=>{t[n].close("none")})})}function Ig(e){return P.realEntryPagePath&&e.$page.route===P.entryPagePath}function Ng(){P.entryPagePath=P.realEntryPagePath,delete P.realEntryPagePath,dt.reLaunch({url:ne.addLeadingSlash(P.entryPagePath)})}function YO(e){let t;e.addEventListener("popGesture",n=>{if(n.type==="start"){let r=Pn(),a=r[r.length-2];t=sc;let u=a&&a.$page.statusBarStyle;u&&Xa(u)}else if(n.type==="end"&&!n.result)Xa(t);else if(n.type==="end"&&n.result){let r=Pn().length,a=_r();PO(),Xa(),a&&r===1&&Ig(a)?Ng():zn(ne.ON_SHOW)}})}function qO(e){if(e.nvue)return;let t=e.id,{subscribe:n,unsubscribe:r}=at,a=(u,h)=>{if(t!==h)return;r(Bl,a);let b=cc(parseInt(h));b&&b.__page_container__.restore()};e.addEventListener("recovery",()=>{n(Bl,a)})}function KO(e){let{emit:t}=at,n=function({width:r,height:a}){let h={deviceOrientation:Math.abs(s.navigator.getOrientation())===90?"landscape":"portrait",size:{windowWidth:Math.ceil(r),windowHeight:Math.ceil(a)}};t(ne.ON_RESIZE,h,parseInt(e.id))};e.addEventListener("resize",ne.debounce(n,50,{setTimeout:R,clearTimeout:S}))}let kg={pullToRefresh:ne.ON_PULL_DOWN_REFRESH,titleNViewSearchInputChanged:ne.ON_NAVIGATION_BAR_SEARCH_INPUT_CHANGED,titleNViewSearchInputConfirmed:ne.ON_NAVIGATION_BAR_SEARCH_INPUT_CONFIRMED,titleNViewSearchInputClicked:ne.ON_NAVIGATION_BAR_SEARCH_INPUT_CLICKED,titleNViewSearchInputFocusChanged:ne.ON_NAVIGATION_BAR_SEARCH_INPUT_FOCUS_CHANGED};function JO(e){let t=parseInt(e.id);Object.keys(kg).forEach(n=>{let r=kg[n];e.addEventListener(n,a=>{r===ne.ON_PULL_DOWN_REFRESH&&Du(e),zn(t,r,a)})}),GO(e),KO(e),s.os.name==="iOS"&&(qO(e),YO(e))}function ZO(e,t,n,r){let a=wg(t,r,e);a.uniPageUrl=Tg(t,n);let u=!!r.isTabBar;r.isNVue?a.isTab=u:a.debugRefresh=HO(u,t,n),a.locale=g.requireModule("plus").getLanguage(),e.setStyle(a)}function XO(e,t,n){(n.subNVues||[]).forEach(a=>{if(!a.path)return;let u=Lo(a.style||{}),h=a.type==="navigationBar",b=a.type==="popup";u.uniNView={path:a.path.replace(".nvue",".js"),defaultFontSize:P.defaultFontSize,viewport:P.viewport};let U={__uniapp_host:t,__uniapp_origin:u.uniNView.path.split("?")[0].replace(".js",""),__uniapp_origin_id:e.id,__uniapp_origin_type:e.__uniapp_type},O;h?(u.position="dock",u.dock="top",u.top="0",u.width="100%",u.height=String(ne.NAVBAR_HEIGHT+Fu()),delete u.left,delete u.right,delete u.bottom,delete u.margin):b&&(u.position="absolute",nc(t)?O=fi:O=e,U.__uniapp_mask=u.mask||"rgba(0,0,0,0.5)",U.__uniapp_mask_id=O.id),delete u.mask;let F=s.webview.create("",a.id,u,U);if(b){O.popupSubNVueWebviews||(O.popupSubNVueWebviews={}),O.popupSubNVueWebviews[F.id]=F;let ge=function(){O.setStyle({mask:"none"}),F.hide("auto")};O.addEventListener("maskClick",ge);let Se=!1;F.addEventListener("show",()=>{Se||(s.key.removeEventListener("backbutton",la),s.key.addEventListener("backbutton",ge),Se=!0)}),F.addEventListener("hide",()=>{Se&&(s.key.removeEventListener("backbutton",ge),s.key.addEventListener("backbutton",la),Se=!1)}),F.addEventListener("close",()=>{delete O.popupSubNVueWebviews[F.id],Se&&(s.key.removeEventListener("backbutton",ge),s.key.addEventListener("backbutton",la),Se=!1)})}else e.append(F)})}function QO(e,t,n,r){(e.id==="1"||!r.isNVue)&&ZO(e,t,n,r),XO(e,t,r),JO(e)}function Rg(e){return e.routeOptions.meta.isNVue?jO(e):Ag()===2?s.webview.getLaunchWebview():zO()}function xg(e,t){at.once(Bl+"."+e,t)}let ga=!1;function Bg(e,t,n){ga={path:e,nvue:ba(e).isNVue,callback:t}}function Mg(e,t,n){uc(e),Hs(e.$getAppWebview(),t,n)}function jc(e,t,n=!1){if(!n&&ga)return console.error(`Waiting to navigate to: ${ga.path}, do not operate continuously: ${e}.`);if(P.renderer==="native")return Pn().length===0?Bg(e,t,"waitForReady"):t();let r=!Bi||Bi&&Bi.__uniapp_route,a=Bi&&!Bi.loaded;r||a?Bg(e,t,r?"waitForCreate":"waitForReady"):t(),a&&xg(Bi.id,zc)}function zc(){if(!ga)return;let{callback:e}=ga;return ga=!1,e()}function Lg(){if(P.renderer==="native")return ga&&ga.nvue?zc():void 0;let e=WO();if(!!ga){if(ga.nvue)return zc();e.loaded?ga.callback():xg(e.id,zc)}}function Hs(e,t,n){e[e.__preload__?"hide":"close"](t,n)}function Wc(e,t,n,r,a){typeof a=="undefined"&&(a=e.nvue?0:100);let u=function(){u._called||(u._called=!0,r&&r(),Lg())};u._called=!1,R(()=>{let h=R(()=>{u()},n+150);e.show(t,n,()=>{u._called||S(h),u()})},a)}function eT(e,t){let n=e.children();if(!n||!n.length)return t();let r=n.find(a=>a.id.indexOf(AO)===0)||n[0];r.canBack(({canBack:a})=>{a?r.back():t()})}let tT=we(jE,(e,{resolve:t,reject:n})=>{let r=_r();if(!r)return n("getCurrentPages is empty");if(zn(r,ne.ON_BACK_PRESS,{from:e.from||"navigateBack"}))return t();if(dt.hideToast(),dt.hideLoading(),r.$page.meta.isQuit)nT();else if(Ig(r))Ng();else{let{delta:a,animationType:u,animationDuration:h}=e;rT(a,u,h)}return t()},WE,ty),Gc=0;function nT(){en(),Gc?Date.now()-Gc<2e3&&s.runtime.quit():(Gc=Date.now(),s.nativeUI.toast(X().t("uni.app.quit")),R(()=>{Gc=0},2e3))}function rT(e,t,n){let r=Pn(),a=r.length,u=r[a-1];e>1&&r.slice(a-e,a-1).reverse().forEach(U=>{Hs(s.webview.getWebviewById(U.$page.id+""),"none",0)});let h=function(U){t?Hs(U,t,n||Uc):u.$page.openType==="redirectTo"?Hs(U,_g,Uc):Hs(U,"auto"),r.slice(a-e,a).forEach(O=>uc(O)),Xa(),zn(ne.ON_SHOW)},b=s.webview.getWebviewById(u.$page.id+"");if(!u.__uniapp_webview)return h(b);eT(b,()=>{h(b)})}class iT extends ne.UniNode{constructor(t,n,r=!1){super(ne.NODE_TYPE_PAGE,"#page",null);this._id=1,this._created=!1,this._updating=!1,this._createActionMap=new Map,this.updateActions=[],this.dicts=[],this.nodeId=0,this.pageId=t,this.pageNode=this,this.options=n,this.isUnmounted=!1,this.createAction=[ne.ACTION_TYPE_PAGE_CREATE,n],this.createdAction=[ne.ACTION_TYPE_PAGE_CREATED],this.normalizeDict=this._normalizeDict.bind(this),this._update=this.update.bind(this),r&&this.setup()}_normalizeDict(t,n=!0){if(!q.isPlainObject(t))return this.addDict(t);let r=[];return Object.keys(t).forEach(a=>{let u=[this.addDict(a)],h=t[a];n?u.push(this.addDict(h)):u.push(h),r.push(u)}),r}addDict(t){let{dicts:n}=this,r=n.indexOf(t);return r>-1?r:n.push(t)-1}onInjectHook(t){(t===ne.ON_PAGE_SCROLL||t===ne.ON_REACH_BOTTOM)&&!this.scrollAction&&(this.scrollAction=[ne.ACTION_TYPE_PAGE_SCROLL,this.options.onReachBottomDistance],this.push(this.scrollAction))}onCreate(t,n){return sT(this,t.nodeId,n),t}onInsertBefore(t,n,r){return lT(this,n,t.nodeId,r&&r.nodeId||-1),n}onRemoveChild(t){return cT(this,t.nodeId),t}onAddEvent(t,n,r){t.parentNode&&uT(this,t.nodeId,n,r)}onAddWxsEvent(t,n,r,a){t.parentNode&&fT(this,t.nodeId,n,r,a)}onRemoveEvent(t,n){t.parentNode&&dT(this,t.nodeId,n)}onSetAttribute(t,n,r){t.parentNode&&gT(this,t.nodeId,n,r)}onRemoveAttribute(t,n){t.parentNode&&pT(this,t.nodeId,n)}onTextContent(t,n){t.parentNode&&Fg(this,t.nodeId,n)}onNodeValue(t,n){t.parentNode&&Fg(this,t.nodeId,n)}genId(){return this._id++}push(t,n){if(!this.isUnmounted){switch(t[0]){case ne.ACTION_TYPE_CREATE:this._createActionMap.set(t[1],t);break;case ne.ACTION_TYPE_INSERT:let r=this._createActionMap.get(t[1]);r?(r[3]=t[2],r[4]=t[3],n&&(r[5]=n)):(n&&(t[4]=n),this.updateActions.push(t));break}t[0]!==ne.ACTION_TYPE_INSERT&&this.updateActions.push(t),this._updating||(this._updating=!0,En.queuePostFlushCb(this._update))}}restore(){this.clear(),this.setup(),this.scrollAction&&this.push(this.scrollAction);let t=n=>{this.onCreate(n,n.nodeName),this.onInsertBefore(n.parentNode,n,null),n.childNodes.forEach(r=>{t(r)})};this.childNodes.forEach(n=>t(n)),this.push(this.createdAction)}setup(){this.send([this.createAction])}update(){let{dicts:t,updateActions:n,_createActionMap:r}=this;this._created||(this._created=!0,n.push(this.createdAction)),n.length&&(t.length&&n.unshift([jC,t]),this.send(n)),this.clear()}clear(){this.dicts.length=0,this.updateActions.length=0,this._updating=!1,this._createActionMap.clear()}send(t){at.publishHandler(tg,t,this.pageId)}fireEvent(t,n){let r=Dg(t,this);r&&r.dispatchEvent(n)}}function oT(e){let t=cc(e);return t?t.__page_container__:null}function Ju(e,t,n){if(typeof n=="number"&&(n=oT(n)),n[e]===t)return n;let{childNodes:r}=n;for(let a=0;a<r.length;a++){let u=Ju(e,t,r[a]);if(u)return u}return null}function Dg(e,t){return Ju("nodeId",e,t)}function aT(e,t){return Ju("nodeName",e.toUpperCase(),t)}function sT(e,t,n){e.push([ne.ACTION_TYPE_CREATE,t,e.addDict(n),-1,-1])}function lT(e,t,n,r){let a=t.toJSON({attr:!0,normalize:e.normalizeDict});e.push([ne.ACTION_TYPE_INSERT,t.nodeId,n,r],Object.keys(a).length?a:void 0)}function cT(e,t){e.push([ne.ACTION_TYPE_REMOVE,t])}function uT(e,t,n,r){e.push([ne.ACTION_TYPE_ADD_EVENT,t,e.addDict(n),r])}function fT(e,t,n,r,a){e.push([ne.ACTION_TYPE_ADD_WXS_EVENT,t,e.addDict(n),e.addDict(r),a])}function dT(e,t,n){e.push([ne.ACTION_TYPE_REMOVE_EVENT,t,e.addDict(n)])}function hT(e,t,n){return t==="style"&&q.isPlainObject(n)?e.normalizeDict(n):e.addDict(n)}function gT(e,t,n,r){e.push([ne.ACTION_TYPE_SET_ATTRIBUTE,t,e.addDict(n),hT(e,n,r)])}function pT(e,t,n){e.push([ne.ACTION_TYPE_REMOVE_ATTRIBUTE,t,e.addDict(n)])}function Fg(e,t,n){e.push([ne.ACTION_TYPE_SET_TEXT,t,e.addDict(n)])}function vT(e,t,n){return new iT(e,t,n)}function Vg(e){let t=e.setup;return e.inheritAttrs=!1,e.setup=(n,r)=>{let{attrs:{__pageId:a,__pagePath:u,__pageQuery:h,__pageInstance:b}}=r,O=En.getCurrentInstance().proxy;if(ze(O,b),Hc($g(a,O,b)),En.onMounted(()=>{En.nextTick(()=>{zn(O,ne.ON_READY)})}),En.onBeforeUnmount(()=>{zn(O,ne.ON_UNLOAD)}),t)return t(h,r)},e}function $g(e,t,n){let r=()=>s.webview.getWebviewById(e+"");return t.$getAppWebview=r,t.$.ctx.$scope={$getAppWebview:r},t.getOpenerEventChannel=()=>(n.eventChannel||(n.eventChannel=new ne.EventChannel(e)),n.eventChannel),t}function mT(e){return q.isFunction(e)}let Ug=new Map;function _T(e,t){Ug.set(e,ne.once(ET(t)))}function bT(e,t,n,r,a){let u=vT(e,a,!0),h=Eg(),b=Ug.get(t)(),U=O=>h.mountPage(O,{__pageId:e,__pagePath:t,__pageQuery:n,__pageInstance:r},u);return q.isPromise(b)?b.then(O=>U(O)):U(b)}function ET(e){return()=>mT(e)?e().then(t=>Vg(t)):Vg(e)}let Hg=!1;function jg(){if(Hg)return;Hg=!0;let e,t;if(g.requireModule("plus").getRedirectInfo){let{path:u,query:h,referrerInfo:b}=Sa();u&&(e=u,t=h),P.referrerInfo=b}else{let u=s.runtime.arguments;if(!u)return;try{let h=JSON.parse(u);e=h.path||h.pathName,t=h.query?"?"+h.query:""}catch(h){}}if(!e||e===P.entryPagePath){t&&(P.entryPageQuery=t);return}let r=ne.addLeadingSlash(e),a=ki(r);!a||(a.meta.isTabBar||(P.realEntryPagePath=P.realEntryPagePath||P.entryPagePath),P.entryPagePath=e,P.entryPageQuery=t)}function zg(e,t){let n=JSON.parse(JSON.stringify(ki(e)));return n.meta=Xn(n.meta),t!=="preloadPage"&&!P.realEntryPagePath&&(t==="reLaunch"||Pn().length===0)?n.meta.isQuit=!0:n.meta.isTabBar||(n.meta.isQuit=!1),n}let Ra={};function yT(e){let t=Object.keys(Ra).find(n=>Ra[n].id===e.id);t&&delete Ra[t]}function wT({url:e}){let t=Ra[e];return t&&(t.__page__&&Pn().find(n=>n===t.__page__)?t.__preload__=!1:t.close("none"),delete Ra[e]),t}function ST({url:e,path:t,query:n}){if(!Ra[e]){let r=zg(t,"preloadPage");Ra[e]=Rg({path:t,routeOptions:r,query:n,webviewExtras:{__preload__:!0}})}return Ra[e]}function fc({url:e,path:t,query:n,openType:r,webview:a,nvuePageVm:u,eventChannel:h}){if(a&&jg(),Ra[e]){a=Ra[e];let Se=a;if(Se.__page__)if(Pn().find(ke=>ke===Se.__page__))a=void 0;else return h&&(Se.__page__.$page.eventChannel=h),Hc(Se.__page__),Se}let b=zg(t,r);a?(a=s.webview.getWebviewById(a.id),a.nvue=b.meta.isNVue):a=Rg({path:t,routeOptions:b,query:n}),b.meta.id=parseInt(a.id),!!b.meta.isTabBar&&fi.append(a),QO(a,t,n,b.meta);let O=t.slice(1);a.__uniapp_route=O;let F=zo(r,e,n,b.meta,h),ge=parseInt(a.id);return a.nvue?u?CT(ge,u,F):OT(ge,a,F):bT(ge,O,n,F,AT(b)),a}function AT({meta:e}){let t=Fu(),{platform:n,pixelRatio:r,windowWidth:a}=xo();return{css:!0,route:e.route,version:1,locale:"",platform:n,pixelRatio:r,windowWidth:a,disableScroll:e.disableScroll===!0,onPageScroll:!1,onPageReachBottom:!1,onReachBottomDistance:q.hasOwn(e,"onReachBottomDistance")?e.onReachBottomDistance:ne.ON_REACH_BOTTOM_DISTANCE,statusbarHeight:t,windowTop:e.navigationBar.type==="float"?t+ne.NAVBAR_HEIGHT:0,windowBottom:fi.indexOf(e.route)>=0&&fi.cover?fi.height:0}}function CT(e,t,n){ze(t,n),Hc($g(e,t,n)),e===1&&(P.splashscreen&&P.splashscreen.autoclose&&!P.splashscreen.alwaysShowBeforeRender&&s.navigator.closeSplashscreen(),P.onReady(function(){Lg()}))}function OT(e,t,n){let r={$:{},$getAppWebview(){return t},getOpenerEventChannel(){return n.eventChannel||(n.eventChannel=new ne.EventChannel(e)),n.eventChannel},__setup(a,u){a.$getAppWebview=()=>t,a.getOpenerEventChannel=u.getOpenerEventChannel,ze(a,n),t.__preload__&&(t.__page__=a);let h=Ku(),b=h.findIndex(U=>U===u);b>-1&&h.splice(b,1,a)}};ze(r,n),t.__preload__?t.__page__=r:Hc(r)}let Wg=(e,{resolve:t,reject:n})=>{let{url:r,events:a,animationType:u,animationDuration:h}=e,{path:b,query:U}=ne.parseUrl(r),[O,F]=IT(b,u,h);jc(b,()=>{PT({url:r,path:b,query:U,events:a,aniType:O,aniDuration:F}).then(t).catch(n)},e.openType==="appLaunch")},TT=we(Nu,Wg,zE,ZE);function PT({url:e,path:t,query:n,events:r,aniType:a,aniDuration:u}){zn(ne.ON_HIDE);let h=new ne.EventChannel(Ag()+1,r);return new Promise(b=>{Wc(fc({url:e,path:t,query:n,openType:"navigateTo",eventChannel:h}),a,u,()=>{b({eventChannel:h})}),Xa()})}function IT(e,t,n){let{globalStyle:r}=P,a=ba(e);return[t||a.animationType||r.animationType||wO,n||a.animationDuration||r.animationDuration||Uc]}let NT=we(ku,({url:e},{resolve:t,reject:n})=>{let{path:r,query:a}=ne.parseUrl(e);jc(r,()=>{kT({url:e,path:r,query:a}).then(t).catch(n)})},GE,XE);function kT({url:e,path:t,query:n}){let r=_r();return r&&uc(r),new Promise(a=>{Wc(fc({url:e,path:t,query:n,openType:"redirectTo"}),"none",0,()=>{if(r){let u=r.$getAppWebview();u.__preload__&&yT(u),u.close("none")}a(void 0)}),Xa()})}let RT=({url:e},{resolve:t,reject:n})=>{let{path:r,query:a}=ne.parseUrl(e);jc(r,()=>{xT({url:e,path:r,query:a}).then(t).catch(n)})};function xT({url:e,path:t,query:n}){return new Promise(r=>{let a=Ku().slice(0);He.find(h=>h.path===t).meta.isTabBar&&fi.switchTab(t.slice(1)),Wc(fc({url:e,path:t,query:n,openType:"reLaunch"}),"none",0,()=>{a.forEach(h=>Mg(h,"none")),r(void 0)}),Xa()})}let BT=we(ch,RT,YE,QE),Gg=(e,{resolve:t,reject:n})=>{let{url:r}=e,{path:a,query:u}=ne.parseUrl(r);jc(a,()=>{LT({url:r,path:a,query:u}).then(t).catch(n)},e.openType==="appLaunch")},MT=we(Tc,Gg,qE,ey);function LT({url:e,path:t,query:n}){fi.switchTab(t.slice(1));let r=Pn(),a=r.length,u=!1,h=!1,b;a>=1&&(b=r[a-1],b&&!b.$.__isTabBar?(h=!0,r.reverse().forEach(O=>{!O.$.__isTabBar&&O!==b&&Mg(O,"none")}),uc(b),R(()=>{b.$page.openType==="redirectTo"?Hs(b.$getAppWebview(),_g,Uc):Hs(b.$getAppWebview(),"auto")},100)):u=!0);let U;return Ku().forEach(O=>{ne.addLeadingSlash(O.route)===t?(O.$.__isActive||(h=!0),O.$.__isActive=!0,U=O):O.$.__isTabBar&&(O.$.__isActive=!1)}),b===U&&(u=!1),b&&u&&zn(b,ne.ON_HIDE),new Promise(O=>{if(U){let F=U.$getAppWebview();F.show("none"),h&&!F.__preload__&&zn(U,ne.ON_SHOW),Xa(),O(void 0)}else Wc(fc({url:e,path:t,query:n,openType:"switchTab"}),"none",0,()=>{Xa(),O(void 0)},70)})}let DT=xt(uh,({url:e})=>{let t=wT({url:e});return t?{id:t.id,url:e,errMsg:"unPreloadPage:ok"}:{url:e,errMsg:"unPreloadPage:fail not found"}},JE),FT=we(Ru,({url:e},{resolve:t,reject:n})=>{let r=e.split("?"),a=r[0],u=ne.parseQuery(r[1]||""),h=ST({url:e,path:a,query:u});t({id:h.id,url:e,errMsg:"preloadPage:ok"})},KE);var VT={__proto__:null,sendHostEvent:hg,navigateToMiniProgram:uO,onHostEventReceive:pg,onNativeEventReceive:fO,navigateTo:TT,reLaunch:BT,switchTab:MT,upx2px:um,addInterceptor:vm,removeInterceptor:mm,interceptors:_m,arrayBufferToBase64:Bn,base64ToArrayBuffer:jn,createIntersectionObserver:u_,createMediaQueryObserver:d_,createSelectorQuery:__,createVideoContext:Vm,createMapContext:Um,createAnimation:A_,onWindowResize:P_,offWindowResize:I_,onTabBarMidButtonTap:C_,createCanvasContext:n_,canvasGetImageData:r_,canvasPutImageData:i_,canvasToTempFilePath:o_,getSelectedTextRange:B_,getLocale:Ou,setLocale:R_,$on:Om,$off:Pm,$once:Tm,$emit:Im,onCreateVueApp:ne.onCreateVueApp,onLocaleChange:k_,setPageMeta:x_,getEnterOptionsSync:G_,getLaunchOptionsSync:Y_,getPushClientId:K_,onPushMessage:J_,offPushMessage:Z_,onAppHide:z_,onAppShow:H_,onError:$_,onPageNotFound:F_,onUnhandledRejection:L_,offAppHide:W_,offAppShow:j_,offError:U_,offPageNotFound:V_,offUnhandledRejection:D_,invokePushCallback:q_,setStorageSync:Fw,setStorage:Vw,getStorageSync:$w,getStorage:Uw,removeStorageSync:Hw,removeStorage:jw,clearStorageSync:zw,clearStorage:Ww,getStorageInfoSync:mh,getStorageInfo:Gw,getFileInfo:Yw,saveFile:Zw,getSavedFileList:eS,getSavedFileInfo:tS,removeSavedFile:nS,openDocument:rS,canIUse:iS,getDeviceInfo:Ah,getAppBaseInfo:Ch,getSystemInfoSync:Oh,getSystemInfo:dS,onCompassChange:hS,offCompassChange:gS,startCompass:Th,stopCompass:Ph,vibrateShort:pS,vibrateLong:vS,onAccelerometerChange:mS,offAccelerometerChange:_S,startAccelerometer:Ih,stopAccelerometer:Nh,onBluetoothDeviceFound:bS,onBluetoothAdapterStateChange:ES,onBLEConnectionStateChange:yS,onBLECharacteristicValueChange:wS,openBluetoothAdapter:SS,closeBluetoothAdapter:AS,getBluetoothAdapterState:CS,startBluetoothDevicesDiscovery:OS,stopBluetoothDevicesDiscovery:TS,getBluetoothDevices:PS,getConnectedBluetoothDevices:IS,createBLEConnection:NS,closeBLEConnection:kS,getBLEDeviceServices:RS,getBLEDeviceCharacteristics:xS,notifyBLECharacteristicValueChange:BS,readBLECharacteristicValue:MS,writeBLECharacteristicValue:LS,setBLEMTU:DS,getBLEDeviceRSSI:FS,onBeaconUpdate:VS,onBeaconServiceChange:$S,getBeacons:US,startBeaconDiscovery:HS,stopBeaconDiscovery:jS,makePhoneCall:zS,addPhoneContact:YS,getClipboardData:qS,setClipboardData:KS,onNetworkStatusChange:JS,offNetworkStatusChange:ZS,getNetworkType:Bh,checkIsSupportSoterAuthentication:XS,checkIsSoterEnrolledInDevice:QS,startSoterAuthentication:eA,scanCode:tA,onThemeChange:nA,getScreenBrightness:rA,setScreenBrightness:iA,setKeepScreenOn:oA,getWindowInfo:Sh,getSystemSetting:aA,getAppAuthorizeSetting:Vh,openAppAuthorizeSetting:sA,getImageInfo:lA,getVideoInfo:cA,previewImage:uA,closePreviewImage:fA,getRecorderManager:gA,saveVideoToPhotosAlbum:pA,saveImageToPhotosAlbum:vA,compressImage:mA,compressVideo:_A,chooseImage:EA,chooseVideo:yA,showKeyboard:wA,hideKeyboard:SA,onKeyboardHeightChange:AA,offKeyboardHeightChange:CA,downloadFile:TA,request:kA,configMTLS:RA,connectSocket:LA,sendSocketMessage:DA,closeSocket:FA,onSocketOpen:VA,onSocketError:$A,onSocketMessage:UA,onSocketClose:HA,uploadFile:zA,createInnerAudioContext:QA,getBackgroundAudioManager:uC,createLivePusherContext:hC,getLocation:vC,chooseLocation:mC,openLocation:_C,showModal:bC,showActionSheet:EC,showLoading:yC,showToast:wC,hideToast:SC,hideLoading:AC,startPullDownRefresh:CC,stopPullDownRefresh:OC,loadFontFace:TC,pageScrollTo:PC,setNavigationBarTitle:IC,showNavigationBarLoading:NC,hideNavigationBarLoading:kC,setNavigationBarColor:xC,setTabBarBadge:BC,setTabBarItem:MC,setTabBarStyle:LC,hideTabBar:DC,showTabBar:FC,showTabBarRedDot:VC,removeTabBarBadge:$C,hideTabBarRedDot:UC,getSubNVueById:YC,restoreGlobal:KC,requireGlobal:JC,getProvider:ZC,login:ag,getUserInfo:XC,getUserProfile:QC,preLogin:lg,closeAuthView:ug,getCheckBoxState:fg,getUniverifyManager:nO,createPushMessage:rO,registerRuntime:iO,share:sO,shareWithSystem:lO,requestPayment:cO,requireNativePlugin:Uo,sendNativeEvent:kh,createRewardedVideoAd:gO,createFullScreenVideoAd:vO,createInterstitialAd:_O,createInteractiveAd:yO,navigateBack:tT,redirectTo:NT,unPreloadPage:DT,preloadPage:FT};let $T=q.extend(ce,{publishHandler:UT});function UT(e,t,n){t=JSON.stringify(t),q.isArray(n)||(n=[n]);let r=`typeof UniViewJSBridge !== 'undefined' && UniViewJSBridge.subscribeHandler("${e}",${t},__PAGE_ID__)`;n.forEach(a=>{let u=String(a),h=s.webview.getWebviewById(u);h&&h.evalJS(r.replace("__PAGE_ID__",u))})}function HT(){let{tabBar:e}=P;if(!(e&&e.list&&e.list.length))return;let{entryPagePath:n}=P;e.selectedIndex=0;let r=e.list.findIndex(a=>a.pagePath===n);fi.init(e,(a,u)=>{dt.switchTab({url:ne.addLeadingSlash(a.pagePath),openType:"switchTab",from:"tabBar",success(){zn(ne.ON_TAB_ITEM_TAP,{index:u,text:a.text,pagePath:a.pagePath})}})}),r!==-1&&(e.selectedIndex=r,r!==0&&fi.switchTab(n))}function jT(){let e=s.globalEvent,t=g.requireModule("globalEvent"),n=at.emit;g.config.preload?s.key.addEventListener(os,la):e.addEventListener("splashclosed",()=>{s.key.addEventListener(os,la)}),e.addEventListener("pause",()=>{n(ne.ON_APP_ENTER_BACKGROUND)}),e.addEventListener("resume",()=>{let a=Sa();a&&a.userAction&&Wi(a),n(ne.ON_APP_ENTER_FOREGROUND,Ir())}),t.addEventListener("uistylechange",function(a){let u={theme:a.uistyle};n(ne.ON_THEME_CHANGE,u)});let r=0;e.addEventListener("KeyboardHeightChange",function(a){r!==a.height&&(r=a.height,n(ne.ON_KEYBOARD_HEIGHT_CHANGE,{height:r}))}),t.addEventListener(CO,function(a){a&&a.event&&dO(a.event,a.data)}),e.addEventListener("plusMessage",Yg),e.addEventListener("WebviewPostMessage",Yg)}function Yg({data:e}){e&&e.type&&at.subscribeHandler("plusMessage."+e.type,e.args)}function qg(e,t,n=!1){at.subscribe("plusMessage."+e,t,n)}function zT(e){M_(e.$);let{entryPagePath:t,entryPageQuery:n,referrerInfo:r}=P,a=Va({path:t,query:n,referrerInfo:r});zn(e,ne.ON_LAUNCH,a),zn(e,ne.ON_SHOW,a);let u=g.requireModule("plus").getAppState;(u&&Number(u()))===2&&zn(e,ne.ON_HIDE,a)}function Kg(e){return e=e.replace(/\/$/,""),e.indexOf("_")===0?s.io.convertLocalFileSystemURL(e):e}function WT(){let e=Kg(Qr),t=Kg(ei),n=t.split("/");n.pop();let r=n.join("/");s.io.resolveLocalFileSystemURL(s.io.convertAbsoluteFileSystem(r),a=>{a.createReader().readEntries(function(h){let b=h;b&&b.length&&b.forEach(function(U){U.isDirectory&&U.fullPath.indexOf(e)===0&&U.fullPath.indexOf(t)!==0&&U.removeRecursively()})})})}function GT(e,t,n){n.fireEvent(e,t)}function YT(e,t){let n=cc(parseInt(t));if(!n)return;let r=n.__page_container__;e.forEach(a=>{switch(a[0]){case ne.ACTION_TYPE_EVENT:GT(a[1],a[2],r);break}})}let Jg={};function qT(e,t,n){let{adpid:r,width:a}=e,u=r+"-"+a,h=Jg[u];if(h&&h.length>0){t(h.splice(0,1)[0]);return}s.ad.getAds(e,b=>{let U=b.ads;t(U.splice(0,1)[0]),Jg[u]=h?h.concat(U):U},b=>{n({errCode:b.code,errMsg:b.message})})}function KT(){Z("getAdData",(e,t)=>{qT(e,n=>{t({code:0,data:n})},n=>{t({code:1,message:n})})})}let JT=["switchTab","reLaunch","redirectTo","navigateTo","navigateBack"];function ZT(){JT.forEach(e=>{Z(e,t=>{dt[e](q.extend(t,{fail(n){console.error(n.errMsg)}}))})})}let Zg=!1;function XT(e,t){let n=t==="1";if(!(n&&Zg)){if(n?(Zg=!0,Pg(s.webview.getLaunchWebview())):Bi||Pg(s.webview.getWebviewById(t)),!Bi.loaded){if(Bi.id!==t)return console.error(`webviewReady[${Bi.id}][${t}] not match`);Bi.loaded=!0}at.emit(Bl+"."+t),n&&QT()}}function QT(){let{autoclose:e,alwaysShowBeforeRender:t}=P.splashscreen;e&&!t&&s.navigator.closeSplashscreen();let n=ne.addLeadingSlash(P.entryPagePath),r=ki(n);if(!r.meta.isNVue){let a={url:n+(P.entryPageQuery||""),openType:"appLaunch"},u={resolve(){},reject(){}};return r.meta.isTabBar?Gg(a,u):Wg(a,u)}}function eP(e,t){let n=cc(parseInt(t));n&&(n.__uniapp_webview=!0)}function tP(e,t){let n=cc(parseInt(t));n&&delete n.__uniapp_webview}let nP=({name:e,arg:t},n)=>{e==="postMessage"?rP(n[0],t):dt[e](q.extend(t,{fail(r){console.error(r.errMsg)}}))};function rP(e,t){let n=aT("web-view",parseInt(e));n&&n.dispatchEvent(ne.createUniEvent({type:"onMessage",target:Object.create(null),currentTarget:Object.create(null),detail:{data:[t]}}))}function iP({nodeId:e,ownerId:t,method:n,args:r},a){let u=Dg(e,parseInt(a));if(!u)return;let h=oP(t,u.__vueParentComponent);!h||!h[n]||h[n](r)}function oP(e,t){if(!t)return null;if(t.uid===e)return t.proxy;let n=t.parent;for(;n;){if(n.uid===e)return n.proxy;n=n.parent}return t.proxy}function aP(){let{subscribe:e,subscribeHandler:t,publishHandler:n}=at;if(qg("subscribeHandler",({type:r,data:a,pageId:u})=>{t(r,a,u)}),qg(ne.WEB_INVOKE_APPSERVICE,({data:r,webviewIds:a})=>{nP(r,a)}),P.renderer!=="native"){e(Bl,XT),e(tg,YT),j(),KT(),ZT(),e(zC,eP),e(WC,tP),e(ne.ON_WXS_INVOKE_CALL_METHOD,iP);let r=ki(ne.addLeadingSlash(P.entryPagePath));r&&!r.meta.isNVue&&n(Bl,{},1)}}let Ml,Zu={globalData:{}};function sP({allowDefault:e=!1}={}){if(Ml)return Ml;if(e)return Zu;console.error("[warn]: getApp() failed. Learn more: https://uniapp.dcloud.io/collocation/frame/window?id=getapp.")}function lP(e){if(dt.Vuex&&e.$store){let{useStore:t}=dt.Vuex;dt.Vuex.useStore=n=>n?t(n):e.$store}OO(e),Ml=e,tt(Ml),q.extend(Ml,Zu),Ft(Ml,Zu.globalData),Gt(),jg(),HT(),jT(),aP(),zT(e),R(WT,1e4),P.ready=!0}var cP={uni:VT,getApp:sP,getCurrentPages:TO,__definePage:_T,__registerApp:lP,__registerPage:fc,UniServiceJSBridge:$T};return cP}(Rt,gn,A);B=B.default||B;let dt=B.uni,pn=B.getApp,Pn=B.getCurrentPages,at=B.UniServiceJSBridge;return B}var xp=W1(q1);var _f,bf,Ef,ns,yf,wf,Sf;function Bp(){return ns?{__definePage:_f,__registerApp:bf,__registerPage:Ef,uni:ns,wx:ns,getApp:yf,getCurrentPages:wf,UniServiceJSBridge:Sf}:{}}function Mp(g){let{weex:s,plus:_,VueShared:A}=g;return ns||({__definePage:_f,__registerApp:bf,__registerPage:Ef,uni:ns,getApp:yf,getCurrentPages:wf,UniServiceJSBridge:Sf}=Rp(s,_,g),ns.VueShared=A,tp(ns)),{__definePage:_f,__registerApp:bf,__registerPage:Ef,plus:_,uni:ns,wx:ns,getApp:yf,getCurrentPages:wf,UniServiceJSBridge:Sf}}function Lp(g,s){let{__uniConfig:_}=s;if(!_)return;let A=s.weex;A.document.__$automator__=!!_.automator;let R=_.renderer!=="native"&&A.config.bundleUrl.indexOf("app-service.js")!==-1;if(ti(s,Bp()),R?xp(s):(op(g,s),Cp(s.Vue.parseClassStyles)),ti(s,Mp(s)),A.config.plus_web_id==="1"){let P=A.requireModule("plus");P.setDefaultFontSize&&P.setDefaultFontSize(Math.round(s.plus.screen.resolutionWidth/20))}let{scale:S,deviceWidth:N,platform:f}=global.WXEnvironment;if(f.toLowerCase()==="ios"){let P=Math.ceil(N/S);A.requireModule("meta").setViewport({width:P,roundOffDeviation:!1})}}var qs=class extends Ys{constructor(s){super();this.nodeType=8;this.type="comment";this.value="";this.value=s}toString(){return"<!-- "+this.value+" -->"}};function Po(g,s=[]){return{module:"dom",method:g,args:s}}var Ul=class{constructor(s,_){this.id=s,this.batched=!1,this.updates=[],$n(_)?Object.defineProperty(this,"handler",{configurable:!0,enumerable:!0,writable:!0,value:_}):console.error("[JS Runtime] invalid parameter, handler must be a function")}createFinish(s){return this.handler([Po("createFinish")],s)}updateFinish(s){return this.handler([Po("updateFinish")],s)}refreshFinish(s){return this.handler([Po("refreshFinish")],s)}createBody(s){let _=s.toJSON(),A=_.children;delete _.children;let R=[Po("createBody",[_])];return A&&R.push.apply(R,A.map(S=>Po("addElement",[_.ref,S,-1]))),this.addActions(R)}addElement(s,_,A){return A>=0||(A=-1),this.addActions(Po("addElement",[_,s.toJSON(),A]))}removeElement(s){if(Si(s)){let _=s.map(A=>Po("removeElement",[A]));return this.addActions(_)}return this.addActions(Po("removeElement",[s]))}moveElement(s,_,A){return this.addActions(Po("moveElement",[s,_,A]))}setAttr(s,_,A){return this.addActions(Po("updateAttrs",[s,{[_]:A}]))}setStyle(s,_,A){return this.addActions(Po("updateStyle",[s,{[_]:A}]))}setStyles(s,_){return this.addActions(Po("updateStyle",[s,_]))}addEvent(s,_){return this.addActions(Po("addEvent",[s,_]))}removeEvent(s,_){return this.addActions(Po("removeEvent",[s,_]))}handler(s,_){return _&&_()}addActions(s){let _=this.updates,A=this.handler;if(Si(s)||(s=[s]),this.batched)_.push.apply(_,s);else return A(s)}};var Af={createBody:"callCreateBody",addElement:"callAddElement",removeElement:"callRemoveElement",moveElement:"callMoveElement",updateAttrs:"callUpdateAttrs",updateStyle:"callUpdateStyle",addEvent:"callAddEvent",removeEvent:"callRemoveEvent"};function Dp(g,s){let _=s||global.callNative;return $n(_)||console.error("[JS Runtime] no default handler"),function(R){Si(R)||(R=[R]);for(let S=0;S<R.length;S++){let N=J1(g,R[S],_);if(N===-1)return N}}}function K1(g,s){return g==="dom"&&Af[s]&&$n(global[Af[s]])}function J1(g,s,_){let{module:A,method:R,args:S}=s;return K1(A,R)?global[Af[R]](g,...S,"-1"):_(g,[s],"-1")}var cu=class extends Ki{constructor(s){super();this.value=s,this.nodeType=3,this.type="text",this.value=""}toString(){return""+this.value}};var Fp={slider:{change:function(g){return{index:g.index,source:g.source}},scroll:function(g){return{offsetXRatio:g.offsetXRatio,offsetYRatio:g.offsetYRatio,drag:g.drag}}},"scroll-view":{scrollend:function(g){return{contentOffset:g.contentOffset}}}};function Vp(g){let{attr:s,offsetLeft:_,offsetTop:A}=g,R={};return s&&Object.keys(s).forEach(S=>{S.indexOf("data-")===0&&(R[S.replace("data-","")]=s[S])}),{id:s&&s.id||"",dataset:R,offsetLeft:_||0,offsetTop:A||0}}var Z1=["a","div","list","cell","loading","refresh","recycle-list","scroller","indicator","waterfall","web","richtext"],X1=["viewappear","viewdisappear"],Q1={markertap:["markerId"],controltap:["controlId"],regionchange:["causedBy"],end:["causedBy"],appear:["direction"],disappear:["direction"]};function $p(g,s){let _=g.type;if(X1.indexOf(_)!==-1)return g;let A=g.currentTarget,R=A.type.replace("u-","");if(Z1.indexOf(R)!==-1)return g;let{timestamp:S,target:N}=g;if(!s){let He=Fp[R];He?$n(He[_])?s=He[_](g):s=g.detail||{}:s=g.detail||{}}let f={type:_,timeStamp:S,target:Vp(N),currentTarget:Vp(A),detail:s,touches:_==="touchend"||_==="panend"?[]:g.changedTouches,changedTouches:g.changedTouches};g.componentId&&(f.componentId=g.componentId);let P=Q1[_];return P&&P.forEach(He=>{js(g,He)&&(f[He]=g[He])}),f}function eI(g,s){let _=s.attrs||{};for(let R in _)g.setAttr(R,_[R],!0);let A=s.style||{};for(let R in A)g.setStyle(R,A[R],!0)}var Ho=class{constructor(s,_="",A){s=s?s.toString():"",this.id=s,this.URL=_,mp(s,this),this.nodeMap={};let R=Ho.Listener||Ul;this.listener=new R(s,A||Dp(s,Ho.handler)),this.taskCenter=new $l(s,A?(S,N)=>A(N):Ho.handler),this.createDocumentElement()}getRef(s){return this.nodeMap[s]}open(){this.listener.batched=!1}close(){this.listener.batched=!0}createDocumentElement(){if(!this.documentElement){let s=new Ki("document");s.docId=this.id,s.ownerDocument=this,s.role="documentElement",s.ref="_documentElement",this.nodeMap._documentElement=s,this.documentElement=s,Object.defineProperty(s,"appendChild",{configurable:!0,enumerable:!0,writable:!0,value:_=>{rf(this,_)}}),Object.defineProperty(s,"insertBefore",{configurable:!0,enumerable:!0,writable:!0,value:(_,A)=>{rf(this,_,A)}}),qn("debug")&&Mi(`Create document element (id: "${s.docId}", ref: "${s.ref}")`)}return this.documentElement}createBody(s,_){if(!this.body){let A=new Ki(s,_);of(this,A),qn("debug")&&Mi(`[createBody](${this.id},${A.type},${A.ref}) (${JSON.stringify(A.toJSON(!0))}).`)}return this.body}createElement(s,_){let A=new Ki(s,_);return qn("debug")&&Mi(`[createElement](${this.id},${A.type},${A.ref}) (${JSON.stringify(A.toJSON(!0))}).`),A}createComment(s){return new qs(s)}createText(s){return new cu(s)}fireEvent(s,_,A,R,S){if(!s)return;A=A||{},A.type=A.type||_,A.target=s,A.currentTarget=s,A.timestamp=Date.now(),R&&eI(s,R);let N,f=this.getRef("_root");if(f&&f.attr){let P=f.attr.bubble;N=P==="true"||P===!0}return A=$p(A),s.fireEvent(_,A,N,S)}destroy(){qn("debug")&&Mi(`[destroy](${this.id},document) Destroy document (id: "${this.id}", URL: "${this.URL}")`),this.taskCenter.destroyCallback(),delete this.listener,delete this.nodeMap,delete this.taskCenter,_p(this.id)}};Ho.handler=null;var Up={InputElementDiv:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",InputElementRegExp:"<WhiteSpace>|<LineTerminator>|<ReservedWord>|<Identifier>|<NumericLiteral>|<Punctuator>|<StringLiteral>",ReservedWord:"<Keyword>|<NullLiteral>|<BooleanLiteral>",WhiteSpace:/[\t\v\f\u0020\u00A0\u1680\u180E\u2000-\u200A\u202F\u205f\u3000\uFEFF]/,LineTerminator:/[\n\r\u2028\u2029]/,Keyword:/new(?![_$a-zA-Z0-9])|void(?![_$a-zA-Z0-9])|delete(?![_$a-zA-Z0-9])|in(?![_$a-zA-Z0-9])|instanceof(?![_$a-zA-Z0-9])|typeof(?![_$a-zA-Z0-9])/,NullLiteral:/null(?![_$a-zA-Z0-9])/,BooleanLiteral:/(?:true|false)(?![_$a-zA-Z0-9])/,Identifier:/[_$a-zA-Z][_$a-zA-Z0-9]*/,Punctuator:/\/|=>|\*\*|>>>=|>>=|<<=|===|!==|>>>|<<|%=|\*=|-=|\+=|<=|>=|==|!=|\^=|\|=|\|\||&&|&=|>>|\+\+|--|\:|}|\*|&|\||\^|!|~|-|\+|\?|%|=|>|<|,|;|\.(?![0-9])|\]|\[|\)|\(|{/,DivPunctuator:/\/=|\//,NumericLiteral:/(?:0[xX][0-9a-fA-F]*|\.[0-9]+|(?:[1-9]+[0-9]*|0)(?:\.[0-9]*|\.)?)(?:[eE][+-]{0,1}[0-9]+)?(?![_$a-zA-Z0-9])/,StringLiteral:/"(?:[^"\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*"|'(?:[^'\n\\\r\u2028\u2029]|\\(?:['"\\bfnrtv\n\r\u2028\u2029]|\r\n)|\\x[0-9a-fA-F]{2}|\\u[0-9a-fA-F]{4}|\\[^0-9ux'"\\bfnrtv\n\\\r\u2028\u2029])*'/,RegularExpressionLiteral:/\/(?:\[(?:\\[\s\S]|[^\]])*\]|[^*\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])(?:\[(?:\\[\s\S]|[^\]])*\]|[^\/\\\n\r\u2028\u2029]|\\[^\n\r\u2028\u2029])*\/[0-9a-zA-Z]*/};function Hp(g,s,_){var A=[s];function R(N){var f=new RegExp;return f.compile(N.replace(/<([^>]+)>/g,function(P,He){return g[He]?(A.push(He),g[He]instanceof RegExp?"("+g[He].source+")":"("+R(g[He]).source+")"):""}),_),f}var S=R(g[s]);this.exec=function(N){var f=S.exec(N);if(f==null)return null;for(var P=new String(f[0]),He=0;He<A.length;He++)f[He]&&(P[A[He]]=f[He]);return P},Object.defineProperty(this,"lastIndex",{get:function(){return S.lastIndex},set:function(N){S.lastIndex=N}})}function tI(){var g=new Hp(Up,"InputElementDiv","g"),s=new Hp(Up,"InputElementRegExp","g"),_;Object.defineProperty(this,"source",{get:function(){return _},set:function(A){_=A,g.lastIndex=0,s.lastIndex=0}}),this.reset=function(){g.lastIndex=0,s.lastIndex=0},this.getNextToken=function(A){var R=g.lastIndex,S;A?S=g:S=s;var N=S.exec(_);if(N&&S.lastIndex-R>N.length)throw new SyntaxError("Unexpected token ILLEGAL");return g.lastIndex=S.lastIndex,s.lastIndex=S.lastIndex,N}}var jp={IdentifierName:[["Identifier"]],Literal:[["NullLiteral"],["BooleanLiteral"],["NumericLiteral"],["StringLiteral"],["RegularExpressionLiteral"]],PrimaryExpression:[["Identifier"],["Literal"],["(","Expression",")"]],CallExpression:[["PrimaryExpression","Arguments"],["CallExpression","Arguments"]],Arguments:[["(",")"],["(","ArgumentList",")"]],ArgumentList:[["ConditionalExpression"],["ArgumentList",",","ConditionalExpression"]],LeftHandSideExpression:[["PrimaryExpression"],["CallExpression"]],UnaryExpression:[["LeftHandSideExpression"],["void","UnaryExpression"],["+","UnaryExpression"],["-","UnaryExpression"],["~","UnaryExpression"],["!","UnaryExpression"]],ExponentiationExpression:[["UnaryExpression"],["ExponentiationExpression","**","UnaryExpression"]],MultiplicativeExpression:[["MultiplicativeExpression","/","ExponentiationExpression"],["ExponentiationExpression"],["MultiplicativeExpression","*","ExponentiationExpression"],["MultiplicativeExpression","%","ExponentiationExpression"]],AdditiveExpression:[["MultiplicativeExpression"],["AdditiveExpression","+","MultiplicativeExpression"],["AdditiveExpression","-","MultiplicativeExpression"]],ShiftExpression:[["AdditiveExpression"],["ShiftExpression","<<","AdditiveExpression"],["ShiftExpression",">>","AdditiveExpression"],["ShiftExpression",">>>","AdditiveExpression"]],RelationalExpression:[["ShiftExpression"],["RelationalExpression","<","ShiftExpression"],["RelationalExpression",">","ShiftExpression"],["RelationalExpression","<=","ShiftExpression"],["RelationalExpression",">=","ShiftExpression"],["RelationalExpression","instanceof","ShiftExpression"],["RelationalExpression","in","ShiftExpression"]],EqualityExpression:[["RelationalExpression"],["EqualityExpression","==","RelationalExpression"],["EqualityExpression","!=","RelationalExpression"],["EqualityExpression","===","RelationalExpression"],["EqualityExpression","!==","RelationalExpression"]],BitwiseANDExpression:[["EqualityExpression"],["BitwiseANDExpression","&","EqualityExpression"]],BitwiseXORExpression:[["BitwiseANDExpression"],["BitwiseXORExpression","^","BitwiseANDExpression"]],BitwiseORExpression:[["BitwiseXORExpression"],["BitwiseORExpression","|","BitwiseXORExpression"]],LogicalANDExpression:[["BitwiseORExpression"],["LogicalANDExpression","&&","BitwiseORExpression"]],LogicalORExpression:[["LogicalANDExpression"],["LogicalORExpression","||","LogicalANDExpression"]],ConditionalExpression:[["LogicalORExpression"],["LogicalORExpression","?","LogicalORExpression",":","LogicalORExpression"]],Expression:[["ConditionalExpression"],["Expression",",","ConditionalExpression"]],Program:[["Expression"]]};function mc(g,s){this.name=g,this.token=s,this.childNodes=[],this.toString=function(_){if(_||(_=""),this.childNodes.length==1)return this.childNodes[0].toString(_);for(var A=_+this.name+(this.token!=null&&this.name!=this.token?":"+this.token:"")+`
`,R=0;R<this.childNodes.length;R++)A+=this.childNodes[R].toString(_+"    ");return A}}function nI(){var g,s={Program:"$"},_={};function A(f){_[JSON.stringify(f)]=f;for(var P=Object.getOwnPropertyNames(f);P.length;){var He=P.shift();!jp[He]||jp[He].forEach(function(gn){f[gn[0]]||P.push(gn[0]);var B=f,dt=null;gn.forEach(function(pn){B[pn]||(B[pn]={}),dt=B,B=B[pn]}),f[He].$div&&(B.$div=!0),B.$reduce=He,B.$count=gn.length})}for(var Rt in f)typeof f[Rt]!="object"||Rt.charAt(0)=="$"||f[Rt].$closure||(_[JSON.stringify(f[Rt])]?f[Rt]=_[JSON.stringify(f[Rt])]:A(f[Rt]));f.$closure=!0}A(s);var R=[],S=[s],N=s;this.insertSymbol=function(P,He){for(;!N[P.name]&&N.$reduce;){for(var Rt=N.$count,gn=new mc(N.$reduce);Rt--;)gn.childNodes.push(R.pop()),S.pop();N=S[S.length-1],this.insertSymbol(gn)}if(N=N[P.name],R.push(P),S.push(N),!N)throw new Error;return N.$div},this.reset=function(){N=s,R=[],S=[s]},Object.defineProperty(this,"grammarTree",{get:function(){try{for(;N.$reduce;){for(var f=N.$count,P=new mc(N.$reduce);f--;)P.childNodes.push(R.pop()),S.pop();N=S[S.length-1],this.insertSymbol(P)}if(R.length>0&&N[";"])return this.insertSymbol(new mc(";",";")),this.grammarTree;if(R.length!=1||R[0].name!="Program")throw new Error}catch(He){throw new SyntaxError("Unexpected end of input")}return R[0]}})}function rI(){this.lexicalParser=new tI,this.syntacticalParser=new nI;var g=["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","RegularExpressionLiteral","Identifier","**","=>","{","}","(",")","[","]",".",";",",","<",">","<=",">=","==","!=","===","!==","+","-","*","%","++","--","<<",">>",">>>","&","|","^","!","~","&&","||","?",":","=","+=","-=","*=","%=","<<=",">>=",">>>=","&=","|=","^=","/","/=","instanceof","typeof","new","void","debugger","this","delete","in"],s={};g.forEach(function(_){Object.defineProperty(s,_,{})}),this.reset=function(){this.lexicalParser.reset(),this.syntacticalParser.reset()},this.parse=function(_,A){var R,S=!1;this.lexicalParser.source=_;for(var N=!1;R=this.lexicalParser.getNextToken(N);){A&&A(R);try{if(Object.getOwnPropertyNames(R).some(f=>s.hasOwnProperty(f)?(N=this.syntacticalParser.insertSymbol(new mc(f,R),S),S=!1,!0):!1))continue;(R.Keyword||R.Punctuator||R.DivPunctuator)&&s.hasOwnProperty(R.toString())&&(N=this.syntacticalParser.insertSymbol(new mc(R.toString(),R),S))}catch(f){throw new SyntaxError("Unexpected token "+R)}}return this.syntacticalParser.grammarTree}}var zp=new rI;function iI(g){zp.reset(),this.tree=zp.parse(g),this.paths=[];var s=Object.create(null),_=this,A=Object.create(null);this.isSimple,this.isConst,S(this.tree),R(this.tree),this.paths.length===0&&(this.isConst=!0),this.setter=function(P){for(var He=s,Rt=0;Rt<P.length-1;Rt++)He[P[Rt]]||(He[P[Rt]]=Object.create(null)),He=He[P[Rt]];return{isCompleted:function(){for(var gn in A)if(!A[gn])return!1;return!0},set:function(gn){if(A[P.join(".")]||(A[P.join(".")]=!0),He[P[Rt]]=gn,this.isCompleted())return _.exec()}}},this.valueOf=this.exec=function(){try{return function(){return(0,eval)(g)}.call(s)}catch(P){}};function R(P){for(var He=P;He.childNodes.length<=1&&He.name!=="MemberExpression";)He=He.childNodes[0];He.name==="MemberExpression"?_.isSimple=!0:_.isSimple=!1}function S(P){if(P.name==="CallExpression"&&P.childNodes[P.childNodes.length-1].name!=="CallExpression"){var He=N(P.childNodes[1]);S(P.childNodes[0])}else if(P.name==="NewExpression"&&P.childNodes.length===1)var He=N(P.childNodes[0]);else if(P.name==="MemberExpression"&&P.childNodes.length===1)var He=N(P);else for(var Rt=0;Rt<P.childNodes.length;Rt++)S(P.childNodes[Rt])}function N(P){if(P.childNodes[0].name==="IdentifierName"){var He=N(P.childNodes[2]);return He&&(He=He.concat(P.childNodes[0].childNodes[0].token.toString())),f(He),He}else if(P.childNodes[0].name==="PrimaryExpression")if(P.childNodes[0].childNodes[0].name==="Identifier"){var He=[P.childNodes[0].childNodes[0].token.toString()];return f(He),He}else return null;else{if(P.childNodes[0].name==="]")return N(P.childNodes[3]),S(P.childNodes[1]),null;if(P.childNodes[0].name==="Arguments")return S(P.childNodes[0]),S(P.childNodes[1]),null;for(var Rt=0;Rt<P.childNodes.length;Rt++)S(P.childNodes[Rt])}}function f(P){for(var He=s,Rt=0;Rt<P.length-1;Rt++)He[P[Rt]]||(He[P[Rt]]=Object.create(null)),He=He[P[Rt]];_.paths.push(P),A[P.join(".")]=!1}}function Ks(g){var s=g.childNodes.slice().reverse(),_=s.filter(P=>!P.token||!P.token.Punctuator);if(g.name==="UnaryExpression"&&s.length===2&&s[0].name==="-"&&_.length===1){var A=Ks(_[0]);return A.value=-A.value,A}if(g.name==="Arguments"){for(var R=[],S=_[0];S;)S.childNodes.length===3&&(R.unshift(S.childNodes[0]),S=S.childNodes[2]),S.childNodes.length===1&&(R.unshift(S.childNodes[0]),S=null);return{type:"Arguments",children:R.map(P=>Ks(P))}}if(_&&_.length===1){var A=Ks(_[0]);return A}if(g.token&&["NullLiteral","BooleanLiteral","NumericLiteral","StringLiteral","Identifier"].some(P=>g.token[P])){var N=Object.keys(g.token).filter(P=>P.match(/Literal/)||P.match(/Identifier/))[0],f={NullLiteral:null,BooleanLiteral:Boolean(g.token),NumericLiteral:Number(g.token),StringLiteral:g.token,Identifier:g.token}[N];return{type:N,value:f}}return g.name==="CallExpression"?{type:"CallExpression",children:[Ks(s[0]),Ks(s[1])]}:{type:s.filter(P=>P.token&&P.token.Punctuator)[0].name,children:s.filter(P=>!P.token||!P.token.Punctuator).map(P=>Ks(P))}}function Wp(g){var s=new iI(g);return JSON.stringify(Ks(s.tree),null)}function oI(g,s){return s==="bind"&&(g==="bindingx"||g==="binding")}function Gp(g){if(!g)return;try{g=JSON.parse(g)}catch(_){}let s={};if(Ai(g)?s.origin=g:g&&(s.origin=g.origin,s.transformed=g.transformed),!(!s.transformed&&!s.origin))return s.transformed=s.transformed||Wp(s.origin),s}function aI(g){return g&&(g.exitExpression=Gp(g.exitExpression),g.props&&g.props.forEach(s=>{s.expression=Gp(s.expression)}),g)}function sI(g){return function(s={}){if($n(g))return g({state:s.state==="end"?"exit":s.state,t:s.t!==void 0?s.t:s.deltaT})}}function Yp(g,s,_){return _&&(oI(g,s)?function(A,R=function(){}){if(!A)throw new Error("should pass options for binding");return aI(A),_(A,A&&A.eventType==="timing"?sI(R):R)}:_)}function lI(g,s){Object.defineProperty(g,"[[CurrentInstanceId]]",{value:s})}function qp(g){return g["[[CurrentInstanceId]]"]}function cI(g,s,_){let A=xr(g);return!A||!$n(A.send)?(console.error(`[JS Framework] Failed to find taskCenter (${g}).`),null):(...R)=>A.send("module",{module:s,method:_},R)}function uI(g,s,_,A){let R=xr(g);return!R||!$n(R.send)?(console.error(`[JS Framework] Failed to find taskCenter (${g}).`),null):$n(A)?S=>R.send("module",{module:s,method:_},[S]):(console.error(`[JS Framework] ${s}.${_} must be assigned as a function.`),null)}var uu=class{constructor(s,_){lI(this,String(s)),this.config=_||{},this.document=new Ho(s,this.config.bundleUrl),this.requireModule=this.requireModule.bind(this),this.importScript=this.importScript.bind(this),this.isRegisteredModule=au,this.isRegisteredComponent=vf}requireModule(s){let _=qp(this);if(!(_&&this.document&&this.document.taskCenter)){console.error(`[JS Framework] Failed to requireModule("${s}"), instance (${_}) doesn't exist anymore.`);return}if(!au(s)){console.warn(`[JS Framework] \u5F53\u524D\u8FD0\u884C\u7684\u57FA\u5EA7\u4E0D\u5305\u542B\u539F\u751F\u63D2\u4EF6[${s}]\uFF0C\u8BF7\u5728manifest\u4E2D\u914D\u7F6E\u8BE5\u63D2\u4EF6\uFF0C\u91CD\u65B0\u5236\u4F5C\u5305\u62EC\u8BE5\u539F\u751F\u63D2\u4EF6\u7684\u81EA\u5B9A\u4E49\u8FD0\u884C\u57FA\u5EA7`);return}let A={},R=Np(s);for(let S in R)Object.defineProperty(A,S,{enumerable:!0,configurable:!0,get:()=>Yp(s,S,cI(_,s,S)),set:N=>uI(_,s,S,N)});return A}supports(s){if(!Ai(s))return null;let _=s.match(/^@(\w+)\/([\w-]+)(\.(\w+))?$/i);if(_){let A=_[1],R=_[2],S=_[4];switch(A){case"module":return au(R,S);case"component":return vf(R)}}return null}importScript(s,_={}){let A=qp(this),R=xr(A);return new Promise(function(S,N){if(!R||!$n(R.send))return N(new Error(`[JS Framework] Failed to import script "${s}", no taskCenter (${A}) matched.`));try{R.send("module",{module:"script",method:"importScript"},[s,_],{callback:[f=>S(f),f=>N(f)]})}catch(f){N(f)}})}};function fI(g,s){let _=Object.create(null);return _.service=Object.create(null),ys.forEach(({name:A,options:R})=>{let S=R.create;if(S)try{let N=S(g,s);ti(_.service,N),ti(_,N.instance)}catch(N){console.error(`[JS Runtime] Failed to create service ${A}.`)}}),delete _.service.instance,va(_.service),_}var dI={uid:0},hI=hp(hc),gI=dp(hc);function Kp(g,s,_){let A=new uu(g,s),R="Vue",S=fI(g,{weex:A,nvue:A,config:s,created:Date.now(),framework:R});va(S);let N=Object.create(null);return ti(N,yI(A)),ti(N,S,{SharedObject:dI,weex:A,nvue:A,requireModule:f=>A.requireModule(f),__WEEX_CALL_JAVASCRIPT__:gf,services:S}),N.plus=new N.WeexPlus(A),N.VueShared=hc,N.UniShared=hI,N.VueReactivity=gI,Lp(g,N),va(N),N}function pI(g,s,_={}){let A="Vue";_=tf(_),_.env=tf(global.WXEnvironment||{}),_.bundleType=A;let R=Kp(g,_);vI(s,R)}function vI(g,s){let _=[],A=[];for(let S in s)_.push(S),A.push(s[S]);let R="(function (global) { "+g+" })(Object.create(this))";return new Function(..._,R)(...A)}function mI(g){let s=ts(g);try{if(s&&s.body)return s.body.toJSON()}catch(_){console.error("[JS Framework] Failed to get the virtual dom tree.");return}}function _I(g){rp(g),ys.forEach(s=>{let _=s.options.destroy;_&&_(g)})}function bI(g){ip(g),ys.forEach(s=>{let _=s.options.refresh;_&&_(g)})}var EI={createInstance:pI,createInstanceContext:Kp,getRoot:mI,getDocument:ts,registerService:su,unregisterService:lu,callJS(g,s){return gf(g,s)},registerComponents:kp,registerModules:Ip,destroyInstance:_I,refreshInstance:bI};function Cf(){return Pp(),EI}function yI(g){if(global.setTimeout&&global.setInterval)return{setTimeout:global.setTimeout,setInterval:global.setInterval,clearTimeout:global.clearTimeout,clearInterval:global.clearInterval};let s=g.requireModule("timer");return{setTimeout:(...A)=>{let R=function(){A[0](...A.slice(2))};return s.setTimeout(R,A[1]),g.document.taskCenter.callbackManager.lastCallbackId.toString()},setInterval:(...A)=>{let R=function(){A[0](...A.slice(2))};return s.setInterval(R,A[1]),g.document.taskCenter.callbackManager.lastCallbackId.toString()},clearTimeout:A=>{s.clearTimeout(A)},clearInterval:A=>{s.clearInterval(A)}}}var Jp={Document:Ho,Element:Ki,Comment:qs,Listener:Ul,TaskCenter:$l,sendTasks(...g){return $n(callNative)?callNative(...g):(global.callNative||(()=>{}))(...g)}};Ho.handler=Jp.sendTasks;var Js=Jp;function wI(){va(Js.Comment),va(Js.Listener),va(Js.Document.prototype),va(Js.Comment.prototype),va(Js.Listener.prototype)}var fu={service:{register:su,unregister:lu,has:mf},freezePrototype:wI,init:Cf,config:Js};var Of=class{constructor(s,_={}){this.type=s||"message",this.data=_.data||null,this.origin=_.origin||"",this.source=_.source||null,this.ports=_.ports||[],this.target=null,this.timeStamp=Date.now()}};var ws={},_c={};function Tf(){}Tf.prototype.postMessage=function(g){if(this._closed)throw new Error(`BroadcastChannel "${this.name}" is closed.`);let s=ws[this.name];if(s&&s.length)for(let _=0;_<s.length;++_){let A=s[_];A._closed||A===this||$n(A.onmessage)&&A.onmessage(new Of("message",{data:g}))}};Tf.prototype.close=function(){if(!this._closed&&(this._closed=!0,ws[this.name])){let g=ws[this.name].filter(s=>s!==this);g.length?ws[this.name]=g:delete ws[this.name]}};var Zp={create:g=>{if(_c[g]=[],$n(global.BroadcastChannel))return{};let s={BroadcastChannel:function(_){Object.defineProperty(this,"name",{configurable:!1,enumerable:!0,writable:!1,value:String(_)}),this._closed=!1,this.onmessage=null,ws[this.name]||(ws[this.name]=[]),ws[this.name].push(this),_c[g].push(this)}};return s.BroadcastChannel.prototype=Tf.prototype,{instance:s}},destroy:g=>{_c[g]&&(_c[g].forEach(s=>s.close()),delete _c[g])}};function Pf(){let{init:g}=fu;fu.service.register("BroadcastChannel",Zp),fu.freezePrototype();let s=g();for(let _ in s)global[_]=(...A)=>{let R=s[_](...A);return R instanceof Error&&console.error(R.toString()),R}}var dR=global.console;function Xp(){if(pp(),global.WXEnvironment&&global.WXEnvironment.platform!=="Web")global.console={debug:(...g)=>{qn("debug")&&global.nativeLog(...bc(g),"__DEBUG")},log:(...g)=>{qn("log")&&global.nativeLog(...bc(g),"__LOG")},info:(...g)=>{qn("info")&&global.nativeLog(...bc(g),"__INFO")},warn:(...g)=>{qn("warn")&&global.nativeLog(...bc(g),"__WARN")},error:(...g)=>{qn("error")&&global.nativeLog(...bc(g),"__ERROR")}};else{let{debug:g,log:s,info:_,warn:A,error:R}=console;console.__ori__={debug:g,log:s,info:_,warn:A,error:R},console.debug=(...S)=>{qn("debug")&&console.__ori__.debug.apply(console,S)},console.log=(...S)=>{qn("log")&&console.__ori__.log.apply(console,S)},console.info=(...S)=>{qn("info")&&console.__ori__.info.apply(console,S)},console.warn=(...S)=>{qn("warn")&&console.__ori__.warn.apply(console,S)},console.error=(...S)=>{qn("error")&&console.__ori__.error.apply(console,S)}}}function bc(g){return g.map(s=>{if(es(s).toLowerCase()==="[object object]")try{s=JSON.stringify(s)}catch(A){s="[object object]"}else s=String(s);return s})}Xp();Pf();})();
